# -*- coding: utf-8 -*-
"""Análisis de los datos y gráficos

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s-vRvWvCsf2tNHA2mZKwUBI9b5hXzmzx

Importación y muestra de datos
"""

datos = read.csv("datosEvidencia2.csv", header = TRUE)

df = data.frame(datos)

head(df)

#Funcion 1
#renombrar columnas
colnames(df)[c(80:83)] = c("PuntosMax", "PuntosAlc", "%", "NumPadres")
head(df)

#crear una tabla solo con los datos que vayamos a utilizar
columnas = df[, c("Delegacion", "Localidad")]

columnas

#vector con la cuenta de las localidades por delegacion
delegacion_loc = table(df$Delegacion)

delegacion_max_loc = names(delegacion_loc)[which.max(delegacion_loc)]

print(paste("la delegacion con mas localidades es", delegacion_max_loc))

install.packages("ggplot2")

library(ggplot2)

delegacion_loc_df <- as.data.frame(table(df$Delegacion))
colnames(delegacion_loc_df) <- c("Delegacion", "Localidades")

delegacion_loc_df <- delegacion_loc_df[order(delegacion_loc_df$Localidades),]

ggplot(delegacion_loc_df, aes(x=Delegacion, y=Localidades)) +

coord_flip() +

  geom_bar(stat="identity", fill="blue")

#funcion 2
#porcentaje de participacion por delegacion
suma_Padres = aggregate(df$NumPadres, by = list(df$Delegacion), FUN = sum)

suma_Padres

print(suma_Padres)

unique(df$Delegacion)

sumaPadres = aggregate(df$NumPadres, by = list(df$Delegacion), FUN = sum)
print.data.frame(sumaPadres, row.names = FALSE)

#Eliminar espacios en blanco
df$Delegacion = trimws(df$Delegacion)

#Imprimir la tabla, ahora sin espacios
sumaPadres = aggregate(df$NumPadres, by = list(df$Delegacion), FUN = sum)
print(sumaPadres)

#Calcular el total de padres que participaron
total_padres = sum(df$NumPadres)
print(paste("El numero total de padres que participaron fue:", total_padres))

#porcentaje de numero de padres por delegacion
#funcion round para redondear a ciertas cifras despues del punto
porcentaje = round((sumaPadres$x/total_padres)*100, 2)
print(porcentaje)

#tabla con informacion de delegacion, numero de padres y el porcentaje

sumaPadresPorc = data.frame(Delegacion = sumaPadres$`Group.1`, sumaPadres = sumaPadres$x, porcentaje = porcentaje)
print(sumaPadresPorc)

ggplot(sumaPadresPorc, aes(x = Delegacion, y = porcentaje)) +
  geom_bar(stat = "identity", fill = "green") +
  coord_flip() +
  labs(x = "Delegación", y = "Porcentaje de padres que participaron") +
  ggtitle("Porcentaje de padres que participaron por delegación") +
  theme(plot.title = element_text(hjust = 0.5))

#Funcion 3, Incicar las preguntas que menos se resolsolvieron
#en relacion con las demas

columnasN = sapply(df[,8:79], is.numeric)

suma_colN = colSums(df[,8:79][, columnasN])

print(suma_colN)

suma_colN_df <- data.frame(colnames(df[,8:79][, columnasN]), suma_colN)
colnames(suma_colN_df) <- c("Preguntas", "Suma_Respuestas")
suma_colN_df
t(suma_colN_df)
suma_colN_dfT <- t(suma_colN_df)
suma_colN_dfT

columnasC = sapply(df[, 8:79], is.character)

no_vacias = sum(nzchar(as.matrix(df[, 8:79][, columnasC])))

no_vacias

suma_colN_dfT [2,69] = 12347
suma_colN_dfT

preg_min = which.min(suma_colN_dfT[2, ])

print("la regunta menos respondida fue: ")
preg_min

suamPreg =  data.frame(suma_colN_df)

print(suamPreg)

ggplot(suamPreg, aes(x = Suma_Respuestas, y = Preguntas)) +
  geom_bar(stat = "identity", fill = "green") +
  coord_flip() +
  labs(x = "Respuestas", y = "Pregunta") +
  ggtitle("Preguntas contestadas p") +
  theme(plot.title = element_text(hjust = 0.5))

df_loc = df[, c(4, 8:79)]
df_loc

#Porcentaje de preguntas contestadas por localidad

pregunta_MR = function(df){
  columnasN1 = sapply(df[, 8:79], is.numeric)
  columnas_suma = colSums(na.omit(df[, 8:79][, columnasN1]))
  columnaMR = names(columnas_suma)[which.min(columnas_suma)]

  return(columnaMR)
}

preg_total = ncol(df_loc)-1
preg_total

df_loc2 = df_loc[c(1)]

df_loc2

columna_numL = df_loc[, sapply(df_loc, is.numeric)]
columna_numL

df_localN = cbind(df_loc2, columna_numL)
df_localN

df_localN$`X12.7` <- ifelse(is.na(df_localN$`X12.7`), NA, 1)
 df_localN

df_localN$row_sum <- rowSums(df_localN[, c(-1)], na.rm = TRUE)
df_localN

df_localN$pct <- df_localN$row_sum / preg_total*100
df_localN

porcentaje_respuestas <- df_localN$row_sum / 72 * 100

ggplot(df_localN, aes(x= `Localidad`, y=pct, fill=`pct`)) +
  geom_bar(stat="identity") +
  labs(title="Porcentaje de preguntas respondidas por localidad", x="Localidad", y="Porcentaje")