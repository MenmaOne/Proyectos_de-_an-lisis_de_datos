{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOki8VnoX1YwHvx8luNhDBI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"t01khtTowIAp"},"outputs":[],"source":["#librerias\n","import numpy as np\n","import pandas as pd\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import accuracy_score\n","from sklearn.impute import SimpleImputer\n","from sklearn.model_selection import train_test_split"]},{"cell_type":"code","source":["# Cargar y explorar los datos\n","df = pd.read_csv('adult.csv', na_values=['#NAME?'])"],"metadata":{"id":"8o3m0MZuwKE8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(df.head(5))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uOWVW3vPwPC3","executionInfo":{"status":"ok","timestamp":1695284460105,"user_tz":360,"elapsed":4,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"bf6e8ef5-2090-40d3-ca26-e39906b44618"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    age         workclass    fnlwgt  education  education_num  \\\n","0  39.0         State-gov   77516.0  Bachelors           13.0   \n","1  50.0  Self-emp-not-inc   83311.0  Bachelors           13.0   \n","2  38.0           Private  215646.0    HS-grad            9.0   \n","3  53.0           Private  234721.0       11th            7.0   \n","4  28.0           Private  338409.0  Bachelors           13.0   \n","\n","       marital_status         occupation   relationship   race     sex  \\\n","0       Never-married       Adm-clerical  Not-in-family  White    Male   \n","1  Married-civ-spouse    Exec-managerial        Husband  White    Male   \n","2            Divorced  Handlers-cleaners  Not-in-family  White    Male   \n","3  Married-civ-spouse  Handlers-cleaners        Husband  Black     NaN   \n","4  Married-civ-spouse     Prof-specialty           Wife  Black  Female   \n","\n","   capital_gain  capital_loss  hours_per_week native_country income  \n","0          2174             0              40  United-States  <=50K  \n","1             0             0              13  United-States  <=50K  \n","2             0             0              40  United-States  <=50K  \n","3             0             0              40  United-States  <=50K  \n","4             0             0              40           Cuba  <=50K  \n"]}]},{"cell_type":"code","source":["print(df.dtypes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KJlAox8XwPPR","executionInfo":{"status":"ok","timestamp":1695284462866,"user_tz":360,"elapsed":307,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"8f3d6c2c-dc87-4dec-c8bd-3bde5d362a8a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["age               float64\n","workclass          object\n","fnlwgt            float64\n","education          object\n","education_num     float64\n","marital_status     object\n","occupation         object\n","relationship       object\n","race               object\n","sex                object\n","capital_gain        int64\n","capital_loss        int64\n","hours_per_week      int64\n","native_country     object\n","income             object\n","dtype: object\n"]}]},{"cell_type":"code","source":["# Preprocesamiento de la variable objetivo 'sex'\n","print(df['sex'].value_counts())\n","df['sex'] = [0 if x == 'Male' else 1 for x in df['sex']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ma4xnWdWwVyn","executionInfo":{"status":"ok","timestamp":1695284471199,"user_tz":360,"elapsed":8,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"0c8ed65c-e5b9-40ca-fa0c-a26e8605862d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Male      3332\n","Female    1621\n","Name: sex, dtype: int64\n"]}]},{"cell_type":"code","source":["# Separar características y etiquetas\n","X = df.drop('sex', 1)\n","y = df['sex']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"COKBCHqKwaBF","executionInfo":{"status":"ok","timestamp":1695284489472,"user_tz":360,"elapsed":533,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"7e910639-27c7-4b8d-e927-c2d2872dfc91"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-63-c7236f7af7e1>:2: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  X = df.drop('sex', 1)\n"]}]},{"cell_type":"code","source":["# Exploración y transformación de variables categóricas a dummies\n","todummy_list = ['workclass', 'education', 'marital_status', 'occupation', 'relationship', 'race', 'native_country']\n","\n","def dummy_df(df, todummy_list):\n","    for x in todummy_list:\n","        dummies = pd.get_dummies(df[x], prefix=x, dummy_na=False)\n","        df = df.drop(x, 1)\n","        df = pd.concat([df, dummies], axis=1)\n","    return df"],"metadata":{"id":"BAQcQj6fwci2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = dummy_df(X, todummy_list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ntfcNjjewg3N","executionInfo":{"status":"ok","timestamp":1695284495430,"user_tz":360,"elapsed":369,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"b36d0ba4-0e4c-48fc-a21a-efd423bb6dd6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-64-b1cf33fb37fa>:7: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  df = df.drop(x, 1)\n","<ipython-input-64-b1cf33fb37fa>:7: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  df = df.drop(x, 1)\n","<ipython-input-64-b1cf33fb37fa>:7: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  df = df.drop(x, 1)\n","<ipython-input-64-b1cf33fb37fa>:7: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  df = df.drop(x, 1)\n","<ipython-input-64-b1cf33fb37fa>:7: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  df = df.drop(x, 1)\n","<ipython-input-64-b1cf33fb37fa>:7: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  df = df.drop(x, 1)\n","<ipython-input-64-b1cf33fb37fa>:7: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  df = df.drop(x, 1)\n"]}]},{"cell_type":"code","source":["# Obtener las columnas numéricas\n","numeric_columns = X.select_dtypes(include=[np.number]).columns.tolist()\n","\n","# Manejo de valores faltantes solo para las columnas numéricas\n","imp = SimpleImputer(missing_values=np.nan, strategy='median')\n","X[numeric_columns] = imp.fit_transform(X[numeric_columns])"],"metadata":{"id":"HJHmqbrKwrm2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# División de los datos en conjuntos de entrenamiento y prueba\n","X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.70, random_state=1)"],"metadata":{"id":"26BBZbwxxOKn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Entrenar un modelo\n","clf = RandomForestClassifier(random_state=1)\n","clf.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"KwU224WaxQk_","executionInfo":{"status":"ok","timestamp":1695284501379,"user_tz":360,"elapsed":359,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"9ff69d42-55f0-47bf-f1a8-e42e641c0c88"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(random_state=1)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=1)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["# Evaluar el modelo\n","y_pred = clf.predict(X_test)\n","accuracy = accuracy_score(y_test, y_pred)\n","print(f'Precisión del modelo: {accuracy * 100:.2f}%')"],"metadata":{"id":"v7LEOH0Y1KxC","executionInfo":{"status":"ok","timestamp":1695284518769,"user_tz":360,"elapsed":357,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"f875b8e8-3f55-4b8a-c3bc-6c3180066b92","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Precisión del modelo: 82.33%\n"]}]}]}