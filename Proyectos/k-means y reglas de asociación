{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1sKYqKWzXrLPd72ZP5J6lrjvLJWzmWnYk","timestamp":1700878039640}],"authorship_tag":"ABX9TyOBUfWOiv+R0IqQoNVcIk3+"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"rhWh8-A4IN7r"},"outputs":[],"source":["#librerias\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.cluster import KMeans"]},{"cell_type":"code","source":["#cargar conjunto de datos aisles\n","df1 = pd.read_csv(\"aisles.csv\")\n","df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"kpTBfALjJWwE","executionInfo":{"status":"ok","timestamp":1700878416051,"user_tz":360,"elapsed":172,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"ec26fad0-7a1d-4dca-aead-415f68623d13"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     aisle_id                       aisle\n","0           1       prepared soups salads\n","1           2           specialty cheeses\n","2           3         energy granola bars\n","3           4               instant foods\n","4           5  marinades meat preparation\n","..        ...                         ...\n","129       130    hot cereal pancake mixes\n","130       131                   dry pasta\n","131       132                      beauty\n","132       133  muscles joints pain relief\n","133       134  specialty wines champagnes\n","\n","[134 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-3f244fd1-1ceb-47f3-bb65-dba02edfc04b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>aisle_id</th>\n","      <th>aisle</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>prepared soups salads</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>specialty cheeses</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>energy granola bars</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>instant foods</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>marinades meat preparation</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>129</th>\n","      <td>130</td>\n","      <td>hot cereal pancake mixes</td>\n","    </tr>\n","    <tr>\n","      <th>130</th>\n","      <td>131</td>\n","      <td>dry pasta</td>\n","    </tr>\n","    <tr>\n","      <th>131</th>\n","      <td>132</td>\n","      <td>beauty</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>133</td>\n","      <td>muscles joints pain relief</td>\n","    </tr>\n","    <tr>\n","      <th>133</th>\n","      <td>134</td>\n","      <td>specialty wines champagnes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>134 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f244fd1-1ceb-47f3-bb65-dba02edfc04b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3f244fd1-1ceb-47f3-bb65-dba02edfc04b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3f244fd1-1ceb-47f3-bb65-dba02edfc04b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0699ff3f-2a97-4819-851e-56e2f83c2636\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0699ff3f-2a97-4819-851e-56e2f83c2636')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0699ff3f-2a97-4819-851e-56e2f83c2636 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#cargar conjunto de datos departments\n","df2 = pd.read_csv(\"departments.csv\")\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":707},"id":"MAe1fcOGJiiV","executionInfo":{"status":"ok","timestamp":1700878437027,"user_tz":360,"elapsed":168,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"8afc8c82-94e0-43d8-a405-4dab9ffdbebb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    department_id       department\n","0               1           frozen\n","1               2            other\n","2               3           bakery\n","3               4          produce\n","4               5          alcohol\n","5               6    international\n","6               7        beverages\n","7               8             pets\n","8               9  dry goods pasta\n","9              10             bulk\n","10             11    personal care\n","11             12     meat seafood\n","12             13           pantry\n","13             14        breakfast\n","14             15     canned goods\n","15             16       dairy eggs\n","16             17        household\n","17             18           babies\n","18             19           snacks\n","19             20             deli\n","20             21          missing"],"text/html":["\n","  <div id=\"df-8fa6e7ac-cf88-4023-a12f-a26718a7e3b6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>department_id</th>\n","      <th>department</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>frozen</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>other</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>bakery</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>produce</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>alcohol</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>international</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>beverages</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>pets</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>dry goods pasta</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>bulk</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11</td>\n","      <td>personal care</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12</td>\n","      <td>meat seafood</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>13</td>\n","      <td>pantry</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>14</td>\n","      <td>breakfast</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>15</td>\n","      <td>canned goods</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>16</td>\n","      <td>dairy eggs</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>17</td>\n","      <td>household</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>18</td>\n","      <td>babies</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>19</td>\n","      <td>snacks</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>20</td>\n","      <td>deli</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>21</td>\n","      <td>missing</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8fa6e7ac-cf88-4023-a12f-a26718a7e3b6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8fa6e7ac-cf88-4023-a12f-a26718a7e3b6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8fa6e7ac-cf88-4023-a12f-a26718a7e3b6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-781f2292-4d0c-496d-99dc-8837b57d98de\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-781f2292-4d0c-496d-99dc-8837b57d98de')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-781f2292-4d0c-496d-99dc-8837b57d98de button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["#cargar conjunto de datos order_products__train\n","df3 = pd.read_csv(\"order_products__train.csv\")\n","df3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"SGtVCNU9JmHX","executionInfo":{"status":"ok","timestamp":1700878442898,"user_tz":360,"elapsed":761,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"61958239-3f9b-49f6-b7e8-18ca61370313"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  product_id  add_to_cart_order  reordered\n","0               1       49302                  1          1\n","1               1       11109                  2          1\n","2               1       10246                  3          0\n","3               1       49683                  4          0\n","4               1       43633                  5          1\n","...           ...         ...                ...        ...\n","1384612   3421063       14233                  3          1\n","1384613   3421063       35548                  4          1\n","1384614   3421070       35951                  1          1\n","1384615   3421070       16953                  2          1\n","1384616   3421070        4724                  3          1\n","\n","[1384617 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-9c61ae69-6f88-4e16-a660-564e0e83a138\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>49302</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>11109</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>10246</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>49683</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>43633</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>3421063</td>\n","      <td>14233</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>3421063</td>\n","      <td>35548</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>3421070</td>\n","      <td>35951</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>3421070</td>\n","      <td>16953</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384616</th>\n","      <td>3421070</td>\n","      <td>4724</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1384617 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c61ae69-6f88-4e16-a660-564e0e83a138')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9c61ae69-6f88-4e16-a660-564e0e83a138 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9c61ae69-6f88-4e16-a660-564e0e83a138');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9325c5f9-6b42-4436-b386-27871d628165\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9325c5f9-6b42-4436-b386-27871d628165')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9325c5f9-6b42-4436-b386-27871d628165 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df3['product_id'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CAcisaUlpqVC","executionInfo":{"status":"ok","timestamp":1700878650433,"user_tz":360,"elapsed":194,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"13e45051-5d90-4aca-a8db-d793ed5421ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["24852    18726\n","13176    15480\n","21137    10894\n","21903     9784\n","47626     8135\n","         ...  \n","42744        1\n","5871         1\n","47237        1\n","9305         1\n","38900        1\n","Name: product_id, Length: 39123, dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["#cargar conjunto de datos orders\n","df4 = pd.read_csv(\"orders.csv\")\n","df4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"MgBduxmvKGI9","executionInfo":{"status":"ok","timestamp":1700878654554,"user_tz":360,"elapsed":3194,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"81630cb3-cda2-4a57-a4be-31ff5e29f6ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id eval_set  order_number  order_dow  \\\n","0         2539329        1    prior             1          2   \n","1         2398795        1    prior             2          3   \n","2          473747        1    prior             3          3   \n","3         2254736        1    prior             4          4   \n","4          431534        1    prior             5          4   \n","...           ...      ...      ...           ...        ...   \n","3421078   2266710   206209    prior            10          5   \n","3421079   1854736   206209    prior            11          4   \n","3421080    626363   206209    prior            12          1   \n","3421081   2977660   206209    prior            13          1   \n","3421082    272231   206209    train            14          6   \n","\n","         order_hour_of_day  days_since_prior_order  \n","0                        8                     NaN  \n","1                        7                    15.0  \n","2                       12                    21.0  \n","3                        7                    29.0  \n","4                       15                    28.0  \n","...                    ...                     ...  \n","3421078                 18                    29.0  \n","3421079                 10                    30.0  \n","3421080                 12                    18.0  \n","3421081                 12                     7.0  \n","3421082                 14                    30.0  \n","\n","[3421083 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-bd055ff5-1fa6-40c0-9f81-3f94bc242137\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2539329</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2398795</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>473747</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2254736</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>431534</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>15</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3421078</th>\n","      <td>2266710</td>\n","      <td>206209</td>\n","      <td>prior</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>18</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421079</th>\n","      <td>1854736</td>\n","      <td>206209</td>\n","      <td>prior</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421080</th>\n","      <td>626363</td>\n","      <td>206209</td>\n","      <td>prior</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421081</th>\n","      <td>2977660</td>\n","      <td>206209</td>\n","      <td>prior</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421082</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3421083 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bd055ff5-1fa6-40c0-9f81-3f94bc242137')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bd055ff5-1fa6-40c0-9f81-3f94bc242137 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bd055ff5-1fa6-40c0-9f81-3f94bc242137');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fed9589e-e7a1-4f47-9695-e4f52e2c8735\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fed9589e-e7a1-4f47-9695-e4f52e2c8735')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fed9589e-e7a1-4f47-9695-e4f52e2c8735 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df4.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hIwp8yRtpt0G","executionInfo":{"status":"ok","timestamp":1700878660655,"user_tz":360,"elapsed":161,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"e2baa50a-3a6f-457d-93a6-bce5c6dcf2b1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3421083 entries, 0 to 3421082\n","Data columns (total 7 columns):\n"," #   Column                  Dtype  \n","---  ------                  -----  \n"," 0   order_id                int64  \n"," 1   user_id                 int64  \n"," 2   eval_set                object \n"," 3   order_number            int64  \n"," 4   order_dow               int64  \n"," 5   order_hour_of_day       int64  \n"," 6   days_since_prior_order  float64\n","dtypes: float64(1), int64(5), object(1)\n","memory usage: 182.7+ MB\n"]}]},{"cell_type":"code","source":["df4['order_dow'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5Y5-_LUepl27","executionInfo":{"status":"ok","timestamp":1700878662626,"user_tz":360,"elapsed":294,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"de89ee1e-21de-4937-b787-5acd72e7de7d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    600905\n","1    587478\n","2    467260\n","5    453368\n","6    448761\n","3    436972\n","4    426339\n","Name: order_dow, dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df4['order_hour_of_day'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_iU_4HQo8SeN","executionInfo":{"status":"ok","timestamp":1700878664293,"user_tz":360,"elapsed":188,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"ab6ddf90-9c5d-4bc3-c915-0a59cffe9646"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10    288418\n","11    284728\n","15    283639\n","14    283042\n","13    277999\n","12    272841\n","16    272553\n","9     257812\n","17    228795\n","18    182912\n","8     178201\n","19    140569\n","20    104292\n","7      91868\n","21     78109\n","22     61468\n","23     40043\n","6      30529\n","0      22758\n","1      12398\n","5       9569\n","2       7539\n","4       5527\n","3       5474\n","Name: order_hour_of_day, dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["#cargar conjunto de datos products\n","df5 = pd.read_csv(\"products.csv\")\n","df5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"gfxTfuHJqo4H","executionInfo":{"status":"ok","timestamp":1700878696592,"user_tz":360,"elapsed":188,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"1f35afb0-7a7a-4d57-e9b0-4f529f69c15d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       product_id                                       product_name  \\\n","0               1                         Chocolate Sandwich Cookies   \n","1               2                                   All-Seasons Salt   \n","2               3               Robust Golden Unsweetened Oolong Tea   \n","3               4  Smart Ones Classic Favorites Mini Rigatoni Wit...   \n","4               5                          Green Chile Anytime Sauce   \n","...           ...                                                ...   \n","49683       49684          Vodka, Triple Distilled, Twist of Vanilla   \n","49684       49685                 En Croute Roast Hazelnut Cranberry   \n","49685       49686                                   Artisan Baguette   \n","49686       49687         Smartblend Healthy Metabolism Dry Cat Food   \n","49687       49688                             Fresh Foaming Cleanser   \n","\n","       aisle_id  department_id  \n","0            61             19  \n","1           104             13  \n","2            94              7  \n","3            38              1  \n","4             5             13  \n","...         ...            ...  \n","49683       124              5  \n","49684        42              1  \n","49685       112              3  \n","49686        41              8  \n","49687        73             11  \n","\n","[49688 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-62ee2235-76af-4214-940c-e9ea43c233f5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","      <th>aisle_id</th>\n","      <th>department_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Chocolate Sandwich Cookies</td>\n","      <td>61</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>All-Seasons Salt</td>\n","      <td>104</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Robust Golden Unsweetened Oolong Tea</td>\n","      <td>94</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Smart Ones Classic Favorites Mini Rigatoni Wit...</td>\n","      <td>38</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Green Chile Anytime Sauce</td>\n","      <td>5</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>49683</th>\n","      <td>49684</td>\n","      <td>Vodka, Triple Distilled, Twist of Vanilla</td>\n","      <td>124</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>49684</th>\n","      <td>49685</td>\n","      <td>En Croute Roast Hazelnut Cranberry</td>\n","      <td>42</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>49685</th>\n","      <td>49686</td>\n","      <td>Artisan Baguette</td>\n","      <td>112</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>49686</th>\n","      <td>49687</td>\n","      <td>Smartblend Healthy Metabolism Dry Cat Food</td>\n","      <td>41</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>49687</th>\n","      <td>49688</td>\n","      <td>Fresh Foaming Cleanser</td>\n","      <td>73</td>\n","      <td>11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>49688 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-62ee2235-76af-4214-940c-e9ea43c233f5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-62ee2235-76af-4214-940c-e9ea43c233f5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-62ee2235-76af-4214-940c-e9ea43c233f5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7b34f190-bec9-4640-9ab3-4e7b00f01633\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7b34f190-bec9-4640-9ab3-4e7b00f01633')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7b34f190-bec9-4640-9ab3-4e7b00f01633 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["#Juntando los conjuntos de datos\n","merged_df = pd.merge(df4, df3, on='order_id')\n","merged_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"3AFMJ59Nb0rP","executionInfo":{"status":"ok","timestamp":1700878700771,"user_tz":360,"elapsed":1448,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"c3d2257f-ed28-43a9-91b2-70dd1fd2b16e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id eval_set  order_number  order_dow  \\\n","0         1187899        1    train            11          4   \n","1         1187899        1    train            11          4   \n","2         1187899        1    train            11          4   \n","3         1187899        1    train            11          4   \n","4         1187899        1    train            11          4   \n","...           ...      ...      ...           ...        ...   \n","1384612    272231   206209    train            14          6   \n","1384613    272231   206209    train            14          6   \n","1384614    272231   206209    train            14          6   \n","1384615    272231   206209    train            14          6   \n","1384616    272231   206209    train            14          6   \n","\n","         order_hour_of_day  days_since_prior_order  product_id  \\\n","0                        8                    14.0         196   \n","1                        8                    14.0       25133   \n","2                        8                    14.0       38928   \n","3                        8                    14.0       26405   \n","4                        8                    14.0       39657   \n","...                    ...                     ...         ...   \n","1384612                 14                    30.0       40603   \n","1384613                 14                    30.0       15655   \n","1384614                 14                    30.0       42606   \n","1384615                 14                    30.0       37966   \n","1384616                 14                    30.0       39216   \n","\n","         add_to_cart_order  reordered  \n","0                        1          1  \n","1                        2          1  \n","2                        3          1  \n","3                        4          1  \n","4                        5          1  \n","...                    ...        ...  \n","1384612                  4          0  \n","1384613                  5          0  \n","1384614                  6          0  \n","1384615                  7          0  \n","1384616                  8          1  \n","\n","[1384617 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-ce7a05a0-28c7-4c4c-83cf-32037b8b6870\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>196</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>25133</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>38928</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>26405</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>39657</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>40603</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>15655</td>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>42606</td>\n","      <td>6</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>37966</td>\n","      <td>7</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1384616</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>39216</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1384617 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ce7a05a0-28c7-4c4c-83cf-32037b8b6870')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ce7a05a0-28c7-4c4c-83cf-32037b8b6870 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ce7a05a0-28c7-4c4c-83cf-32037b8b6870');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-970b92b4-95b2-4adb-b463-e44647e5f607\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-970b92b4-95b2-4adb-b463-e44647e5f607')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-970b92b4-95b2-4adb-b463-e44647e5f607 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["merged_df = pd.merge(merged_df, df5, on='product_id')\n","merged_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"iFl8Op7ponsg","executionInfo":{"status":"ok","timestamp":1700880905517,"user_tz":360,"elapsed":459,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"b87a404c-cb65-4777-90c9-aab379d75f07"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id eval_set  order_number  order_dow  \\\n","0         1187899        1    train            11          4   \n","1         2757217       67    train            25          0   \n","2          632715      676    train            12          0   \n","3         1167274      760    train             5          4   \n","4         3347074      804    train            16          3   \n","...           ...      ...      ...           ...        ...   \n","1384612   3351563   206110    train             5          3   \n","1384613   2629221   206125    train            14          6   \n","1384614   2721635   206149    train             6          6   \n","1384615   2078948   206155    train            15          3   \n","1384616    243575   206171    train             7          0   \n","\n","         order_hour_of_day  days_since_prior_order  product_id  \\\n","0                        8                    14.0         196   \n","1                       11                     5.0         196   \n","2                       13                    26.0         196   \n","3                       10                     8.0         196   \n","4                       21                     5.0         196   \n","...                    ...                     ...         ...   \n","1384612                 13                     7.0       22165   \n","1384613                 13                    30.0       31540   \n","1384614                 10                    30.0       44507   \n","1384615                 11                    15.0       47814   \n","1384616                 22                    11.0       49653   \n","\n","         add_to_cart_order  reordered  \\\n","0                        1          1   \n","1                        1          1   \n","2                        2          1   \n","3                        2          1   \n","4                        4          0   \n","...                    ...        ...   \n","1384612                 22          0   \n","1384613                  5          0   \n","1384614                  2          1   \n","1384615                  1          1   \n","1384616                  3          0   \n","\n","                                              product_name  aisle_id  \\\n","0                                                     Soda        77   \n","1                                                     Soda        77   \n","2                                                     Soda        77   \n","3                                                     Soda        77   \n","4                                                     Soda        77   \n","...                                                    ...       ...   \n","1384612      Chewy Reduced Sugar Granola Bars Variety Pack        48   \n","1384613                 Plain Flavor Probiotic Acidophilus        70   \n","1384614                     100% Juice, Rio Red Grapefruit        98   \n","1384615  Puppy Complete Nutrition Chicken & Beef Dinner...        40   \n","1384616    Organic Aromatherapeutic Moroccan Argan Oil Set        25   \n","\n","         department_id  \n","0                    7  \n","1                    7  \n","2                    7  \n","3                    7  \n","4                    7  \n","...                ...  \n","1384612             14  \n","1384613             11  \n","1384614              7  \n","1384615              8  \n","1384616             11  \n","\n","[1384617 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-96520489-24d4-411e-901d-871772e37660\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","      <th>product_name</th>\n","      <th>aisle_id</th>\n","      <th>department_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>196</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2757217</td>\n","      <td>67</td>\n","      <td>train</td>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>5.0</td>\n","      <td>196</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>632715</td>\n","      <td>676</td>\n","      <td>train</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>26.0</td>\n","      <td>196</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1167274</td>\n","      <td>760</td>\n","      <td>train</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>196</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3347074</td>\n","      <td>804</td>\n","      <td>train</td>\n","      <td>16</td>\n","      <td>3</td>\n","      <td>21</td>\n","      <td>5.0</td>\n","      <td>196</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>3351563</td>\n","      <td>206110</td>\n","      <td>train</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>13</td>\n","      <td>7.0</td>\n","      <td>22165</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>Chewy Reduced Sugar Granola Bars Variety Pack</td>\n","      <td>48</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>2629221</td>\n","      <td>206125</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>13</td>\n","      <td>30.0</td>\n","      <td>31540</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>Plain Flavor Probiotic Acidophilus</td>\n","      <td>70</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>2721635</td>\n","      <td>206149</td>\n","      <td>train</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>30.0</td>\n","      <td>44507</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>100% Juice, Rio Red Grapefruit</td>\n","      <td>98</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>2078948</td>\n","      <td>206155</td>\n","      <td>train</td>\n","      <td>15</td>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>15.0</td>\n","      <td>47814</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Puppy Complete Nutrition Chicken &amp; Beef Dinner...</td>\n","      <td>40</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>1384616</th>\n","      <td>243575</td>\n","      <td>206171</td>\n","      <td>train</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>11.0</td>\n","      <td>49653</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Organic Aromatherapeutic Moroccan Argan Oil Set</td>\n","      <td>25</td>\n","      <td>11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1384617 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96520489-24d4-411e-901d-871772e37660')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-96520489-24d4-411e-901d-871772e37660 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-96520489-24d4-411e-901d-871772e37660');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d0412a3b-e1b7-4329-9f49-f560eff81abd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d0412a3b-e1b7-4329-9f49-f560eff81abd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d0412a3b-e1b7-4329-9f49-f560eff81abd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["#Contando el numero de ordenes por hora\n","hourly_orders = merged_df.groupby('order_hour_of_day')['order_id'].count().reset_index()\n","hourly_orders"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":801},"id":"eCmCQrMaqTir","executionInfo":{"status":"ok","timestamp":1700880908252,"user_tz":360,"elapsed":163,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"69498dfb-36f1-4cea-aa3d-f2afe5de95f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    order_hour_of_day  order_id\n","0                   0      9083\n","1                   1      5626\n","2                   2      3226\n","3                   3      2438\n","4                   4      2431\n","5                   5      3847\n","6                   6     11847\n","7                   7     36302\n","8                   8     67386\n","9                   9     93856\n","10                 10    110479\n","11                 11    114119\n","12                 12    111752\n","13                 13    114762\n","14                 14    119370\n","15                 15    116198\n","16                 16    110237\n","17                 17     96944\n","18                 18     76522\n","19                 19     58175\n","20                 20     40920\n","21                 21     34813\n","22                 22     27319\n","23                 23     16965"],"text/html":["\n","  <div id=\"df-6d87ac6a-d6a1-4935-b41c-0046e2cc265a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_hour_of_day</th>\n","      <th>order_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>9083</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>5626</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>3226</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2438</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2431</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>3847</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>11847</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>36302</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>67386</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>93856</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>10</td>\n","      <td>110479</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>11</td>\n","      <td>114119</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>12</td>\n","      <td>111752</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>13</td>\n","      <td>114762</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>14</td>\n","      <td>119370</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>15</td>\n","      <td>116198</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>16</td>\n","      <td>110237</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>17</td>\n","      <td>96944</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>18</td>\n","      <td>76522</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>19</td>\n","      <td>58175</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>20</td>\n","      <td>40920</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>21</td>\n","      <td>34813</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>22</td>\n","      <td>27319</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>23</td>\n","      <td>16965</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d87ac6a-d6a1-4935-b41c-0046e2cc265a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6d87ac6a-d6a1-4935-b41c-0046e2cc265a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6d87ac6a-d6a1-4935-b41c-0046e2cc265a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9a760f01-7037-4f78-8b86-c499a9479b73\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9a760f01-7037-4f78-8b86-c499a9479b73')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9a760f01-7037-4f78-8b86-c499a9479b73 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["#Renombrar la columna del total\n","hourly_orders.columns = ['order_hour_of_day', 'total_orders']\n","hourly_orders"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":801},"id":"oqQ6SH1jsfIA","executionInfo":{"status":"ok","timestamp":1700880912130,"user_tz":360,"elapsed":157,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"ed59fc6c-9882-4e94-c04e-199ee7407465"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    order_hour_of_day  total_orders\n","0                   0          9083\n","1                   1          5626\n","2                   2          3226\n","3                   3          2438\n","4                   4          2431\n","5                   5          3847\n","6                   6         11847\n","7                   7         36302\n","8                   8         67386\n","9                   9         93856\n","10                 10        110479\n","11                 11        114119\n","12                 12        111752\n","13                 13        114762\n","14                 14        119370\n","15                 15        116198\n","16                 16        110237\n","17                 17         96944\n","18                 18         76522\n","19                 19         58175\n","20                 20         40920\n","21                 21         34813\n","22                 22         27319\n","23                 23         16965"],"text/html":["\n","  <div id=\"df-e1ec6e8c-0582-4dd5-8bb6-72eea6fffde7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_hour_of_day</th>\n","      <th>total_orders</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>9083</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>5626</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>3226</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2438</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2431</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>3847</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>11847</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>36302</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>67386</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>93856</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>10</td>\n","      <td>110479</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>11</td>\n","      <td>114119</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>12</td>\n","      <td>111752</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>13</td>\n","      <td>114762</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>14</td>\n","      <td>119370</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>15</td>\n","      <td>116198</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>16</td>\n","      <td>110237</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>17</td>\n","      <td>96944</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>18</td>\n","      <td>76522</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>19</td>\n","      <td>58175</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>20</td>\n","      <td>40920</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>21</td>\n","      <td>34813</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>22</td>\n","      <td>27319</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>23</td>\n","      <td>16965</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1ec6e8c-0582-4dd5-8bb6-72eea6fffde7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e1ec6e8c-0582-4dd5-8bb6-72eea6fffde7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e1ec6e8c-0582-4dd5-8bb6-72eea6fffde7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c2a2f8b6-f769-490a-a67a-0a267cf4d3b3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c2a2f8b6-f769-490a-a67a-0a267cf4d3b3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c2a2f8b6-f769-490a-a67a-0a267cf4d3b3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["#Seleccionando las columnas que se usaran\n","X = hourly_orders[['order_hour_of_day', 'total_orders']]\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":801},"id":"JuRo1OXYqemi","executionInfo":{"status":"ok","timestamp":1700880935660,"user_tz":360,"elapsed":168,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"de90327a-35f7-4636-d576-3aa703b7c9df"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    order_hour_of_day  total_orders\n","0                   0          9083\n","1                   1          5626\n","2                   2          3226\n","3                   3          2438\n","4                   4          2431\n","5                   5          3847\n","6                   6         11847\n","7                   7         36302\n","8                   8         67386\n","9                   9         93856\n","10                 10        110479\n","11                 11        114119\n","12                 12        111752\n","13                 13        114762\n","14                 14        119370\n","15                 15        116198\n","16                 16        110237\n","17                 17         96944\n","18                 18         76522\n","19                 19         58175\n","20                 20         40920\n","21                 21         34813\n","22                 22         27319\n","23                 23         16965"],"text/html":["\n","  <div id=\"df-545583ad-0e50-4417-a32d-355ce57d2018\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_hour_of_day</th>\n","      <th>total_orders</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>9083</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>5626</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>3226</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2438</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2431</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>3847</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>11847</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>36302</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>67386</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>93856</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>10</td>\n","      <td>110479</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>11</td>\n","      <td>114119</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>12</td>\n","      <td>111752</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>13</td>\n","      <td>114762</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>14</td>\n","      <td>119370</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>15</td>\n","      <td>116198</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>16</td>\n","      <td>110237</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>17</td>\n","      <td>96944</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>18</td>\n","      <td>76522</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>19</td>\n","      <td>58175</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>20</td>\n","      <td>40920</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>21</td>\n","      <td>34813</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>22</td>\n","      <td>27319</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>23</td>\n","      <td>16965</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-545583ad-0e50-4417-a32d-355ce57d2018')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-545583ad-0e50-4417-a32d-355ce57d2018 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-545583ad-0e50-4417-a32d-355ce57d2018');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1a100c29-b4fc-4fb5-9a93-4c4348cb9219\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1a100c29-b4fc-4fb5-9a93-4c4348cb9219')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1a100c29-b4fc-4fb5-9a93-4c4348cb9219 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#Metodo el codo\n","inertia = []\n","for k in range(1, min(11, len(X) + 1)):\n","    kmeans = KMeans(n_clusters=k, random_state=42)\n","    kmeans.fit(X)\n","    inertia.append(kmeans.inertia_)\n","\n","# Grafico\n","plt.plot(range(1, min(11, len(X) + 1)), inertia, marker='o')\n","plt.title('Método del Codo')\n","plt.xlabel('Número de Clusters (k)')\n","plt.ylabel('Inertia')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":854},"id":"gaER1I1TqkGp","executionInfo":{"status":"ok","timestamp":1700880939075,"user_tz":360,"elapsed":709,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"d5ea040f-6fd6-4371-f05a-a0d331286dd5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAioAAAHHCAYAAACRAnNyAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABJ8ElEQVR4nO3deVxU5f4H8M+ZAYYBhgFkV1BcAHfcNTNNLTIzbfNWVtqqXU2t26K3ay7lUt3S1K7m/XW1RXOp1LKscNfK3FcE0cAdUBGGfZl5fn/ATIwssszMmeXzfr14wZx5zsz3QMHH5zyLJIQQICIiIrJDCrkLICIiIqoJgwoRERHZLQYVIiIislsMKkRERGS3GFSIiIjIbjGoEBERkd1iUCEiIiK7xaBCREREdotBhcgJ7dq1C7NmzUJOTo7cpRARNQqDCpGTOXfuHEaMGAGNRgOtVmuT99yxYwckScKOHTus+j4rVqyAJElIS0ur97kzZsyAJEmWL6oR0tLSIEkSVqxYIXcpRHaLQYXIThj/CEuShD179lR5XgiBiIgISJKE++67r9rXKC0txd/+9jeMGTMGL7/8cpXn//Of//CPYh3t2LEDDz74IEJDQ+Hh4YHg4GAMGzYM3377rdylEbkUBhUiO+Pp6YlVq1ZVOb5z505cvHgRKpWqxnNPnjyJRx99FB988EG1zzOo1M306dNx55134sSJExg7diyWLl2K1157DXl5eXjooYeq/fkQkXW4yV0AEZm79957sW7dOixcuBBubn/9L7pq1Sp069YN165dq/HcuLg4xMXF2aBK5/X1119j1qxZePjhh7Fq1Sq4u7ubnnvttdfw888/o7S0VMYKiVwLe1SI7Mxjjz2G69evIyEhwXSspKQEX3/9NR5//PFqzzEYDFiwYAHat28PT09PhISEYOzYsbhx44apTYsWLXDy5Ens3LnTdItpwIABpuf//PNPPPLIIwgICICXlxd69+6NH374ocp7Xbx4ESNGjIC3tzeCg4Px8ssvo7i4uNq61q1bh27dukGtViMwMBBPPPEELl26VKfvw8mTJzFw4ECo1Wo0a9YM77zzDgwGQ7VtN2/ejH79+sHb2xsajQZDhw7FyZMn6/Q+N5s2bRoCAgLwv//9zyykGMXHx5vdesvMzMSzzz6LkJAQeHp6onPnzvjss8+qnJednY0xY8ZAq9XCz88Po0ePRnZ2drU1bNu2zXQ9fn5+GD58OE6dOtWg6yFydOxRIbIzLVq0QJ8+ffDVV19hyJAhAMr/EOfk5ODRRx/FwoULq5wzduxYrFixAk8//TQmTpyI1NRULF68GIcPH8avv/4Kd3d3LFiwAC+99BJ8fHzw5ptvAgBCQkIAABkZGbjttttQUFCAiRMnokmTJvjss89w//334+uvv8YDDzwAACgsLMSgQYNw/vx5TJw4EeHh4fjiiy+wbdu2KjUZ6+nRowfmzp2LjIwMfPTRR/j1119x+PBh+Pn51fg9SE9Px5133omysjJMmTIF3t7eWLZsGdRqdZW2X3zxBUaPHo34+Hi8++67KCgowJIlS3D77bfj8OHDaNGiRZ2/9ykpKUhKSsIzzzwDjUZzy/aFhYUYMGAAzpw5gwkTJiAqKgrr1q3DmDFjkJ2djUmTJgEoH180fPhw7NmzB+PGjUPbtm2xfv16jB49usprbtmyBUOGDEHLli0xY8YMFBYWYtGiRejbty8OHTpUr+shcgqCiOzC8uXLBQCxf/9+sXjxYqHRaERBQYEQQohHHnlE3HnnnUIIIZo3by6GDh1qOm/37t0CgFi5cqXZ6/30009Vjrdv317079+/yntPnjxZABC7d+82HcvNzRVRUVGiRYsWQq/XCyGEWLBggQAg1q5da2qXn58vWrduLQCI7du3CyGEKCkpEcHBwaJDhw6isLDQ1HbTpk0CgHjrrbdq/V4Y6/njjz9MxzIzM4VWqxUARGpqqqlGPz8/8fzzz5udn56eLrRardnx6dOni1v9ytu4caMAIObPn19rOyPj9+PLL780HSspKRF9+vQRPj4+QqfTCSGE2LBhgwAg3nvvPVO7srIy0a9fPwFALF++3HQ8Li5OBAcHi+vXr5uOHT16VCgUCvHUU0/VqS4iZ8JbP0R2aOTIkSgsLMSmTZuQm5uLTZs21XjbZ926ddBqtbjrrrtw7do100e3bt3g4+OD7du33/L9fvzxR/Ts2RO333676ZiPjw9eeOEFpKWlITEx0dQuLCwMDz/8sKmdl5cXXnjhBbPXO3DgADIzM/H3v/8dnp6epuNDhw5FbGxstbeUbq6nd+/e6Nmzp+lYUFAQRo0aZdYuISEB2dnZeOyxx8yuXalUolevXnW69sp0Oh0A1Kk3xVhnaGgoHnvsMdMxd3d3TJw4EXl5edi5c6epnZubG1588UVTO6VSiZdeesns9a5cuYIjR45gzJgxCAgIMB3v1KkT7rrrLvz444/1uh4iZ+A0QWXXrl0YNmwYwsPDIUkSNmzYUK/zi4qKMGbMGHTs2BFubm4YMWJEte127NiBrl27QqVSoXXr1pxBQVYRFBSEwYMHY9WqVfj222+h1+vNwkFlKSkpyMnJQXBwMIKCgsw+8vLykJmZecv3O3fuHGJiYqocb9u2rel54+fWrVtXWY/k5nON7at7zdjYWNPztdXTpk2bKsdvfr2UlBQAwMCBA6tc+y+//FKna6/M19cXAJCbm1un9sY6FQrzX6XVfd/CwsLg4+NT6/XU9n1r27Ytrl27hvz8/DrVRuQsnGaMSn5+Pjp37oxnnnkGDz74YL3P1+v1UKvVmDhxIr755ptq26SmpmLo0KEYN24cVq5cia1bt+K5555DWFgY4uPjG3sJRGYef/xxPP/880hPT8eQIUNqHNNhMBgQHByMlStXVvt8UFCQFauUl3Fw7RdffIHQ0NAqz1eeNVUXsbGxAIDjx483vjgisginCSpDhgwxDTysTnFxMd5880189dVXyM7ORocOHfDuu++aZj14e3tjyZIlAIBff/212tH4S5cuRVRUlGmNirZt22LPnj2YP38+gwpZ3AMPPICxY8di7969WLNmTY3tWrVqhS1btqBv377VDjatrKaVWZs3b47k5OQqx5OSkkzPGz+fOHECQgiz17r5XGP75ORkDBw40Oy55ORk0/M1ad68uam35OZzK2vVqhUAIDg4GIMHD671NesiOjoaMTEx2LhxIz766KMqPSDV1Xns2DEYDAazXpXqvm9bt25FXl6e2WvW9n27WVJSEgIDA+Ht7d2wiyNyUE5z6+dWJkyYgN9//x2rV6/GsWPH8Mgjj+Cee+6p9pdhTX7//fcqvwzj4+Px+++/W7pcIvj4+GDJkiWYMWMGhg0bVmO7kSNHQq/X4+23367yXFlZmVno9vb2rjaE33vvvdi3b5/Zf8v5+flYtmwZWrRogXbt2pnaXb58GV9//bWpXUFBAZYtW2b2et27d0dwcDCWLl1qNnV58+bNOHXqFIYOHVrrtd97773Yu3cv9u3bZzp29erVKr1G8fHx8PX1xZw5c6pd2+Tq1au1vk91Zs6cievXr+O5555DWVlZled/+eUXbNq0yVRnenq6WZAsKyvDokWL4OPjg/79+5valZWVmf4xBJT34i5atMjstcPCwhAXF4fPPvvM7Od04sQJ/PLLL7j33nvrfT1EDk/u0bzWAECsX7/e9PjcuXNCqVSKS5cumbUbNGiQmDp1apXzR48eLYYPH17leJs2bcScOXPMjv3www8CgGl2BlFDVZ71U5ubZ/0IIcTYsWMFADFkyBAxf/58sXjxYjFp0iQRHh4u1q1bZ2r397//XUiSJN5++23x1Vdfia1btwohymfJhISECK1WK6ZNmybmz58v4uLihCRJ4ttvvzWdb5zh4+npKd544w2xYMEC0a1bN9GpUyezWT+Vr6dXr15iwYIFYurUqcLLy0u0aNFC3Lhxo9ZrvHz5smjSpInw9/cXM2bMEO+//75o06aN6X2Ms36EEGLlypVCoVCIDh06iHfeeUd88skn4s033xRxcXFi/PjxpnZ1mfVj9OabbwoAIjo6WkyfPl3873//E++//74YNGiQACBWrVolhBCioKBAtG3bVnh4eIh//OMfYtGiRaJ///4CgFiwYIHp9fR6vejbt69QKBTi73//u1i8eLEYOHCg6Xoqz/pJSEgQbm5uIjY2Vrz//vti1qxZIigoSPj7+4s///yzTvUTOROXCCrGKZHe3t5mH25ubmLkyJFVzmdQITk0JqgIIcSyZctEt27dhFqtFhqNRnTs2FG8/vrr4vLly6Y26enpYujQoUKj0QgAZlOVz549Kx5++GHh5+cnPD09Rc+ePcWmTZuqvM+5c+fE/fffL7y8vERgYKCYNGmSaSp05aAihBBr1qwRXbp0ESqVSgQEBIhRo0aJixcv1un7cezYMdG/f3/h6ekpmjZtKt5++23x6aefVgkqQgixfft2ER8fL7RarfD09BStWrUSY8aMEQcOHDC1qU9QEUKIrVu3iuHDh4vg4GDh5uYmgoKCxLBhw8TGjRvN2mVkZIinn35aBAYGCg8PD9GxY0ez4GF0/fp18eSTTwpfX1+h1WrFk08+KQ4fPlwlqAghxJYtW0Tfvn2FWq0Wvr6+YtiwYSIxMbHOtRM5E0kIIWzahWMDkiRh/fr1ppk7a9aswahRo3Dy5EkolUqztj4+PlUG4RkXa7p55tAdd9yBrl27YsGCBaZjy5cvx+TJk5GTk2ONSyEiInJpTjOYtjZdunSBXq9HZmYm+vXr1+DX6dOnT5V1DBISEtCnT5/GlkhERETVcJqgkpeXhzNnzpgep6am4siRIwgICEB0dDRGjRqFp556Ch988AG6dOmCq1evYuvWrejUqZNpYF9iYiJKSkqQlZWF3NxcHDlyBABMm7yNGzcOixcvxuuvv45nnnkG27Ztw9q1a2+5eBURERE1jNPc+tmxYwfuvPPOKsdHjx6NFStWoLS0FO+88w4+//xzXLp0CYGBgejduzdmzpyJjh07AijfY6W6hagqf4t27NiBl19+GYmJiWjWrBmmTZuGMWPGWO26iIiIXJnTBBUiIiJyPi6zjgoRERE5HgYVIiIislsOPZjWYDDg8uXL0Gg0NS4NTkRERPZFCIHc3FyEh4dX2dTzZg4dVC5fvoyIiAi5yyAiIqIGuHDhApo1a1ZrG4cOKhqNBkD5hRq3ZyciIiL7ptPpEBERYfo7XhtZg8qMGTMwc+ZMs2MxMTGmnUdvxXi7x9fXl0GFiIjIwdRl2IbsPSrt27fHli1bTI/d3GQviYiIiOyE7KnAzc2tyl47RERERIAdTE9OSUlBeHg4WrZsiVGjRuH8+fM1ti0uLoZOpzP7ICIiIucla1Dp1asXVqxYgZ9++glLlixBamoq+vXrh9zc3Grbz507F1qt1vTBGT9ERETOza6W0M/Ozkbz5s3x4Ycf4tlnn63yfHFxMYqLi02PjaOGc3JyOJiWiIjIQeh0Omi12jr9/ZZ9jEplfn5+iI6ONtsFuTKVSgWVSmXjqoiIiEguso9RqSwvLw9nz55FWFiY3KUQERGRHZA1qLz66qvYuXMn0tLS8Ntvv+GBBx6AUqnEY489JmdZREREZCdkvfVz8eJFPPbYY7h+/TqCgoJw++23Y+/evQgKCpKzLCIiIrITsgaV1atXy/n2NdIbBPalZiEztwjBGk/0jAqAUsFND4mIiGzNrgbT2oOfTlzBzO8TcSWnyHQsTOuJ6cPa4Z4OHDtDRERkS3Y1mFZuP524ghe/PGQWUgAgPacIL355CD+duCJTZURERK6JQaWC3iAw8/tEVLeojPHYzO8ToTfYzbIzRERETo9BpcK+1KwqPSmVCQBXcoqwLzXLdkURERG5OAaVCpm5NYeUhrQjIiKixmNQqRCs8bRoOyIiImo8BpUKPaMCEKb1RE2TkCWUz/7pGRVgy7KIiIhcGoNKBaVCwvRh7QCgSlgxPp4+rB3XUyEiIrIhBpVK7ukQhiVPdEWo1vz2TqjWE0ue6Mp1VIiIiGyMC77d5J4OYbirXSjmbT6F/+5ORcemvtgw/nb2pBAREcmAPSrVUCokDOlY3nuSoStmSCEiIpIJg0oNokM0AIDM3GLcyC+RuRoiIiLXxKBSAx+VG5r5qwEAyRm5MldDRETkmhhUahFT0auSnM6gQkREJAcGlVrEhFYEFfaoEBERyYJBpRamoMIeFSIiIlkwqNTCGFROp+dCCO6aTEREZGsMKrVoGegDN4WE3OIyXK5lZ2UiIiKyDgaVWni4KdAyyBtAea8KERER2RaDyi0Y11NJYlAhIiKyOQaVW4g1jlPhzB8iIiKbY1C5BfaoEBERyYdB5RZiQ30BAGcz81CmN8hcDRERkWthULmFZv5qeHkoUaI3IO16vtzlEBERuRQGlVtQKCS0MS2lnydzNURERK6FQaUOYk1BRSdzJURERK6FQaUOornnDxERkSwYVOoglnv+EBERyYJBpQ6MU5TPZRWgsEQvczVERESug0GlDoI0KjTx9oAQQEome1WIiIhshUGljqJDePuHiIjI1hhU6iiG41SIiIhsjkGljmI484eIiMjmGFTqiD0qREREtsegUkfGMSqZucW4kV8iczVERESugUGljnxUbmjmrwbA2z9ERES2wqBSDzEVvSqnGVSIiIhsgkGlHozjVJI4ToWIiMgmGFTqwRhUTjOoEBER2QSDSj1UnqIshJC5GiIiIufHoFIPLQN94KaQkFtUhis5RXKXQ0RE5PQYVOrBw02BlkHeALieChERkS0wqNSTcT0VDqglIiKyPgaVeooN5RRlIiIiW2FQqSf2qBAREdkOg0o9xYb6AgDOZuahTG+QuRoiIiLnxqBST8381fDyUKJEb0Da9Xy5yyEiInJqDCr1pFBIaBNi3Ek5T+ZqiIiInBuDSgPEhPgAAJLTdTJXQkRE5NwYVBogpmKcCndRJiIisi4GlQaIMd36YVAhIiKyJgaVBjDu+XMuqwCFJXqZqyEiInJeDCoNEOjjgQBvDwgBpGSyV4WIiMhaGFQaQJIk3v4hIiKyAQaVBjLe/mFQISIish4GlQYyBRXO/CEiIrIaBpUGYo8KERGR9TGoNJBxc8LM3GLcyC+RuRoiIiLnZDdBZd68eZAkCZMnT5a7lDrxUbmhmb8aAG//EBERWYtdBJX9+/fjk08+QadOneQupV6MM39OM6gQERFZhexBJS8vD6NGjcJ///tf+Pv7y11OvRjHqSRxnAoREZFVyB5Uxo8fj6FDh2Lw4MG3bFtcXAydTmf2ISdjUDnNoEJERGQVbnK++erVq3Ho0CHs37+/Tu3nzp2LmTNnWrmquqs8RVkIAUmSZK6IiIjIucjWo3LhwgVMmjQJK1euhKenZ53OmTp1KnJyckwfFy5csHKVtWsZ6AM3hYTcojJcySmStRYiIiJnJFuPysGDB5GZmYmuXbuajun1euzatQuLFy9GcXExlEql2TkqlQoqlcrWpdbIw02BlkHeOJ2Rh+T0XIT7qeUuiYiIyKnIFlQGDRqE48ePmx17+umnERsbizfeeKNKSLFX0SGa8qCSkYs7Y4PlLoeIiMipyBZUNBoNOnToYHbM29sbTZo0qXLcnsWGarDp2BWuUEtERGQFss/6cXTR3EWZiIjIamSd9XOzHTt2yF1CvcWG+gIAzlzNQ5neADclsx8REZGl8K9qIzXzV8PLQ4mSMgPSrhfIXQ4REZFTYVBpJIVCQhve/iEiIrIKBhULiAnxAcDNCYmIiCyNQcUCYirGqSSny7ukPxERkbNhULGAv3ZRzpO5EiIiIufCoGIBxj1/0q7no7BEL3M1REREzoNBxQICfTwQ4O0BIYAzmexVISIishQGFQuQJMl0+yeJ41SIiIgshkHFQoy3f05z5g8REZHFMKhYiDGoJHEtFSIiIothULGQ6BD2qBAREVkag4qFRFcs+pahK0Z2QYnM1RARETkHBhUL0Xi6o6mfGgCX0iciIrIUBhULiq0Yp8Kl9ImIiCyDQcWCojmgloiIyKIYVCzI2KNymkGFiIjIIhhULMg48yc5IxdCCJmrISIicnwMKhbUKsgHbgoJuUVluJJTJHc5REREDo9BxYI83BRoGeQNgDN/iIiILIFBxcIq3/4hIiKixmFQsTDTFGX2qBARETUag4qFmXpUGFSIiIgajUHFwmJDfQEAZ67moUxvkLkaIiIix8agYmHN/NXw8lCipMyAtOsFcpdDRETk0BhULEyhkNCGt3+IiIgsgkHFCmIqdlLmzB8iIqLGYVCxgpiKcSrJ6TqZKyEiInJsDCpWEFNx6+d0Rp7MlRARETk2BhUriKlYSyXtej4KS/QyV0NEROS4GFSsINDHAwHeHhACOJPJXhUiIqKGYlCxAkmSTLd/kjhOhYiIqMEYVKzEePvnNGf+EBERNRiDipUYg0oS11IhIiJqMAYVK4kOYY8KERFRYzGoWEl0xaJvGbpiZBeUyFwNERGRY2JQsRKNpzua+qkBcCl9IiKihmJQsaLYinEqXEqfiIioYRhUrCg6lJsTEhERNQaDihXFMqgQERE1CoOKFRln/iRn5EIIIXM1REREjodBxYpaBfnATSEht6gMV3KK5C6HiIjI4TCoWJGHmwJRgd4AOKCWiIioIRhUrCyG41SIiIgajEHFyoybE55mUCEiIqo3BhUr454/REREDcegYmXGoHLmah7K9AaZqyEiInIsDCpWFuHvBbW7EiVlBqRdL5C7HCIiIofCoGJlCoVk2qCQOykTERHVD4OKDXCcChERUcMwqNhATKgvAM78ISIiqi8GFRuICeEuykRERA3BoGIDxls/adfzUVSql7kaIiIix8GgYgOBPh4I8PaAEEBKRp7c5RARETkMBhUbkCTJdPsnKV0nczVERESOg0HFRoy3fzhFmYiIqO4YVGyEU5SJiIjqj0HFRqJD2KNCRERUXwwqNmJcnTZDV4zsghKZqyEiInIMDCo2ovF0R1M/NQAgmbd/iIiI6kTWoLJkyRJ06tQJvr6+8PX1RZ8+fbB582Y5S7Kq2FAu/EZERFQfsgaVZs2aYd68eTh48CAOHDiAgQMHYvjw4Th58qScZVlNtDGosEeFiIioTtzkfPNhw4aZPZ49ezaWLFmCvXv3on379jJVZT2xDCpERET1ImtQqUyv12PdunXIz89Hnz59qm1TXFyM4uJi02OdzrEWT4uutOePEAKSJMlcERERkX2TfTDt8ePH4ePjA5VKhXHjxmH9+vVo165dtW3nzp0LrVZr+oiIiLBxtY3TKsgHbgoJuUVluJJTJHc5REREdk/2oBITE4MjR47gjz/+wIsvvojRo0cjMTGx2rZTp05FTk6O6ePChQs2rrZxPNwUiAr0BsABtURERHUhe1Dx8PBA69at0a1bN8ydOxedO3fGRx99VG1blUplmiFk/HA0MRynQkREVGeyB5WbGQwGs3Eozsa4OeFpBhUiIqJbknUw7dSpUzFkyBBERkYiNzcXq1atwo4dO/Dzzz/LWZZVcc8fIiKiupM1qGRmZuKpp57ClStXoNVq0alTJ/z888+466675CzLqoxB5czVPJTpDXBT2l2nFhERkd2QNah8+umncr69LCL8vaB2V6KwVI+06wVoHewjd0lERER2i/+ctzGFQjJtUMidlImIiGrHoCIDjlMhIiKqGwYVGURz5g8REVGdMKjIIDa0fP0XLvpGRERUOwYVGUSHlo9RSbuej6JSvczVEBER2S8GFRkE+agQ4O0BIYCUjDy5yyEiIrJbDCoykKS/Zv7w9g8REVHNGFRkYhqnkq6TuRIiIiL7xaAiE+PMn2Te+iEiIqoRg4pM/tpFmT0qRERENWFQkYlxjEqGrhjZBSUyV0NERGSfGFRkovF0R1M/NQAgmQu/ERERVYtBRUaxFbd/uOcPERFR9RhUZBTNPX+IiIhqxaAiI/aoEBER1c6toSceOHAAa9euxfnz51FSYj4Y9Ntvv210Ya7AOEU5KT0XQghIkiRzRURERPalQT0qq1evxm233YZTp05h/fr1KC0txcmTJ7Ft2zZotVpL1+i0WgX5wE0hIbeoDOm6IrnLISIisjsNCipz5szB/Pnz8f3338PDwwMfffQRkpKSMHLkSERGRlq6Rqfl4aZAVKA3AI5TISIiqk6DgsrZs2cxdOhQAICHhwfy8/MhSRJefvllLFu2zKIFOjvjwm+nGVSIiIiqaFBQ8ff3R25u+R/Wpk2b4sSJEwCA7OxsFBQUWK46FxBjXEqfQYWIiKiKBg2mveOOO5CQkICOHTvikUcewaRJk7Bt2zYkJCRg0KBBlq7RqZmW0ufMHyIioioaFFQWL16MoqLywZ9vvvkm3N3d8dtvv+Ghhx7Cv/71L4sW6OyMQSUlMw9legPclJwxTkREZNSgoBIQEGD6WqFQYMqUKRYryNVE+HtB7a5EYake57IK0CrIR+6SiIiI7Eadg4pOp4Ovr6/p69oY29GtKRQSokN8cPRiDpLTcxlUiIiIKqlzUPH398eVK1cQHBwMPz+/ahcnMy5aptfrLVqks4sJ1eDoxRwkpefi3o5hcpdDRERkN+ocVLZt22a65bN9+3arFeSKjCvUcooyERGRuToHlf79+5u+joqKQkRERJVeFSEELly4YLnqXERsaPmtMs78ISIiMtegKSZRUVG4evVqleNZWVmIiopqdFGuJjq0fFxK2vV8FJXythkREZFRg4JKTRvo5eXlwdPTs9FFuZogHxUCvD0gBJCSkSd3OURERHajXtOTX3nlFQCAJEmYNm0avLy8TM/p9Xr88ccfiIuLs2iBrkCSymf+7P0zC8kZuejYjBs7EhERAfUMKocPHwZQ3qNy/PhxeHh4mJ7z8PBA586d8eqrr1q2QhcRG+pbHlTSa5/6TURE5ErqFVSMs32efvppLFy4EBqNxipFuSLjzJ9k3vohIiIyqfcYldLSUnzxxRc4d+6cNepxWaY9f9ijQkREZFLvoOLu7o7IyEgu6mZh0SHlM38ydMXILiiRuRoiIiL70KBZP2+++Sb++c9/Iisry9L1uCyNpzua+qkBAMlc+I2IiAhAI3ZPPnPmDMLDw9G8eXN4e3ubPX/o0CGLFOdqYkI1uJRdiNMZuejVsonc5RAREcmuQUFlxIgRFi6DgPKgsi0pE0nsUSEiIgLQwKAyffp0S9dBAGKMe/5wKX0iIiIADRyjAgDZ2dn4v//7P0ydOtU0VuXQoUO4dOmSxYpzNcaZP0npuRBCyFwNERGR/BrUo3Ls2DEMHjwYWq0WaWlpeP755xEQEIBvv/0W58+fx+eff27pOl1CyyBvKBUScovKkK4rQphWLXdJREREsmpQj8orr7yCMWPGICUlxWxvn3vvvRe7du2yWHGuRuWmRMvA8oHJHKdCRETUwKCyf/9+jB07tsrxpk2bIj09vdFFubLoits/pxlUiIiIGhZUVCoVdLqqK6iePn0aQUFBjS7KlcUal9JnUCEiImpYULn//vsxa9YslJaWAijf/ff8+fN444038NBDD1m0QFdjWkqfM3+IiIgaFlQ++OAD5OXlITg4GIWFhejfvz9at24NjUaD2bNnW7pGl2IMKimZeSjTG2SuhoiISF4NmvWj1WqRkJCAPXv24NixY8jLy0PXrl0xePBgS9fnciL8vaB2V6KwVI9zWQVoFeQjd0lERESyaVBQMbr99ttx++23W6oWAqBQSIgO8cHRizlITs9lUCEiIpfW4KCydetWbN26FZmZmTAYzG9R/O9//2t0Ya4sJlRjCir3dgyTuxwiIiLZNCiozJw5E7NmzUL37t0RFhYGSZIsXZdLi+bMHyIiIgANDCpLly7FihUr8OSTT1q6HgIQG+oLgHv+EBERNWjWT0lJCW677TZL10IVokPLx6WkXc9HUale5mqIiIjk06Cg8txzz2HVqlWWroUqBPmoEODtAYMAzmTmyV0OERGRbBp066eoqAjLli3Dli1b0KlTJ7i7u5s9/+GHH1qkOFclSeUzf/b+mYWk9Fx0aKqVuyQiIiJZNHj35Li4OADAiRMnLFkPVYgN9cXeP7M4ToWIiFxag4LK9u3bLV0H3cQ484e7KBMRkSurV1B58MEHb9lGkiR88803DS6IysVwF2UiIqL6BRWtlmMlbCU6pHzmT7quCDkFpdB6ud/iDCIiIudTr6CyfPlya9VBN9F4uqOpnxqXsguRnJGLnlEBcpdERERkcw2anmwpc+fORY8ePaDRaBAcHIwRI0YgOTlZzpLsivH2T3K6TuZKiIiI5CFrUNm5cyfGjx+PvXv3IiEhAaWlpbj77ruRn58vZ1l2wxRUOPOHiIhcVKN2T26sn376yezxihUrEBwcjIMHD+KOO+6QqSr7EcM9f4iIyMXJGlRulpOTAwAICKh+PEZxcTGKi4tNj3U6574l8tetn1wIIbj5IxERuRxZb/1UZjAYMHnyZPTt2xcdOnSots3cuXOh1WpNHxERETau0rZaBnlDqZCgKypDuq5I7nKIiIhszm6Cyvjx43HixAmsXr26xjZTp05FTk6O6ePChQs2rND2VG5KtAz0BsDbP0RE5JrsIqhMmDABmzZtwvbt29GsWbMa26lUKvj6+pp9OLvoUI5TISIi1yVrUBFCYMKECVi/fj22bduGqKgoOcuxS7EcUEtERC5M1sG048ePx6pVq7Bx40ZoNBqkp6cDKF8BV61Wy1ma3YjmFGUiInJhsvaoLFmyBDk5ORgwYADCwsJMH2vWrJGzLLsSWxFUUjLzUKY3yFwNERGRbcnaoyKEkPPtHUKEvxfU7koUlupxLqsArYJ85C6JiIjIZuxiMC3VTKGQTBsUcpwKERG5GgYVBxDNAbVEROSiGFQcQAynKBMRkYtiUHEAxqBymjN/iIjIxTCoOABjUEm7no+iUr3M1RAREdkOg4oDCPJRwd/LHQYBnMnMk7scIiIim2FQcQCSJJl6VZI4ToWIiFwIg4qDiA0t39eI41SIiMiVMKg4COMUZfaoEBGRK2FQcRCmmT8MKkRE5EIYVByEcXXadF0RcgpKZa6GiIjINhhUHITG0x1N/cp3lOZOykRE5CoYVBzIXyvU6mSuhIiIyDYYVByIKaiwR4WIiFwEg4oDieHmhERE5GIYVBxI5c0JhRAyV0NERGR9DCoOpGWQN5QKCbqiMqTriuQuh4iIyOoYVByIyk2JloHeAHj7h4iIXAODioOJDuU4FSIich0MKg4mNoQzf4iIyHUwqDgY9qgQEZErYVBxMLEVQSUlMw96A2f+EBGRc2NQcTAR/l5QuytRUmZA2vV8ucshIiKyKgYVB6NQSKYNCrmTMhEROTsGFQcUXTGgNolBhYiInByDigMyrlB7mjN/iIjIyTGoOKAYzvwhIiIXwaDigIxBJe16PopK9TJXQ0REZD0MKg4oyEcFfy93GARwJjNP7nKIiIishkHFAUmSxNs/RETkEhhUHFQMl9InIiIXwKDioGJCfQGwR4WIiJwbg4qDigktX/SNQYWIiJwZg4qDMi76lq4rQk5BqczVEBERWQeDioPSeLqjqZ8aAMepEBGR82JQcWB/zfzRyVwJERGRdTCoOLBozvwhIiInx6DiwGK5lgoRETk5BhUHVnnRNyGEzNUQERFZHoOKA2sZ5A2lQoKuqAzpuiK5yyEiIrI4BhUHpnJTomWgNwDe/iEiIufEoOLgojlOhYiInBiDioOL5cwfIiJyYgwqDo49KkRE5MwYVByccYpySmYe9AbO/CEiIufCoOLgIvy9oHZXoqTMgLTr+XKXQ0REZFEMKg5OoZAQHVK+k/Jp3v4hIiInw6DiBIxL6ScxqBARkZNhUHECxhVqT3PmDxERORkGFScQw5k/RETkpBhUnIAxqKRdz0dRqV7maoiIiCyHQcUJBPmo4O/lDoMAzmTmyV0OERGRxTCoOAFJknj7h4iInBKDipOI4VL6RETkhBhUnERMqC8A9qgQEZFzYVBxEjGh5Yu+MagQEZEzYVBxEsZF39J1RcgpKJW5GiIiIstgUHESGk93NPVTA+A4FSIich4MKk7ENPOHQYWIiJyErEFl165dGDZsGMLDwyFJEjZs2CBnOQ7PePsnOV0ncyVERESWIWtQyc/PR+fOnfHxxx/LWYbTiDXu+ZPORd+IiMg5uMn55kOGDMGQIUPkLMGp/LWLsg5CCEiSJHNFREREjSNrUKmv4uJiFBcXmx7rdLzFUVmrYG8oFRJ0RWXI0BUjVOspd0lERESN4lCDaefOnQutVmv6iIiIkLsku6JyUyIq0BtAea8KERGRo3OooDJ16lTk5OSYPi5cuCB3SXbHOPPnNGf+EBGRE3CoWz8qlQoqlUruMuxaTIgGP+AKkrhCLREROQGH6lGhW2OPChERORNZe1Ty8vJw5swZ0+PU1FQcOXIEAQEBiIyMlLEyx2XcRTklIw96g4BSwZk/RETkuGTtUTlw4AC6dOmCLl26AABeeeUVdOnSBW+99ZacZTm0yAAvqN2VKC4z4Nz1fLnLISIiahRZe1QGDBgAIYScJTgdhUJCdIgPjl7MQXJ6LloG+chdEhERUYNxjIoTMi2lz3EqRETk4BhUnJBpc0LO/CEiIgfHoOKEuIsyERE5CwYVJ2QMKmnX8lFUqpe5GiIiooZjUHFCQT4q+Hu5wyCAM5ncSZmIiBwXg4oTkiSJ41SIiMgpMKg4qRjO/CEiIifAoOKkYkJ9AbBHhYiIHBuDipOKCS1f6I1BhYiIHBmDipMyLvqWrivC6n3n8fvZ69AbuAowERE5FlmX0Cfr+fXMNSgkwCCAKd8eBwCEaT0xfVg73NMhTObqiIiI6oY9Kk7opxNX8OKXh3BzB0p6ThFe/PIQfjpxRZ7CiIiI6olBxcnoDQIzv09EdTd5jMdmfp/I20BEROQQGFSczL7ULFzJKarxeQHgSk4R9qVm2a4oIiKiBmJQcTKZuTWHlIa0IyIikhODipMJ1njWqV2Qj8rKlRARETUeg4qT6RkVgDCtJ6RbtHvv5yQcu5hti5KIiIgajEHFySgVEqYPawcAVcKK8bHKTYEjF3Iw/ONfMfXbY8jKL7FpjURERHXFoOKE7ukQhiVPdEWo1vw2UKjWE0uf6Ipdr9+JB7o0hRDAV/su4M5/78Dnv6ehTG+QqWIiIqLqSUIIh52nqtPpoNVqkZOTA19fX7nLsTt6g8C+1Cxk5hYhWOOJnlEBUCr+6mfZn5aF6RtPIvGKDgDQNswXM+9vj55RAXKVTERELqA+f78ZVFyc3iCwat95/PvnZOQUlgIAhseF45/3tkWIb90G5hIREdVHff5+89aPi1MqJDzZuzm2vzoAj/eKhCQBG49cxsB/78AnO8+ipIy3g4iISD7sUSEzxy/mYPp3J3DofDYAoGWQN6YPa4/+0UHyFkZERE6Dt36oUQwGgfWHL2Hu5iRcyysGANzdLgTT7muHiAAvmasjIiJHx6BCFqErKsVHW1Kw4rc06A0CKjcFxvVvhRcHtIKnu1Lu8oiIyEExqJBFpWTkYsb3J/HrmesAgKZ+aky7rx3i24dAkm61tBwREZE5BhWyOCEENp9IxzubEnG5YtPDfm0CMX1Ye7QO9pG5OiIiciQMKmQ1BSVlWLLjLD7Z9SdKygxwU0h45vYoTBzUBj4qN7nLIyIiB8CgQlZ37no+3t6UiC2nMgEAwRoVpt4bixFxTXk7iIiIasWgQjazPSkTM78/ibTrBQCA7s39MXN4e7QP18pcGRER2SsGFbKp4jI9Pt2TikVbz6CwVA+FBIzq1Rz/uDsafl4ecpdHRER2hkGFZHElpxBzfkzC90cvAwD8vdzxanwMHu0RabbHEBERuTYGFZLV72evY8Z3J5GckQsA6NDUFzPv74Buzf1lroyIiOwBgwrJrkxvwBd7z+HDhNPILSoDADzUtRneGBKDYA03OyQicmUMKmQ3ruUV4/2fkrHmwAUAgEblhkmD22D0bS3gruSemERErohBhezOkQvZmL7xBI5ezAEAtAn2wYz726Nv60CZKyMiIltjUCG7ZDAIrDt4Ae/+lIys/BIAwL0dQ/Hm0HZo6qeWuToiIrIVBhWyazkFpZi/5TQ+/z0NBgF4uiswfkBrPH9HS252SETkAhhUyCGcuqLD9O9OYl9qFgAgMsALb93XDoPaBnN1WyIiJ8agQg5DCIHvjl7GnB9PIUNXDAC4MyYIbw1rj6hAbwCA3iCwLzULmblFCNZ4omdUANdlISJyYAwq5HDyi8uwePsZ/N/uP1GqF/BQKvBcvyhEh2jw7k9JuFKxYzMAhGk9MX1YO9zTIUzGiomIqKEYVMhh/Xk1DzO/T8TO01drbGPsS1nyRFeGFSIiB1Sfv99cyILsSssgH6x4ugc+eaIblDXc3TEm65nfJ0JvcNicTUREdcCgQnZHkiT4qt2hryWDCABXcorwS2K6zeoiIiLbc5O7AKLqZOYW3boRgBe/PISIADW6Nw9A1+b+6N7cH9EhGg62JSJyEgwqZJfqsx/QhaxCXMi6hPWHLwEoX6Y/LtIP3Zr7o1tzf3SJ9IePiv+pExE5Iv72JrvUMyoAYVpPpOcUobo7QBKAUK0nfpzUD8cv5uDguRs4eO4GDp+/gdziMuxOuYbdKdcAAAoJiAn1RfeK4NKtuT+a+au5VgsRkQPgrB+yWz+duIIXvzwEAGZhpbZZP3qDQFK6DocqgsuBczdw8UZhldcO1qhMoaVbc3+0D9fCw41DtoiIbIHTk8lp/HTiCmZ+n9iodVQydEWmHpeD527g5OUclN40UlflpkDnZn7o1sIf3SL90bW5PwK8PSx6LUREVI5BhZyKpVemLSrV49jFHBw4l2XqeblRUFqlXcsgb3SL9Ef3FuW9Li0DfaDgIF0iokZjUCGqByEE/ryWj4NpFb0u52/gTGZelXZ+Xu7oGvnX7aLOzfyg9qj7JorcCoCIqByDClEj3cgvweELN3CgIrwcvZiNolKDWRs3hYT24b4V06ID0K25P0K11c9WssQtLCIiZ8GgQmRhpXoDEi/rTONcDpzLMm2iWFlTP7XZIN3YUA22nMrAi18eqjJ7iVsBEJGrYlAhsjIhBC5lF+LguRs4VDG76NQVHW5e0d/LXYEyA1CiN1T7OsZp1nveGMjbQETkMhhUiGSQX1yGIxeyTdOiD58rX9OlLh7oEo4OTf3g7+UOfy8P+Hm5w8/LA/5e7vD1dLerQbwca0NEjcWgQmQHDAaBZbv+xLyfkhr1OgoJ0KrLA4y2UpDx9/KAn9odft4e1QYctbvS4ovaOdNYGwYuIvnU5+83V6YlshKFQkLnCL86tb2rbQg8PZTILijBjYIS3MgvRXZBCfJL9DAI4EZBabVTqGvj4aaAv5c7/NR/BRt/7/Ig46euFHgqgo62op27svqF74wL8N38L5v0nCK8+OUhhxprw8Blf5zlOsjyGFSIrKiuWwEsfbJbtb+US8oMyC4sQXZBKW7kl+BGQSlyCksqgksJsvMrPheWVoSc8s+leoGSMgMydMXVDvqtjUblBj9v84CjVbth/eHL1V6D8di0jScRG+oLtYcSbgoJbkoFPJQKuCkluCkku9mygIHL/jjLdRg5S+iyl+uwi1s/H3/8Md5//32kp6ejc+fOWLRoEXr27HnL83jrhxxBQ7YCaAwhBPJL9MguqAg4FQEmp6BSwKn02RhwdEWlsOZvA3elBDdFeXBxVypMj90rHruZjhmfr9rWTSlVCj8KeLgpKoWi8s9Vz694fYUCSgl4/ZvjuFFQUmOdwRoVNozvC5WbwvR6bkoJ7gqFXY0VqilwOdpsMme5DiNnCV3Wvg6HGqOyZs0aPPXUU1i6dCl69eqFBQsWYN26dUhOTkZwcHCt5zKokKNwhF9eeoNAzk09M8bP+1Kz8Etixi1fw00hQVS8ljNSSDAFJmMgUiokUyhyU/wVqNyUCrgrpJuerxR8KoWgygFOqZDgXhG+Kr+me8VrKhUSlBLw9qZTyC6s+XZgEx8PfPJEN3i4KaCQJCik8loUUvltSWXFMYUCFcdv0abiOUv2jOkNAre/u83s/4vKHG1WnLOELltch0MFlV69eqFHjx5YvHgxAMBgMCAiIgIvvfQSpkyZUuu5DCrkSOylG7Uhfj97HY/9d+8t2331fG/0adUEBoNAqcGAMr1Amb7861J9+eNSvQGlFZ/LDAJlegNKKp4rMxhQUlb+uXLbMkOlc6o9Zt62TC8qXrP8PUrKyj9fzS3C+ayqm1TeTJJg1d4lR6esCDGSVM3XFWHmr2BTtY0xFBWW6pF6Lf+W79c5Qosm3ipIACSpPEhJEkyvI0l/HVdIUrXtqjsPMH5t3q7860qPb2onVXpfYzsBYNHWFOiKap7pp1W7Y+q9sXBTKMpfUwFIMK9fwl/vA9PX5u9trEe66Xr/uobyuqqcb3qvms8XAnhs2V5czav+lrGlwqPDDKYtKSnBwYMHMXXqVNMxhUKBwYMH4/fff6/Svri4GMXFf33zdDqdTeoksgSlQkKfVk3kLqNB6jrWpmdUAIDyf42rFEqo7GwUXF0D16rneqNXVADKDAJ6s9BlDFeVjlX6XKqvaF8peJnaG8+tCGfG19DrBUoN5q9tfK0yvaHi/YUpoOkNBlzOKUJyeu4tryPA2x1qdzfoDQJ6ISBEeX16g4AQgL7isUEIGETde8L0BgF9tf8lWMfRCzk2ey9ryiksxZRvjstdRqMIAFdyirAvNctmv89k/TVy7do16PV6hISEmB0PCQlBUlLVKZ1z587FzJkzbVUeEVVQKiRMH9YOL355CBKqH2szfVg7u+8hqk/gUigkeFRcjxp139PJFuoauD5+vFu9/5gYKoKLXggYDKj09V9hpjzYVIScurSpFIRMbYRA4qUcvPtz8i1rGte/FVoGeUOI8oBlEOXvKVA+Jsv4mqbHN7X767puOq9SO1FxvHI7AKbrMGsnYLomgfLH57PycfBc9i2vpV2YBsG+nmavJVD+fRQof01UqtNgamP+3uKmGoXZtRmv76/Xrr6d+WODobwn8ubtQqqTmVv97TprsLN/79Ru6tSpeOWVV0yPdTodIiIiZKyIyHXc0yEMS57oWmWsTaidjbWpjSsGrvpSKCQoINnkj8PtrQPx+d5zt7yO1+Jj7P5nUtfwOO2+9nbds1rX6wjWVL+vmTXIGlQCAwOhVCqRkWE+SC8jIwOhoaFV2qtUKqhUKluVR0Q3uadDGO5qF+qwY20ABi574izXAVg3PNqSPV6HXQym7dmzJxYtWgSgfDBtZGQkJkyYwMG0RGQ1jjy42cgRZpPVhTNdhy2XIrAWW1yHQ836WbNmDUaPHo1PPvkEPXv2xIIFC7B27VokJSVVGbtyMwYVInJ1zhC4AOe5DmcKXVxHpZLFixebFnyLi4vDwoUL0atXr1uex6BCRET2xllClzWvw+GCSkMxqBARETme+vz9rn73MSIiIiI7wKBCREREdotBhYiIiOwWgwoRERHZLQYVIiIislsMKkRERGS3GFSIiIjIbjGoEBERkd1iUCEiIiK7JevuyY1lXFRXp9PJXAkRERHVlfHvdl0Wx3fooJKbmwsAiIiIkLkSIiIiqq/c3Fxotdpa2zj0Xj8GgwGXL1+GRqOBJDnehk+2oNPpEBERgQsXLnA/JDvAn4d94c/DvvDnYX+s9TMRQiA3Nxfh4eFQKGofheLQPSoKhQLNmjWTuwyH4Ovry//x7Qh/HvaFPw/7wp+H/bHGz+RWPSlGHExLREREdotBhYiIiOwWg4qTU6lUmD59OlQqldylEPjzsDf8edgX/jzsjz38TBx6MC0RERE5N/aoEBERkd1iUCEiIiK7xaBCREREdotBhYiIiOwWg4oTmjt3Lnr06AGNRoPg4GCMGDECycnJcpdFFebNmwdJkjB58mS5S3Fply5dwhNPPIEmTZpArVajY8eOOHDggNxluSS9Xo9p06YhKioKarUarVq1wttvv12nfWCo8Xbt2oVhw4YhPDwckiRhw4YNZs8LIfDWW28hLCwMarUagwcPRkpKis3qY1BxQjt37sT48eOxd+9eJCQkoLS0FHfffTfy8/PlLs3l7d+/H5988gk6deokdyku7caNG+jbty/c3d2xefNmJCYm4oMPPoC/v7/cpbmkd999F0uWLMHixYtx6tQpvPvuu3jvvfewaNEiuUtzCfn5+ejcuTM+/vjjap9/7733sHDhQixduhR//PEHvL29ER8fj6KiIpvUx+nJLuDq1asIDg7Gzp07cccdd8hdjsvKy8tD165d8Z///AfvvPMO4uLisGDBArnLcklTpkzBr7/+it27d8tdCgG47777EBISgk8//dR07KGHHoJarcaXX34pY2WuR5IkrF+/HiNGjABQ3psSHh6Of/zjH3j11VcBADk5OQgJCcGKFSvw6KOPWr0m9qi4gJycHABAQECAzJW4tvHjx2Po0KEYPHiw3KW4vO+++w7du3fHI488guDgYHTp0gX//e9/5S7LZd12223YunUrTp8+DQA4evQo9uzZgyFDhshcGaWmpiI9Pd3s95ZWq0WvXr3w+++/26QGh96UkG7NYDBg8uTJ6Nu3Lzp06CB3OS5r9erVOHToEPbv3y93KQTgzz//xJIlS/DKK6/gn//8J/bv34+JEyfCw8MDo0ePlrs8lzNlyhTodDrExsZCqVRCr9dj9uzZGDVqlNylubz09HQAQEhIiNnxkJAQ03PWxqDi5MaPH48TJ05gz549cpfisi5cuIBJkyYhISEBnp6ecpdDKA/w3bt3x5w5cwAAXbp0wYkTJ7B06VIGFRmsXbsWK1euxKpVq9C+fXscOXIEkydPRnh4OH8exFs/zmzChAnYtGkTtm/fjmbNmsldjss6ePAgMjMz0bVrV7i5ucHNzQ07d+7EwoUL4ebmBr1eL3eJLicsLAzt2rUzO9a2bVucP39epopc22uvvYYpU6bg0UcfRceOHfHkk0/i5Zdfxty5c+UuzeWFhoYCADIyMsyOZ2RkmJ6zNgYVJySEwIQJE7B+/Xps27YNUVFRcpfk0gYNGoTjx4/jyJEjpo/u3btj1KhROHLkCJRKpdwlupy+fftWmbJ/+vRpNG/eXKaKXFtBQQEUCvM/R0qlEgaDQaaKyCgqKgqhoaHYunWr6ZhOp8Mff/yBPn362KQG3vpxQuPHj8eqVauwceNGaDQa031ErVYLtVotc3WuR6PRVBkf5O3tjSZNmnDckExefvll3HbbbZgzZw5GjhyJffv2YdmyZVi2bJncpbmkYcOGYfbs2YiMjET79u1x+PBhfPjhh3jmmWfkLs0l5OXl4cyZM6bHqampOHLkCAICAhAZGYnJkyfjnXfeQZs2bRAVFYVp06YhPDzcNDPI6gQ5HQDVfixfvlzu0qhC//79xaRJk+Quw6V9//33okOHDkKlUonY2FixbNkyuUtyWTqdTkyaNElERkYKT09P0bJlS/Hmm2+K4uJiuUtzCdu3b6/2b8bo0aOFEEIYDAYxbdo0ERISIlQqlRg0aJBITk62WX1cR4WIiIjsFseoEBERkd1iUCEiIiK7xaBCREREdotBhYiIiOwWgwoRERHZLQYVIiIislsMKkR2av369Vi7dq3cZRARyYpBhcgO7du3D5MnT0bv3r3lLqXRduzYAUmSkJ2dbfX3GjBgACZPnmz197GV69evIzg4GGlpaQBu/b28du0agoODcfHiRdsVSWRlDCpEVjZmzBhIkoR58+aZHd+wYQMkSarSPicnB8899xzWr1+PyMhIW5Vp90pKSvDee++hc+fO8PLyQmBgIPr27Yvly5ejtLTUKu8pSRI2bNhgldeui9mzZ2P48OFo0aJFndoHBgbiqaeewvTp061bGJENMagQ2YCnpyfeffdd3Lhx45ZttVotjh07hq5du9qgsuqVlJTI9t7VKSkpQXx8PObNm4cXXngBv/32G/bt24fx48dj0aJFOHnypNwl1qohQaqgoACffvopnn322Xqd9/TTT2PlypXIysqq93sS2SMGFSIbGDx4MEJDQ2vdtn7GjBmIi4szO7ZgwQKzf02PGTMGI0aMwJw5cxASEgI/Pz/MmjULZWVleO211xAQEIBmzZph+fLlZq9z4cIFjBw5En5+fggICMDw4cNNtxMqv+7s2bMRHh6OmJgYAMDx48cxcOBAqNVqNGnSBC+88ALy8vJqvdYff/wR0dHRUKvVuPPOO83ex2jPnj3o168f1Go1IiIiMHHiROTn59f4mgsWLMCuXbuwdetWjB8/HnFxcWjZsiUef/xx/PHHH2jTpk2151XXI+Ln54cVK1YAKA9AEyZMQFhYGDw9PdG8eXPTz8j4fX/ggQcgSZLZz2Hjxo3o2rUrPD090bJlS8ycORNlZWVm77tkyRLcf//98Pb2xuzZs3Hjxg2MGjUKQUFBUKvVaNOmTZWf083fR5VKVevtv4KCAgwZMgR9+/Y13Q5q3749wsPDsX79+hrPI3IkDCpENqBUKjFnzhwsWrSo0eMHtm3bhsuXL2PXrl348MMPMX36dNx3333w9/fHH3/8gXHjxmHs2LGm9yktLUV8fDw0Gg12796NX3/9FT4+PrjnnnvMek62bt2K5ORkJCQkYNOmTcjPz0d8fDz8/f2xf/9+rFu3Dlu2bMGECRNqrO3ChQt48MEHMWzYMBw5cgTPPfccpkyZYtbm7NmzuOeee/DQQw/h2LFjWLNmDfbs2VPr665cuRKDBw9Gly5dqjzn7u4Ob2/v+n4bAQALFy7Ed999h7Vr1yI5ORkrV640BZL9+/cDAJYvX44rV66YHu/evRtPPfUUJk2ahMTERHzyySdYsWIFZs+ebfbaM2bMwAMPPIDjx4/jmWeewbRp05CYmIjNmzfj1KlTWLJkCQIDA2usbffu3ejWrVuNz2dnZ+Ouu+6CwWBAQkIC/Pz8TM/17NkTu3fvbtD3hMju2Gz7QyIXNXr0aDF8+HAhhBC9e/cWzzzzjBBCiPXr14vK/wtOnz5ddO7c2ezc+fPni+bNm5u9VvPmzYVerzcdi4mJEf369TM9LisrE97e3uKrr74SQgjxxRdfiJiYGGEwGExtiouLhVqtFj///LPpdUNCQsx2q122bJnw9/cXeXl5pmM//PCDUCgUIj09vdprnTp1qmjXrp3ZsTfeeEMAEDdu3BBCCPHss8+KF154wazN7t27hUKhEIWFhdW+rlqtFhMnTqz2ucpu3pUagFi/fr1ZG61Wa9pJ/KWXXhIDBw40+95UVt35gwYNEnPmzDE79sUXX4iwsDCz8yZPnmzWZtiwYeLpp5++5TUYDR8+3PTfipFxl9tTp06JTp06iYceeqjaHYZffvllMWDAgDq/F5E9Y48KkQ29++67+Oyzz3Dq1KkGv0b79u2hUPz1v25ISAg6duxoeqxUKtGkSRNkZmYCAI4ePYozZ85Ao9HAx8cHPj4+CAgIQFFREc6ePWs6r2PHjvDw8DA9PnXqFDp37mzWW9G3b18YDAYkJydXW9upU6fQq1cvs2N9+vQxe3z06FGsWLHCVIuPjw/i4+NhMBiQmppa7esKK23yPmbMGBw5cgQxMTGYOHEifvnll1uec/ToUcyaNcus/ueffx5XrlxBQUGBqV337t3NznvxxRexevVqxMXF4fXXX8dvv/1W6/sUFhbC09Oz2ufuuusutG7dGmvWrDH7mRmp1WqzWogcmZvcBRC5kjvuuAPx8fGYOnUqxowZY/acQqGo8ge5ukGY7u7uZo8lSar2mMFgAADk5eWhW7duWLlyZZXXCgoKMn3d0Nsn9ZWXl4exY8di4sSJVZ6raZZTdHQ0kpKS6v1ekiTV+j3t2rUrUlNTsXnzZmzZsgUjR47E4MGD8fXXX9da/8yZM/Hggw9Wea5ysLj5+zlkyBCcO3cOP/74IxISEjBo0CCMHz8e//73v6t9n8DAwBoHXw8dOhTffPMNEhMTzUKqUVZWltnPlsiRMagQ2di8efMQFxdnGrBqFBQUhPT0dAghTNOWjxw50uj369q1K9asWYPg4GD4+vrW+by2bdtixYoVyM/PN/3R/fXXX6FQKKrUXvmc7777zuzY3r17q9STmJiI1q1b17mWxx9/HP/85z9x+PDhKuNUSktLUVJSUm3QCgoKwpUrV0yPU1JSqvQ0+Pr64m9/+xv+9re/4eGHH8Y999yDrKwsBAQEwN3dHXq9vkr9ycnJ9aq/cj2jR4/G6NGj0a9fP7z22ms1BpUuXbrgyy+/rPa5efPmwcfHB4MGDcKOHTvQrl07s+dPnDiBAQMG1Ls+InvEWz9ENtaxY0eMGjUKCxcuNDs+YMAAXL16Fe+99x7Onj2Ljz/+GJs3b270+40aNQqBgYEYPnw4du/ejdTUVOzYsQMTJ06sdWDvqFGj4OnpidGjR+PEiRPYvn07XnrpJTz55JMICQmp9pxx48YhJSUFr732GpKTk7Fq1SrTDBujN954A7/99hsmTJiAI0eOICUlBRs3bqx1MO3kyZPRt29fDBo0CB9//DGOHj2KP//8E2vXrkXv3r2RkpJS7XkDBw7E4sWLcfjwYRw4cADjxo0z63368MMP8dVXXyEpKQmnT5/GunXrEBoaahqY2qJFC2zduhXp6emm3o233noLn3/+OWbOnImTJ0/i1KlTWL16Nf71r3/VWL/xvI0bN+LMmTM4efIkNm3ahLZt29bYPj4+HidPnqyxV+Xf//43Ro0ahYEDB5r1NhUUFODgwYO4++67a62HyFEwqBDJYNasWaZbM0Zt27bFf/7zH3z88cfo3Lkz9u3bh1dffbXR7+Xl5YVdu3YhMjISDz74INq2bYtnn30WRUVFtfaweHl54eeff0ZWVhZ69OiBhx9+GIMGDcLixYtrPCcyMhLffPMNNmzYgM6dO2Pp0qWYM2eOWZtOnTph586dOH36NPr164cuXbrgrbfeQnh4eI2vq1KpkJCQgNdffx2ffPIJevfujR49emDhwoWYOHEiOnToUO15H3zwASIiItCvXz88/vjjePXVV+Hl5WV6XqPR4L333kP37t3Ro0cPpKWl4ccffzSNAfrggw+QkJCAiIgIU09OfHw8Nm3ahF9++QU9evRA7969MX/+fDRv3rzG+gHAw8MDU6dORadOnXDHHXdAqVRi9erVNbbv2LEjunbtWus2CvPnz8fIkSMxcOBAnD59GkD51OnIyEj069ev1nqIHIUkrDVKjYiIGuWHH37Aa6+9hhMnTpgNoK5N7969MXHiRDz++ONWro7INjhGhYjITg0dOhQpKSm4dOkSIiIibtn+2rVrePDBB/HYY4/ZoDoi22CPChEREdktjlEhIiIiu8WgQkRERHaLQYWIiIjsFoMKERER2S0GFSIiIrJbDCpERERktxhUiIiIyG4xqBAREZHdYlAhIiIiu8WgQkRERHbr/wGdU6OqyQvZMgAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["#Kmeans\n","selected_k = 4 #Seleccionamos 4 cluster basandonos en el metodo del codo\n","#Ya que de 4 en adelante no se nota mucha diferencia\n","kmeans = KMeans(n_clusters=selected_k, random_state=42)\n","hourly_orders['cluster'] = kmeans.fit_predict(X)\n","\n","# Visualiza los resultados del algoritmo k-means\n","plt.scatter(hourly_orders['order_hour_of_day'], hourly_orders['total_orders'], c=hourly_orders['cluster'], cmap='viridis', s=50, alpha=0.8)\n","plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=200, marker='X', c='red', label='Centroides')\n","plt.title('Resultado del algoritmo K-Means')\n","plt.xlabel('Hora del día')\n","plt.ylabel('Total de compras en esa hora')\n","plt.legend()\n","plt.show()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":528},"id":"MbhH7woLq82o","executionInfo":{"status":"ok","timestamp":1700880988455,"user_tz":360,"elapsed":821,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"d7b849d4-c13e-4ff5-b2ec-670879ba0b6d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#Al dataframe se le agregaron los clusters para identificarlos mejor\n","hourly_orders"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":801},"id":"bxus_XcdztSe","executionInfo":{"status":"ok","timestamp":1700881080762,"user_tz":360,"elapsed":259,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"bb944449-0236-42f6-d756-c63d2645a913"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    order_hour_of_day  total_orders  cluster\n","0                   0          9083        0\n","1                   1          5626        0\n","2                   2          3226        0\n","3                   3          2438        0\n","4                   4          2431        0\n","5                   5          3847        0\n","6                   6         11847        0\n","7                   7         36302        3\n","8                   8         67386        2\n","9                   9         93856        1\n","10                 10        110479        1\n","11                 11        114119        1\n","12                 12        111752        1\n","13                 13        114762        1\n","14                 14        119370        1\n","15                 15        116198        1\n","16                 16        110237        1\n","17                 17         96944        1\n","18                 18         76522        2\n","19                 19         58175        2\n","20                 20         40920        3\n","21                 21         34813        3\n","22                 22         27319        3\n","23                 23         16965        0"],"text/html":["\n","  <div id=\"df-3c08c31c-c762-4a25-9586-469b46598b84\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_hour_of_day</th>\n","      <th>total_orders</th>\n","      <th>cluster</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>9083</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>5626</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>3226</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2438</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2431</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>3847</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>11847</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>36302</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>67386</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>93856</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>10</td>\n","      <td>110479</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>11</td>\n","      <td>114119</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>12</td>\n","      <td>111752</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>13</td>\n","      <td>114762</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>14</td>\n","      <td>119370</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>15</td>\n","      <td>116198</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>16</td>\n","      <td>110237</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>17</td>\n","      <td>96944</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>18</td>\n","      <td>76522</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>19</td>\n","      <td>58175</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>20</td>\n","      <td>40920</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>21</td>\n","      <td>34813</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>22</td>\n","      <td>27319</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>23</td>\n","      <td>16965</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c08c31c-c762-4a25-9586-469b46598b84')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3c08c31c-c762-4a25-9586-469b46598b84 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3c08c31c-c762-4a25-9586-469b46598b84');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-39d17704-9159-41a6-a6da-3b088db8b330\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-39d17704-9159-41a6-a6da-3b088db8b330')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-39d17704-9159-41a6-a6da-3b088db8b330 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["#Contando el numero de puntos que tiene cada cluster\n","hourly_orders['cluster'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gYhmNgd4zt9n","executionInfo":{"status":"ok","timestamp":1700881082742,"user_tz":360,"elapsed":177,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"4686f518-3c9a-4604-91d3-025a353dcd4b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    9\n","0    8\n","3    4\n","2    3\n","Name: cluster, dtype: int64"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["hourly_orders.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z1kmuvaL1e9K","executionInfo":{"status":"ok","timestamp":1700881084660,"user_tz":360,"elapsed":7,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"c8d20b03-c8ea-47cc-9f75-edc58ce14f02"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 24 entries, 0 to 23\n","Data columns (total 3 columns):\n"," #   Column             Non-Null Count  Dtype\n","---  ------             --------------  -----\n"," 0   order_hour_of_day  24 non-null     int64\n"," 1   total_orders       24 non-null     int64\n"," 2   cluster            24 non-null     int32\n","dtypes: int32(1), int64(2)\n","memory usage: 608.0 bytes\n"]}]},{"cell_type":"markdown","source":["Características comunes\n","- El conjunto tiene arriba de 93 mil compras\n","- Mas del 50% de las compras del dia se hacen en estan periodo (del conjunto)\n","- Las compras de este conjunto se realizan entre las 9am y las 5pm\n","- Los 3 productos que mas se compran en este conjunto son:\n","  - Banana\n","  - Bag of Organic Bananas\n","  - Organic Strawberries\n","\n","- Los 2 pasillos donde mas se compra en este conjunto son (Teniendo en cunenta que estos 2 superan por el doble al tercer puesto):\n","  - 83 = Fresh vegetables\n","  - 24 = Fresh fruits\n","\n","- Los departamentos donde mas se compra son:\n","  - 4 = Produce\n","  - 16 = Dairy eggs\n","  - 19 = Snacks\n"],"metadata":{"id":"UZXkGOz-crbe"}},{"cell_type":"markdown","source":["Reglas de asociacion con el grupo seleccionado\n","\n","Cluster #1"],"metadata":{"id":"1b1nINAjIYOm"}},{"cell_type":"code","source":["#Preparando los datos para las reglas de asociación\n","merged_df1 = pd.merge(df4, df3, on='order_id')\n","merged_df1"],"metadata":{"id":"gsK1-yYb3Txp","colab":{"base_uri":"https://localhost:8080/","height":443},"executionInfo":{"status":"ok","timestamp":1700881122732,"user_tz":360,"elapsed":1501,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"3585debe-bec4-4736-a6aa-f81d390ad6ef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id eval_set  order_number  order_dow  \\\n","0         1187899        1    train            11          4   \n","1         1187899        1    train            11          4   \n","2         1187899        1    train            11          4   \n","3         1187899        1    train            11          4   \n","4         1187899        1    train            11          4   \n","...           ...      ...      ...           ...        ...   \n","1384612    272231   206209    train            14          6   \n","1384613    272231   206209    train            14          6   \n","1384614    272231   206209    train            14          6   \n","1384615    272231   206209    train            14          6   \n","1384616    272231   206209    train            14          6   \n","\n","         order_hour_of_day  days_since_prior_order  product_id  \\\n","0                        8                    14.0         196   \n","1                        8                    14.0       25133   \n","2                        8                    14.0       38928   \n","3                        8                    14.0       26405   \n","4                        8                    14.0       39657   \n","...                    ...                     ...         ...   \n","1384612                 14                    30.0       40603   \n","1384613                 14                    30.0       15655   \n","1384614                 14                    30.0       42606   \n","1384615                 14                    30.0       37966   \n","1384616                 14                    30.0       39216   \n","\n","         add_to_cart_order  reordered  \n","0                        1          1  \n","1                        2          1  \n","2                        3          1  \n","3                        4          1  \n","4                        5          1  \n","...                    ...        ...  \n","1384612                  4          0  \n","1384613                  5          0  \n","1384614                  6          0  \n","1384615                  7          0  \n","1384616                  8          1  \n","\n","[1384617 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-700f5e58-1e8d-4b20-91ab-9befbff4c95f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>196</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>25133</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>38928</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>26405</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>39657</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>40603</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>15655</td>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>42606</td>\n","      <td>6</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>37966</td>\n","      <td>7</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1384616</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>39216</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1384617 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-700f5e58-1e8d-4b20-91ab-9befbff4c95f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-700f5e58-1e8d-4b20-91ab-9befbff4c95f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-700f5e58-1e8d-4b20-91ab-9befbff4c95f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-54282c5c-abcf-43f4-8731-e4bd614823cc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-54282c5c-abcf-43f4-8731-e4bd614823cc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-54282c5c-abcf-43f4-8731-e4bd614823cc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["merged_df1 = pd.merge(merged_df1, df5, on='product_id')\n","merged_df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"lOb7xPT2Hq6K","executionInfo":{"status":"ok","timestamp":1700881125294,"user_tz":360,"elapsed":417,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"4152d00b-3e3b-4be5-905a-a13bca32b765"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id eval_set  order_number  order_dow  \\\n","0         1187899        1    train            11          4   \n","1         2757217       67    train            25          0   \n","2          632715      676    train            12          0   \n","3         1167274      760    train             5          4   \n","4         3347074      804    train            16          3   \n","...           ...      ...      ...           ...        ...   \n","1384612   3351563   206110    train             5          3   \n","1384613   2629221   206125    train            14          6   \n","1384614   2721635   206149    train             6          6   \n","1384615   2078948   206155    train            15          3   \n","1384616    243575   206171    train             7          0   \n","\n","         order_hour_of_day  days_since_prior_order  product_id  \\\n","0                        8                    14.0         196   \n","1                       11                     5.0         196   \n","2                       13                    26.0         196   \n","3                       10                     8.0         196   \n","4                       21                     5.0         196   \n","...                    ...                     ...         ...   \n","1384612                 13                     7.0       22165   \n","1384613                 13                    30.0       31540   \n","1384614                 10                    30.0       44507   \n","1384615                 11                    15.0       47814   \n","1384616                 22                    11.0       49653   \n","\n","         add_to_cart_order  reordered  \\\n","0                        1          1   \n","1                        1          1   \n","2                        2          1   \n","3                        2          1   \n","4                        4          0   \n","...                    ...        ...   \n","1384612                 22          0   \n","1384613                  5          0   \n","1384614                  2          1   \n","1384615                  1          1   \n","1384616                  3          0   \n","\n","                                              product_name  aisle_id  \\\n","0                                                     Soda        77   \n","1                                                     Soda        77   \n","2                                                     Soda        77   \n","3                                                     Soda        77   \n","4                                                     Soda        77   \n","...                                                    ...       ...   \n","1384612      Chewy Reduced Sugar Granola Bars Variety Pack        48   \n","1384613                 Plain Flavor Probiotic Acidophilus        70   \n","1384614                     100% Juice, Rio Red Grapefruit        98   \n","1384615  Puppy Complete Nutrition Chicken & Beef Dinner...        40   \n","1384616    Organic Aromatherapeutic Moroccan Argan Oil Set        25   \n","\n","         department_id  \n","0                    7  \n","1                    7  \n","2                    7  \n","3                    7  \n","4                    7  \n","...                ...  \n","1384612             14  \n","1384613             11  \n","1384614              7  \n","1384615              8  \n","1384616             11  \n","\n","[1384617 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-08a574fa-d8fe-4e63-9c0b-3f45ac646b7c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","      <th>product_name</th>\n","      <th>aisle_id</th>\n","      <th>department_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1187899</td>\n","      <td>1</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>14.0</td>\n","      <td>196</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2757217</td>\n","      <td>67</td>\n","      <td>train</td>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>5.0</td>\n","      <td>196</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>632715</td>\n","      <td>676</td>\n","      <td>train</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>26.0</td>\n","      <td>196</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1167274</td>\n","      <td>760</td>\n","      <td>train</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>196</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3347074</td>\n","      <td>804</td>\n","      <td>train</td>\n","      <td>16</td>\n","      <td>3</td>\n","      <td>21</td>\n","      <td>5.0</td>\n","      <td>196</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>3351563</td>\n","      <td>206110</td>\n","      <td>train</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>13</td>\n","      <td>7.0</td>\n","      <td>22165</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>Chewy Reduced Sugar Granola Bars Variety Pack</td>\n","      <td>48</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>2629221</td>\n","      <td>206125</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>13</td>\n","      <td>30.0</td>\n","      <td>31540</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>Plain Flavor Probiotic Acidophilus</td>\n","      <td>70</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>2721635</td>\n","      <td>206149</td>\n","      <td>train</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>30.0</td>\n","      <td>44507</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>100% Juice, Rio Red Grapefruit</td>\n","      <td>98</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>2078948</td>\n","      <td>206155</td>\n","      <td>train</td>\n","      <td>15</td>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>15.0</td>\n","      <td>47814</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Puppy Complete Nutrition Chicken &amp; Beef Dinner...</td>\n","      <td>40</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>1384616</th>\n","      <td>243575</td>\n","      <td>206171</td>\n","      <td>train</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>11.0</td>\n","      <td>49653</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Organic Aromatherapeutic Moroccan Argan Oil Set</td>\n","      <td>25</td>\n","      <td>11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1384617 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08a574fa-d8fe-4e63-9c0b-3f45ac646b7c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-08a574fa-d8fe-4e63-9c0b-3f45ac646b7c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-08a574fa-d8fe-4e63-9c0b-3f45ac646b7c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7bc2000c-e5a6-4821-b209-a3657d53a596\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7bc2000c-e5a6-4821-b209-a3657d53a596')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7bc2000c-e5a6-4821-b209-a3657d53a596 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["#Como seleccionamos el cluster #1 solo tomaremos los datos de que contiene este grupo\n","#En este caso las horas (de 9 a 17)\n","filtered_orders = merged_df[(merged_df['order_hour_of_day'] >= 9) & (merged_df['order_hour_of_day'] <= 17)]\n","filtered_orders"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":704},"id":"uRhI1PQYH4Fw","executionInfo":{"status":"ok","timestamp":1700881197940,"user_tz":360,"elapsed":244,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"b1969714-e2c0-406c-f87e-2f9d0ad59318"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id eval_set  order_number  order_dow  \\\n","1         2757217       67    train            25          0   \n","2          632715      676    train            12          0   \n","3         1167274      760    train             5          4   \n","5          692135      865    train             4          5   \n","6         3289231      992    train            22          5   \n","...           ...      ...      ...           ...        ...   \n","1384611   3351563   206110    train             5          3   \n","1384612   3351563   206110    train             5          3   \n","1384613   2629221   206125    train            14          6   \n","1384614   2721635   206149    train             6          6   \n","1384615   2078948   206155    train            15          3   \n","\n","         order_hour_of_day  days_since_prior_order  product_id  \\\n","1                       11                     5.0         196   \n","2                       13                    26.0         196   \n","3                       10                     8.0         196   \n","5                       11                    30.0         196   \n","6                       14                    30.0         196   \n","...                    ...                     ...         ...   \n","1384611                 13                     7.0        3794   \n","1384612                 13                     7.0       22165   \n","1384613                 13                    30.0       31540   \n","1384614                 10                    30.0       44507   \n","1384615                 11                    15.0       47814   \n","\n","         add_to_cart_order  reordered  \\\n","1                        1          1   \n","2                        2          1   \n","3                        2          1   \n","5                        1          0   \n","6                        6          1   \n","...                    ...        ...   \n","1384611                 12          0   \n","1384612                 22          0   \n","1384613                  5          0   \n","1384614                  2          1   \n","1384615                  1          1   \n","\n","                                              product_name  aisle_id  \\\n","1                                                     Soda        77   \n","2                                                     Soda        77   \n","3                                                     Soda        77   \n","5                                                     Soda        77   \n","6                                                     Soda        77   \n","...                                                    ...       ...   \n","1384611                    Pimiento Stuffed Spanish Olives       110   \n","1384612      Chewy Reduced Sugar Granola Bars Variety Pack        48   \n","1384613                 Plain Flavor Probiotic Acidophilus        70   \n","1384614                     100% Juice, Rio Red Grapefruit        98   \n","1384615  Puppy Complete Nutrition Chicken & Beef Dinner...        40   \n","\n","         department_id  \n","1                    7  \n","2                    7  \n","3                    7  \n","5                    7  \n","6                    7  \n","...                ...  \n","1384611             13  \n","1384612             14  \n","1384613             11  \n","1384614              7  \n","1384615              8  \n","\n","[987717 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-28c0ca32-52f3-492a-b5f5-6f1e5d758c20\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","      <th>product_name</th>\n","      <th>aisle_id</th>\n","      <th>department_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2757217</td>\n","      <td>67</td>\n","      <td>train</td>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>5.0</td>\n","      <td>196</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>632715</td>\n","      <td>676</td>\n","      <td>train</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>26.0</td>\n","      <td>196</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1167274</td>\n","      <td>760</td>\n","      <td>train</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>196</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>692135</td>\n","      <td>865</td>\n","      <td>train</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>11</td>\n","      <td>30.0</td>\n","      <td>196</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>3289231</td>\n","      <td>992</td>\n","      <td>train</td>\n","      <td>22</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>196</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>Soda</td>\n","      <td>77</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384611</th>\n","      <td>3351563</td>\n","      <td>206110</td>\n","      <td>train</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>13</td>\n","      <td>7.0</td>\n","      <td>3794</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>Pimiento Stuffed Spanish Olives</td>\n","      <td>110</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>3351563</td>\n","      <td>206110</td>\n","      <td>train</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>13</td>\n","      <td>7.0</td>\n","      <td>22165</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>Chewy Reduced Sugar Granola Bars Variety Pack</td>\n","      <td>48</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>2629221</td>\n","      <td>206125</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>13</td>\n","      <td>30.0</td>\n","      <td>31540</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>Plain Flavor Probiotic Acidophilus</td>\n","      <td>70</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>2721635</td>\n","      <td>206149</td>\n","      <td>train</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>30.0</td>\n","      <td>44507</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>100% Juice, Rio Red Grapefruit</td>\n","      <td>98</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>2078948</td>\n","      <td>206155</td>\n","      <td>train</td>\n","      <td>15</td>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>15.0</td>\n","      <td>47814</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Puppy Complete Nutrition Chicken &amp; Beef Dinner...</td>\n","      <td>40</td>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>987717 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28c0ca32-52f3-492a-b5f5-6f1e5d758c20')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-28c0ca32-52f3-492a-b5f5-6f1e5d758c20 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-28c0ca32-52f3-492a-b5f5-6f1e5d758c20');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7f26ceab-6353-414c-b4fe-55bfe63d955c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7f26ceab-6353-414c-b4fe-55bfe63d955c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7f26ceab-6353-414c-b4fe-55bfe63d955c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["#Comprobando que solo existan los datos que nececitamos\n","filtered_orders['order_hour_of_day'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tZFKMvI2a4zz","executionInfo":{"status":"ok","timestamp":1700881236180,"user_tz":360,"elapsed":180,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"4d582fb2-92ce-4dd4-c9da-2ba3fa049633"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["14    119370\n","15    116198\n","13    114762\n","11    114119\n","12    111752\n","10    110479\n","16    110237\n","17     96944\n","9      93856\n","Name: order_hour_of_day, dtype: int64"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["#Seleccionamos las columnas que nececitemos\n","selected_columns = ['order_id','user_id', 'product_id', 'product_name', 'order_hour_of_day']\n","result_df = filtered_orders[selected_columns]\n","result_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"0g3XMmUPIG8T","executionInfo":{"status":"ok","timestamp":1700881284772,"user_tz":360,"elapsed":181,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"f57771cc-dd41-4632-f12b-71c0453c3925"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id  product_id  \\\n","1         2757217       67         196   \n","2          632715      676         196   \n","3         1167274      760         196   \n","5          692135      865         196   \n","6         3289231      992         196   \n","...           ...      ...         ...   \n","1384611   3351563   206110        3794   \n","1384612   3351563   206110       22165   \n","1384613   2629221   206125       31540   \n","1384614   2721635   206149       44507   \n","1384615   2078948   206155       47814   \n","\n","                                              product_name  order_hour_of_day  \n","1                                                     Soda                 11  \n","2                                                     Soda                 13  \n","3                                                     Soda                 10  \n","5                                                     Soda                 11  \n","6                                                     Soda                 14  \n","...                                                    ...                ...  \n","1384611                    Pimiento Stuffed Spanish Olives                 13  \n","1384612      Chewy Reduced Sugar Granola Bars Variety Pack                 13  \n","1384613                 Plain Flavor Probiotic Acidophilus                 13  \n","1384614                     100% Juice, Rio Red Grapefruit                 10  \n","1384615  Puppy Complete Nutrition Chicken & Beef Dinner...                 11  \n","\n","[987717 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-fee358ab-b4e2-4a4f-aa1f-a0bd35c18ff2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","      <th>order_hour_of_day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2757217</td>\n","      <td>67</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>632715</td>\n","      <td>676</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1167274</td>\n","      <td>760</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>692135</td>\n","      <td>865</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>3289231</td>\n","      <td>992</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384611</th>\n","      <td>3351563</td>\n","      <td>206110</td>\n","      <td>3794</td>\n","      <td>Pimiento Stuffed Spanish Olives</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>3351563</td>\n","      <td>206110</td>\n","      <td>22165</td>\n","      <td>Chewy Reduced Sugar Granola Bars Variety Pack</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>2629221</td>\n","      <td>206125</td>\n","      <td>31540</td>\n","      <td>Plain Flavor Probiotic Acidophilus</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>2721635</td>\n","      <td>206149</td>\n","      <td>44507</td>\n","      <td>100% Juice, Rio Red Grapefruit</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>2078948</td>\n","      <td>206155</td>\n","      <td>47814</td>\n","      <td>Puppy Complete Nutrition Chicken &amp; Beef Dinner...</td>\n","      <td>11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>987717 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fee358ab-b4e2-4a4f-aa1f-a0bd35c18ff2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fee358ab-b4e2-4a4f-aa1f-a0bd35c18ff2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fee358ab-b4e2-4a4f-aa1f-a0bd35c18ff2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a464e29a-e2ca-4aaf-a8f7-faba69b205ab\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a464e29a-e2ca-4aaf-a8f7-faba69b205ab')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a464e29a-e2ca-4aaf-a8f7-faba69b205ab button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["#La columna de la hora no es estrictamente necesaria, asi que hacemos otro dataframe sin ella\n","selected_columns2 = ['order_id','user_id', 'product_id', 'product_name']\n","result_df2 = filtered_orders[selected_columns2]\n","result_df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"aJA-jWTBIWhw","executionInfo":{"status":"ok","timestamp":1700881334157,"user_tz":360,"elapsed":238,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"4a13f512-71ea-40bf-cd26-ab2bf89e8673"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id  product_id  \\\n","1         2757217       67         196   \n","2          632715      676         196   \n","3         1167274      760         196   \n","5          692135      865         196   \n","6         3289231      992         196   \n","...           ...      ...         ...   \n","1384611   3351563   206110        3794   \n","1384612   3351563   206110       22165   \n","1384613   2629221   206125       31540   \n","1384614   2721635   206149       44507   \n","1384615   2078948   206155       47814   \n","\n","                                              product_name  \n","1                                                     Soda  \n","2                                                     Soda  \n","3                                                     Soda  \n","5                                                     Soda  \n","6                                                     Soda  \n","...                                                    ...  \n","1384611                    Pimiento Stuffed Spanish Olives  \n","1384612      Chewy Reduced Sugar Granola Bars Variety Pack  \n","1384613                 Plain Flavor Probiotic Acidophilus  \n","1384614                     100% Juice, Rio Red Grapefruit  \n","1384615  Puppy Complete Nutrition Chicken & Beef Dinner...  \n","\n","[987717 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-b09d9e29-5cce-49eb-bfac-a627f90bd7d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2757217</td>\n","      <td>67</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>632715</td>\n","      <td>676</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1167274</td>\n","      <td>760</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>692135</td>\n","      <td>865</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>3289231</td>\n","      <td>992</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384611</th>\n","      <td>3351563</td>\n","      <td>206110</td>\n","      <td>3794</td>\n","      <td>Pimiento Stuffed Spanish Olives</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>3351563</td>\n","      <td>206110</td>\n","      <td>22165</td>\n","      <td>Chewy Reduced Sugar Granola Bars Variety Pack</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>2629221</td>\n","      <td>206125</td>\n","      <td>31540</td>\n","      <td>Plain Flavor Probiotic Acidophilus</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>2721635</td>\n","      <td>206149</td>\n","      <td>44507</td>\n","      <td>100% Juice, Rio Red Grapefruit</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>2078948</td>\n","      <td>206155</td>\n","      <td>47814</td>\n","      <td>Puppy Complete Nutrition Chicken &amp; Beef Dinner...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>987717 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b09d9e29-5cce-49eb-bfac-a627f90bd7d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b09d9e29-5cce-49eb-bfac-a627f90bd7d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b09d9e29-5cce-49eb-bfac-a627f90bd7d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d6bd98f2-dc5c-4a5d-aa31-af475aa8a924\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6bd98f2-dc5c-4a5d-aa31-af475aa8a924')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d6bd98f2-dc5c-4a5d-aa31-af475aa8a924 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["#Total de productos comprados dentro del rango de horas\n","result_df2['product_name'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E6aDSdCOKTVH","executionInfo":{"status":"ok","timestamp":1700881411936,"user_tz":360,"elapsed":366,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"0c2ed67e-bb40-4115-f003-7001c819e1b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Banana                                                         13129\n","Bag of Organic Bananas                                         10876\n","Organic Strawberries                                            7559\n","Organic Baby Spinach                                            7005\n","Large Lemon                                                     5907\n","                                                               ...  \n","Peanut Caramel Candy Bars                                          1\n","Quattro For Women Refill Blades,                                   1\n","Fat Free Thousand Island Dressing                                  1\n","Syrup, Boysenberry                                                 1\n","Puppy Complete Nutrition Chicken & Beef Dinner Wet Dog Food        1\n","Name: product_name, Length: 36252, dtype: int64"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["#Cuantas ordenes hizo cada usuario dentro del rango de horas\n","result_df2['user_id'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q7exDFx1KXtQ","executionInfo":{"status":"ok","timestamp":1700881409982,"user_tz":360,"elapsed":277,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"61959a0e-186f-474e-d00e-dc4531fbfb6d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["197541    80\n","149753    80\n","83993     76\n","169647    75\n","104741    74\n","          ..\n","66257      1\n","70198      1\n","148656     1\n","139733     1\n","205824     1\n","Name: user_id, Length: 93587, dtype: int64"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["#Reemplazamos el index por el user_id\n","result_df2.set_index('user_id', inplace = True)\n","result_df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"DlURUzDRMp8p","executionInfo":{"status":"ok","timestamp":1700881413624,"user_tz":360,"elapsed":156,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"ff6a4ab9-9061-4783-fdbb-97d28c1e36e3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  product_id  \\\n","user_id                         \n","67        2757217         196   \n","676        632715         196   \n","760       1167274         196   \n","865        692135         196   \n","992       3289231         196   \n","...           ...         ...   \n","206110    3351563        3794   \n","206110    3351563       22165   \n","206125    2629221       31540   \n","206149    2721635       44507   \n","206155    2078948       47814   \n","\n","                                              product_name  \n","user_id                                                     \n","67                                                    Soda  \n","676                                                   Soda  \n","760                                                   Soda  \n","865                                                   Soda  \n","992                                                   Soda  \n","...                                                    ...  \n","206110                     Pimiento Stuffed Spanish Olives  \n","206110       Chewy Reduced Sugar Granola Bars Variety Pack  \n","206125                  Plain Flavor Probiotic Acidophilus  \n","206149                      100% Juice, Rio Red Grapefruit  \n","206155   Puppy Complete Nutrition Chicken & Beef Dinner...  \n","\n","[987717 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-94c52fda-d56c-4469-978c-da50b95f0225\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>67</th>\n","      <td>2757217</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","    </tr>\n","    <tr>\n","      <th>676</th>\n","      <td>632715</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","    </tr>\n","    <tr>\n","      <th>760</th>\n","      <td>1167274</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","    </tr>\n","    <tr>\n","      <th>865</th>\n","      <td>692135</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","    </tr>\n","    <tr>\n","      <th>992</th>\n","      <td>3289231</td>\n","      <td>196</td>\n","      <td>Soda</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>206110</th>\n","      <td>3351563</td>\n","      <td>3794</td>\n","      <td>Pimiento Stuffed Spanish Olives</td>\n","    </tr>\n","    <tr>\n","      <th>206110</th>\n","      <td>3351563</td>\n","      <td>22165</td>\n","      <td>Chewy Reduced Sugar Granola Bars Variety Pack</td>\n","    </tr>\n","    <tr>\n","      <th>206125</th>\n","      <td>2629221</td>\n","      <td>31540</td>\n","      <td>Plain Flavor Probiotic Acidophilus</td>\n","    </tr>\n","    <tr>\n","      <th>206149</th>\n","      <td>2721635</td>\n","      <td>44507</td>\n","      <td>100% Juice, Rio Red Grapefruit</td>\n","    </tr>\n","    <tr>\n","      <th>206155</th>\n","      <td>2078948</td>\n","      <td>47814</td>\n","      <td>Puppy Complete Nutrition Chicken &amp; Beef Dinner...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>987717 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94c52fda-d56c-4469-978c-da50b95f0225')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-94c52fda-d56c-4469-978c-da50b95f0225 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-94c52fda-d56c-4469-978c-da50b95f0225');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e5f189d0-ad8f-4a4a-9d7b-38c10bf6d1c8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e5f189d0-ad8f-4a4a-9d7b-38c10bf6d1c8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e5f189d0-ad8f-4a4a-9d7b-38c10bf6d1c8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["#Instalando apyori\n","pip install apyori"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lmTIqUgIMxCu","executionInfo":{"status":"ok","timestamp":1700881433850,"user_tz":360,"elapsed":14876,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"b64d5f51-a2eb-4db9-a77c-399a95f05e52"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting apyori\n","  Downloading apyori-1.1.2.tar.gz (8.6 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Building wheels for collected packages: apyori\n","  Building wheel for apyori (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for apyori: filename=apyori-1.1.2-py3-none-any.whl size=5955 sha256=5f79ac88167abce3c31ffc8bef50eae4b2eb698e1a82be0b681f01402286e059\n","  Stored in directory: /root/.cache/pip/wheels/c4/1a/79/20f55c470a50bb3702a8cb7c94d8ada15573538c7f4baebe2d\n","Successfully built apyori\n","Installing collected packages: apyori\n","Successfully installed apyori-1.1.2\n"]}]},{"cell_type":"code","source":["from apyori import apriori"],"metadata":{"id":"5pbjQ22dMxyX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Haciendo una lista de listas segun los productos que compro cada usuario\n","transactions1 = result_df2.groupby('user_id')['product_name'].apply(list).tolist()\n","transactions1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-BSfW16CM0GS","executionInfo":{"status":"ok","timestamp":1700881517113,"user_tz":360,"elapsed":2675,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"053b0580-c4cd-471f-fee0-631abd6d6684"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[['Organic Roasted Turkey Breast',\n","  'Gluten Free Whole Grain Bread',\n","  'Plantain Chips',\n","  'Chipotle Beef & Pork Realstick',\n","  'Bartlett Pears',\n","  \"Organic D'Anjou Pears\",\n","  'Asian Pears',\n","  'Banana',\n","  'Honeycrisp Apple',\n","  'Granny Smith Apples',\n","  'Small Hass Avocado',\n","  'Unsweetened Almondmilk',\n","  'Bubblegum Flavor Natural Chewing Gum',\n","  'Uncured Slow Cooked Ham',\n","  'Organic All Day Fresh Deodorant Lavender',\n","  'Chicken Caesar Salad',\n","  'Kitchen Cheese Enchilada',\n","  'Pad Thai',\n","  'Vegetable Lasagna',\n","  'Indian Paneer Tikka',\n","  'Mexican Casserole Bowl',\n","  'Gluten Free Mushroom Risotto Bowl',\n","  'Black Bean Vegetables Burrito',\n","  'Organic Light In Sodium Butternut Squash Soup',\n","  'Birthday Cake Light Ice Cream',\n","  'Mint Chip',\n","  'Pistachio Ice Cream',\n","  'Shelled Pistachios',\n","  'Dark Chocolate Nuts & Sea Salt Bars',\n","  'Organic Cashew Carrot Ginger Soup',\n","  'Organic Hearty Split Pea & Uncured Ham Soup'],\n"," ['Organic Raw Agave Nectar',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Sharp Cheddar Cheese',\n","  'Organic Soba',\n","  '100% Pure Eucalyptus Essential Oil',\n","  'Jalapeno Peppers',\n","  'Tamari Gluten Free Soy Sauce',\n","  'Organic Grape Tomatoes',\n","  'Organic Baby Arugula'],\n"," ['Honeycrisp Apple',\n","  'Panama Peach Antioxidant Infusion',\n","  'Antioxidant Infusions Beverage Malawi Mango',\n","  'Antioxidant Infusions Ipanema Pomegranate Beverage',\n","  '85% Lean Ground Beef',\n","  'Raspberry Lemonade',\n","  'Lactose Free Fat Free Milk',\n","  'Vanilla Coffee Concentrate',\n","  'Organic Dark Brown Sugar'],\n"," ['Shallot',\n","  'Organic SprouTofu Silken Tofu',\n","  'Nutritional Yeast Seasoning',\n","  'Organic Leek',\n","  'Organic Chives',\n","  'Broccoli Rabe',\n","  'Fresh Cauliflower',\n","  'Vidalia Onions',\n","  'Poblano Pepper',\n","  'Oyster Mushrooms',\n","  'Soft Taco Size White Flour Tortillas',\n","  'Organic Avocado',\n","  'Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Organic Coconut Milk',\n","  'Organic Whole White Mushrooms',\n","  'Solid White-No Salt Added Albacore Tuna',\n","  'Organic Green Onions'],\n"," ['Organic Dried Granny Apple Chips',\n","  'Caffeine Free Diet Cola All Natural Soda',\n","  'Classic Original Hommus',\n","  'Raspberry Lime Sparkling Seltzer Water',\n","  'Organic Blackberries',\n","  'Spicy Hummus',\n","  'Cinnamon Raisin Bread',\n","  'White English Muffins',\n","  'Organic Soft Wheat Bread',\n","  'Fat Free Strawberry Yogurt',\n","  'Total 0% with Honey Nonfat Greek Strained Yogurt',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Cherry Pomegranate Greek Yogurt',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'YoKids Strawberry Banana/Strawberry Yogurt',\n","  'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry',\n","  'Whipped Cream Cheese',\n","  'Organic American Cheese Singles',\n","  'Goo Berry Pie Probugs Kefir',\n","  'Almond Non-Dairy Yogurt Made From Real Almonds Plain Low Fat',\n","  'Honey Nut Cheerios',\n","  'Organic Frosted Flakes Cereal'],\n"," ['Grade A Extra Large Eggs',\n","  'Select-A-Size Paper Towels, White, 2 Huge Rolls = 5 Regular Rolls  Towels/Napkins',\n","  'Light Spread Butter Substitute',\n","  'Strawberries',\n","  'Raspberries',\n","  'Ultra Soft Bathroom Tissue Double Rolls'],\n"," ['Small Hass Avocado',\n","  'Lime Italian Sparkling Mineral Water',\n","  'Chocolate Coconut Milk Beverage',\n","  'Organic Strawberries',\n","  'Organic Red Onion',\n","  'Zucchini Noodles',\n","  '90% Lean Ground Beef',\n","  'Mini Peppers',\n","  'Cannellini Beans',\n","  \"Doctor Formulated Probiotics Once Daily Women's 50 Billion Guaranteed Vegetarian Capsules\",\n","  'Air Chilled Organic Boneless Skinless Chicken Breasts'],\n"," ['Pepperidge Farm® Goldfish Xtra Cheddar Baked Snack Crackers',\n","  'Dry Roasted 100 Calorie Packs Almonds',\n","  'Sparkling Water Grapefruit',\n","  'Fridge Pack Cola',\n","  'Sugarfree Energy Drink',\n","  'Zero Calories Berry Nutrient Enhanced Water'],\n"," ['3 Color Deli Coleslaw',\n","  'Pineapple on the Bottom Greek Yogurt',\n","  'Original French Vanilla Yogurt',\n","  'Febreze Lavender Vanilla & Comfort Scent Sweeper Dry Pad Refills',\n","  'Recipe Secrets Onion Soup & Dip Mix',\n","  'Extra Noodle Soup Mix',\n","  'Chicken Bouillon Cubes',\n","  'Natural Goodness 33% Less Sodium Chicken Broth',\n","  'Low Fat Key Lime Blended Greek Yogurt',\n","  'Original Mountain Blueberry Low Fat Yogurt',\n","  '3 Gallon Food Scrap Bag',\n","  'Spinach'],\n"," ['100% Juice, Variety Pack'],\n"," ['Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Organic Strawberries',\n","  'Pure Coconut Water',\n","  'Smartwater',\n","  'Red Raspberries',\n","  'Seedless Red Grapes',\n","  'Grape White/Green Seedless',\n","  'Total 2% Lowfat Greek Strained Yogurt with Peach',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Yogurt, Organic, Lowfat, Strawberry',\n","  'Lowfat Peach Yogurt',\n","  'Vanilla Bean Natural Lowfat Yogurt',\n","  'Forest Berry Natural Lowfat Yogurt',\n","  'Lowfat Blueberry Yogurt',\n","  'Organic Raspberry Lowfat Yogurt',\n","  'Yogurt, Lowfat, Strawberry',\n","  'Organic Peach Lowfat Yogurt'],\n"," ['Oatmeal Crème Pies',\n","  'Bacon Breakfast Bowl',\n","  'Original Fresh Stack Crackers',\n","  'Glazed Lemon Pie',\n","  'Vanilla Caramel Coffee Creamer',\n","  'Caramel Cone Ice Cream',\n","  'Original 0 Calorie Sweetener Packets 115 Count',\n","  'Regular Chips',\n","  'Extra Soft Double Roll Bathroom Tissue',\n","  'Cran-Apple Juice Drink',\n","  'Minis Candy',\n","  'Bars Peanut Butter',\n","  'Original Flavor Bean Dip',\n","  'Pimento Cheese Spread',\n","  'Eagle Brand Sweetened Condensed Milk',\n","  'Mini Oreo Go Pak',\n","  'Pure Life Purified Water'],\n"," ['Distilled Water'],\n"," ['Organic Whole Milk',\n","  'Banana',\n","  'Half & Half',\n","  'Marinara Pasta Sauce',\n","  'Low Fat Plain Yogurt'],\n"," ['Organic Baby Arugula',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Organic Thompson Seedless Raisins',\n","  'Organic AppleApple',\n","  'Sliced Baby Bella Mushrooms',\n","  'Vegetable Medley',\n","  'Organic Roma Tomato',\n","  'Mango Peach Goat Milk Yogurt Baby Food',\n","  'Yogurt, Goat Milk, and Fruit, Banana & Natural Vanilla Bean with Pear, 2+',\n","  'Organic Blueberry Fruit Spread',\n","  'Organic Zucchini',\n","  'Organic Yellow Squash'],\n"," ['Half & Half',\n","  'Spinach',\n","  'Sugar, Organic',\n","  'Penne Rigate #41 Pasta',\n","  'Shredded Parmesan',\n","  'Sustainably Soft Bath Tissue',\n","  'Organic Seasoned Yukon Select Potatoes Hashed Browns',\n","  'Classic Mild Cheddar Macaroni & Cheese',\n","  'Original Coconut Milk Creamer',\n","  'Coconut Milk Non Dairy Frozen Dessert No Sugar Added Mint Chip',\n","  'Dairy Free Coconut Milk Yogurt Alternative',\n","  'Organic Hass Avocado',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips',\n","  'Basil Dish Soap',\n","  'Shredded Mild Cheddar Cheese',\n","  'Moisturizing Yuzu Shower Gel',\n","  'Organic Tomato Cluster',\n","  'Organic Russet Potato'],\n"," ['Rainbow Candy',\n","  'Original Chicken Patties',\n","  '100% Whole Wheat Hamburger Buns',\n","  'Organic Blueberries',\n","  'Country Cheddar Bowl',\n","  'Organic White Chocolate Peanut Butter Cups',\n","  'Curate Cherry Lime Sparkling Water'],\n"," ['Banana',\n","  'Honeycrisp Apple',\n","  'Strawberries',\n","  'Spinach',\n","  'Red Raspberries',\n","  'Seedless Red Grapes',\n","  'Extra Soft Double Roll Bathroom Tissue',\n","  'Guacamole Singles',\n","  'Crunch Berries Cereal',\n","  '2% Reduced Fat Milk',\n","  'Deli Fresh Smoked Turkey Breast',\n","  'Natural Sharp Cheddar Sliced Cheese',\n","  'Smoked Turkey Breast',\n","  'Deli Select Ultra Thin Honey Ham',\n","  'Yellow Mustard',\n","  'Real Mayonnaise',\n","  'Macaroni & Cheese Deluxe Four Cheese Sauce Dinner',\n","  'Chicken Flavor Top Ramen Noodles',\n","  'Fat Free Classic Ranch Dressing',\n","  'Raspberry Cheesecake Gelato',\n","  'Blueberries',\n","  'Green Seedless Grapes',\n","  'Golden Pineapple',\n","  'Traditional Favorites Tomato & Basil Pasta Sauce',\n","  'Original Sour Cream',\n","  'Cream Cheese Bar',\n","  'Honey Barbecue Sauce',\n","  'Fancy Shredded Sharp Cheddar Cheese',\n","  'Naturally Hickory Smoked Thick Cut Bacon',\n","  'Deluxe Beef Stroganoff Hamburger Helper',\n","  'Cinnabon Cinnamon Rolls With Icing',\n","  'Strawberry Shortcake Ice Cream Bars',\n","  'Pepperoni Pizza Frozen Sandwiches'],\n"," ['Original Barbecue Sauce',\n","  'No MSG Cheddar Wurst Smoked Sausage with Wisconsin Cheese',\n","  'Hot Dog Buns Enriched 8 Count',\n","  'Selects Turkey Hot Dogs',\n","  'Southwest Chopped Salad Kit with Dressing',\n","  'Detoxify & Energize with Ginger & Clay Pure Epsom Salt Soaking Solution'],\n"," ['100% Whole Wheat Medium Soft Taco Flour Tortillas',\n","  'Scoops! Tortilla Chips',\n","  'Organic Ketchup',\n","  'MixUps Backyard Cookout Cat Treats',\n","  'Wild Blackberry Gelato',\n","  'Belgian Milk Chocolate Gelato'],\n"," ['Organic Baby Spinach',\n","  'Organic Hass Avocado',\n","  'Natural Artesian Bottled Water',\n","  'Bag of Organic Bananas',\n","  'Lacinato Kale Og',\n","  'Organic  Whole Milk'],\n"," ['Zero Calorie Cola',\n","  'Strawberries',\n","  'Raspberries',\n","  'Organic Blueberries',\n","  'Pink Lady Apples',\n","  'Oranges',\n","  'Tortilla Chips',\n","  'Packaged Grape Tomatoes',\n","  'Creamy Almond Butter',\n","  '49 Flavors Jelly Belly Jelly Beans',\n","  'Sugar Snap Peas'],\n"," ['Mocha Frappucino Chilled Coffee Drink',\n","  'Flavored Bread Crumbs',\n","  'Extra Large Grade A Eggs',\n","  'Chunky Beef with Vegetables & Brown Rice Dog Food',\n","  'Half Tea & Half Lemonade',\n","  '100% Recycled White Unscented Bathroom Tissue',\n","  'Unsweetened Blackberry Water',\n","  'Unsweet Peach Water',\n","  'Water, Unsweet, Crisp Apple',\n","  'Unsweetened Watermelon Water',\n","  'Papaya',\n","  'Fresh Cut Golden Sweet No Salt Added Whole Kernel Corn',\n","  'Peach'],\n"," ['Banana',\n","  'Organic Baby Spinach',\n","  'Organic Blackberries',\n","  'Boneless Skinless Chicken Breasts',\n","  'Boomchickapop Sea Salt Popcorn',\n","  'Organic Red Delicious Apple',\n","  'No Salt Added Gluten-Free Blue Chips Made with Organic Blue Corn',\n","  'Organic Baby Rainbow Carrots',\n","  'Large Lemon'],\n"," ['Half & Half',\n","  'Organic Strawberries',\n","  'Organic Hass Avocado',\n","  'Bag of Organic Bananas',\n","  'Toasted Coconut Almondmilk Blend',\n","  'Berry Medley',\n","  'Apple and Carrot Stage 2 Baby Food',\n","  'Multigrain Cereal',\n","  'Organic Spelt Pretzels',\n","  'Gluten Free Oatmeal Cookie Granola Bars Granola Bars',\n","  'Hand Picked Pomegranate Seeds/Arils',\n","  'Organic Original Hommus',\n","  'Organic Unbleached All-Purpose Flour',\n","  'Cane Sugar',\n","  'Spinach Peas & Pear Stage 2 Baby Food',\n","  'Stage 1 Just Sweet Peas With Mint Baby Food',\n","  '85% Ground Beef Patties',\n","  'Fruit Spread, Deluxe, Strawberry',\n","  'Unsalted Butter',\n","  'Organic Baby Spinach Salad',\n","  'Yobaby Organic Plain Yogurt'],\n"," ['Banana',\n","  'Organic Red Onion',\n","  'Organic Peach Lowfat Yogurt',\n","  'Organic Hothouse Cucumbers',\n","  'Large Lemon',\n","  'Organic Jasmine Rice',\n","  'Pizza Sauce',\n","  'Organic Brown Rice',\n","  'Organic Baby Spring Mix',\n","  'Chicken Drumsticks',\n","  'Organic Unsalted Butter',\n","  'Organic Celery Hearts',\n","  'Organic Granny Smith Apple',\n","  'Organic Cripps Pink Apples',\n","  'Apple Honeycrisp Organic',\n","  'Pink Cripps Apple'],\n"," ['Organic Baby Spinach',\n","  'Organic Hass Avocado',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Bag of Organic Bananas',\n","  'Organic Cripps Pink Apples',\n","  'Organic Bosc Pear',\n","  'Organic Cucumber',\n","  'Organic Small Bunch Celery',\n","  'Organic Apple Juice',\n","  'Spinach Pizza',\n","  'Pure Sparkling Water',\n","  'Dried Mango',\n","  'Burrata alla Panna',\n","  'Red Seedless Grapes',\n","  \"Newman O's Creme Filled Chocolate Cookies\",\n","  'Macaroni Shells & White Cheddar Cheese'],\n"," ['Seedless Red Grapes',\n","  'Dried Mango',\n","  'Organic California Style Sprouted Bread',\n","  'Sinfully Sweet Campari Tomatoes',\n","  'Feta Cheese Crumbles',\n","  'Almonds & Sea Salt in Dark Chocolate',\n","  'Organic Potatoes',\n","  'Organic After Dark Chocolate Frozen Nonfat Yogurt'],\n"," ['Soda', 'Bag of Organic Bananas', 'Clementines'],\n"," ['Banana'],\n"," ['Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Organic Garlic',\n","  'Petit Suisse Fruit',\n","  'Authentic French Brioche',\n","  'Organic Reduced Fat Milk',\n","  'Bunny-Luv Fresh Organic Carrots',\n","  'Gogo Squeez Organic Apple Strawberry Applesauce on the Go',\n","  'Organic Eggs Large',\n","  'Organic Polenta',\n","  'Bratwurst Sausage',\n","  'Lettuce Medley',\n","  'Les Petites Fromage Garlic & Herb',\n","  'Lemon Verbena Dish Soap',\n","  'Authentic French Chocolate Swirl Brioche',\n","  'Lavender Multi-Surface Everyday Cleaner',\n","  'Organic Whole Kernel Sweet Corn No Salt Added',\n","  'Apricot-Raspberry Preserves',\n","  \"Spot's Stew Dry Cat Food Formula Chicken Recipe\",\n","  'Sea Salt Baked Potato Chips',\n","  'Cinnamon',\n","  'Strawberry Preserves',\n","  'Apricot Preserves',\n","  'Hazelnut Bite Size Wafer Cookies',\n","  'Cookies, Chocolate Chip Walnut',\n","  'Unsalted Beurre de Baratte AOP Butter'],\n"," ['Organic Reduced Fat Milk', 'Chicken Noodle Soup'],\n"," ['Sparkling Water Beverage Black Cherry',\n","  'Mandarin Oranges',\n","  'Dairy Free Unsweetened Coconut Milk'],\n"," ['Organic Half & Half',\n","  'Bag of Organic Bananas',\n","  'Pink Lady Apples',\n","  'French Vanilla Creamer',\n","  'Trail Mix',\n","  'Organic Simply Naked Pita Chips',\n","  'Peanut Chocolate Candies'],\n"," ['Organic Harmony Blend Tri-Color',\n","  'ZBar Organic Chocolate Brownie Energy Snack',\n","  'Organic Ezekiel 4:9 Sesame Bread'],\n"," ['Organic Avocado',\n","  'Organic Cilantro',\n","  'Organic Red Onion',\n","  'Bag of Organic Bananas',\n","  'Freshly Squeezed Orange Juice',\n","  'Tortilla Chips, Mexican Kitchen Style, Salted',\n","  'Wild Wonders Gourmet Medley Tomatoes',\n","  'French Green Beans',\n","  'Black Peppercorns',\n","  'Organic Broccoli',\n","  'Sea Salt Potato Chips',\n","  'Sea Salt & Vinegar Potato Chips'],\n"," ['Organic Zucchini',\n","  'Bag of Organic Bananas',\n","  'Lacinato Kale Og',\n","  'Organic Red Delicious Apple',\n","  'Organic Frozen Mango Chunks',\n","  'Organic Yams',\n","  'Organic Lemon',\n","  'Organic Celery',\n","  'Organic Basil',\n","  'Organic Yellow Onion',\n","  'Organic Yukon Gold Potato',\n","  'Organic Vegetable Broth',\n","  'Organic Diced Tomatoes',\n","  'Organic Bunch Beets',\n","  'Mellow White Miso',\n","  'Organic Raspberries',\n","  'Organic Navel Orange'],\n"," ['Banana',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Bread, Country Buttermilk',\n","  'Coconut Water, Pure Organic',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Bosc Pear',\n","  'Eggo Blueberry Waffles Family Pack'],\n"," ['Sea Salt Soiree Intense Dark Chocolate Squares',\n","  'Gluten Free Honey Almond Granola',\n","  'Organic Graham Crunch Cereal',\n","  'Organic Heritage Flakes Cereal',\n","  \"Annie's Bunny Fruit Snacks Variety\"],\n"," ['Organic Half & Half',\n","  'Banana',\n","  'Kitchen Cheese Enchilada',\n","  'Organic Baby Spinach',\n","  'Cinnamon Raisin Bread',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Organic Thompson Seedless Raisins',\n","  'Organic Hass Avocado',\n","  'Organic Black Beans',\n","  'Mild Diced Green Chiles',\n","  'Organic Milk',\n","  'Organic Lemon',\n","  'Organic Carrot Bunch',\n","  'Thin & Light Tortilla Chips',\n","  'Organic Large Grade AA Omega-3 Eggs',\n","  'Total 2% All Natural Plain Greek Yogurt',\n","  'Natural Classic Pork Breakfast Sausage',\n","  'Gluten Free Original Granola',\n","  'Sour Batard',\n","  'Organic Salted Butter',\n","  'Organic Cream Cheese Bar',\n","  'Margherita Pizza',\n","  'Sonoma Traditional Flour Tortillas 10 Count',\n","  'Mild Green Chile Enchilada Sauce',\n","  'Monterey Jack Cheese',\n","  'Organic Low Sodium Chicken Broth',\n","  'Pure Cane Confectioners Powdered Sugar',\n","  'Organic Vanilla Extract',\n","  'Organic Whole Wheat Bread',\n","  'Shredded Mozzarella',\n","  'Organic Whole String Cheese',\n","  'Mild Cheddar Cheese Sticks',\n","  'Green Bell Pepper',\n","  'Active Dry Yeast'],\n"," ['Chocolate Peanut Butter Crisp Energy Bar',\n","  'Ultra Assorted Fruit Antacid Tablets',\n","  'Yorkshire Gold Black Tea',\n","  'Green Tea, Organic',\n","  'Organic Navel Oranges',\n","  'Organic Green Seedless Grapes',\n","  'Grapefruit Juice',\n","  'Lemonade'],\n"," ['Unsweetened Almondmilk',\n","  'Organic Thompson Seedless Raisins',\n","  'Large Lemon',\n","  'Organic Yellow Onion',\n","  'Coconut Almond Unsweetened Creamer Blend',\n","  'Roman Raspberry Sorbetto',\n","  'Mediterranean Mint Gelato',\n","  'Gochujang Fermented Sesame Chile Paste',\n","  'Spaghetti',\n","  'Limes',\n","  'Greek Extra Virgin Olive Oil',\n","  'Grated Parmesan',\n","  'All Purpose Crushed Tomatoes',\n","  'Organic Large Brown Eggs',\n","  'Organic Crushed Fire Roasted Tomatoes',\n","  'Semolina Flour',\n","  'Frankfurters Vegetarian',\n","  'Organic Flax Plus Multibran Flakes'],\n"," ['Organic Blueberries',\n","  'Organic Frozen Mango Chunks',\n","  'Organic Raspberries',\n","  'Whole Wheat English Muffins',\n","  'Chipotle Chicken Burrito',\n","  'Organic Fresh Squeezed Orange Juice',\n","  'Thin Crust Margherita Pizza with Fresh Mozzarella & Basil',\n","  'Organic Broccoli Florets',\n","  'Organic Short Grain Brown Rice',\n","  'Gel Aloe Vera 98%',\n","  'Organic Mini Sandwich Crackers Peanut Butter'],\n"," ['Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Organic Strawberries',\n","  'Orange Bell Pepper',\n","  'Yellow Onions',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Bag of Organic Bananas',\n","  'Organic Whole String Cheese',\n","  'Organic Uncured Sliced Black Forest Ham',\n","  'Roasted Turkey Breast',\n","  'Sweet Italian Chicken Sausage',\n","  'Sliced Portabella Mushrooms',\n","  'Romaine Lettuce',\n","  'Bottled Water',\n","  'Natural Premium Coconut Water'],\n"," ['Lowfat Milk'],\n"," ['Organic Roasted Sliced Chicken Breast',\n","  'Vegan Pesto Pasta',\n","  'Green Tea With Ginseng and Honey',\n","  'Smoked Turkey Breast Slices',\n","  'Uncured Genoa Salami',\n","  'Masala Veggies Paneer',\n","  'Aloo Gobi Chana Masala & Biryani Bento',\n","  'Spicy Salmon Avocado Roll',\n","  'Saag Paneer & Biryani Bento',\n","  'Organic Chopped BBQ Ranch Salad Kit',\n","  'Soup, Golden Quinoa and Kale'],\n"," ['Hass Avocados',\n","  'Organic Lemonade',\n","  'Pure & Natural Sour Cream',\n","  'Medium Picante Salsa'],\n"," ['Banana',\n","  'Organic Blackberries',\n","  'Strawberries',\n","  'Raspberries',\n","  'Ultra Strong Bathroom Tissue',\n","  'Coffee, Medium Roast, Original Blend, K-Cup Packs',\n","  'Caribou Blend Coffee K-Cups',\n","  'Signature Blend K-Cup Packs Coffee',\n","  'Small Macintosh Apple',\n","  'Harvest Best in 100% Fruit Juice Mandarin Oranges',\n","  'Sliced Peaches In 100% Fruit Juice',\n","  'Special K Red Berries Cereal',\n","  'Corn Blue Tortilla Chips',\n","  'Original Potato Crisps',\n","  'Brownberry 100% 12 Grain Bread',\n","  'Plain Pre-Sliced Bagels',\n","  'Dobie Cleaning Pad'],\n"," ['Organic Large Extra Fancy Fuji Apple',\n","  'Organic Hass Avocado',\n","  'Shredded Mild Cheddar Cheese',\n","  'Unsalted Butter',\n","  'Organic Small Bunch Celery',\n","  'Organic Yellow Onion',\n","  'Organic Penne Rigate',\n","  'Organic Red Bell Pepper',\n","  'Original Dairy Free Coconut Milk'],\n"," ['Small Hass Avocado',\n","  'Sharp Cheddar Cheese',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Scoopable Scented Clumping Cat Litter',\n","  'Cello Tomatoes',\n","  'California Heirloom Monviso Peeled Garlic',\n","  'Cracked Wheat Sourdough Loaf',\n","  'Chicken Broth',\n","  'Butternut Squash',\n","  'Vegetarian Refried Beans',\n","  'Black Beans',\n","  'Bag of Lemons',\n","  'Cauliflower',\n","  'Vegetable Classics Lentil Soup',\n","  'Medium Suprema Salsa',\n","  \"Medium Thick'n Chunky Verde Salsa\",\n","  '100% Whole Wheat Flour Tortillas'],\n"," ['Banana',\n","  'Organic Avocado',\n","  'Organic Strawberries',\n","  'Organic Red Onion',\n","  'Total 2% Lowfat Greek Strained Yogurt with Peach',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Organic Cucumber',\n","  'Organic Small Bunch Celery',\n","  'Organic Unsweetened Almond Milk',\n","  'Organic Red Bell Pepper',\n","  'Oven Roasted Turkey Breast',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Cara Cara Navel Orange',\n","  'Broccoli Crown',\n","  'Organic Romaine Lettuce',\n","  'Total 2% Lowfat Greek Strained Yogurt With Blueberry',\n","  'Cantaloupe',\n","  'Large Brown Eggs',\n","  'Frozen Organic Wild Blueberries',\n","  'Organic Riced Cauliflower',\n","  'Greek Whole Milk Blended Blueberry Yogurt',\n","  'Original Hummus'],\n"," ['Strawberries',\n","  'Scoops! Tortilla Chips',\n","  'Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Green Bell Pepper',\n","  'Uncured Genoa Salami',\n","  'Chicken & Apple Smoked Chicken Sausage',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Mini Sweet Peppers',\n","  'Honey Maid Cinnamon Grahams',\n","  'Reduced Fat 4 Cheese Mexican Shredded Cheese',\n","  'Orange Juice 100% Juice',\n","  'Organic Fuji Apple',\n","  'Natural Extra Sharp Cheddar Cheese',\n","  'Basmati Ready Rice',\n","  '100% Whole Wheat Bread',\n","  'Thick Medium Cheddar Slices',\n","  'Original Club Crackers',\n","  'Tortillas, Whole Wheat, 96% Fat Free, Medium, Soft Taco',\n","  'Applewood Smoked Center Cut Uncured Bacon',\n","  'Organic Extra Virgin Olive Oil',\n","  'Best Original Baked Beans',\n","  'Organic Whipped Naturally Buttery Spread',\n","  'Carb Balance Small Fajita Whole Wheat Tortillas'],\n"," ['Red Plastic Cups', 'Orange 100% Juice'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Strawberries',\n","  'Boneless Skinless Chicken Breasts',\n","  'Large Lemon',\n","  'Organic Cucumber',\n","  'Organic Yellow Onion',\n","  'Organic Low Sodium Chicken Broth',\n","  'Organic Short Grain Brown Rice',\n","  'Organic Red Bell Pepper',\n","  'Carrots',\n","  'Peeled Garlic',\n","  'Organic Ginger Root',\n","  'Strawberry Lemon Electrlyte Tab',\n","  'Beverage Tab Wild Berry',\n","  'Hass Avocado',\n","  'Yellow Bell Pepper',\n","  'Tuna, Solid Pack Light',\n","  'Plus Cranberry Almond + Antioxidants with Macadamia Nuts Bar',\n","  'Pomegranate Blueberry Pistachio Plus Antioxidants Fruit & Nut Bar',\n","  'Fruit & Nut Bar Blueberry Vanilla & Cashew'],\n"," ['Unscented 2-Ply Double Roll Bathroom Tissue',\n","  'Select-A-Size White Paper Towels',\n","  'Ultra Apple Blossom Antibacterial Dish Liquid',\n","  'Ultra Original Scent Dishwashing Liquid',\n","  \"Puffs Flamin' Hot Cheese Flavored Snacks\"],\n"," ['Uncured Slow Cooked Ham',\n","  'Apple Honeycrisp Organic',\n","  'Mini Original Babybel Cheese',\n","  'Organic Good Seed Bread',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Real Guacamole',\n","  'Organic Baby Carrots',\n","  'Strawberry Protein Shake',\n","  'Classic Peanut Butter',\n","  'Chicken Tikka Masala Samosas with Cilantro Chutney',\n","  'Raspberry Preserves',\n","  'Flax Plus Organic Pumpkin Flax Granola',\n","  'Mixed Berry English Tea Scones',\n","  'Organic Spinach & Feta Dinner Sausage',\n","  'Organic Chicken & Apple Sausage'],\n"," ['Nutri Grain Bars Multi Pack'],\n"," ['Sugar Snap Peas',\n","  'Organic Simply Naked Pita Chips',\n","  'Organic Unsweetened Almond Milk',\n","  'Hass Avocados',\n","  'Organic Plain Yogurt',\n","  'Bean & Cheese Burrito',\n","  'Sweet Kale Salad Mix',\n","  'Pure Cane Granulated White Sugar',\n","  'Organic Tortilla Chips',\n","  'Soy Sauce',\n","  'Naked Green Machine Boosted Juice Smoothie'],\n"," ['Organic Creamy Peanut Butter',\n","  'Almond Milk Blueberry Yogurt',\n","  'Organic Green Lentils',\n","  'Honey Yoghurt',\n","  'Blueberry Yoghurt',\n","  'Organic YoKids Smoothie Strawberry Banana Lowfat Yogurt',\n","  'Organic Strawana Probugs Kefir',\n","  'Liquid Teething Relief',\n","  'Organic Maple Teething Biscuits',\n","  'Almond Milk Peach Yogurt'],\n"," ['Organic Whole Milk',\n","  'Banana',\n","  'Large Lemon',\n","  'Uncured Genoa Salami',\n","  'Lime Sparkling Water',\n","  'Florida Orange Juice With Calcium & Vitamin D',\n","  'Organic Grade A Large Brown Eggs',\n","  'Honey Greek Yogurt',\n","  'Kidz All Natural Baked Chicken Nuggets'],\n"," ['Strawberries',\n","  'Organic Tomato Cluster',\n","  'Organic Basil',\n","  'Grated Parmesan',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Lemon Hummus',\n","  'Pita Chips, Simply Naked',\n","  'Frozen Broccoli Florets'],\n"," ['Organic Whole Milk',\n","  'Half & Half',\n","  'Organic Baby Broccoli',\n","  'Roasted Giant Corn',\n","  'Crepes',\n","  'Organic Plain Whole Milk Yogurt'],\n"," ['Bartlett Pears',\n","  'Organic Strawberries',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Organic Green Seedless Grapes',\n","  'Organic Gala Apples',\n","  'Lowfat 2% Milkfat Cottage Cheese',\n","  'Vitamin D Organic Milk',\n","  'Grade A Large Brown Eggs',\n","  'Grands Homestyle Butter Tastin Biscuit',\n","  'Extralean Ground Turkey Breast',\n","  'Original Crescent Rolls',\n","  'Unsalted Pure Irish Butter'],\n"," ['Unsalted Butter Quarters'],\n"," ['Organic Low Fat Milk',\n","  \"Crunchy Oats 'n Honey Granola Bars\",\n","  'Black Seedless Grapes'],\n"," ['Seedless Red Grapes',\n","  'Authentic French Brioche',\n","  'Organic Vitality Snack Wild Raspberry',\n","  'Dha Omega 3 Vitamin D Milk',\n","  'Cold-pressed, Deliciously Hydrating Watermelon Water',\n","  'Marinara Sauce'],\n"," ['Pure Coconut Water',\n","  'Organic Cripps Pink Apples',\n","  'Marinara Sauce',\n","  'Organic Lactose Free 1% Lowfat Milk',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Plain Non-Fat Greek Yogurt',\n","  'Select-A-Size White Giant Roll Paper Towels',\n","  'Bathroom Tissue Softness & Strength, Double Rolls',\n","  'Cold Pressed Fuji Apple Juice',\n","  'Parsley, Italian (Flat), New England Grown',\n","  'Organic Fancy Shredded Mozzarella Cheese',\n","  'Baked Beans with Tomato Sauce',\n","  'Dark Chocolate Sea Salt Granola Bites',\n","  'Quart Storage Bags'],\n"," ['Organic Roasted Sliced Chicken Breast',\n","  'Chocolate Lowfat Milk',\n","  'Authentic French Brioche Rolls'],\n"," ['Organic Blackberries',\n","  'Lowfat Blueberry Yogurt',\n","  'Organic Raspberry Lowfat Yogurt',\n","  'Organic Peach Lowfat Yogurt',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Prosciutto di San Daniele',\n","  'Sourdough Bread',\n","  'Chocolate Chip Granola'],\n"," ['Organic Peeled Whole Baby Carrots',\n","  'Almonds & Sea Salt in Dark Chocolate',\n","  'Roasted Red Pepper Hummus',\n","  'Pita Crisps Simply Naked',\n","  'Gluten Free Peanut Butter Dark Chocolate Chewy With a Crunch Granola Bars',\n","  'Peanut Butter Gluten Free Breakfast Bars',\n","  'Gala Apple',\n","  '60 Minute IPA',\n","  'Plain Almond Milk Yogurt',\n","  'Nutrisca Chicken And Chickpea Recipe Dog Food',\n","  'Sensitive Toilet Paper',\n","  'Cherry Garcia Frozen Yogurt',\n","  'Milk and Cookies Ice Cream'],\n"," ['Gluten Free Sliced Mountain White Bread',\n","  'Frosted Chocolate Cup Cakes  with Creamy Filling'],\n"," ['Bag of Organic Bananas',\n","  'California Orange Juice',\n","  'Almondmilk Creamer, Vanilla',\n","  'Organic Vanilla Bean Ice Cream',\n","  'Organic Lactose Free Whole Milk',\n","  'Honey Bunny Grahams',\n","  'Organic  Dried & Unsulfured Orchard Select Apricots',\n","  'Organic Pitted Prunes'],\n"," ['Orange Bell Pepper',\n","  'Grade A Large Brown Eggs',\n","  'G2 Low Calorie Lemon Lime Sports Drink',\n","  'Red Seedless Grapes Bunch',\n","  'G2 Grape Sports Drink',\n","  'Provolone Cheese Slices',\n","  'Skim Milk',\n","  '2% Reduced Fat Ultra-Filtered Chocolate Milk',\n","  'Select Vitamin D Milk',\n","  'Tricolor Penne',\n","  '100% Oatnut Bread',\n","  'Natural Chunky Peanut Butter',\n","  'Shredded Carrots',\n","  'Mild Salsa',\n","  'Sparkling Lemon Water',\n","  'Extra Lean Ground Turkey Breast',\n","  '24/7 Performance Cat Litter',\n","  'Vine Ripe Tomatoes',\n","  'Avocado',\n","  'Whole Mushrooms'],\n"," ['Organic Strawberries',\n","  'Organic Hass Avocado',\n","  'Shredded Mild Cheddar Cheese',\n","  'Organic Tomato Cluster',\n","  'Organic Chicken Strips',\n","  'Bunched Cilantro',\n","  'Organic Raspberries',\n","  'Whole Organic Omega 3 Milk',\n","  'Organic Reduced Fat Omega-3 Milk',\n","  'Organic 7 Grain with Flax Bread',\n","  'Organic Mixed Vegetables',\n","  'Frozen Peaches',\n","  'Organic Paprika',\n","  'Slices Cheddar Cheese',\n","  'Organic Homestyle Mini Waffles',\n","  'Naturals Chicken Nuggets',\n","  'Organic California White Basmati Rice'],\n"," ['Organic Baby Spinach',\n","  'Sustainably Soft Bath Tissue',\n","  'Red Vine Tomato',\n","  'Lemon Ginger Sparkling Probiotic Drink',\n","  'Everything Inside Bagels',\n","  'Organic Grapefruit Juice',\n","  'Dairy Free Cream Cheese Style Spread Chive & Onion',\n","  'Vanilla Almond Breeze',\n","  'Organic Brown Rice And Wakame Noodles',\n","  'Salad Dressing & Dip, Ranch Chia'],\n"," ['Marshmallow Creme',\n","  'Go Fresh Cool Moisture Beauty Bar Soap',\n","  'Reduced-fat Soft Cream Cheese',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Oikos Triple Zero Greek Vanilla Yogurt Cups',\n","  'Simple Favorites Chicken Enchilada Suiza',\n","  'Smart Ones Classic Favorites Mini Rigatoni With Vodka Cream Sauce',\n","  'Triscuit Baked Whole Grain Wheat Rosemary & Olive Oil',\n","  'Cheese Shredded Sharp Cheddar Reduced Fat 2%',\n","  'Reduced Fat Sliced Swiss Cheese',\n","  'Olive Tapenade Hummus',\n","  'Organic Pita',\n","  'Dry Roasted Lightly Salted Peanuts',\n","  'All Natural Classic Guacamole',\n","  'Diced Green Peppers',\n","  '100% Natural Diced Tomatoes',\n","  '100% Natural Tomato Sauce',\n","  'Thin And Crispy Corn Tortilla Chips'],\n"," ['Organic Baby Arugula',\n","  'Organic Baby Spinach',\n","  'Red Peppers',\n","  'Romaine Hearts',\n","  'Organic Iceberg Lettuce',\n","  'Organic Whole Wheat Pita',\n","  'Organic White Pita Bread',\n","  'Lentil Filled Bolani 2 Pack',\n","  'Organic Mung-Bean Sprouts',\n","  'Organic Broccoli Crowns',\n","  'Calcium Enriched 100% Lactose Free Fat Free Milk'],\n"," ['Banana',\n","  'Selects Turkey Hot Dogs',\n","  'Roman Raspberry Sorbetto',\n","  'Mediterranean Mint Gelato',\n","  'Unsweetened Ice Tea',\n","  \"Premium Breadsticks 'N Cheese Dip\",\n","  '4% Milkfat Small Curd Grade A Pasteurized Cottage Cheese',\n","  'Mozzarella Sticks',\n","  'Sea Salt Caramel Gelato',\n","  'Mini Double Caramel Ice Cream Bars',\n","  'Ultra Strong Charmin Ultra Strong Toilet Paper',\n","  'Medium Scarlet Raspberries',\n","  'Natural Fresh Goat Cheese'],\n"," ['Mint Chip',\n","  'Seedless Red Grapes',\n","  'Soft Baked Double Chocolate Brownie Cookies',\n","  'Plain Breadsticks',\n","  'Cran Raspberry Sparkling Water'],\n"," ['Natural Chicken & Sage Breakfast Sausage',\n","  'Premium Epsom Salt',\n","  'Good Belly Probiotics Juice Drink Blueberry Acai Flavor',\n","  'Moroccan Argan Oil + Argan Stem Cell Triple Moisture Conditioner',\n","  'Ice Cream Sandwiches Vanilla'],\n"," ['Clementines, Bag'],\n"," ['Banana',\n","  'Sparkling Water Grapefruit',\n","  'Organic Broccoli Florets',\n","  'Chicken & Apple Smoked Chicken Sausage',\n","  'Spinach and Arugula Salad',\n","  'Sliced Almonds',\n","  'Fancy Eggplant'],\n"," ['Sweet Potato Fries with Sea Salt'],\n"," ['Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Shredded Mild Cheddar Cheese',\n","  'Burrata alla Panna',\n","  'Uncured Genoa Salami',\n","  'Total 2% Lowfat Greek Strained Yogurt With Blueberry',\n","  'Honey Nut Chex Cereal',\n","  'Boneless Skinless Chicken Breast',\n","  'Organic Bunny Fruit Tropical Treat Fruit Snacks',\n","  'Half Baked® Ice Cream',\n","  'Vanilla, Chocolate, Strawberry Ice Cream',\n","  \"Fusion Power Men's Razor Blade Refills\",\n","  'Foamy Sensitive Skin Shaving Cream',\n","  'Classic Original Scent Deodorant',\n","  'Peanut Butter Cereal',\n","  'European Style Unsalted Butter',\n","  'Grinder Black Peppercorn',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  'Organic Baby Lettuces',\n","  'Celery Root',\n","  'Body Clear Body Wash',\n","  'De Mexico',\n","  'Skin Relief Body Wash Fragrance Free',\n","  'Roma Tomato',\n","  'Chopped Tomatoes',\n","  '50% Less Sodium Chili Beans',\n","  'Hampshire 100% Natural Sour Cream',\n","  'Original Sauce'],\n"," ['Organic SprouTofu Silken Tofu',\n","  'Strawberries',\n","  'California Sourdough Bread',\n","  'Organic Bunch Beets',\n","  'Thin & Light Tortilla Chips',\n","  'Marinara Sauce',\n","  'Organic Greek Whole Milk Blended Strawberry Yogurt',\n","  'Corn Chips',\n","  'Original Roasted Seaweed Snacks',\n","  'Tumeric Golden Milk Elixir',\n","  'Organic Premium Raspberry Spread',\n","  'Organic Recipe Granola',\n","  'Bananas',\n","  '6 OZ LA PANZANELLA CROSTINI ORIGINAL CRACKERS',\n","  'Organic Low Fat Minestrone Soup',\n","  'Pasture Raised Eggs',\n","  'SprouTofu Medium Soft',\n","  'Unsweetened Soymilk',\n","  'All Natural Marinara Sauce',\n","  'Italian Batard',\n","  'Mild Salsa Roja',\n","  'Medium Salsa Roja',\n","  'Morning Oat Crunch',\n","  'Organic Guava',\n","  'Kosher Salt',\n","  'Grapefruit Sparkling Water'],\n"," ['Chocolate Croissant'],\n"," ['Indian Paneer Tikka',\n","  '100% Raw Coconut Water',\n","  'Lowfat Peach Kefir Probiotic Cultured Milk Smoothie',\n","  'Super Clump Unscented Cat Litter',\n","  'Shredded Turkey Fare Cat Food',\n","  'Dark Chocolate with Whole Hazelnuts',\n","  'Fresh Cut Cauliflower & Broccoli Steam in Bag',\n","  'Veggie Loaf & Mashed Potatoes Entrée',\n","  'Pet High Traffic Area Foam Easy Clean Pro Refill Cleaner',\n","  'Pinot Grigio',\n","  'Platinum Power Clean™ Refreshing Rain™ Dishwashing Liquid'],\n"," ['Unsweetened Almondmilk',\n","  'Chicken Flavor Top Ramen Noodles',\n","  'Bag of Organic Bananas',\n","  'Organic SprouTofu Super Firm Tofu',\n","  'Organic Mango',\n","  'Original Cereal',\n","  'Whole Wheat Fresh Stack Crackers'],\n"," ['Cinnamon Toast Crunch',\n","  'Bag of Organic Bananas',\n","  'Organic Salted Butter',\n","  'Organic Lemonade',\n","  'Organic Extra Virgin Olive Oil',\n","  'Organic Tortilla Chips',\n","  'Shredded Mexican Blend Cheese',\n","  'Chocolate Chip Cookies'],\n"," ['Creamy Almond Butter',\n","  'Sea Salt Caramel Gelato',\n","  'Sesame Whole Wheat Crackers',\n","  'Organic Wheat-Free & Gluten-Free Original Crackers',\n","  'Organic Strawberry Ice Cream',\n","  'Pretzel Crisps Original Deli Style Pretzel Crackers',\n","  'Oatmeal Raisin Cookies'],\n"," ['Green Seedless Grapes',\n","  'Pink Lady Apples',\n","  'Red Seedless Grapes',\n","  'Extra Fancy Unsalted Mixed Nuts',\n","  'Non-Scratch Scrub Sponges',\n","  'Honey Bunches of Oats Roasted Oats'],\n"," ['Organic Whole Milk',\n","  'Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Strawberries',\n","  'Air Chilled Organic Boneless Skinless Chicken Breasts',\n","  'Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips',\n","  'Organic Garlic',\n","  'Organic Granny Smith Apple',\n","  'Macaroni Shells & White Cheddar Cheese',\n","  'Organic Bunch Beets',\n","  'Organic Navel Orange',\n","  'Asparagus',\n","  'Total 2% Lowfat Greek Strained Yogurt With Blueberry',\n","  'Carrots',\n","  'Hummus Tahini',\n","  'Dark Chocolate Almond & Coconut Fruit & Nut Bar',\n","  '100% Carrot 100% Vegetable Juice',\n","  'Basil',\n","  'Organic Red Cherry Tomato',\n","  'Organic Large Grade A Brown Eggs',\n","  'Coconut Almond Creamer Blend',\n","  'Dubliner Wedge Pre Cut Cheese',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Orange Peel In Dark Chocolate Bar',\n","  'Raspberries Dark Chocolate Bar',\n","  'Sweet Potato Tortilla Chips',\n","  'Kefir Cultured Strawberry Milk Drink',\n","  'Total 2% with Raspberry Pomegranate Lowfat Greek Strained Yogurt',\n","  'Blackberry Yogurt'],\n"," ['No Salt Added Black Beans', 'Organic Coconut Granola MacroBar'],\n"," ['Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Organic Coconut Milk',\n","  'Organic Baby Carrots',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Cold-Milled Ground Flaxseed',\n","  'Organic  Unsweetened & Salt Free Sunflower Seed Butter',\n","  'Walnut Halves & Pieces',\n","  'Spring Water'],\n"," ['Organic Whole Grassmilk Milk',\n","  'Purity Farms Ghee Clarified Butter',\n","  'Panko Bread Crumbs'],\n"," ['Liquid Egg Whites'],\n"," ['Organic Strawberries',\n","  'Organic Tomato Cluster',\n","  'Toasted Coconut Almondmilk Blend',\n","  'Organic Ezekiel 4:9 Sesame Bread',\n","  'Almond Milk Strawberry Yogurt',\n","  'Cantaloupe',\n","  'Thick Medium Cheddar Slices',\n","  'Organic Marinara Pasta Sauce',\n","  'Almond Milk Peach Yogurt',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Mild Salsa',\n","  'Organic Mung-Bean Sprouts',\n","  'Muffins, Flax, Wild Blueberry',\n","  'Spinach And Ricotta Ravioli',\n","  'Mushroom And Ricotta Ravioli',\n","  'Cinnamon Raisin Sprouted Whole Grain Cereal',\n","  'Sprouted Grain Bread Cinnamon Raisin',\n","  'Organic Tomato Basil Pasta Sauce',\n","  'Shredded 3 Cheese Blend',\n","  'Organic Butterhead (Boston, Butter, Bibb) Lettuce',\n","  'Light CocoWhip! Coconut Whipped Topping'],\n"," ['Organic Red Onion',\n","  'Organic Garlic',\n","  'Organic Extra Firm Tofu',\n","  'Jalapeno',\n","  'Guacamole',\n","  'Fresh Salsa',\n","  'Fresh Medium Salsa',\n","  'Garlic Hummus'],\n"," ['Banana',\n","  'Mojo Chocolate Almond Coconut Bar',\n","  'Mojo Peanut Butter Bar',\n","  'Crunchy Peanut Butter Energy Bar',\n","  'Cool Mint Chocolate',\n","  'Berry Pomegranate Chia Energy Bar',\n","  'Chocolate Brownie Energy Bar',\n","  'Blueberry Crisp Energy Bar',\n","  'Nut Butter Coconut Almond Butter'],\n"," ['Organic Baby Spinach',\n","  'Organic Strawberries',\n","  'Shredded Parmesan',\n","  'Organic Black Beans',\n","  '2% Reduced Fat Milk',\n","  'Organic Brown Rice',\n","  'Apple Honeycrisp Organic',\n","  'Organic Navel Orange',\n","  'Organic Extra Firm Tofu',\n","  'Hass Avocado',\n","  'Blueberry Yoghurt',\n","  'Marinara Sauce',\n","  'Red Vine Tomato',\n","  'Beyond Chicken Southwest Style Strips',\n","  'Extra Sharp White Cheddar',\n","  'Raspberry Yoghurt',\n","  'Farmstand Flaxbread Egg and Vegetarian Bacon Breakfast Sandwich',\n","  'Organic Whole Peeled Baby Carrots',\n","  'California Veggie Burger',\n","  'Sour Cream',\n","  'Organic Kosher Dill Pickles',\n","  'Asian Sauces, Gourmet, Thai Peanut'],\n"," ['Banana',\n","  'Organic Baby Spinach',\n","  'Pure Coconut Water',\n","  'Yellow Onions',\n","  'Blueberries',\n","  'Large Lemon',\n","  'Organic Cucumber',\n","  'Chicken Broth',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Roma Tomato',\n","  'Fresh Ginger Root',\n","  'Red Onion',\n","  'Mixed Berries',\n","  'Condensed Cream of Chicken Soup',\n","  'Condensed Cream of Mushroom Soup',\n","  'Spam Original Luncheon Meat',\n","  'Ready to Eat Tuna Salad Original Deli Style',\n","  'Hot Chili Flavor Ramen Noodle Soup',\n","  'Chicken Flavor Ramen Noodle Soup',\n","  'Pork Flavor Ramen Noodle Soup',\n","  'Hot & Spicy Noodle Bowl Soup',\n","  'Japanese Style Noodles & Chicken Flavored Sauce',\n","  'Jumbo Garlic',\n","  'Napa Cabbage',\n","  'Blackberries',\n","  'Sweet Potato Yam',\n","  'Kale Greens Bunch'],\n"," ['Banana',\n","  'Natural Goodness 33% Less Sodium Chicken Broth',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Organic Tortilla Chips',\n","  'Mild Salsa',\n","  'Vine Ripe Tomatoes',\n","  'Corn Chips',\n","  'Sour Cream',\n","  'Hard Cooked Eggs',\n","  'Organic Salted Individually Wrapped Quarters Butter',\n","  'Chopped Garlic',\n","  'Freshly Grated Cheese, Parmesan',\n","  'Tartar Protection Whitening Toothpaste Cool Mint Paste',\n","  'Organic Tomato Sauce',\n","  'Black Beans No Salt Added',\n","  'Organic Kidney Beans Low Sodium',\n","  'Chili Powder',\n","  '30% Less Sodium Taco Seasoning Mix',\n","  'White Corn Tortillas',\n","  'Crimini Delight Mushrooms',\n","  'Chopped Ginger',\n","  'Cole Slaw',\n","  'Lite Balsamic Dressing',\n","  'Organic Green Leaf Lettuce',\n","  'Kosher Dill Pickle Spears'],\n"," ['Air Chilled Organic Boneless Skinless Chicken Breasts',\n","  'Lowfat Blueberry Yogurt',\n","  'Organic Raspberry Lowfat Yogurt',\n","  'Yogurt, Lowfat, Strawberry',\n","  'Organic Peach Lowfat Yogurt',\n","  'Red Plums',\n","  'Organic Celery Hearts',\n","  'Wild Wonders Gourmet Medley Tomatoes',\n","  'Organic Carrot Bunch',\n","  'Organic Grade A Large Brown Eggs',\n","  'Organic Lowfat Yogurt Banana Vanilla',\n","  'Lowfat Vanilla Yogurt',\n","  'Organic Lowfat Black Cherry Yogurt',\n","  'Lemon Verbena Hand Soap',\n","  'Flat Parsley, Bunch',\n","  'Organic White Onions',\n","  'Honeydew Chunks',\n","  'Wheat and Gluten Free Snickerdoodle Cookies',\n","  'Organic Zucchini Spirals',\n","  'Organic Fresh Basil',\n","  'Watermelon Chunks'],\n"," ['Beef Steak with Cranberry & Sriracha'],\n"," ['Sweet Hot Dog Buns',\n","  'Pineapple on the Bottom Greek Yogurt',\n","  'Curate Cherry Lime Sparkling Water',\n","  'Kiwi Sandia Sparkling Water',\n","  'Blackberries',\n","  'Butter with Canola Oil Spread',\n","  'Krave Cereal Chocolate',\n","  'Chocolate Cereal',\n","  'Water',\n","  'Organic Gluten Free Quinoa Spaghetti',\n","  'White Giant Paper Towel Rolls',\n","  'Sesame Roasted Seaweed Snacks',\n","  'Mango Yoghurt',\n","  'Cheddar Baked Mini Snack Crackers',\n","  'Bun Length Beef Franks',\n","  'Lite Thousand Island Salad Dressing',\n","  'Chicken Tenders',\n","  'Foldit 5 Grain Flax Flatbread',\n","  'Flip™ Low-Fat Almond Coco Loco Lowfat Greek Yogurt',\n","  'Otria Greek Yogurt Veggie Dip Cucumber Dill Feta',\n","  'Fresh Wrap Organic Cucumber',\n","  'Philadelphia Cream Cheese',\n","  'Orange Mango Super Drink'],\n"," ['Whole Milk',\n","  'Lime Slim Can',\n","  'Complete™ ActionPacs™ Fresh Scent Dishwasher Detergent',\n","  'Lactose and Fat Free Milk',\n","  'Original Coffee Creamer',\n","  'Caramel Macchiato Creamer',\n","  'Star Wars Italian Sweet Creme Creamer'],\n"," ['Organic Green Onions',\n","  'Unsalted Butter',\n","  'Organic Broccoli',\n","  'Russet Potato',\n","  'Organic Half Tea & Half Lemonade',\n","  'Organic Finely Shredded Cheddar Cheese',\n","  'Organic Red On the Vine Tomato',\n","  'Macaroni Elbows'],\n"," ['Banana',\n","  'Honeycrisp Apple',\n","  'Birthday Cake Light Ice Cream',\n","  'Boomchickapop Sea Salt Popcorn',\n","  'Ginger Ale',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Extra Strength Pain Reliever and Fever Reducer Caplets for Adults',\n","  'Viva Big Roll White Paper Towels',\n","  'Choose A Sheet Big Rolls 1 Ply Vantage Paper Towels',\n","  'Blackberry Cucumber Sparkling Water',\n","  'Peanut Butter, Classic',\n","  'Chicken & Maple Breakfast Sausage',\n","  'Lemon Twist Hummus'],\n"," ['Eggo Homestyle Waffles',\n","  'Naked Green Machine Boosted Juice Smoothie',\n","  '24/7 Performance Cat Litter',\n","  'Condensed Cream of Chicken Soup',\n","  'Lunchables Turkey & American Cheese with Crackers',\n","  'Light Red Raspberry Yogurt',\n","  'Farmhouse Hearty White Bread',\n","  'Lunchables Turkey & American Cheese Cracker Stackers',\n","  'Strawberry Banana',\n","  'Light Very Cherry Yogurt',\n","  'Light Harvest Peach Yogurt',\n","  'Fat Free Milk',\n","  'Original Nooks & Crannies English Muffins',\n","  'Honey Nut Cheerios Medley Crunch Cereal',\n","  'Small Soft and Fluffy Flour Tortillas',\n","  'Sugar Free Lemon Lime Gelatin Snacks',\n","  'Biscuits for Dogs less than 20 lbs',\n","  'Traditional Refried Beans',\n","  'Strawberry Squeeze Fruit Spread',\n","  '100% Orange Strawberry Banana Juice',\n","  'No Pulp Calcium & Vitamin D Pure Orange Juice',\n","  'Original Chocolate Pudding Snacks',\n","  'Mexican Style Taco Shredded Cheese',\n","  'Diet Lemon Lime Soda',\n","  'Sausage, Egg, & Cheese Biscuit',\n","  'Chicken Taco Seasoning Mix',\n","  'Shredded Colby & Monterey Jack Cheeses',\n","  'Chunky Medium Salsa',\n","  'Zero Calorie Sweetener',\n","  'Light Banana Cream Pie Fat Free Yogurt',\n","  'Sliced Apples & Caramel with Peanuts',\n","  'Chili with Beans, Hot',\n","  'Original Lite Syrup',\n","  'Original Vegetable Oil Spread',\n","  'Light Orange Creme Fat Free Yogurt',\n","  'Butter & Garlic Angel Hair Pasta',\n","  'Rich & Hearty Creamy Roasted Chicken Wild Rice Soup',\n","  'Peach Iced Tea 6 Pitcher Drink Mix Packs',\n","  'Egg & Cheese Breakfast Sandwich',\n","  'Eggo Thick & Fluffy Original Waffles',\n","  'Chicken Pot Pie',\n","  'Parmesan Cheese Angel Hair Pasta Mix',\n","  'Angel Hair Pasta With Herbs',\n","  'Fettuccine Alfredo Pasta',\n","  'Garlic & Olive Oil Vermicelli',\n","  'Shells & White Cheddar Pasta',\n","  'Caesar Salad Kit',\n","  'Old Fashioned Rolled Oats',\n","  'Taco Seasoning Mix Original',\n","  'Microwaveable 100% Beef Cheeseburgers',\n","  'Shake N Bake Extra Crispy Seasoned Coating Mix',\n","  'Beef Franks 8 Count',\n","  'Hot Dog Buns',\n","  'Low Sugar Strawberry Preserves',\n","  'Chewy Granola Bars Variety Pack',\n","  'Fresh Boneless Skinless Chicken Breasts',\n","  'Oatmeal Squares Brown Sugar'],\n"," ['0% Greek Strained Yogurt', 'Lindor Truffles'],\n"," ['Blueberries',\n","  'Original Nooks & Crannies English Muffins',\n","  'Flour Tortilla',\n","  'American Singles',\n","  'Electrolyte Enhanced Water'],\n"," ['Honeycrisp Apple',\n","  'Small Hass Avocado',\n","  'Shallot',\n","  'Fresh Cauliflower',\n","  'Half & Half',\n","  'Organic Strawberries',\n","  'Organic Zucchini',\n","  'Red Peppers',\n","  'Large Lemon',\n","  'Organic Basil',\n","  'Asparagus',\n","  'English Seedless Cucumber'],\n"," ['Whipped Cream Cheese',\n","  'Organic AppleApple',\n","  'Organic Chicken Strips',\n","  'California Sourdough Bread',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Organic Whole String Cheese',\n","  'Grated Parmesan',\n","  'Organic Reduced Fat 2% Milk',\n","  'Yerbamate Lemon Energy Shot',\n","  'Natural Liquid Laundry Detergent - Blue Eucalyptus and Lavender',\n","  'Light and Lean Macaroni and Cheese',\n","  'Rigatoni Pasta',\n","  \"World's Best Mac & Cheese\"],\n"," ['Original Coconut Milk Creamer',\n","  'Smoked Turkey Breast',\n","  'Scoops! Tortilla Chips',\n","  'Carb Balance Small Fajita Whole Wheat Tortillas',\n","  'Romaine Hearts',\n","  'Corn Maize Tortillas',\n","  'Hickory Smoke Real Bacon Bits',\n","  'Deli Sliced Sharp Cheddar Cheese',\n","  'Rising Crust Supreme (Sausage, Pepperoni, Red Peppers, Green Peppers, Onions, Black Olives) Frozen Pizza',\n","  'Multi Grain Sandwich Thins',\n","  'All Natural Gluten Free Dijon Mustard',\n","  'Iceberg Lettuce',\n","  'White Wine Vinegar',\n","  'Italian Parsley',\n","  'Spicy Three Pepper Hummus',\n","  'Blue Sparkle Fresh Scent Liquid Fabric Softener',\n","  'Blue Sparkle Fabric Softener Dryer Sheets',\n","  'Unsweetened Iced Coffee',\n","  'Shredded Sharp Cheddar Cheese',\n","  'Fat-Free Refried Beans',\n","  'Peppermint Sugar-Free Gum'],\n"," [\"Men's One Tablets - 30 CT\",\n","  \"Women's One Food-Based Multivitamin\",\n","  'Organic Dark Chocolate Peanut Butter Cups'],\n"," ['Vanilla Almond Breeze Almond Milk',\n","  'Honey Greek Yogurt',\n","  'DanActive Vanilla Probiotic Dairy Drink',\n","  'Colby-Jack Cheese Sticks',\n","  '100% Juice Apple Juice, No Sugar Added',\n","  'Clementine Dish Soap',\n","  'Bread, Sliced, Extra Sourdough',\n","  \"Kellogg's Special K Strawberry Fruit Crisps 100 Calorie\",\n","  'Garlic & Herbs Spreadable Cheese',\n","  'Cilantro Paste',\n","  'Organic Lemon Garlic Dressing'],\n"," ['Peanut Butter Cereal',\n","  'Russet Potato',\n","  'Natural Spring Water',\n","  'Roasted Turkey',\n","  'Honey Dijon Potato Chips'],\n"," ['Extra Virgin Olive Oil',\n","  '100% Whole Grain White Whole Wheat Flour',\n","  'Baking Powder',\n","  'Zero Calorie Free Sweetener'],\n"," ['Raspberries',\n","  'Green Seedless Grapes',\n","  'Red Seedless Grapes',\n","  'Organic Granny Smith Apples'],\n"," ['Romaine Lettuce',\n","  'Cauliflower',\n","  'Sweet Onion',\n","  'Green Onions',\n","  'Bananas',\n","  'Fat-Free Refried Beans',\n","  'Diet Ginger Ale',\n","  'Cherry Caffeine Free Unsweetened Soft Drink Mix',\n","  'Tropical Punch Unsweetened Soft Drink Mix',\n","  'Grape Unsweetened Soft Drink Mix',\n","  'Black Cherry Unsweetened Soft Drink Mix',\n","  'Blue Raspberry Lemonade Unsweetened Soft Drink Mix',\n","  'Unsweetened Lemonade',\n","  'Strawberry Unsweetened Soft Drink Mix',\n","  'Orange Unsweetened Soft Drink Mix',\n","  'Strawberry Lemonade Unsweetened Soft Drink Mix',\n","  'Watermelon Unsweetened Drink Mix',\n","  'Pink Lemonade Unsweetened Soft Drink Mix',\n","  'Unsweet Lemon Lime Drink Mix',\n","  'Cherry Limeade Unsweetened Soft Drink Mix',\n","  'Peach Mango Unsweetened Soft Drink Mix',\n","  'Green Apple Unsweetened Soft Drink Mix',\n","  'Zucchini Squash',\n","  'Bonus Bag Restaurant Style Tortilla Chips',\n","  'Strawberry Cheesecake Bar',\n","  'Strawberry Streusel Bars',\n","  '90 Calorie Chocolate Fudge Brownies',\n","  '90 Calorie Chocolate Chewy Bars',\n","  'Layered Salted Caramel & Dark Chocolate Chewy Bars',\n","  'Pearls Fresh Mozzarella Cheese'],\n"," ['Organic Half & Half',\n","  'Banana',\n","  'Jalapeno Peppers',\n","  'Organic Avocado',\n","  'Total 2% Lowfat Greek Strained Yogurt with Peach',\n","  'Bunched Cilantro',\n","  'Organic Reduced Fat Milk',\n","  'Mild Cheddar Cheese Sticks',\n","  'Organic Crushed Fire Roasted Tomatoes',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Original Hummus',\n","  'Kiwi Sandia Sparkling Water',\n","  'Organic Mixed Vegetables',\n","  'Organic Tomato Sauce',\n","  'Watermelon Chunks',\n","  'Tomato Paste',\n","  'Cornbread',\n","  'Organic Mountain Forest Amber Honey',\n","  'Classic Fajita Skillet Sauce with Chipotle and Lime',\n","  'Green Peas No Salt Added',\n","  'Organic Lowfat Mango Kefir',\n","  'Mango Chunks',\n","  'Organic Romaine',\n","  'Peanut Butter Creamy With Salt'],\n"," ['2% Reduced Fat Milk',\n","  'Scoops! Tortilla Chips',\n","  'Coke',\n","  'French Onion Dip',\n","  'Original Crescent Rolls',\n","  'Light',\n","  'Italian Dry Salame',\n","  'Tater Tots',\n","  'Chunky Mild Salsa',\n","  'Original Potato Chips',\n","  'Purified Water',\n","  'Cashews, Halves and Pieces',\n","  'Crackers',\n","  'Smoked Sausage',\n","  'Grilled Chicken Taquitos'],\n"," ['Sparkling Water, Bottles'],\n"," [\"Annie's Bunny Fruit Snacks Variety\",\n","  'Original Popcorn',\n","  'Original Baked Snack Crackers',\n","  'Kids Soft and Chewy Candy',\n","  'Unscented Multi-Pack Plastic Tampons',\n","  'Cheddar Extra Sharp Made with 2% Milk Cheese Sticks',\n","  'Lightly Salted Rice Cakes',\n","  'Dark Chocolate Pretzels with Sea Salt'],\n"," ['Half & Half'],\n"," ['Strawberries',\n","  'Raspberries',\n","  'Red Seedless Grapes',\n","  'Frozen Blueberries',\n","  'Sliced Peaches',\n","  'White Distilled Vinegar'],\n"," ['Organic Half & Half',\n","  'Organic Coconut Milk',\n","  'Penne Rigate #41 Pasta',\n","  'Apple Honeycrisp Organic',\n","  'Organic Unsweetened Almond Milk',\n","  'Organic Promise Autumn Wheat Cereal',\n","  'Classic Granola',\n","  'Organic Garbanzo Beans No Salt Added',\n","  'Bucatini, No. 15',\n","  'French Lavender Hand Soap',\n","  'Gotu Kola Stem Cell + 1% CGF Day Cream',\n","  'Blue Eucalyptus & Lavender Natural Laundry Detergent',\n","  'Thin Spaghetti No 11'],\n"," ['2nd Foods Organic  Pear and Spinach Baby Food',\n","  'Organic 2nd Foods Apples, Blueberries & Spinach Baby Food'],\n"," ['Organic Whole Milk',\n","  'Strawberries',\n","  'Raspberries',\n","  'Blueberries',\n","  'Medium Navel Orange',\n","  'Baby Food Pears Squash',\n","  'Bananas, Raspberries & Oats Organic Baby Food',\n","  'Apples, Pumpkin & Carrots Organic Baby Food',\n","  'Apples, Kale & Avocados Organic Baby Food',\n","  'Apples, Guavas & Beets Organic Baby Food',\n","  'Italian Bread'],\n"," ['Organic Strawberries',\n","  'Organic Hass Avocado',\n","  'Bag of Organic Bananas',\n","  \"Newman O's Creme Filled Chocolate Cookies\",\n","  'Organic Carrot Bunch',\n","  'Organic Whole String Cheese',\n","  'Natural Premium Coconut Water',\n","  'Organic Red On the Vine Tomato',\n","  'Organic Vanilla Almond Milk',\n","  'Low Fat Vanilla Yogurt',\n","  'Raisin Bran Cereal'],\n"," ['Bag of Jumbo Yellow Onions'],\n"," ['Organic Baby Spinach',\n","  'Organic Coconut Milk',\n","  'Organic Hass Avocado',\n","  'Organic Yellow Onion',\n","  'Frozen Organic Wild Blueberries',\n","  'Organic Baby Carrots',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Kale Krunch The Original Quite Cheezy',\n","  'Organic Unsweetened Vanilla Almond Milk',\n","  'Warrior Blend Vanilla Dietary Supplement',\n","  \"Women's Gummy Vitamins\",\n","  'Cultured Pasture Butter',\n","  'Simply Strawberry Coconut Milk Minis Frozen Dessert',\n","  'Organic Light In Sodium Traditional Refried Beans',\n","  'Tortillas, Brown Rice',\n","  'Gluten Free Brown Rice Bread',\n","  'Vegetable Broth Low Sodium'],\n"," ['Organic Zucchini',\n","  'Organic Lemon',\n","  'Organic Peeled Garlic',\n","  'PlusShot Blueberry Acai Probiotic Juice Drink',\n","  'Organic Italian Parsley Bunch',\n","  'Sandwich Resealable Bags'],\n"," ['Honeycrisp Apple',\n","  'Organic Strawberries',\n","  'Dried Mango',\n","  'Organic Navel Orange',\n","  'Original Hummus',\n","  'Carrots',\n","  'Cold-pressed, Deliciously Hydrating Watermelon Water',\n","  '100% Raw Coconut Water',\n","  'Watermelon Chunks',\n","  'Organic Small Curd Cottage Cheese',\n","  'Pineapple Chunks',\n","  'Sparkling Natural Spring Water',\n","  'Organic Bell Pepper',\n","  'Pretzel \\\\\"Shells\\\\\"'],\n"," ['Authentic French Brioche Hamburger Buns',\n","  'Tomato Ketchup',\n","  'Bananas, Raspberries & Oats Organic Baby Food',\n","  'Stage 1 Apples & Strawberries Organic Pureed Baby Food',\n","  'Wholesome Breakfast Blueberry Banana',\n","  'Gluten Free Whole Grain Hamburger Buns 4 Count',\n","  'Organic Hot House Tomato',\n","  'Baby Food Meals',\n","  'Stage 1 Apples Sweet Potatoes Pumpkin & Blueberries Organic Pureed Baby Food',\n","  'Happy Baby Spinach, Mango, and Pear Baby Food',\n","  'Just Mangos Organic Baby Food',\n","  'Toddler Cheddar & Leeks Multigrain Wheels Organic Snack',\n","  'White Apple Cauliflower & Leek Organic Baby Food'],\n"," ['Kitchen Cheese Enchilada',\n","  'Fridge Pack Cola',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Microwaveable 100% Beef Cheeseburgers',\n","  'Zero Go-Go Mixed Berry Vitamin Water',\n","  'Smok Cured Turkey Bacon',\n","  'Diet Cranberry Fruit Juice',\n","  'Classic Hummus',\n","  'Vitaminwater Zero Focus Kiwi-Strawberry',\n","  'Vegetarian Vegetable Condensed Soup',\n","  'Garlic Parmesan Deli Style Pretzel Crisps',\n","  'Triple Soothing Action Mentho Lyptus Cough Drops Bonus Bag',\n","  'Condensed Soup, Bean with Bacon',\n","  'Hearty Grains 100% Whole Wheat English Muffins',\n","  'Golden Brown Pure Cane Sugar',\n","  'Entertainment Cracker Collection',\n","  'Organic Acai Berry Smoothie Packs',\n","  'Real Bacon Bits'],\n"," ['Pure Sparkling Water',\n","  'Mandarin Oranges',\n","  'Frozen Organic Wild Blueberries',\n","  'Organic Gala Apples',\n","  'Organic Baby Carrots',\n","  'Unsalted Pure Irish Butter',\n","  'Windy City Crunch Salad',\n","  'Pitted Dates',\n","  'Chicago Mix Popcorn',\n","  'Milk Chocolate Sea Salt Caramels',\n","  'Gluten Free Multigrain Bread'],\n"," ['Organic Coconut Milk',\n","  'Organic Russet Potato',\n","  'Yellow Onions',\n","  'Michigan Organic Kale',\n","  'Organic Ginger Root',\n","  'Roma Tomato',\n","  'Cayenne Pepper',\n","  'Ground Cumin',\n","  'Diced Tomatoes',\n","  'Passata Biodynamic Tomato Puree',\n","  'Ground White Pepper',\n","  'Organic Heavy Whipping Cream',\n","  'Organic Red Lentils',\n","  'Fennel Seed'],\n"," ['Natural Vanilla Ice Cream',\n","  'Whipped Light Cream, Original',\n","  'Complete ActionPacs Lemon Burst Dishwasher Detergent',\n","  'Classic Vanilla Coffee Creamer'],\n"," ['Champagne'],\n"," ['Chicken & Apple Smoked Chicken Sausage',\n","  'Double Cheese Baked Snack Mix',\n","  'Ice Cream Bars'],\n"," ['Organic Hass Avocado',\n","  'Organic Garlic',\n","  'Organic Lemon',\n","  'Organic Red Bell Pepper',\n","  'Mesclun Salad',\n","  'Pickling Cucumber',\n","  'Coconut Yogurt',\n","  'Ancient Grain Original Granola'],\n"," ['Organic String Cheese',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Cane Sugar',\n","  'Total 2% All Natural Plain Greek Yogurt',\n","  'Lime Sparkling Water',\n","  'Ancient Grain Original Granola',\n","  'Vanilla Almond Fit Granola',\n","  'Pumpkin Fig Ancient Grain Granola',\n","  'Gluten Free Foods Granola',\n","  'Healthy Grains Fiber Cinnamon Oat Clusters',\n","  'Ancient Grain Granola Cranberry Pecan'],\n"," ['Banana',\n","  'No Pulp Calcium & Vitamin D Pure Orange Juice',\n","  'Grade A Large White Eggs',\n","  'Broccoli Pot Pie With Cheddar Cheese Sauce',\n","  'Cheese Tamale Verde',\n","  'Cheese Pizza Snacks'],\n"," ['Organic Baby Arugula',\n","  'Fresh Cauliflower',\n","  'Organic Hass Avocado',\n","  'Organic Small Bunch Celery',\n","  'Organic Yellow Onion',\n","  'Organic Stevia',\n","  'Creamy Deluxe Shells & Real Aged Cheddar Sauce',\n","  'Spirals with Butter & Parmesan Mac & Cheese Macaroni & Cheese Natural',\n","  'Blue Cheese Crumbles'],\n"," ['Extra Fancy Unsalted Mixed Nuts',\n","  'Crunchy Rice Rollers',\n","  'Premium Grapefruit Large'],\n"," ['Organic Roasted Turkey Breast',\n","  'Grated Parmesan',\n","  'Organic Uncured Sliced Black Forest Ham',\n","  'Saltine Crackers',\n","  'Organic Classic Saltine Crackers',\n","  'Limonata Sparkling Lemon Beverage',\n","  'Organic Hibiscus Herbal Tea Bags',\n","  'Whole Wheat Bread',\n","  'YoKids Blueberry & Strawberry/Vanilla Yogurt',\n","  'Organic Blueberry Waffles',\n","  'Organic Ezekiel 49 Bread Cinnamon Raisin'],\n"," ['2% Reduced Fat Organic Milk',\n","  'SmartBlend Chicken & Rice Formula Adult Dry Dog Food',\n","  'Creamy Peanut Butter'],\n"," ['Natural Artisan Water',\n","  'Cool Mint® Antiseptic Adult Mouthwash',\n","  'Fusion Razor Cartridges',\n","  'Deodorant',\n","  'Ibuprofen Liqui-Gels Capsules'],\n"," ['Sparkling Water Grapefruit',\n","  'Organic Extra Firm Tofu',\n","  'Icelandic Style Fat Free Plain Yogurt',\n","  'Hass Avocado',\n","  'Tuna, Solid Pack Light',\n","  'Original Popcorn',\n","  'Cran Raspberry Sparkling Water',\n","  'Fresh Cut Golden Sweet Whole Kernel Corn',\n","  'Fat Free Milk',\n","  'Classic Hummus',\n","  'Mozzarella String Cheese Sticks, Light Low-Moisture Part Skim',\n","  'Strawberry on the Bottom Nonfat Greek Yogurt',\n","  'Lemon Blended Non-Fat Greek Yogurt',\n","  'Pomegranate on the Bottom Non-Fat Greek Yogurt',\n","  'Pomegranate',\n","  'Spring Waterfall Scent Automatic Toilet Bowl Cleaner',\n","  'Natural Raw Almonds',\n","  'Yogurt, Drinkable, Wild Blueberry',\n","  'Reduced Fat Original Baked Snack Crackers',\n","  'Organic Asparagus',\n","  'Organic Tropical Fruit Blend',\n","  'Vanilla Unsweetened Almond Milk',\n","  'Instant Oatmeal Weight Control Variety',\n","  'Chick Peas',\n","  'Sliced White Mushrooms',\n","  'Medium Salsa Verde'],\n"," ['Organic Baby Spinach',\n","  'Organic Red Onion',\n","  'Sparkling Water Grapefruit',\n","  'Organic Roma Tomato',\n","  'Organic Zucchini',\n","  'Organic Extra Firm Tofu',\n","  'I Heart Baby Kale',\n","  'Organic Red Bell Pepper',\n","  'Broccoli Crown',\n","  'Organic Large Grade A Brown Eggs',\n","  'Organic White Corn & Wheat Tortillas',\n","  'Original Hemp Burgers'],\n"," ['Organic Hass Avocado',\n","  'Organic Chicken Strips',\n","  'Organic Cucumber',\n","  'Lemon Verbena Dish Soap',\n","  'Chicken Noodle Soup',\n","  'Organic Raspberries',\n","  'Romaine Hearts',\n","  'Premium Epsom Salt',\n","  '100% Raw Coconut Water',\n","  'Organic Garbanzo Beans No Salt Added',\n","  'Organic Orange Bell Pepper',\n","  'Sprouted Whole Wheat Bread',\n","  'Organic Whole Strawberries',\n","  'Organic Rooibos Tea',\n","  'Naturally Smoked Oysters in Pure Olive Oil',\n","  'Organic Mini Sandwich Crackers Cheddar Cheese',\n","  'Organic Raw Kombucha Gingerade',\n","  'Sparkling Water',\n","  'Lemon Natural Dishwasher Detergent Gel',\n","  'Organic Aged Earl Grey Tea',\n","  'Black Elderberry Syrup'],\n"," ['Organic Whole Milk',\n","  'Organic Hass Avocado',\n","  'Parsley, Italian (Flat), New England Grown',\n","  'Organic Butterhead (Boston, Butter, Bibb) Lettuce',\n","  'Organic Heavy Whipping Cream',\n","  'Organic Sour Cream',\n","  'Organic Extra Large Brown Eggs',\n","  'Dill Weed'],\n"," ['Natural Spring Water', 'Small Curd Lowfat 2% Milkfat Cottage Cheese'],\n"," ['Organic Whole Milk',\n","  'Honeycrisp Apple',\n","  'Organic Avocado',\n","  'Grape White/Green Seedless',\n","  'Organic Garlic',\n","  'Organic Unsalted Butter',\n","  'Organic Broccoli',\n","  'Mediterranean Mint Gelato',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Milk and Cookies Ice Cream',\n","  'Sesame Whole Wheat Crackers',\n","  'Flat Parsley, Bunch',\n","  'Thin Spaghetti No 11',\n","  'Whole Milk Plain Yogurt',\n","  'Fire Roasted Crushed Tomatoes',\n","  'Organic Frozen Peas',\n","  'Wild Blend Rice',\n","  'Organic Apple Chicken Sausage',\n","  'Organic Sea Salt Roasted Seaweed Snacks'],\n"," ['Sparkling Water Grapefruit',\n","  'Toasted Coconut Almondmilk Blend',\n","  '100% Raw Coconut Water',\n","  'Free & Clear Unscented Baby Wipes',\n","  'Lavender Hand Sanitizer Wipes',\n","  '2-Ply 100% Recycled White Facial Tissues',\n","  'Ethiopia Limu Gale Kemise Medium Roast Coffee',\n","  'Dark with 70% Cacao Content Organic Chocolate Bar',\n","  'Sourdough Whole Grain Crispbread',\n","  'Tulsi Holy Basil Sweet Rose Infusion Bags 18 Count',\n","  'Golden Milk Supplement',\n","  'Ghee'],\n"," ['Organic Baby Spinach',\n","  'Organic Frosted Flakes Cereal',\n","  'Organic Hass Avocado',\n","  'Yellow Onions',\n","  'Bag of Organic Bananas',\n","  'Creamy Almond Butter',\n","  'Large Lemon',\n","  'Organic Milk',\n","  'Organic Cannellini Beans',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Ice Cream Sandwiches Vanilla',\n","  'Organic Multigrain Waffles',\n","  'Original Recipe Rice Pudding',\n","  'Grated Parmesan Cheese',\n","  'Parmesan Garlic Pita Chips',\n","  'Pure Irish Butter',\n","  'Macaroni & Cheese'],\n"," ['Organic Large Extra Fancy Fuji Apple',\n","  'Organic Roma Tomato',\n","  'Organic Hass Avocado',\n","  'Bag of Organic Bananas',\n","  'Organic Small Bunch Celery',\n","  'Organic Navel Orange',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Crunchy Peanut Butter Energy Bar',\n","  'Blueberry Crisp Energy Bar',\n","  'Pineapple Chunks',\n","  'Instant Oatmeal Variety Pack',\n","  'Organic Honey Sweet Whole Wheat Bread',\n","  'Chocolate Chip',\n","  'Goat Cheese and Roasted Tomato Mezzelune Pasta',\n","  'Four Cheese Pasta Sauce',\n","  'Goji Berries, Certified Organic',\n","  'Organic Mango Chunks',\n","  'Whole Chia Seeds'],\n"," ['Large Lemon',\n","  'Organic Plain Whole Milk Yogurt',\n","  'Organic Broccoli Crowns',\n","  'Organic Dill'],\n"," ['Organic Whole Milk',\n","  'Organic Baby Arugula',\n","  'Organic Blackberries',\n","  'Boneless Skinless Chicken Breasts',\n","  'Garlic',\n","  'Bag of Organic Bananas',\n","  'Yoghurt Blueberry',\n","  'Mini Original Babybel Cheese',\n","  'Organic Creamy Peanut Butter',\n","  'Natural Anticavity Silly Strawberry Fluoride Toothpaste for Children',\n","  'Meyer Lemons',\n","  'Italian Blend Shredded Cheese',\n","  'Crushed Tomatoes',\n","  'Sourdough Loaf',\n","  'Cream Soda',\n","  '80% Lean Ground Beef',\n","  'Organic Capellini',\n","  'Corn Starch',\n","  'Organic White Basmati Rice',\n","  'Organic Hazelnut Spread',\n","  'Cheese Square Crackers'],\n"," ['Tomato Paste'],\n"," ['Organic Avocado',\n","  'Organic Whole White Mushrooms',\n","  'Sparkling Water Grapefruit',\n","  'Authentic French Brioche',\n","  'Clementines, Bag',\n","  'White Onion',\n","  '2% Reduced Fat Organic Milk',\n","  'Flaky Biscuits',\n","  'Organic White Cheddar Popcorn',\n","  'Tomato Sauce With Basil',\n","  'Buttermilk Biscuits'],\n"," ['Light Cream'],\n"," ['Chocolate Chip Cookies',\n","  'Gluten Free Brown Rice Bread',\n","  'Green Bananas',\n","  'Ginger Cookie',\n","  'Red Delicious Apple',\n","  'Organic Breakfast Blend Coffee',\n","  'Organic Crunchy Peanut Butter'],\n"," ['Organic Granny Smith Apple',\n","  'Roasted Turkey',\n","  'Vanilla Almond Fit Granola',\n","  'Original Cheddar CheeseSticks',\n","  'Organic Lowfat French Vanilla Yogurt',\n","  'Pesto Tortellini  Bowls',\n","  'Organic Macaroni Shells & Real Aged Cheddar'],\n"," ['Zero Calorie Cola', 'Organic Simply Naked Pita Chips'],\n"," [\"Organic D'Anjou Pears\",\n","  'Organic Strawberries',\n","  'Organic Tomato Cluster',\n","  'Mini Original Babybel Cheese',\n","  'Bunched Cilantro',\n","  'Limes',\n","  'Oven Roasted Turkey Breast',\n","  'Cantaloupe',\n","  'Deluxe Plain Bagels',\n","  'Grade A Large Brown Eggs',\n","  'Organic Bread with 21 Whole Grains',\n","  '100% Natural Tomato Sauce',\n","  'Sweet Potato Yam',\n","  '100% Juice Apple Juice, No Sugar Added',\n","  'Original Black Bean with Sea Salt Bean Chips',\n","  'Country Stand Juice, Medium Pulp',\n","  '3 lb Clementines',\n","  'Unstopables Lush',\n","  'Tomatillo',\n","  'Original Chocolate Chip Cookies',\n","  'Nonfat Probiotic Drinks',\n","  'Double Stuf Chocolate Sandwich Cookies Family Size',\n","  'Organic Zucchini Squash',\n","  \"Cookies 'n Cream with Oreo Cookie Pieces Lowfat Yogurt\",\n","  'Ultra  April Fresh Scent Liquid Fabric Softener',\n","  'Chicken Noodle Condensed Soup',\n","  'Organic 2% Reduced Fat Milk',\n","  'Crema Mexicana',\n","  'Serrano Chile Peppers',\n","  'Limone Flavored Potato Chips',\n","  'Bits Cheese Cracker Sandwiches',\n","  'Avocado Oil',\n","  'Beef Franks',\n","  'Unscented Liquid Laundry Detergent',\n","  '& Go! Hazelnut Spread + Pretzel Sticks',\n","  'Sparkling Natural Mineral Water',\n","  'Extra Long Grain Enriched Rice',\n","  'Organic Whole Carrots',\n","  'Roasted Chicken',\n","  'Natural Butter Flavor Lite Maple Syrup',\n","  'European Style Salted Butter Sticks',\n","  'Xtra Cheddar + Pretzel Baked Snack Crackers'],\n"," ['Smoked Apple Sage Sausages',\n","  'Apricot Preserves',\n","  'Ezekiel 4:9 Bread Organic Sprouted Whole Grain',\n","  'Home Style Beefless Tips',\n","  'Peppered Deli Slices',\n","  'Vegetable Fried Rice',\n","  'The Ultimate Beefless Burger',\n","  'Peanut Butter',\n","  'Vanilla Non Dairy Frozen Dessert Minis',\n","  'Orange Juice',\n","  'Pineapple Coconut Water',\n","  'Original Vegenaise Better Than Mayo',\n","  '9 Inch Plates'],\n"," ['Natural Spring Water', 'Versatile Stain Remover', 'Allergy Tablets'],\n"," ['Cinnamon Rolls with Icing'],\n"," ['Guacamole', 'Chipotle Salsa', 'Chicken Tortilla Soup', 'Jalapeno Hummus'],\n"," ['Boneless Skinless Chicken Breasts',\n","  'Macaroni & Cheese',\n","  'Sparkling Natural Mineral Water',\n","  'Organic 1% Low Fat Milk',\n","  'Chocolate Milk 1% Milkfat',\n","  'Arancita Rossa',\n","  'Sparkling Orange Juice & Prickly Pear Beverage',\n","  'Diced Red Onions',\n","  'Ground Turkey Breast',\n","  'Total 0% Nonfat Plain Greek Yogurt',\n","  'Organic Bakery Hamburger Buns Wheat - 8 CT',\n","  'Organic Green Butter Lettuce'],\n"," ['Banana',\n","  'Jalapeno Peppers',\n","  'Natural Vanilla Ice Cream',\n","  'Fresh Dill',\n","  'Green Beans'],\n"," ['Organic Black Beans',\n","  'Sparkling Mineral Water',\n","  'Traditional Refried Beans',\n","  'Leaf Spinach',\n","  'Steak Strips'],\n"," ['Organic Tomato Cluster',\n","  'Organic Broccoli',\n","  'Organic Large Brown Eggs',\n","  'I Heart Baby Kale',\n","  'Sweet Onion',\n","  'Fluoride-Free Antiplaque & Whitening Peppermint Toothpaste',\n","  'Jalapeno Nacho Slices, Mild',\n","  'Pure Lemon Juice',\n","  'Zero Calorie Orange Soda'],\n"," ['Limes',\n","  'Slim Can Pink Grapefruit Natural Mineral Water',\n","  'Low-Fat Strawberry Banana on the Bottom Greek Yogurt',\n","  'Simply 100® Blueberry Blended Non-Fat Greek Yogurt',\n","  'Cola',\n","  'Cola Soft Drink'],\n"," ['Organic Whole Milk',\n","  'Organic Zucchini',\n","  'Organic Blueberries',\n","  'Sweet Orange Vanilla Honest Shampoo + Body Wash',\n","  'Bag of Organic Bananas',\n","  'Large Lemon',\n","  'Organic Bosc Pear',\n","  'Organic Cucumber',\n","  'Organic Yellow Onion',\n","  'Organic Diced Tomatoes',\n","  'Organic Carrot Bunch',\n","  'Organic Whole Wheat Bread',\n","  'Limes',\n","  'Lowfat Milk',\n","  'Organic Grade A Large Brown Eggs',\n","  'Organic Plain Whole Milk Yogurt',\n","  'Italian Sparkling Mineral Water',\n","  'Spring Water',\n","  'Organic Golden Delicious Apple',\n","  'Rigatoni Pasta',\n","  '3 lb Clementines',\n","  'Barolo Salami',\n","  'Peach-Pear Sparkling Water',\n","  'Organic Chamomile with Lavender Herbal Tea Bags',\n","  \"Gluten Free Vegan Not-Chick'n Natural Bouillon Cubes\",\n","  'Organic Old Fashioned Rolled Oats',\n","  'No Sugar Added Muesli Cereal',\n","  'GOLEAN Crunch! Cereal',\n","  'Simply White Natural Clean Mint Fluoride Toothpaste',\n","  'Globe Eggplant',\n","  'Organic Butternut Squash',\n","  'Organic Sunday Bacon',\n","  'Organic & Fair Trade Certified Earl Grey Tea Bags',\n","  'Angel Hair Pasta',\n","  'Dishmate Lavender DIsh Liquid',\n","  'Lettuce Red Butter Organic'],\n"," ['Gluten Free Whole Grain Bread',\n","  'Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Bag of Organic Bananas',\n","  'Organic Creamy Peanut Butter',\n","  'Organic Navel Orange',\n","  'YoKids Blueberry & Strawberry/Vanilla Yogurt',\n","  'Grassmilk 2% Reduced Fat Milk',\n","  'Organic Golden Round Crackers',\n","  'Unsweetened Vanilla Almond Milk'],\n"," ['Bartlett Pears',\n","  'Organic Red Onion',\n","  'Organic Broccoli',\n","  'Whole Wheat English Muffins',\n","  'Small Macintosh Apple',\n","  'Cantaloupe',\n","  'Organic Whipped Naturally Buttery Spread',\n","  'Organic Butterhead (Boston, Butter, Bibb) Lettuce',\n","  'Blackberries',\n","  'Organic Bartlett Pear',\n","  'Low Fat, Small Curd 1% Milkfat No Salt Added Cottage Cheese',\n","  'Raspberry Chocolate Chip Gelato',\n","  'Red Grapefruit',\n","  'Hearty Crispbread',\n","  'Heavy Whipping Cream',\n","  'Key Lime Pie Gelato',\n","  'Blood Oranges',\n","  'Purple Cauliflower'],\n"," ['Organic Whole Milk',\n","  'Raspberry Lemonade',\n","  'Organic Yukon Select Fries',\n","  'Garlic Bread',\n","  'Organic Strawberry Lemonade',\n","  'Zero Calorie Half Green Tea & Half Lemonade'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Garlic',\n","  'Organic Small Bunch Celery',\n","  'Organic Lemon',\n","  'Organic Vegetable Broth',\n","  'Monterey Jack Cheese',\n","  'Organic Medium Salsa',\n","  'Cucumber Kirby',\n","  'Organic Romaine Hearts',\n","  'Gluten-Free Supergrain Pasta Elbows',\n","  'Organic Gluten Free Fusilli',\n","  'Organic Fat Free Milk',\n","  'Corn Tortillas'],\n"," ['Wastebasket Liners', 'Premium Unsweetened Iced Tea'],\n"," ['Banana',\n","  'Strawberries',\n","  'Shredded Parmesan',\n","  'Orange Bell Pepper',\n","  'Large Lemon',\n","  'Organic Whole String Cheese',\n","  'Organic Chicken & Apple Sausage',\n","  'Organic Bread with 21 Whole Grains',\n","  'Organic Bell Pepper',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Cucumber Kirby',\n","  'Reduced Fat Milk 100% Lactose Free',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Organic Turkey Bacon',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Feta Crumbles Cheese'],\n"," ['Banana',\n","  'Shallot',\n","  'Organic Strawberries',\n","  'Sparkling Water Grapefruit',\n","  'Boneless Skinless Chicken Breasts',\n","  'Feta Cheese Crumbles',\n","  'Wild Arugula Salad'],\n"," ['90% Lean Ground Beef',\n","  'Organic Garlic',\n","  'Green Bell Pepper',\n","  'Organic Lemonade',\n","  'White Onion',\n","  'Direct Trade El Diablo Dark Roast Whole Bean Coffee',\n","  'Pure Premium Orange Juice Lots Of Pulp Calcium + Vitamin D'],\n"," ['Banana',\n","  'Organic Avocado',\n","  'Organic Red Onion',\n","  'Large Lemon',\n","  'Organic Carrot Bunch',\n","  'Pasture Raised Eggs',\n","  'Watermelon Chunks',\n","  'Organic Reduced Fat 2% Milk',\n","  'Original Pure Creamy Almond Milk',\n","  'Organic Stringles Mozzarella String Cheese',\n","  'Cashew Cookie',\n","  'Honeycrisp Apples',\n","  'All Natural Chicken Drumsticks',\n","  'Wild Sockeye Salmon',\n","  'Baby Spinach',\n","  'Grade A Goat Milk'],\n"," ['Organic Baby Arugula',\n","  'Strawberries',\n","  'Bag of Organic Bananas',\n","  'Red Vine Tomato',\n","  'Ginger Ale',\n","  'Minis, Coconut Milk, Non-Dairy Frozen Dessert, no sugar added Vanilla Bar',\n","  'Coconut Almond Minis Frozen Dessert Bars',\n","  'Lactose Free 2% Reduced Fat Milk',\n","  'Hickory Smoked Turkey Breast',\n","  'Emmentaler Swiss Slices'],\n"," ['Bag of Organic Bananas',\n","  'Organic Celery Hearts',\n","  'Little Yums Spinach, Apple, and Kale Teething Wafers',\n","  'Little Yums Pumpkin and Banana Teething Wafers'],\n"," ['CleanCare 1-Ply Double Rolls Toilet Paper',\n","  'Reclosable Sandwich Bags',\n","  'Eggo Cinnamon Toast Waffles',\n","  'Stuffed Peppers',\n","  'Chunky Salsa Medium',\n","  'Fresh Ground Turkey',\n","  'Chicken Taquitos'],\n"," ['Dark Chocolate Nuts & Sea Salt Bars',\n","  'Unsweetened Blackberry Water',\n","  'Water, Unsweet, Crisp Apple',\n","  'Unsweetened Watermelon Water',\n","  'Roasted Seaweed Snacks'],\n"," ['Soft Taco Size White Flour Tortillas',\n","  'Organic Hot Salsa',\n","  'Mexican Finely Shredded Cheese',\n","  'Organic Unsweetened Black Tea'],\n"," ['Organic Baby Spinach',\n","  'Organic Roma Tomato',\n","  'Classic Mild Cheddar Macaroni & Cheese',\n","  'Bag of Organic Bananas',\n","  'Original Hummus',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Organic Broccoli Crowns',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'No Salt Added Black Beans',\n","  'Organic Red Potato',\n","  'Cream On Top Vanilla Organic Yogurt',\n","  'Total Greek Strained Yogurt',\n","  'Seven Grain Crispy Tenders',\n","  'Multi-Grain Sea Salt Crackers'],\n"," ['Clementines', 'Trail Mix', 'Dried Mangos', 'Reduced Fat 2% Milk'],\n"," ['Extra Virgin Olive Oil',\n","  'Grapefruit Sparkling Water',\n","  'Ultra Moisture Beauty Bars',\n","  'Dry Mouth Oral Rinse',\n","  'Pink Grapefruit Foaming Scrub',\n","  'Calm Chamomile Herbal Tea'],\n"," ['Organic Whole Milk',\n","  'Banana',\n","  'Small Hass Avocado',\n","  'Organic Zucchini',\n","  'Boneless Skinless Chicken Breasts',\n","  'Yellow Onions',\n","  'Garlic',\n","  'Red Vine Tomato',\n","  'Organic Romaine',\n","  'Whole Milk Ricotta Cheese',\n","  'California Black Bread',\n","  'Spicy Red Radish Kimchi'],\n"," ['Beef Dinner Franks', 'Mineral Water'],\n"," ['Sparkling Water Grapefruit',\n","  'Sustainably Soft Bath Tissue',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Watermelon Chunks',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Organic Turkey Burgers',\n","  'Pouf Bath Sponge',\n","  'Cedarwood Body Wash',\n","  'Organic Smoked Chicken Breast'],\n"," ['Cajun Andouille Smoked Pork Sausage',\n","  'Ultra Apple Blossom Antibacterial Dish Liquid',\n","  'Lemon Seltzer',\n","  'Healthy Grains Oats & Honey Clusters with Toasted Coconut Gluten Free',\n","  'Coconut Almond Protein Chewy Bars',\n","  '100% Recycled White Paper Towels',\n","  'Intense Dark Chocolate with Sea Salt & Roasted Almonds',\n","  'Unscented Bathroom Tissue',\n","  'Peach Yoghurt',\n","  'Key Lime Yoghurt',\n","  'Abundant Apricot Fruit Strip',\n","  'Disinfecting Wipes, Lemon',\n","  'Small Trash Bags',\n","  'Sweet & Spicy Turkey'],\n"," ['2% Reduced Fat Milk',\n","  'Real Mayonnaise',\n","  'Heavy Whipping Cream',\n","  'Cinnamon Chex',\n","  'Gelato Indulgences Chocolate Caramel',\n","  'Natural Bliss Cinnamon Cream Coffee Creamer',\n","  'Shredded Parmesan Cheese',\n","  'Unsweetened Green Tea',\n","  'Caramel Flavored Ice Cream Sauce',\n","  'Asparation/Broccolini/Baby Broccoli',\n","  'Unsalted Chicken Stock'],\n"," ['Organic Zucchini',\n","  'Organic Garlic',\n","  'Bag of Organic Bananas',\n","  'Organic Celery Hearts',\n","  'Organic Yellow Onion',\n","  'Organic Carrot Bunch',\n","  'Margherita Pizza',\n","  'Asparagus',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Heavy Whipping Cream',\n","  'Organic Raw Kombucha Gingerade',\n","  'Pure Irish Butter',\n","  'Mountain Spring Water',\n","  'Strawberry Licorice Twist',\n","  'Organic White Mushrooms',\n","  'Original Enriched Rice Drink'],\n"," ['Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Large Lemon',\n","  'Large Alfresco Eggs',\n","  'Limes',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Organic Old Fashioned Rolled Oats',\n","  'Organic Reduced Fat 2% Cottage Cheese',\n","  'Organic Stoneground Flakes Cocoa Clusters Cereal',\n","  'Organic Cinnamon Crunch Cereal',\n","  \"Organic Honey Nut O's Cereal\",\n","  'Organic Strawberry Lemonade Fruit Juice Drink',\n","  'Sweet Greens and Lemon Vegetable and Fruit Juice Blend',\n","  'Organic Green Lemonade',\n","  'Grain Free Chicken Formula Cat Food'],\n"," ['Organic Roasted Turkey Breast',\n","  'Bartlett Pears',\n","  'Banana',\n","  'Organic Baby Arugula',\n","  'Organic Green Onions',\n","  'Organic Soft Wheat Bread',\n","  'Organic Strawberries',\n","  'Yellow Onions',\n","  'Michigan Organic Kale',\n","  'Creamy Almond Butter',\n","  'Large Lemon',\n","  'Hand Picked Pomegranate Seeds/Arils',\n","  'Organic Baby Spinach Salad',\n","  'Organic Eggs Large',\n","  'Organic Raspberries',\n","  'Green Bell Pepper',\n","  'Yellow Bell Pepper',\n","  'Organic Baby Carrots',\n","  'Slices Cheddar Cheese',\n","  'Clementines, Bag',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Blackberries',\n","  'Organic Brown Rice Cake Salt-Free',\n","  'Firm Tofu',\n","  'Soy Free Buttery Spread',\n","  'Total 0% Greek Yogurt',\n","  'Organic Jalapeno Pepper',\n","  'Beyond Chicken Grilled Strips',\n","  'Beyond Beef Beefy Crumble',\n","  'Medium Salsa'],\n"," ['Organic Large Extra Fancy Fuji Apple',\n","  'Organic Avocado',\n","  'Shredded Mild Cheddar Cheese',\n","  'Bag of Organic Bananas',\n","  'Coconut Water, Pure Organic',\n","  'Lime Sparkling Water',\n","  'Organic Grade A Large Brown Eggs',\n","  'Organic Raw Kombucha Gingerade',\n","  'Coconut Water & Pineapple Fruit',\n","  'Barista Blend Pure Almond Milk',\n","  'Classic Almond Butter',\n","  'Cold Brew Coffee Nitro Can',\n","  'Organi Cheddar Cheese Mild sliced',\n","  'Double Zipper Gallon Storage Bags',\n","  'Slider Storage Quart Bags',\n","  'Organic & Raw Grape Kombucha',\n","  'Honey Almond Butter W/ Pretzels',\n","  'Honey Roasted Almonds',\n","  'Gluten Free Cheddar Macaroni & Cheese Rice Pasta',\n","  'Gluten Free Multigrain Baked Crackers'],\n"," ['Banana',\n","  'Small Hass Avocado',\n","  'Unsweetened Almondmilk',\n","  'Organic Cilantro',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Red Vine Tomato',\n","  'Organic Whole Wheat Tortillas'],\n"," ['Chicken Drumsticks',\n","  'Deli Sliced Sharp Cheddar Cheese',\n","  'Iceberg Lettuce',\n","  'Honey Ham',\n","  'Diet Cola',\n","  'Hard Candy Original Flavors Candy',\n","  'Liquid Water Enhancer Orange Tangerine',\n","  'Classic Yellow Mustard',\n","  'Red Onions',\n","  'Sweet Peas',\n","  'Iodized Salt',\n","  'Light Multi-Grain English Muffins',\n","  'Milk Chocolate Nuggets'],\n"," ['Organic Extra Firm Tofu',\n","  'Organic Soy Tempeh',\n","  'Lemon Hummus',\n","  'Garlic Hummus',\n","  'Real Vegetable Chips Spiced Sweets',\n","  'Pure Irish Butter'],\n"," ['Fat Free Milk',\n","  'Cucumber Kirby',\n","  'Golden Sweet Potato',\n","  'Fresh Cut Baby Carrots',\n","  'Popped Sea Salt Wheat Thins'],\n"," ['Organic Baby Spinach',\n","  'Organic Blackberries',\n","  'Organic Blueberries',\n","  'Pink Lady Apples',\n","  'Cereal',\n","  'Organic Fresh Mozzarella'],\n"," ['Organic Chives',\n","  'Organic Avocado',\n","  'Organic Strawberries',\n","  'Organic Garlic',\n","  'Bag of Organic Bananas',\n","  'Organic Broccoli',\n","  'Mellow White Miso',\n","  'Organic Unsweetened Almond Milk',\n","  'Organic Carrot Bunch',\n","  'Organic Medium Salsa',\n","  'Organic Red Bell Pepper',\n","  'Walnut Halves & Pieces',\n","  'Vegan Apple Maple Breakfast Sausage',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Frozen Peas',\n","  'Ezekiel 4:9 Bread Organic Sprouted Whole Grain',\n","  'Ezekial 4:9 Organic Sprouted Blueberry Waffles',\n","  'Original Soy Milk',\n","  'Organic Nondairy Strawberry Cashew Yogurt',\n","  'Organic Cashew Nondairy Blueberry Yogurt',\n","  'Sprouted Sunflower Seeds',\n","  'Provolone Style Slices',\n","  'Parmesan Cheese Shreds',\n","  'Organic Crushed Red Pepper',\n","  'Italian Extra Virgin Olive Oil',\n","  'Low Sodium Refried Black Beans',\n","  'Bacon Seitan',\n","  'Organic Traditional 9\\\\\" Pie Shells 2 ct',\n","  'Organic Silken Tofu',\n","  'Almond Milk Ricotta',\n","  'Cheese Alternative Shreds, Mozzarella',\n","  'Vegan Butter',\n","  'Organic Vegan Sundried Tomato Nut Cheese',\n","  'Dairy-Free Chive Cream Cheese'],\n"," ['Bag of Organic Bananas',\n","  'Clementines',\n","  'Non Fat Greek Yogurt',\n","  'Old Fashioned Oatmeal',\n","  'Fresh Asparagus'],\n"," ['Half Tea & Half Lemonade',\n","  'Broccoli Carrots Sugar Snap Peas & Water Chestnuts',\n","  'Nonfat Icelandic Style Strawberry Yogurt',\n","  'Icelandic Style Skyr Blueberry Non-fat Yogurt',\n","  'Yellow Nectarines'],\n"," ['Banana',\n","  'Red Delicious Apple',\n","  'Organic 2% Reduced Fat Milk',\n","  'Diet Cola',\n","  'Fat Free French Vanilla Creamer'],\n"," ['Sharp Cheddar Cheese',\n","  'Deluxe Beef Stroganoff Hamburger Helper',\n","  'Thin Spaghetti Pasta',\n","  'Bathroom Tissue Softness & Strength, Double Rolls',\n","  'Russet Potato',\n","  'Tater Tots',\n","  'Strawberry on the Bottom Nonfat Greek Yogurt',\n","  'Reduced Fat 2% Milk',\n","  'Shredded Parmesan Cheese',\n","  'Premium Italian Bread',\n","  'Simple Favorites Chicken Fettuccini Frozen Entree',\n","  'Chocolate Ice Cream',\n","  'Boneless Skinless Chicken Breast Fillets',\n","  'Grilled white meat chicken in an apple reduction with cranberries, French cut green beans & carrots and whole wheat orzo pasta. Apple Cranberry Chicken',\n","  'Family Size Cookie Pack',\n","  'Medium Roast Original Blend Ground Coffee',\n","  'Classic Tender Beef Feast Cat Food',\n","  'Cucumber and Green Tea Body Wash',\n","  'Salted Caramel Core Ice Cream',\n","  'Gravy Lovers Chicken Feast Can Cat Food',\n","  'Baked Snack Crackers Original',\n","  'Old World Style Organic Traditional Pasta Sauce'],\n"," ['Organic Strawberries', 'Organic Blueberries'],\n"," ['Strawberries',\n","  'Fridge Pack Cola',\n","  'Seedless Red Grapes',\n","  'Seedless Watermelon',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Tomato Ketchup',\n","  'Taco Seasoning Mix Original',\n","  'Celery',\n","  'Creamy Peanut Butter',\n","  'Reduced Fat Milk 100% Lactose Free',\n","  'Classic Wheat Bread',\n","  'Boneless & Skinless Chicken Breast',\n","  'Baby Carrots',\n","  'Broccoli Bunch',\n","  'Fresh Romaine Lettuce head',\n","  'Royal Gala Apples',\n","  'Ranch Dressing',\n","  'Original Golden Grahams',\n","  \"Crunchy Oats N' Honey Granola Bars\",\n","  'Light Sour Cream',\n","  'Cheddar Cheese Finely Shredded',\n","  'Original Wheat Thins Crackers',\n","  'Nacho Cheese Taco Shells',\n","  'Original Syrup',\n","  'Milk Chocolate Chips Baking Pieces',\n","  'Original Steak & Chop Marinade',\n","  'Onion Soup & Dip Mix',\n","  'Jet Puffed Miniature Marshmallows',\n","  'Whole Grain Oatmeal Bread'],\n"," ['Large Alfresco Eggs',\n","  'Cold-pressed, Deliciously Hydrating Watermelon Water',\n","  'Brazilian Cheese Bread Original Cheddar and Parmesan',\n","  'Organic Blueberry Waffles'],\n"," ['Low Fat Cottage Cheese',\n","  'Roma Tomato',\n","  'Vegan Apple Maple Breakfast Sausage',\n","  'Happy Baby Spinach, Mango, and Pear Baby Food',\n","  'Pesto Tortellini  Bowls',\n","  'Organic Fat Free Milk',\n","  'Cage Free Grade AA Large White Eggs',\n","  'Pure Foods Sea Salt Iodized',\n","  'Organic Smoked Turkey Breast',\n","  'Apples + Strawberries Organic Nibbly Fingers',\n","  'Pears, Kale & Spinach Organic Baby Food',\n","  'Organic Fiber & Protein Pear Blueberry & Spinach Baby Food',\n","  'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale'],\n"," ['Ultra Soft Bathroom Tissue Double Rolls',\n","  'Original Potato Chips',\n","  'Cola Soft Drink',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Donettes Frosted Mini Donuts',\n","  'Hardwood SmokedCenter Cut Original Bacon',\n","  'Sriracha Hot Chili Sauce'],\n"," ['Mixed Vegetables',\n","  'Strawberries',\n","  'Golden Pineapple',\n","  'Black Plum',\n","  'Ultra Concentrated Original Scent Dishwashing Liquid',\n","  'Pineapple Strawberry Sparkling Water',\n","  'Polska Kielbasa Sausage',\n","  'Stir Fry Mix',\n","  'Suddenly Salad Classic Pasta Kit Classic',\n","  'Light Creamy Swiss Flavor Spreadable Cheese Wedges',\n","  'Multi-Seed Rosemary + Olive Oil Crackers',\n","  'Roasted Vegetable Multi-Grain Crackers',\n","  'Crunchy Granola Raisin Bran'],\n"," ['Large Lemon',\n","  'Organic Cucumber',\n","  'Organic Yellow Onion',\n","  'Black Seedless Grapes',\n","  'Organic Peeled Garlic',\n","  'Organic Dill',\n","  'Large Grapefruit',\n","  'Organic Cherry Tomatoes'],\n"," ['White Multifold Towels'],\n"," ['Organic Brussels Sprouts'],\n"," ['Honeycrisp Apple',\n","  'Small Hass Avocado',\n","  'Organic Baby Spinach',\n","  'Red Raspberries',\n","  'Organic Zucchini',\n","  'Bag of Organic Bananas',\n","  'Large Lemon',\n","  'Large Alfresco Eggs',\n","  'Limes',\n","  'Asparagus',\n","  'Original Hummus',\n","  'Sweet Onion',\n","  'Organic Broccoli Crowns',\n","  'Italian Sparkling Mineral Water',\n","  'Organic Red Lentils',\n","  'Globe Eggplant',\n","  'Acorn Squash',\n","  'Organic Five Spice Tofu Nuggets',\n","  'Culinary Coconut Milk',\n","  'Organic Original Tofu Veggie Burger',\n","  'Organic SprouTofu Extra Firm Tofu',\n","  'Organic Raspberry Ginger',\n","  'Spicy Yuba Noodles',\n","  'Shiitake Mushroom',\n","  'Organic Lightly Salted Brown Rice Cakes',\n","  'Baby Arugula',\n","  'Country Peach Passion Herbal Tea',\n","  'Organic Farro',\n","  'Organic Fresh Carrot Chips',\n","  'Celery Sticks',\n","  'Organic Gluten Free Chia Plus with Quinoa & Amaranth Waffles',\n","  'Gluten Free Millet-Chia Bread'],\n"," ['Frozen Whole Strawberries'],\n"," ['Organic Grape Tomatoes',\n","  'Bag of Organic Bananas',\n","  'Organic Hot Salsa',\n","  'Organic Romaine',\n","  'Blue Eucalyptus & Lavender Natural Laundry Detergent',\n","  'Sweet Onions',\n","  'White Sandwich Bread',\n","  'Grovestand Lots of Pulp Orange Juice'],\n"," ['Banana',\n","  'Organic Avocado',\n","  'Organic Red Onion',\n","  'Berry Medley',\n","  'Organic Spring Mix Salad',\n","  'Organic Baby Broccoli',\n","  'Smoked Turkey Breast Slices',\n","  'Organic Fuji Apple',\n","  'Chicken & Maple Breakfast Sausage',\n","  'Go Lean Cereal',\n","  'Sliced Mushrooms',\n","  'Teriyaki Veggie Burgers',\n","  'Balsamic Vinaigrette',\n","  'Organic Roasted Red Pepper & Tomato Soup',\n","  'Crunchy Peanut Butter'],\n"," ['Organic Whole Milk',\n","  'Uncured Slow Cooked Ham',\n","  'Sharp Cheddar Cheese',\n","  'Organic Baby Spinach',\n","  'Strawberries',\n","  'Organic Russet Potato',\n","  'Bag of Organic Bananas',\n","  'Organic Granny Smith Apple',\n","  'ZBar Organic Chocolate Brownie Energy Snack',\n","  'Organic Extra Firm Tofu',\n","  'Limes',\n","  'Carrots',\n","  'Organic Gala Apples',\n","  'Red Vine Tomato',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Kiwi',\n","  'Whole Wheat Bread',\n","  'Organic Blueberry Waffles',\n","  'Cucumber Kirby',\n","  'Angel Hair Pasta',\n","  'White Corn',\n","  'Skillet Refried Red Beans Sautéed With Onion & Tomatillo',\n","  'Mild Pico De Gallo Bean and Rice Chips',\n","  'Iced Oatmeal Cookie Kid Z Bar',\n","  'Kids Organic Chocolate Chip ZBars',\n","  'Organic Plain Kefir',\n","  'Red Chard Greens Bunch',\n","  'Rosemary Olive Oil Bread'],\n"," ['Gluten Free Whole Grain Bread',\n","  'Shoestring Fries',\n","  'Organic Strawberries',\n","  'Panda Puffs Peanut Butter Cereal',\n","  'Limes',\n","  'Organic Fuji Apple',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Golden Delicious Apple',\n","  'Organic Dark Chocolate Peanut Butter Cups',\n","  'Organic Banana',\n","  'Gluten Free Panko Breadcrumbs',\n","  'Pimento Martini Olives',\n","  'EnviroKidz Gluten Free & Wheat Free Gorilla Munch Corn Puff Cereal',\n","  'Gluten Free Pretzel Twists',\n","  'Flat Toothpicks',\n","  'Ziti & Meatballs',\n","  'Original Gluten Free Spring Rolls',\n","  'Hand Soap Lavender & Coconut',\n","  'Cream Top Smooth & Creamy Vanilla Yogurt',\n","  'Cream Top Strawberry on the Bottom Yogurt',\n","  'Organic Maple Creamline Yogurt'],\n"," ['Organic Whole Milk',\n","  'Organic AppleApple',\n","  'Organic Whole String Cheese',\n","  'Grated Parmesan',\n","  'Natural Chicken & Sage Breakfast Sausage',\n","  'Sliced Black Olives',\n","  'Organic Apple Banana GoGo Squeez'],\n"," ['Banana',\n","  'Strawberries',\n","  'Large Alfresco Eggs',\n","  'Organic Raspberries',\n","  'Chocolate Chip Cookies',\n","  'Sparkling Natural Mineral Water',\n","  'Vegan Oatmeal Chocolate Chip Cookies',\n","  'Vegan Garlic & Roasted Veggie Ravioli',\n","  'Almond Breeze Original Almond Milk',\n","  'Meyer Lemon Miracle Tart',\n","  'Mandarin Clementine',\n","  'Sunday Pot Roast Slow Cook Sauce',\n","  'Muffins, Mini, Flax, Chocolate Brownie',\n","  'Fusilli No. 34'],\n"," ['Banana',\n","  'Organic Avocado',\n","  'Organic Zucchini',\n","  'Organic Garlic',\n","  'Organic Granny Smith Apple',\n","  'Bunched Cilantro',\n","  'Limes',\n","  'Green Onions',\n","  'Mild Italian Chicken Sausage',\n","  'Crushed Red Pepper'],\n"," ['Banana'],\n"," ['Banana',\n","  'Orange Bell Pepper',\n","  'Michigan Organic Kale',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Organic Yellow Onion',\n","  'Organic Navel Orange',\n","  'Organic Carrot Bunch',\n","  'Limes',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Low Sodium Chicken Cooking Stock',\n","  'Organic Thyme',\n","  'Ground Allspice',\n","  'Organic Green Beans',\n","  'Organic Red Potatoes',\n","  'Greek Salad',\n","  'Garnet Sweet Potato (Yam)',\n","  'Blueberry Muffin Bar',\n","  'Coconut Cream Pie',\n","  'Lemon Fruit & Nut Food Bar'],\n"," ['Bunched Cilantro',\n","  'Limes',\n","  'Original No Pulp Pure 100% Florida Orange Juice',\n","  'Ground Ginger'],\n"," ['Sharp Cheddar Cheese',\n","  'Organic Baby Arugula',\n","  'Organic Hass Avocado',\n","  'Large Lemon',\n","  'Strawberry Preserves',\n","  'Brazilian Cheese Bread Original Cheddar and Parmesan',\n","  'Organic Raw Kombucha Gingerade',\n","  'Cheese, Sharp Cheddar'],\n"," ['Total 2% All Natural Plain Greek Yogurt',\n","  'Alpine Spring Water',\n","  'Aerosol',\n","  \"Major Dickason's Blend Ground Coffee Dark Roast\",\n","  'House Blend Deep Roast Ground Coffee',\n","  'French Roast Ground Coffee',\n","  'Pull-Ups Training Pants Learning Designs 3T-4T 32-40 Lbs'],\n"," ['Raspberries',\n","  'Organic Strawberries',\n","  'Organic Greek Whole Milk Blended Vanilla Bean Yogurt'],\n"," ['Oranges',\n","  'Hass Avocados',\n","  'Organic Baby Carrots',\n","  'Pineapple Chunks',\n","  'Organic Fuji Apples',\n","  'Frozen Organic Blueberries',\n","  'Organic Raisins'],\n"," ['Bag of Organic Bananas',\n","  'Chocolate Protein Soy & Dairy Protein Shake',\n","  'Vanilla Protein Protein Shake',\n","  '7 Whole Grain Nuggets Cereal',\n","  'Organic Cinnamon Harvest Cereal'],\n"," ['Raspberries',\n","  'Organic Blueberries',\n","  'Chicken Tortilla Soup',\n","  'Raw Shrimp',\n","  \"Hot'n Spicy Chicken Wings\"],\n"," ['Complete™ ActionPacs™ Fresh Scent Dishwasher Detergent',\n","  'Red Machine Juice Smoothie',\n","  'All Natural Berry Blast 100% Juice Smoothie'],\n"," ['Organic Avocado',\n","  'Organic Red Onion',\n","  'Organic Extra Firm Tofu',\n","  'Organic Low Sodium Chicken Broth',\n","  'Grated Parmesan',\n","  'Organic Short Grain Brown Rice',\n","  'Roasted Red Pepper Hummus',\n","  'Vanilla Almond Breeze',\n","  'No Salt Added Black Beans',\n","  'Fat Free Skim Milk',\n","  'Soft Potato Bread',\n","  'Pinto Beans No Salt Added',\n","  'Organic No Salt Added Diced Tomatoes',\n","  'Cajun Street Seasoning'],\n"," ['Anejo Tequila', 'Original Vanilla Nutrition Shake', 'Hass Avocado Bag'],\n"," ['Fridge Pack Cola',\n","  \"Pirate's Booty Aged White Cheddar Baked Rice and Corn Puffs\",\n","  'Colby-Jack Cheese Sticks',\n","  'Beef Franks',\n","  'Nacho Cheese Tortilla Chips',\n","  '2% Reduced Fat DHA Omega-3 Reduced Fat Milk',\n","  'Turkey & Cheddar Cracker Stackers',\n","  'Lunchables Chicken Dunks',\n","  'Ham & American Funpack Lunchable',\n","  'Pure Life Splash Wild Berry Flavored Water',\n","  'Sweet & Salty Nut Peanut Granola Bars',\n","  'Deep Dish Minis Pepperoni Pizza',\n","  'Big Chewy Chocolate Chip Granola',\n","  'Singles Pepperoni French Bread Pizzas',\n","  'Sweet & Salty Nut Cashews Granola',\n","  'Deluxe Honey Roasted Whole Cashews',\n","  'Steamfresh Super Sweet Corn',\n","  'Mega Stuffed Cookies',\n","  'Grape Nutrient Enhanced Water Beverage Mix',\n","  'Mini Nilla Wafers',\n","  'Pop-Tarts Frosted Cookies & Creme Toaster Pastries',\n","  'Spongebob Squarepants Go Gurt Strawberry & Cotton Candy Low Fat Yogurt Value Pack',\n","  \"Kellogg's Pop-Tarts Frosted Strawberry Pastries\",\n","  'Breaded Mozzarella Sticks',\n","  'All Natural Marinara Pasta Sauce',\n","  'Oreo  Ice Cream Sandwiches',\n","  \"Kellogg's Pop-Tarts Frosted S'mores Pastries\",\n","  'Mega Pack Everyday Plates',\n","  \"Pralines 'n Cream Ice Cream\",\n","  'Outlast Invisible Solid, Clear Gel, Completely Clear Deodorant',\n","  'Refreshing Remover Cleansing Towelettes',\n","  'Gain Original Tall Ktchen Bags',\n","  'Chips With Sea Salt',\n","  'Star Wars Macaroni and Cheese'],\n"," ['Dry Roasted Almonds'],\n"," ['Banana',\n","  'Organic Strawberries',\n","  'Yellow Onions',\n","  'Dairy Free Vanilla Coconut Milk',\n","  'Organic Granny Smith Apple',\n","  'Organic Cucumber',\n","  'Almonds & Sea Salt in Dark Chocolate',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Dark Chocolate Peanut Butter Cups',\n","  'Intense Dark Chocolate with Sea Salt & Roasted Almonds',\n","  'Sliced Black Olives',\n","  'Medium Cheddar',\n","  'Taco Seasoning'],\n"," ['Michigan Organic Kale',\n","  'Organic Baby Broccoli',\n","  'Organic Yellow Onion',\n","  'Pure Irish Butter',\n","  'Organic Fennel Seed',\n","  'Ground Pork',\n","  'Organic Rice Vinegar',\n","  '100% Pure Sesame Seed Oil',\n","  'Brussels Sprouts',\n","  'Organic Green Cabbage'],\n"," ['Large Lemon',\n","  'Low Fat 1% Milk',\n","  'Organic Diced Tomatoes',\n","  '100% Whole Wheat Bread',\n","  'Hass Avocado',\n","  'Green Onions',\n","  'Sparkling Lemon Water',\n","  'Iceberg Lettuce',\n","  'Creamy Peanut Butter',\n","  'Organic Low Fat Chocolate Milk',\n","  'Pitted Kalamata Olives',\n","  'Dutch Yellow Pee Wee',\n","  'Sauce for Lettuce Wrap',\n","  'Reduced Fat Feta Cheese',\n","  'Roasted Salted Almonds'],\n"," ['Boomchickapop Sweet & Salty Kettle Corn'],\n"," ['Frozen Organic Blueberries'],\n"," ['Organic Baby Spinach',\n","  'Organic Strawberries',\n","  'Organic Hass Avocado',\n","  'Natural Artesian Bottled Water',\n","  'Organic Granny Smith Apple',\n","  'Organic Raspberries',\n","  'Organic Good Seed Bread',\n","  'Organic Whole Grassmilk Milk',\n","  'Corn Tortillas',\n","  'Organic Turkey Bacon',\n","  'Alpine Spring Water',\n","  'Organic Unrefined-Unfiltered Extra Virgin Olive Oil',\n","  'Organic Whole Grain Wheat English Muffins'],\n"," ['Organic Strawberries',\n","  'Organic Red Onion',\n","  'Limes',\n","  'Carrots',\n","  'Organic Mint',\n","  'Organic Spaghetti Squash',\n","  'Loose White Button Mushrooms'],\n"," ['Organic Thyme', 'Organic Sage', 'Country Loaf', 'Ndimaini'],\n"," ['Organic Blackberries',\n","  'Raspberries',\n","  'Organic Blueberries Clamshell',\n","  'Tall Kitchen Bag With Febreze Odor Shield',\n","  'Pretzel Slider Buns'],\n"," ['Red Kidney Beans', 'Fruit Punch'],\n"," ['Organic Extra Virgin Olive Oil',\n","  'Tall Kitchen Bag With Febreze Odor Shield',\n","  'Aluminum Foil'],\n"," ['Orange Juice', 'Honey Turkey', 'Miracle Whip Light Dressing'],\n"," ['Small Hass Avocado',\n","  'Organic Strawberries',\n","  'Organic Red Onion',\n","  'Large Lemon',\n","  'Sea Salt & Vinegar Potato Chips',\n","  'Limes',\n","  'Oven Roasted Turkey Breast',\n","  'Hummus, Hope, Original Recipe',\n","  'Marinara Sauce',\n","  'Milk and Cookies Ice Cream',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  '1% Low Fat Milk',\n","  'Blood Oranges',\n","  'Grain Free Chicken Formula Cat Food',\n","  'Large Grapefruit',\n","  'Organic Baby Food Banana Beet & Blueberry',\n","  'Brownie Crunch Bar Dark Chocolate',\n","  'Honey Low Fat Grahams',\n","  'Organic Summer Strawberry Bunny Fruit Snacks',\n","  'Whole Grain Cheddar Baked Goldfish Crackers',\n","  'Grain Free Turkey Canned Cat Food',\n","  'Chicken & Apple Breakfast Sausage',\n","  'Unsweetened Cashew Milk',\n","  'Organic Yokids Lemonade/Blueberry Variety Pack Yogurt Squeezers Tubes',\n","  'Whole White Mushrooms',\n","  'Veggie-Style Mini Corn Dogs',\n","  'Organic Corn',\n","  'Raw Chocolate Cacao Nibs',\n","  'Red Beans & Rice New Orleans Recipe',\n","  'Organic Dijon Mustard',\n","  'Red Grapes',\n","  'Mini Italian Eggplant',\n","  'Gluten-Free Chicken Nuggets'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Blackberries',\n","  'Organic Strawberries',\n","  'Organic Rainbow Chard Vegetable',\n","  'Bag of Organic Bananas',\n","  'Organic Baby Broccoli',\n","  'Frozen Organic Wild Blueberries',\n","  'Organic Whole Strawberries',\n","  'Parchment Paper',\n","  'Organic Beef Bone Broth',\n","  'Organic Large Green Asparagus'],\n"," ['Organic Peeled Whole Baby Carrots',\n","  'Organic Red Potato',\n","  'Certified Organic Brown Gravy Seasoning Mix',\n","  'Organic Asparagus Spears',\n","  'Cashew Milk Salted Caramel Cluster Non-Dairy Frozen Dessert',\n","  'Cherry Vanilla Granola'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Baby Arugula',\n","  'Large Alfresco Eggs',\n","  'Organic Romaine',\n","  'Sparkling Natural Mineral Water',\n","  'Tulips 10 Stem',\n","  'Organic Cauliflower',\n","  'Organic Vanilla Lightly Sweetened Almond Milk',\n","  '18-in-1 Hemp Pure-Castile Soap Lavender',\n","  'Coconut Lemon 3-in-1 Hand Face Body Lotion',\n","  'Cashew Milk Snickerdoodle Non-Dairy Frozen Dessert',\n","  'Gluten Free Sugar Cones'],\n"," ['Sparkling Water Grapefruit',\n","  'Organic Whole String Cheese',\n","  'Organic Gala Apples',\n","  'Lime Sparkling Water',\n","  '2-Ply 100% Recycled White Facial Tissues',\n","  'Lemongrass Citrus Scent Disinfecting Wipes'],\n"," ['0% Greek Strained Yogurt'],\n"," ['Banana',\n","  'Strawberries',\n","  'Pure Sparkling Water',\n","  'Organic Basil',\n","  'Organic Raspberries',\n","  'Sparkling Lemon Water',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Vanilla Almond Fit Granola',\n","  'Cucumber Kirby',\n","  'Organic Mint',\n","  'Plain Bagelettes',\n","  'Everything Bagels',\n","  'Sesame Bagels',\n","  'Organic Sprouted Wheat Bagels'],\n"," ['Organic Strawberries', 'Blue Machine Boosted 100% Juice Smoothie'],\n"," ['Organic Peeled Whole Baby Carrots',\n","  '100% Whole Wheat Bread',\n","  'Organic Ginger Root',\n","  'Organic Iceberg Lettuce',\n","  'Lemon Verbena Hand Soap',\n","  'Orange Juice',\n","  'Organic Super Fruit Punch Juice Drink',\n","  'Goodness Grapeness Organic Juice Drink',\n","  'Gluten Free Blueberry Waffles',\n","  'Organic Eggplant'],\n"," ['Banana',\n","  'Uncured Hickory Smoked Sunday Bacon',\n","  'Spinach Pizza',\n","  'Organic Reduced Fat Milk',\n","  'Organic Lemon',\n","  'Smoked Turkey Breast Slices',\n","  'Grass Fed Ground Beef',\n","  'Red Vine Tomato',\n","  'Uncured Black Forest Ham',\n","  'Salted Sweet Cream Butter',\n","  'Chorizo Seitan',\n","  'Almond Breeze Chocolate Almond Milk',\n","  'Arborio White Rice',\n","  'Organic Chocolate Chip Chewy Granola Bars',\n","  'Littleneck Clams'],\n"," ['Organic Grape Tomatoes',\n","  'Fat Free Milk',\n","  'Gluten Free Everything Baked Cracker',\n","  'Crackers, Puffed, Lightly Salted Corn',\n","  'Whole Hearts of Palm',\n","  'Gluten Free Crunchy Vanilla Cereal',\n","  'Deluxe Thick Apricot Fruit Spread',\n","  'Sparkling Probiotic Drink Strawberry Acai Coconut'],\n"," ['Enriched Vanilla Rice Drink',\n","  'Large Grade AA Cage Free Eggs',\n","  'Pineapple Coconut Water',\n","  'Coconut Water with Peach & Mango',\n","  'Original Rice Drink',\n","  'Zico Natural Pure Premium Coconut Water',\n","  'Teriyaki Beef Jerky'],\n"," ['with Crispy Almonds Cereal',\n","  'Movie Theater Butter Microwave Popcorn',\n","  'Chunky Peanut Butter'],\n"," ['Half & Half',\n","  'Sour Cream',\n","  'Fat Free Milk',\n","  'Caesar Salad Kit',\n","  'Wavy Original Potato Chips',\n","  'Toasted Coconut Almonds',\n","  'Creamy Chocolate Frosting',\n","  'Decadent Classic Yellow Cake Mix',\n","  'Mandarin Orange Sparkling Natural Spring Water'],\n"," ['Banana',\n","  'Granny Smith Apples',\n","  'Strawberries',\n","  'Organic Zucchini',\n","  'Orange Bell Pepper',\n","  'Yellow Onions',\n","  'Blueberries',\n","  'Large Lemon',\n","  'Limes',\n","  'Clementines, Bag',\n","  'Red Onion',\n","  'Gala Apples',\n","  'Green Beans',\n","  'Sweet Grape Tomatoes',\n","  'Cinnamon Swirl Raisin Bread',\n","  'Original Citrus Sparkling Flavored Soda',\n","  '50/50 Spring Mix & Baby Spinach',\n","  'Penne Pasta',\n","  'Mild Italian Sausage',\n","  'Multigrain Baguette',\n","  'Homemade Vanilla Ice Cream',\n","  'Parmesan Cheese'],\n"," ['Red Raspberries',\n","  'Made With Organic Beans & Rice Burrito Non-Dairy',\n","  'Tofu Scramble Pocket Sandwich',\n","  'Vanilla Almond Milk Yogurt',\n","  'Avocado Roll'],\n"," ['Organic Whole Milk', 'Organic Blackberries', 'Goat Milk', 'Mint'],\n"," ['Pears',\n","  'Whole Grain Cheddar Baked Snack Crackers',\n","  'Red Delicious Apples',\n","  'Sweet & Salty Nut Granola Bars Peanut'],\n"," ['Bag of Organic Bananas',\n","  'Berry Medley',\n","  'Coconut Almond Unsweetened Creamer Blend',\n","  'Coconut Almond Creamer Blend',\n","  'Original Veggie Straws',\n","  'Gluten Free SpongeBob Spinach Littles'],\n"," ['Trail Mix'],\n"," ['Marinara Pasta Sauce',\n","  'Bag of Organic Bananas',\n","  'Freshly Squeezed Orange Juice',\n","  'Blueberry Muffin Bar',\n","  'Garden Vegetable Salad Roll',\n","  'Organic Sprouted English Muffin',\n","  'Tomatillo Salsa',\n","  'Milk Free Better Than Sour Cream',\n","  'Organic Cake Mix Vanilla',\n","  'Vanilla Cake Mix',\n","  'Chocolate Cake Mix',\n","  'Organic Chocolate Cake Mix',\n","  'Cherry Pie Fruit & Nut Bar'],\n"," ['Draft Sake', 'Natural Alpine Spring Water'],\n"," ['Organic Roasted Turkey Breast',\n","  'Bag of Organic Bananas',\n","  'Organic Granny Smith Apple',\n","  'Apple Honeycrisp Organic',\n","  'Organic Raspberries',\n","  'Monterey Jack Cheese',\n","  'Sparkling Grapefruit',\n","  'Honest Face, Hand, & Baby Wipes',\n","  'Crescent Rolls',\n","  'Broccoli & Apple Stage 2 Baby Food',\n","  'Organic Vanilla Whole Milk Yogurt',\n","  'Organic Classic Marinara Pasta Sauce',\n","  'Organic 90% Ground Beef',\n","  'Free & Clear Laundry Detergent, 3x Concentrated, HE',\n","  'Free & Clear Bleach'],\n"," ['Organic Strawberries',\n","  'Vanilla Almond Breeze',\n","  'Natural Spring Water',\n","  'Chocolate Protein Soy & Dairy Protein Shake',\n","  'Organic Summer Strawberry Bunny Fruit Snacks',\n","  'Natural Flavor Butter Popcorn'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Blackberries',\n","  'Strawberries',\n","  '2% Reduced Fat Milk',\n","  'Strawberry Preserves',\n","  'Aluminum Foil',\n","  'Honey Wheat Enriched Bread',\n","  'Strawberry Flavored Organic Z Fruit Rope',\n","  'House Blend Medium Keurig Brewed K-Cups Ground Coffee',\n","  'Kaedama Ramen Noodles',\n","  'Bunched Carrots',\n","  'Large Pineapple Chunks',\n","  'Pork Egg Roll',\n","  'Chicken Quesadillas',\n","  'Organic English Seedless Cucumber',\n","  'Sweet Cream Salted Butter',\n","  'Chocolate Brownie Kid Z Bar',\n","  'Crunchy Sunflower Seed Bites Sea Salt',\n","  'Original Crispy Apple Chips',\n","  'Just Fruit Salad'],\n"," ['Sparkling Water Grapefruit',\n","  'Total 2% Lowfat Greek Strained Yogurt with Peach',\n","  'Bag of Organic Bananas',\n","  'Organic Reduced Fat Milk',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Organic Carrot Bunch',\n","  'Organic Baby Carrots',\n","  'Organic Broccoli Crowns',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  'Mango Chunks',\n","  'GOLEAN Crunch! Cereal',\n","  'Fresh Ciliegine Mozzarella Cheese',\n","  \"Spicy Chik'n Veggie Protein Patties\",\n","  'French Roast Whole Bean Coffee',\n","  'Organic Homestyle Waffles'],\n"," ['Garlic',\n","  'Dairy Free Unsweetened Coconut Milk',\n","  'Green Bell Pepper',\n","  '100% Whole Wheat Bread',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Organic Fancy Shredded Mozzarella Cheese',\n","  'Mini 8\\\\\" Italian Pizza Crusts',\n","  'Gluten Free Pretzel Twists',\n","  'Perrier Lime',\n","  'Hot Salsa',\n","  'Organic Bunny Fruit Snacks Berry Patch',\n","  'Crunchy Organic Dark Roasted Peanut Butter',\n","  'Mashed Sweet Potatoes',\n","  'Protein Caramel Nut Chewy Bars',\n","  \"Spoon Size Wheat 'n Bran Shredded Wheat Cereal\",\n","  'Chopped Walnuts',\n","  'Flame Grilled Chicken Breast Strips',\n","  'Mild Banana Pepper Rings',\n","  'Organic Half Spring Mix',\n","  'Original Pepperoni',\n","  'Dark Espresso Roast Whole Bean Coffee',\n","  'Cheese Plate Spanish'],\n"," ['Curate Cherry Lime Sparkling Water',\n","  'Caesar Salad Kit',\n","  'Cran-Raspberry Flavored Sparkling Water',\n","  'Hot Calabrese Salame with Natural Gouda Cheese & Toasted Rounds Small Plates',\n","  'Diet Coke',\n","  'Craveables Supreme Pizza',\n","  'Craveables Pepperoni Pizza',\n","  'The Original Whole Bean Coffee',\n","  'Coldwater High Efficiency Liquid Laundry Detergent',\n","  'Green Pepper Sauce',\n","  'Hot Sauce',\n","  'Movie Theater Butter'],\n"," ['Boneless Skinless Chicken Breasts',\n","  'Organic Flax Plus Multibran Flakes',\n","  'Organic Mixed Vegetables',\n","  'Grilled Chicken Breast Strips',\n","  'Organic Heavy Whipping Cream',\n","  'Ground Turkey Breast',\n","  'Original No Pulp Pure 100% Florida Orange Juice',\n","  'Organic Oat Non-Dairy Original Beverage',\n","  '100% Spring Water',\n","  'California White Jasmine Rice',\n","  'Orange Strawberry Banana Juice'],\n"," ['Honeycrisp Apple',\n","  'Seedless Red Grapes',\n","  'Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Organic Navel Orange',\n","  'Organic Whole String Cheese',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Splits\\\\\" Pretzels Original',\n","  'Butter Crisps Wafer Cookies'],\n"," ['Whole Milk',\n","  'Bag of Organic Bananas',\n","  'Whole Milk Plain Yogurt',\n","  'Mixed Berries Whole Milk Icelandic Style Skyr Yogurt',\n","  'Vanilla Skyr Style Yogurt',\n","  'Strawberry Rhubarb Yogurt',\n","  'Strained Whole-Milk Yogurt Blueberry'],\n"," ['Organic Half & Half',\n","  'Banana',\n","  'Organic Avocado',\n","  'Organic Strawberries',\n","  '90% Lean Ground Beef',\n","  'Large Alfresco Eggs',\n","  'Cauliflower',\n","  'Thin And Crispy Corn Tortilla Chips',\n","  'Ancient Grain Original Granola',\n","  'Rolled Oats',\n","  'Medium Guajillo Roasted Garlic & Tomatillo Salsa',\n","  'Organic Cheddar Snack Mix'],\n"," ['Blood Orange Italian Soda'],\n"," ['Granny Smith Apples',\n","  'Unsweetened Almondmilk',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Cinnamon Raisin Bread',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Boomchickapop Sea Salt Popcorn',\n","  'Cookies, Chocolate Chip Walnut',\n","  'Monterey Jack Cheese',\n","  'Sour Cream & Onion Potato Chips',\n","  'Original Hummus',\n","  'Blackberry Yogurt',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Classic Granola',\n","  'Organic Bagged Mini Dark Peanut Butter',\n","  'Crunchy Sunflower Seed Bites Sea Salt',\n","  'Olive Tortilla Chips',\n","  'Sweet & Salty Kettlecorn',\n","  'Extra Cheesy Cheddar Bunnies Crackers',\n","  'Organic Apple Rings',\n","  'Salt & Pepper Krinkle Chips',\n","  'Pineapple Yogurt 2%',\n","  'Total 0% Raspberry Yogurt',\n","  'Krinkle Cut Classic Barbecue Potato Chips'],\n"," ['Frosted Chocolate Cup Cakes  with Creamy Filling',\n","  'Flip™ Low-Fat Almond Coco Loco Lowfat Greek Yogurt',\n","  'Original Chocolate Chip Cookies',\n","  'Island Fruits Fruit Snacks',\n","  'Mixed Fruit Fruit Snacks',\n","  'Unsalted Peanuts',\n","  'Roasted & Salted Pistachios',\n","  'Original Cream Cheese',\n","  'Lower Sugar Maple & Brown Sugar Instant Oatmeal',\n","  'Flip Coffee Break Bliss Greek Yogurt',\n","  'Flip Peanut Butter Dream Greek Yogurt',\n","  'Flip Chocolate Haze Craze Low-Fat Greek Yogurt',\n","  'Carmel Peanut Perfectio',\n","  'Chocolate Chip Mini Muffins',\n","  'Double Stuf Oreo Sandwich Cookies',\n","  'Chewy Chocolate Chip Cookies',\n","  'Minis Mix Variety Bag',\n","  'Assorted Chocolate Miniatures Chocolate Candy Bars',\n","  'Classic Mix Variety',\n","  'Cola Soda',\n","  'Coke Classic',\n","  'Basic Select-A-Size Paper Towels'],\n"," ['Banana',\n","  'Everything Bagels',\n","  'Classic Mix Variety',\n","  'Chocolate Wafers Candy Bar',\n","  'Rice Krispies Treats Original Crispy Marshmallow Squares',\n","  'Half And Half Ultra Pasteurized',\n","  'Vitaminwater Zero Variety Pack',\n","  'Original Sparkling Mountain Spring Water'],\n"," ['Cookie Tray', 'Pure Clover Honey'],\n"," ['Cage Free Brown Eggs-Large, Grade A',\n","  'Diet Dr.Pepper Soda Pack',\n","  'Beef Feast in Roasted Beef Flavor Gravy Cat Food',\n","  'Deli Fresh Rotisserie Seasoned Chicken Breast',\n","  'Breakfast Blend Medium Keurig Brewed K-Cups Ground Coffee',\n","  'Black Cherry',\n","  'Unscented 1000 Sheets Per Roll Bathroom Tissue',\n","  'Extended Moisture Body Lotion',\n","  'Good News! Plus Disposable Razors',\n","  'Paper Towels Choose-A-Sheet, Mega Rolls, One-Ply',\n","  'Sweeper Open Window Fresh Scent Wet Mopping Cloths Refill'],\n"," ['Sustainably Soft Bath Tissue',\n","  'Organic Mini Sandwich Crackers Peanut Butter',\n","  'Organic Kosher Dill Pickles',\n","  'Organic Blackberry Sorbet Bars',\n","  'Organic Kids Clearly Grape',\n","  'Organic Maple & Onion Baked Beans',\n","  'Baking Soda',\n","  'Sweet Rival Sesame Butter + Dates Macrobar'],\n"," ['Organic Avocado',\n","  'Strawberries',\n","  'Bag of Organic Bananas',\n","  'Organic Granny Smith Apple',\n","  'Organic Cucumber',\n","  'Sinfully Sweet Campari Tomatoes',\n","  'Ground Turkey Breast',\n","  'Prosciutto, Americano'],\n"," ['2% Reduced Fat Organic Milk',\n","  'Trop50 No Pulp Orange Juice w/ Calcium + Vitamin D, 50% Less Sugar & Calories',\n","  'Clasico Nacho Chipotle Tortilla Chips',\n","  'Pumpkin Pie Gelato',\n","  'Lemon Sparkling Natural Spring Water'],\n"," ['Organic Strawberries',\n","  'Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Organic Large Grade A Brown Eggs',\n","  'Organic White Onions',\n","  'Multigrain Sandwich Bread'],\n"," ['Honeycrisp Apple',\n","  'Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Organic Hothouse Cucumbers',\n","  'Pure Sparkling Water',\n","  'Dried Mango',\n","  'Organic Broccoli',\n","  'Limes',\n","  'Organic Large Brown Eggs',\n","  'Asparagus',\n","  'Uncured Genoa Salami',\n","  'Organic White Onions',\n","  'Organic Jalapeno Pepper',\n","  'Uncured Black Forest Ham',\n","  'Chicken Breast Kabob',\n","  'Kumato Tomatoes',\n","  'Ginger, Pickled Sushi'],\n"," ['Organic Yellow Onion',\n","  'Sparkling Natural Mineral Water',\n","  'Reduced Fat Milk 2%'],\n"," ['Slices Cheddar Cheese',\n","  'Original Sauce',\n","  'Water',\n","  'Sparkling Natural Mineral Water',\n","  'Marcona Almonds',\n","  'Light and Lean Quinoa Black Beans with Butternut Squash and Chard',\n","  'Pineapple Apple Mint Organic Cold Pressed Juicd',\n","  'Maple Glazed Pecan & Sea Salt Bar',\n","  'Cappuccino Swirl Non Dairy Frozen Dessert',\n","  'Wasabi Crunchy Chickpeas',\n","  'Almond Butter',\n","  'Lime Ginger Lemon Agave',\n","  'Water, Natural Spring',\n","  'Chicken Flavored Bone 4 Inch Dog Chew',\n","  'Indian Cuisine Bengal Lentils',\n","  'Jodhpur Lentils',\n","  'Gluten and Dairy Free Rice Macaroni and Cheeze',\n","  'Eucalyptus Harvest Aromatherapy Mist',\n","  'Sleep Aid, Calms Forte, Tablets'],\n"," ['Unsweetened Almondmilk',\n","  'Orange Bell Pepper',\n","  'Red Peppers',\n","  'Broccoli Crown',\n","  'Red Vine Tomato',\n","  'Lightly Salted Rice Cakes',\n","  'Sliced White Mushrooms',\n","  'Cola Soft Drink',\n","  'Coffee Ice Cream',\n","  'Snow Peas',\n","  'Reduced Fat Sour Cream',\n","  'Guacamole Dip',\n","  'Organic Diced Tomatoes Fire Roasted with Medium Green Chilies',\n","  'Original Wheat Thins',\n","  'Frosted Mini-Wheats Original Cereal',\n","  'Fully Cooked Original Bacon',\n","  'Lemon-Lime 12 Pack Soda',\n","  'Belgian Chocolate Chocolate Ice Cream',\n","  'Ice Cream Chocolate Mocha Chip'],\n"," ['Low Fat Key Lime Blended Greek Yogurt',\n","  'Orange Bell Pepper',\n","  'Red Peppers',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Organic Mung-Bean Sprouts',\n","  'Organic Green Leaf Lettuce',\n","  'White Sliced Mushrooms',\n","  'Strawberry on the Bottom Nonfat Greek Yogurt',\n","  'Eggo Nutri-Grain Blueberry Waffles',\n","  'Grape Fruit Ice Bars',\n","  'Whole Grain Baked Snack Crackers',\n","  'Krispy Original Saltine Crackers',\n","  'Gourmet Naturals Classic Butter & Sea Salt Microwave Popcorn',\n","  'Spreadable Butter with Canola Oil',\n","  'Salted Butter Half Sticks',\n","  'Original Medium Picante Sauce',\n","  'ProteinPLUS Multigrain Angel Hair Pasta',\n","  'Spaghetti Protein Plus Pasta',\n","  'Classic White Lunch Plate',\n","  'Napkins, 1-Ply',\n","  'Boneless And Skinless Chicken Breast',\n","  'Oats & Chocolate Chewy Bars',\n","  'Chlorine Free Bleach',\n","  'Asian Toasted Sesame Dressing & Marinade',\n","  'Triscuit Original Baked Whole Grain Wheat Crackers',\n","  'Classico Pure Olive Oil',\n","  'Wonton Strips',\n","  '37% Less Sodium Soy Sauce',\n","  '90 Calorie Chocolate Caramel & Pretzel Chewy Bars',\n","  'Herb Seasoned Restaurant Style Croutons',\n","  'Pizzeria-Style Crust Supreme Speciale Pizza',\n","  'Breast Tenders'],\n"," ['85% Lean Ground Beef',\n","  'Organic Avocado',\n","  'Organic Red Onion',\n","  'Organic Zucchini',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Garlic',\n","  'Organic Blueberries',\n","  'Celery Hearts',\n","  'Organic Snipped Green Beans',\n","  'Organic Yellow Onion',\n","  'Organic Raspberries',\n","  'Romaine Lettuce',\n","  'Asparagus',\n","  'Oatmeal Raisin Cookies',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Orange Peel In Dark Chocolate Bar',\n","  'English Seedless Cucumber',\n","  'Ground Cumin',\n","  'Chicken Base, Organic',\n","  'Organic Tahini',\n","  'Beef Loin New York Strip Steak',\n","  'Cookies, Chocolate Chip Oatmeal'],\n"," ['Soda', 'Smartwater', 'Organic Low Fat Milk'],\n"," [\"Crunchy Oats 'n Honey Granola Bars\"],\n"," ['Bag of Organic Bananas',\n","  'Clementines',\n","  'Spring Water',\n","  'Apples',\n","  'Popcorn'],\n"," ['Organic Strawberries',\n","  'Large Alfresco Eggs',\n","  'Organic Raspberries',\n","  'Organic Tomato Basil Pasta Sauce',\n","  'Raw Mild Cheddar Cheese',\n","  'Organic Chunky Tomato Bisque Soup',\n","  'Organic Red Grapes',\n","  'Raw Manuka Honey Hi Active 15 Plus',\n","  'Organic Stewed Tomatoes',\n","  'Black Berry Hibiscus Beverage'],\n"," ['Shredded Parmesan',\n","  'Red Peppers',\n","  'Bag of Organic Bananas',\n","  'Organic Milk',\n","  'Organic Yellow Onion',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Limes',\n","  'Organic Tortilla Chips',\n","  'Red Vine Tomato',\n","  'Organic Broccoli Crowns',\n","  'Watermelon Chunks',\n","  'Organic Bell Pepper',\n","  'Organic Orange Bell Pepper',\n","  'Organic Honey Sweet Whole Wheat Bread',\n","  'Original Enriched Rice Drink',\n","  'Sliced Black Olives',\n","  'Sharp Cheddar Thick Slices Cheese',\n","  'Tortilla Chips, Clasico, Jalapeno Lime',\n","  'Might 4 essential nutrition blend spinach, cherry, oats, black beans',\n","  'Organic High Fiber Oat Bran Hot Cereal',\n","  'Stage 1 Just Butternut Squash Baby Food',\n","  'Dijon Honey Mustard Dressing',\n","  'Original Real Vegetable Chips',\n","  'Cheerios Cereal'],\n"," ['Banana',\n","  'Organic Grape Tomatoes',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Michigan Organic Kale',\n","  'Large Lemon',\n","  'Berry Medley',\n","  'Grilled Chicken Breast Strips',\n","  '3 lb Clementines',\n","  'Organic Spinach Bunch',\n","  'Defense Up Cold Pressed Fruit Smoothie',\n","  'Organic Greens And Kale',\n","  'Power Grains Waffles 6 ct',\n","  'Cilantro Lime Chicken Burrito',\n","  'Indian Mattar Paneer',\n","  'Crunchy Almond Butter'],\n"," ['Plantain Chips',\n","  'Whipped Cream Cheese',\n","  'Lemon Fruit & Nut Food Bar',\n","  'Cherry Pie Fruit & Nut Bar',\n","  'Chopped Walnuts',\n","  'Whole Wheat Flour Tortilla',\n","  'Breadstick',\n","  'Bosc Pears',\n","  'Black Tea Pyramids',\n","  'Apple Pie Fruit & Nut Food Bar'],\n"," ['Large Lemon',\n","  'Organic Basil',\n","  'Uncured Genoa Salami',\n","  'Roasted Red Pepper Hummus',\n","  'Sparkling Lemon Water',\n","  'Triscuit Baked Whole Grain Wheat Rosemary & Olive Oil',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Disinfecting Wipes, Lemon',\n","  'Pita Chips Simply Naked',\n","  'Bocconcini Bite Sized Fresh Mozzarella',\n","  'Doubleshot Espresso & Cream Premium Coffee Drink',\n","  'Glacier Freeze',\n","  'Triple Creme Brie'],\n"," ['Bartlett Pears',\n","  'Organic Grape Tomatoes',\n","  'Half & Half',\n","  'Organic Fuji Apple',\n","  'Bar, Toffee & Almonds in Milk Chocolate'],\n"," ['Organic Baby Carrots', 'Organic Animal Crackers'],\n"," [\"Organic D'Anjou Pears\",\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Seedless Red Grapes',\n","  'Organic Zucchini',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Large Lemon',\n","  'Organic Unsalted Butter',\n","  'Organic Baby Broccoli',\n","  \"Annie's Bunny Fruit Snacks Variety\",\n","  'Organic Whole String Cheese',\n","  'Organic Large Brown Eggs',\n","  'Uncured Genoa Salami',\n","  'Organic Banana',\n","  'Whole Milk Plain Yogurt',\n","  'Vanilla Non Dairy Frozen Dessert Minis',\n","  'Organic Cinnamon Crunch Cereal',\n","  'Organic Plain Kefir',\n","  'Organic Muenster Cheese Slices',\n","  'Yellow Grape Tomatoes',\n","  'Organic Promise Strawberry Fields Cereal',\n","  'Muesli',\n","  'Organic Air Chilled Whole Chicken',\n","  'Organic Chai Tea Bags',\n","  'Fruit Spread, Organic, Strawberry',\n","  'Gluten Free Quick Cooking Oats'],\n"," ['Organic Whole Milk',\n","  'Fresh Ginger Root',\n","  'Organic Red Potato',\n","  'Super Natural Organic Whole Milk',\n","  'Grass milk Raw Cheddar Cheese',\n","  'Organic Plain Greek Whole Milk Yogurt'],\n"," ['Organic Uncured Sliced Black Forest Ham',\n","  'Orange Juice 100% Juice',\n","  'Select-A-Size White Paper Towels',\n","  'Chocolate Protein Soy & Dairy Protein Shake',\n","  'Large Grade AA Cage Free Eggs',\n","  'Organic Romaine Hearts',\n","  'Eggo Cinnamon Toast Waffles',\n","  'Cinnamon Swirl Raisin Bread',\n","  'Penne Pasta',\n","  'Mashed Potatoes',\n","  'British Style Bangers',\n","  'San Francisco Potato Salad',\n","  'Cinnamon Rolls',\n","  'Sweet Rolls',\n","  'Milk, Reduced Fat, 2% Milkfat',\n","  'Carrot Sticks',\n","  'ForceFlex Drawstring Tall Kitchen Bags',\n","  'All American Salad',\n","  'Presliced Everything Bagels',\n","  'Tomato Basil Marinara Sauce',\n","  'Vanilla With Caramel Low Fat Ice Cream Cone',\n","  'Ultra Strong Mega Bathroom Tissue Rolls',\n","  'Gallon Zipper Storage Bags',\n","  'Light Champagne Dressing'],\n"," ['Half & Half',\n","  'Garlic',\n","  'Medium Navel Orange',\n","  'Uncured Genoa Salami',\n","  'Organic Thyme',\n","  'Black Tea Pyramids',\n","  'Challah Bread',\n","  'Snacks Mango',\n","  'Paprika'],\n"," ['Raspberries', 'Seedless Cucumbers'],\n"," ['Banana',\n","  'Organic Roma Tomato',\n","  'Dijon Honey Mustard Dressing',\n","  'Gluten Free Omega Flax & Fiber Bread',\n","  'Organic Baby Kale',\n","  'Dairy-Free Cheddar Style Shreds',\n","  'ALMONDBREEZE UNSWEETENED',\n","  'Breakfast Scramble Wrap',\n","  'Organic Sweetened Cranberries',\n","  'Balsamic Vinegar of Modena',\n","  'Ancient Grain Blueberry Hemp Granola',\n","  \"Builder's Chocolate Peanut Butter Bar\",\n","  'Classic Ranch Yogurt Dressing'],\n"," ['Sweet Kale Salad Mix', 'Pineapple Chunks', 'Frozen Whole Strawberries'],\n"," ['Aged White Cheddar Popcorn',\n","  'Pineapple Chunks',\n","  'Organic Variety Pack',\n","  'Organic Chicken Stock'],\n"," ['Organic Green Beans', 'Fully Husked & Trimmed Super Sweet Corn'],\n"," ['Pistachios', 'Crushed Red Pepper', 'Almonds', 'Shredded Mozzarella Cheese'],\n"," ['Organic Avocado',\n","  'Grape White/Green Seedless',\n","  'Organic Thompson Seedless Raisins',\n","  'Coconut Milk Non Dairy Frozen Dessert No Sugar Added Mint Chip',\n","  'Michigan Organic Kale',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Blueberries',\n","  'Organic Vanilla Extract',\n","  'Organic Whole String Cheese',\n","  'Organic Wheat-Free & Gluten-Free Original Crackers',\n","  'Cucumber Kirby',\n","  'Baby Spinach',\n","  'Whole Milk Ricotta Cheese',\n","  'Total 0% Greek Yogurt',\n","  'Bing Cherries',\n","  'No Stir Creamy Coconut Almond Butter',\n","  'Mung Bean Sprouts',\n","  'Salted Tub of Butter',\n","  'Dairy Free Gluten Free Cookie Dough Coconut Milk Frozen Dessert',\n","  'Coconut Milk Non Dairy Frozen Dessert Chocolate Peanut Butter Swirl'],\n"," ['Banana',\n","  'Honeycrisp Apple',\n","  'Whipped Cream Cheese',\n","  'Organic Thompson Seedless Raisins',\n","  'Orange Bell Pepper',\n","  'Red Peppers',\n","  'Apple and Carrot Stage 2 Baby Food',\n","  'Spinach Peas & Pear Stage 2 Baby Food',\n","  'Organic Small Bunch Celery',\n","  'Mild Cheddar Cheese Sticks',\n","  'Hass Avocados',\n","  'Broccoli Crown',\n","  'Original Hummus',\n","  'Organic Kosher Dill Pickles',\n","  'White Wine and Balsamic Vinegar Flavored Beets',\n","  'Apples, Kale & Avocados Organic Baby Food',\n","  'Happy Baby Spinach, Mango, and Pear Baby Food',\n","  'Brussels Sprouts',\n","  'Mild Major Grey Chutney',\n","  'Kale Greens',\n","  'Bite-Size Honey Gold Potatoes',\n","  'Matzo Ball Mix',\n","  'Egg Matzos',\n","  'Eat Your Colors Purples Puree Baby Food',\n","  'Baby Food Stage 2 Blueberry Pear & Purple Carrot',\n","  'Stage 2 Sweet Potato Corn & Apple Baby Food',\n","  'Stage 2 Spinach, Apple & Kale',\n","  'YoBaby Peach Pear Yogurt',\n","  'Organic Whole Grain Red Quinoa',\n","  'Bread & Butter Pickle Chips'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Roma Tomato',\n","  'Green Bell Pepper',\n","  'Organic Medium Salsa',\n","  'Carrots',\n","  'Dill Weed',\n","  'Organic Crushed Red Pepper',\n","  'Organic Green Beans',\n","  'Thai Peanut Sauce',\n","  'Organic Grated Ginger',\n","  'Heat & Eat Organic Bowl Brown Rice'],\n"," ['Organic Zucchini',\n","  'Hass Avocado',\n","  'Roasted Red Pepper Hummus',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Blue Sparkle Fabric Softener Dryer Sheets',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Mineral Water',\n","  'Key Lime Yoghurt',\n","  'Flip Peanut Butter Dream Greek Yogurt',\n","  'Flip™ Low-Fat Key Lime Crumble Greek Yogurt',\n","  'Hearty Thick Cut Bacon',\n","  'Hummus Roasted Pepper',\n","  'Original Restaurant Style Tortilla Chips',\n","  'Ice Pops Sugar Free, Orange, Cherry, Grape',\n","  'Sugarfree',\n","  'Multigrain Pita Chips',\n","  'Pita Chips, Simply Naked, Party Size',\n","  'Fridge and Freezer Baking Soda Pack',\n","  'Infusions Ultra Downy® Infusions™ Lavender Serenity™ Liquid Fabric Conditioner 41 FL Oz Fabric Enhancers'],\n"," ['Rainbow Bell Peppers',\n","  'Organic Crimini Mushrooms',\n","  'Pineapple Spears',\n","  'Original Hawaiian Sweet Rolls',\n","  'De Mexico Bottle',\n","  'Fresh Mozzarella All-Natural Sliced Cheese'],\n"," ['Natural Whole Grain Instant Brown Rice',\n","  'Nonfat Light & Fit Blueberry Yogurt',\n","  'Light & Fit Nonfat Peach Yogurt',\n","  'Chicken with Almonds',\n","  'Sesame Stir Fry with Chicken',\n","  'Chicken with Peanut Sauce',\n","  'Marketplace Chicken Pecan',\n","  'Tender white meat chicken in a red chile lime sauce with a medley of roasted corn, peppers, and rice Chile Lime Chicken',\n","  'Roasted white meat chicken, whole wheat noodles, green beans & carrots in a creamy chili peanut sauce. Thai-Style Noodles With Chicken',\n","  'Favorites Alfredo Pasta with Chicken & Broccoli',\n","  'Roasted Turkey and Vegetables',\n","  'Marketplace Pomegranate Chicken',\n","  'Glazed Chicken'],\n"," ['Organic Hass Avocado',\n","  'Organic Cucumber',\n","  'Organic Raspberries',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Organic Green Leaf Lettuce',\n","  'Fat Free Milk',\n","  'Mexican Style Taco Shredded Cheese',\n","  'Flour Tortilla',\n","  'Black Plum',\n","  'Fully Cooked Original Bacon',\n","  'ALMONDBREEZE UNSWEETENED',\n","  'Jumbo Shells Pasta',\n","  'Organic Blue Corn Chips',\n","  'Family Size Popcorn Shrimp',\n","  'Low-Fat Mango on the Bottom Greek Yogurt',\n","  'Non-Fat Greek Yogurt With Strawberries on the Bottom',\n","  'Non-Fat Blueberry on the Bottom Greek Yogurt',\n","  'Peach on the Bottom Nonfat Greek Yogurt',\n","  'Chocolate Almond Butter Soft-Baked Cookies',\n","  'Pomegranate Arils',\n","  '4% Milkfat Cottage Cheese Small Curd 22 OZ',\n","  'Tomatoes Sauce',\n","  'Bamba Peanut Snack',\n","  'Soft-Baked Ripe Strawberry Cereal Bars',\n","  'Microwavable Mac & Cheese',\n","  'Soft Baked Banana Bread',\n","  'Mixed Berry BelVita Bites',\n","  'Cinnamon Brown Sugar Breakfast Biscuits'],\n"," ['Half & Half',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Organic Lemon',\n","  'Whole Almonds',\n","  'Milk, Organic, Vitamin D',\n","  'Unsweetened Premium Iced Tea'],\n"," ['Organic Green Onions',\n","  'Olive Oil Cooking Spray',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Reddi Wip Fat Free Whip Cream',\n","  'Grade A Large White Eggs',\n","  'Strawberry on the Bottom Nonfat Greek Yogurt',\n","  'Sliced White Mushrooms',\n","  'Organic 1% Milk',\n","  'Raspberry Sorbet',\n","  \"Kellogg's Chocolatey Peanut Butter Granola Bars\",\n","  'Chocolate Malt Mix',\n","  'Organics Spinach'],\n"," ['Packaged Grape Tomatoes',\n","  'Organic Tortilla Chips',\n","  'Red Bell Peppers',\n","  'Original Beef Jerky'],\n"," ['Shredded Parmesan',\n","  'Orange Bell Pepper',\n","  'Bag of Organic Bananas',\n","  'Organic Original Hommus',\n","  'Uncured Genoa Salami',\n","  'Organic Red Bell Pepper',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Honey Bunny Grahams',\n","  'Organic Tomato Basil Pasta Sauce',\n","  'Organic Whole Milk with DHA Omega-3',\n","  'Organic Bell Pepper',\n","  'Ricotta And Spinach Tondi',\n","  'Soft Pretzel Mini Buns',\n","  'Mild Thin Sliced Cheddar Cheese',\n","  'Organic Skim Milk with DHA Omega-3',\n","  'Rosemary Ham',\n","  'Organic Honey Graham Crackers',\n","  '100% Raw Coconut Water With Fair Trade Coffee',\n","  'Alfredo Pasta Sauce'],\n"," ['Unsweetened Almondmilk',\n","  'Organic Cilantro',\n","  'Organic Hass Avocado',\n","  'Organic Garlic',\n","  'Organic Black Beans',\n","  'Bag of Organic Bananas',\n","  'Lacinato Kale Og',\n","  'Organic Lemon',\n","  'Organic Yellow Onion',\n","  'Organic Red Bell Pepper',\n","  'Organic Paprika',\n","  'Sesame Whole Wheat Crackers',\n","  'Orange Peel In Dark Chocolate Bar',\n","  'Organic Tomato Sauce',\n","  'Organic Bell Pepper',\n","  'Blood Oranges',\n","  'Oven Roasted Turkey',\n","  'Organic Dijon Mustard',\n","  'Wild Chanterelle Mushroom Ravioli',\n","  'Sprouted Multi-Grain Bread',\n","  '100% Apple Juice',\n","  'EnviroKidz Chocolate Choco Chimps',\n","  'Outrageous B & B Pickles',\n","  'Original Puffins Cereal',\n","  'Crushed Tomatoes With Basil',\n","  'Diced Hot Green Chiles',\n","  'Organic Chili Powder Blend',\n","  'Lemon Pepper',\n","  'Sriracha Chili Sauce',\n","  'Organic Strawberries & Wild Strawberries Fruit Spread',\n","  'Pale Ale & Honey Spice Mustard',\n","  'Organic Shredded Parmesan',\n","  'Organic Lime',\n","  'Organic Shiitake & Vegetable Potstickers',\n","  'Cold Brew Coffee Mocha'],\n"," ['Original Classic Sausage Pizza',\n","  'Lite Raspberry Walnut Vinaigrette Dressing',\n","  'Tiny Twists Pretzels'],\n"," ['Organic Carrot Bunch',\n","  'Green Bell Pepper',\n","  'Brown Fertile Jumbo Grade AA Eggs',\n","  'Russet Potatoes'],\n"," ['Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Organic Red Onion',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Red Peppers',\n","  'Pure Sparkling Water',\n","  'Ezekiel 4:9 Bread Organic Sprouted Whole Grain',\n","  'Total 0% Raspberry Yogurt',\n","  'Gluten-Free Red Hot Blues Made with Organic Blue  Corn Tortilla Chips',\n","  'Organic Lowfat Milk',\n","  'Organic Campari Cocktail Tomatoes',\n","  'Fresh Mozzarella Ball',\n","  'Fresh Basil',\n","  'Spicy Black Bean & Kale Organic Soup'],\n"," ['Organic Large Extra Fancy Fuji Apple',\n","  'Organic Tomato Cluster',\n","  'Organic Raspberries'],\n"," ['Banana',\n","  'Slices Cheddar Cheese',\n","  'Red Onion',\n","  'Original Chocolate Pudding Snacks',\n","  'Plain Whole Milk Yogurt',\n","  'Sweet Red Grape Tomatoes',\n","  \"Chick'n Nuggets\",\n","  'Buffalo Wings',\n","  'Fruit & Nutty Almonds Raisins Cranberries Pecans Granola'],\n"," ['0% Greek Strained Yogurt', 'Parmesan Crisps', 'Cooked Shrimp'],\n"," ['Scoops! Tortilla Chips',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  'Zero Calorie Sweetener',\n","  'Maple Pumpkin Seeds with Sea Salt Chewy with a Crunch Granola Bars',\n","  'Cheese Cracker Sandwiches',\n","  'Baby Cucumbers',\n","  'Natural Medium Cheddar Cheese',\n","  'Beef & Bean Burritos',\n","  'Gluten Free Dark Chocolate Chunk Chewy with a Crunch Granola Bars',\n","  'Bag Of Organic Lemons'],\n"," ['Organic Strawberries',\n","  'Organic Garlic',\n","  'Bag of Organic Bananas',\n","  'Apple Honeycrisp Organic',\n","  'Organic Green Seedless Grapes',\n","  'Organic Large Brown Eggs',\n","  'I Heart Baby Kale',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Bell Pepper',\n","  'Organic Orange Bell Pepper',\n","  'Blood Oranges',\n","  'Organic Orange Juice',\n","  'Organic Coconut Yogurt',\n","  'Made Good Chocolate Chip Granola Bars',\n","  'Organic Creamy Tomato Basil Soup',\n","  'Organic Shredded Mild Cheddar',\n","  'Organic Popcorn',\n","  'Organic Freeze Dried Strawberries',\n","  'Organic Dried Mango',\n","  '100% Pomegranate Juice'],\n"," ['2% Reduced Fat Milk',\n","  'Lowfat 2% Milkfat Cottage Cheese',\n","  'Presliced Everything Bagels',\n","  'Whole Frozen Strawberries',\n","  'Spicy Jalapeno Cream Cheese Spread'],\n"," ['Packaged Grape Tomatoes',\n","  'Celery Hearts',\n","  'Brussels Sprouts',\n","  'Grilled Chicken Strips',\n","  'Organic Virgin Coconut Oil'],\n"," ['Soda', 'Spring Water', 'Apples'],\n"," ['Bartlett Pears',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Fresh Cauliflower',\n","  'Organic Baby Spinach',\n","  'Cinnamon Raisin Bread',\n","  'Organic Red Onion',\n","  'Orange Bell Pepper',\n","  'Organic Garlic',\n","  'Michigan Organic Kale',\n","  'Bag of Organic Bananas',\n","  'Apple Honeycrisp Organic',\n","  'Organic Yellow Onion',\n","  'Organic Low Sodium Chicken Broth',\n","  'Hass Avocados',\n","  'Yellow Bell Pepper',\n","  'Sweet Onion',\n","  'Peanut Butter Creamy With Salt',\n","  'Organic Dijon Mustard',\n","  'Almond Nut & Rice Cracker Snacks',\n","  'Organic Sweet Relish'],\n"," ['Strawberry Candy Twists',\n","  'Free & Clear Natural Dishwasher Detergent',\n","  'Stage 1 Newborn Hypoallergenic Liquid Detergent'],\n"," ['Raspberries',\n","  'Organic Garlic',\n","  'Large Lemon',\n","  'Crescent Rolls',\n","  'Salted Tub of Butter',\n","  'Fresh Whole Chicken',\n","  'Yukon Gold Potatoes 5lb Bag',\n","  'Organic Rainbow Carrots',\n","  'Organic Poultry Blend',\n","  'Truffle Mousse'],\n"," ['Small Hass Avocado',\n","  'Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips',\n","  'Bag of Organic Bananas',\n","  'Organic Unsweetened Almond Milk',\n","  'Limes',\n","  'Organic Broccoli Florets',\n","  'Bean & Cheese Burrito',\n","  'Grass Fed Ground Beef',\n","  'Spring Water',\n","  'Mushroom And Ricotta Ravioli',\n","  'Russet Potato',\n","  'Soft Potato Bread',\n","  'Wild Skipjack Light Tuna',\n","  'Red Chile Enchilada Sauce',\n","  'Semi-Sweet Mini Chocolate Chips',\n","  'English Breakfast Tea Bags'],\n"," ['Zero Calories Berry Nutrient Enhanced Water',\n","  'Natural Spring Water',\n","  'Original Baked Snack Crackers',\n","  'Zero Vitamin Water',\n","  'Go-Gurt Strawberry Splash and Cool Cotton Candy Tubes',\n","  'Sea Minerals Foaming Hand Wash',\n","  'Goldfish Cheddar Baked Snack Crackers Multi Packs',\n","  'Large Pitted California Ripe Olives',\n","  'Large Pitted Black Olives',\n","  'Ultra Strong Toilet Paper',\n","  'Ultra Soft Facial Tissues',\n","  'Plus Lotion Boxed Tissues'],\n"," ['Three Cheese Mini Pizza Bagels Frozen Snacks', 'Lactose Free Cream Cheese'],\n"," ['Cruisers Diapers Jumbo Pack - Size 6'],\n"," ['Strawberries', 'Raspberries', 'Clementines'],\n"," ['Premium Unsweetened Iced Tea',\n","  'Cabernet Sauvignon Wine',\n","  'Orange Soda',\n","  'Strawberry Soda',\n","  'With Raspberry Lemonade',\n","  'Miniatures Assortment Party Bag'],\n"," ['Organic Whole Milk',\n","  'Sliced Baby Bella Mushrooms',\n","  'Organic Blueberries',\n","  'Bag of Organic Bananas',\n","  'Large Lemon',\n","  'Apple and Carrot Stage 2 Baby Food',\n","  'Spinach Peas & Pear Stage 2 Baby Food',\n","  'Apple Honeycrisp Organic',\n","  'Organic Yellow Onion',\n","  'Organic Graham Crunch Cereal',\n","  'Grated Parmesan',\n","  'Parsley, Italian (Flat), New England Grown',\n","  'Organic Dill',\n","  'Green Beans',\n","  'Broccoli & Apple Stage 2 Baby Food',\n","  'Organic Mountain Forest Honey Light Amber',\n","  'Organic Light Agave Nectar',\n","  'Organic Gluten Free Elbow Pasta',\n","  'Herbs Chives',\n","  'Organic Cheddar Bunnies',\n","  'Annie Peely Fruit 4.5 Z',\n","  'Organic Pizza Snack Mix Crackers',\n","  'YoBaby Blueberry Apple Yogurt',\n","  'Organic Cream of Mushroom Condensed Soup',\n","  'Organic YoKids Very Berry Smoothies'],\n"," ['Organic Chicken & Mozzarella Ravioli'],\n"," ['YoKids Squeezers Organic Low-Fat Yogurt, Strawberry',\n","  'Organic Extra Firm Tofu',\n","  'Original Hummus',\n","  'Sourdough Whole Grain Crispbread',\n","  'Organic Cherry Tomatoes',\n","  'Fresh Ricotta',\n","  'Four Fruits 100% Fruit Spread'],\n"," ['Organic Baby Spinach',\n","  'Strawberries',\n","  'Seedless Red Grapes',\n","  'Large Lemon',\n","  'Trilogy Kombucha Drink',\n","  'Chopped Spinach',\n","  'Baby Brussels Sprouts',\n","  'Synergy Organic & Raw Cosmic Cranberry',\n","  'Organic Rainbow Chard Blend',\n","  'Chicken Breast Cutlets'],\n"," ['Diet Coke',\n","  'Chablis',\n","  'Diet Tonic Water',\n","  'Puerto Rican Rum',\n","  'Family Size Peanut Butter Cracker Sandwiches',\n","  'Brown Ale'],\n"," ['Banana',\n","  'Organic Whipped Naturally Buttery Spread',\n","  'Diet Coke',\n","  'Green Peas',\n","  'Coldstone Sweet Cream',\n","  'Strawberry Jam',\n","  'Plain Bagel',\n","  'Chocolate, Butterfinger, Butterfinger Fudge Frozen Dairy Dessert Cones',\n","  'Gluten Free Extra Crispy Fast Food French Fried Potatoes',\n","  'Fudgsicle No Sugar Added',\n","  'Sesame Seeded Sandwich Rolls'],\n"," ['Organic Strawberries',\n","  'Raspberry Preserves',\n","  'Original Veggie Straws',\n","  'Roasted Garlic Hummus',\n","  'Thin Whole Wheat Sandwich Buns'],\n"," ['Organic Cilantro',\n","  'Organic Strawberries',\n","  'Tater Tots',\n","  'White Corn',\n","  'Penne Pasta',\n","  \"Bourbon and Brown Sugar Grillin' Beans\",\n","  'Country Style Baked Beans',\n","  'Ultra Fine Mist Aerosol Hairspray',\n","  'Thin Mint Crisp Oreos',\n","  'Hot (101305, 101352) Italian Sausage',\n","  'Farfalle Pasta'],\n"," ['Mustard, Sweet Hot'],\n"," ['Asian Pears',\n","  'Organic Grape Tomatoes',\n","  'Organic Basil',\n","  'Corn Chips',\n","  'Avocado Roll'],\n"," ['Organic Cilantro',\n","  'Red Peppers',\n","  'Large Lemon',\n","  'Mellow White Miso',\n","  'Organic Extra Firm Tofu',\n","  'Green Bell Pepper',\n","  'Limes',\n","  'Super Greens Salad',\n","  'English Seedless Cucumber',\n","  'Gala Apples',\n","  'Unsweetened Cashew Milk',\n","  'Cherry Vanilla Granola',\n","  'Snow Peas',\n","  'Protein Power Greens Smoothie',\n","  'Super Green Juice Blend Smoothie',\n","  'Flourless  Sprouted Whole Grain 7-Sprouted Grains English Muffins',\n","  'Instant Rice Vermicelli Noodles',\n","  'Red Cabbage',\n","  'Lite Cheese Presliced Bonus Pack'],\n"," ['Honeycrisp Apple',\n","  'Organic Cilantro',\n","  'Whole Milk',\n","  'Organic Hass Avocado',\n","  'Organic Garlic',\n","  'Organic Low Sodium Chicken Broth',\n","  'Chocolate Chip Cookies',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Purity Farms Ghee Clarified Butter',\n","  'Organic Tomato Sauce',\n","  '80% Lean Ground Beef',\n","  'Green Beans',\n","  'Organic Red Potato',\n","  'Organic Jalapeno Pepper',\n","  'Colby Cheese Sticks',\n","  'Shredded Hash Browns'],\n"," ['Invisible Solid Unscented Deodorant', 'Anti Viral Upright Facial Tissue'],\n"," ['Bag of Organic Bananas',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Oatmeal Raisin Walnut Energy Bar',\n","  'Nectarines'],\n"," ['Organic Baby Arugula',\n","  'Seedless Red Grapes',\n","  'Organic Garlic',\n","  'Red Peppers',\n","  'Bag of Organic Bananas',\n","  'Feta Cheese Crumbles',\n","  'Gogo Squeez Organic Apple Strawberry Applesauce on the Go',\n","  'Organic Whole String Cheese',\n","  'Spaghetti',\n","  'Grated Parmesan',\n","  'Hass Avocado',\n","  'Organic Baby Carrots',\n","  'Organic Strawana Probugs Kefir',\n","  'Hummus, Hope, Original Recipe',\n","  'Organic Paprika',\n","  'Dubliner Wedge Pre Cut Cheese',\n","  'Organic English Cucumber',\n","  'Organic Italian Parsley Bunch',\n","  'Vegetable Fried Rice',\n","  'Orange Juice',\n","  'Crispy Seasoned Potato Puffs with Roasted Garlic & Cracked Pepper',\n","  'Extra Cheesy Cheddar Bunnies Crackers',\n","  'Almond Nut & Rice Cracker Snacks',\n","  'Strawberry Ice Cream',\n","  'Limeade',\n","  'Cheese Puffs Original',\n","  'Sea Salt Pita Chips',\n","  'Soup, Traditional, with Tofu',\n","  'Tomato Kumato',\n","  'Marinated Cabecou',\n","  'Villagio Marzano Heavenly Tomatoes',\n","  'Cucumber & Garlic  Tzatziki',\n","  'Organic Smoked Paprika',\n","  'Organic Cayenne Pepper',\n","  'Meyer Lemon',\n","  'Medium Cheddar Cheese'],\n"," ['Organic Blackberries',\n","  'Organic Red Onion',\n","  'Organic Hass Avocado',\n","  'Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips',\n","  'Organic Raspberries',\n","  'Organic Uncured Sliced Black Forest Ham',\n","  'I Heart Baby Kale',\n","  'Roma Tomato',\n","  'Organic Banana',\n","  'Emmentaler Swiss Slices',\n","  'White Corn',\n","  'Mild El Nino Salsa',\n","  'Turkey Pastrami',\n","  'Chocolate Peanut Butter Non Dairy Frozen Dessert'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Strawberries',\n","  'Seedless Red Grapes',\n","  'Organic Navel Orange',\n","  'Uncured Genoa Salami',\n","  'Organic Good Seed Bread',\n","  'Grilled Chicken Breast Strips',\n","  'Organic Smoked Chicken Breast',\n","  'Organic Italian Salad',\n","  'Organic Shredded Mild Cheddar',\n","  'Organic Bagged Kale Salad Mix',\n","  'Organic Shredded Carrots',\n","  'Organic Ranch Dressing'],\n"," ['Granny Smith Apples',\n","  'Unsweetened Almondmilk',\n","  'Smartwater',\n","  'Bag of Organic Bananas',\n","  'Organic Celery',\n","  'Organic Carrot Bunch',\n","  'Organic Crushed Fire Roasted Tomatoes',\n","  'Red Onion',\n","  'Organic Tomato Sauce',\n","  'Total 0% Nonfat Plain Greek Yogurt',\n","  'Crunchy Almond Butter',\n","  'Organic Raw Unfiltered Apple Cider Vinegar',\n","  '100% Recycled 2 Ply Jumbo Paper Towel Roll',\n","  'Total 0% Cherry Nonfat Yogurt',\n","  'Mild Fire Roasted Diced Green Chiles',\n","  'Multigrain Tortilla Chips',\n","  'Organic Whole Fryer Chicken'],\n"," ['Banana',\n","  'Half & Half',\n","  'Limes',\n","  'Squeeze Pouch Sour Cream',\n","  'Raw Probiotic Drink Gut Shot Smoked Jalapeno'],\n"," ['Rioja', 'Old Vine Zinfandel Wine'],\n"," ['Organic Cilantro',\n","  'Organic Romaine',\n","  'Low Sodium Refried Black Beans',\n","  'Salted Tub of Butter',\n","  'Wild Berry Smoothie',\n","  'Rosemary Hand Soap',\n","  'Cut Hearts Of Palm',\n","  'Low Sodium Bacon'],\n"," ['Cinnamon Raisin Bread',\n","  'Half & Half',\n","  'Organic Strawberries',\n","  'Low Fat Plain Yogurt',\n","  'Organic Hass Avocado',\n","  'Bag of Organic Bananas',\n","  'Organic Whole String Cheese',\n","  'Original Hummus',\n","  'Organic Baby Carrots',\n","  \"World's Best Mac & Cheese\",\n","  'Organic Hot House Tomato',\n","  'Organic Frozen Peas',\n","  'Organic Macaroni & Cheese',\n","  'Vanilla Pure Almond Milk',\n","  'Edamame In Pod'],\n"," ['Zero Calorie Cola',\n","  'Sparkling Natural Mineral Water',\n","  'Glass Cleaner',\n","  'Organic Coconut Water',\n","  'Natural Artesian Water'],\n"," ['Raspberries',\n","  'Blueberries',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Brut Cuvee Sparkling Champagne',\n","  'Pink Moscato Champagne, Sparkling, California',\n","  'Champagne Flute'],\n"," ['Banana',\n","  'Organic Strawberries',\n","  'Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips',\n","  'Michigan Organic Kale',\n","  'Blueberries',\n","  'Large Lemon',\n","  'Organic Cucumber',\n","  'Organic California Style Sprouted Bread',\n","  'Organic Vegetable Broth',\n","  'Asparagus',\n","  'Organic Red Bell Pepper',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Lime Sparkling Water',\n","  'Unsalted Pure Irish Butter',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Organic Great Northern Beans',\n","  'Cheese Pizza Snacks',\n","  'Pure Irish Butter',\n","  'Organic Beans & Rice Cheddar Cheese Burrito',\n","  'Peanut Butter Dark Chocolate + Protein Bar',\n","  '1 Liter',\n","  'Aged White Cheddar Baked Rice & Corn Puffs Gluten Free Lunch Packs',\n","  'Pretzel Sticks, Gluten Free',\n","  'Organic Gala Apples, Bag',\n","  'Thin Stackers Organic Red Rice & Quinoa Puffed Grain Cakes',\n","  'Italian Pasta Salad'],\n"," ['Banana',\n","  'Organic Avocado',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Michigan Organic Kale',\n","  'Strawberry Rhubarb Yoghurt',\n","  'Organic Low Sodium Chicken Broth',\n","  'Organic Large Brown Eggs',\n","  'Organic Flax Plus Multibran Flakes',\n","  'Cantaloupe',\n","  'Lime Sparkling Water',\n","  'Lemon Hummus',\n","  'Roma Tomato',\n","  'Italian Sparkling Mineral Water',\n","  'Sour Cream',\n","  'Organic White Corn & Wheat Tortillas',\n","  'Cucumber Kirby',\n","  'Hickory Smoked Turkey Breast',\n","  'Large Grapefruit',\n","  'PlusShot Strawberry Probiotic Juice Drink',\n","  'Salted Butter'],\n"," ['Hass Avocado Variety',\n","  'Organic Egg Whites',\n","  'Coconut Water',\n","  'Creamy Peanut Butter',\n","  'Roasted Pine Nut Hummus',\n","  'Chicken Apple Sausage',\n","  'Kiwi'],\n"," ['Organic Seasoned Yukon Select Potatoes Hashed Browns',\n","  'Organic Black Beans',\n","  'Bag of Organic Bananas',\n","  'Organic Lemon',\n","  'Organic Basil',\n","  'Organic Diced Tomatoes',\n","  'Original Hummus',\n","  'Organic Gala Apples',\n","  'Sourdough Bread',\n","  'Organic White Onions',\n","  'Ground Turkey Breast',\n","  'Sliced Black Olives',\n","  'Sea Salt Pita Chips',\n","  'Cucumber & Garlic  Tzatziki',\n","  'Canned Aranciata Orange',\n","  'Tomato Sauce',\n","  'Garlic & Fine Herbs Gournay Cheese',\n","  'Cage Free Extra Large Grade AA Eggs'],\n"," ['Organic Half & Half',\n","  'Organic Cilantro',\n","  'Orange Bell Pepper',\n","  'Green Bell Pepper',\n","  'Lemonade',\n","  'Vegetarian Refried Beans',\n","  'Organic Fancy Shredded Mozzarella Cheese',\n","  'Kefir Cultured Strawberry Milk Drink',\n","  'Red Onion',\n","  'White Corn Tortillas',\n","  'Serrano Chile Peppers',\n","  'Lavender Hand Soap',\n","  'Lavender Dish Soap',\n","  'Salted Sweet Cream Butter',\n","  'Unsweetened Premium Iced Tea',\n","  'Pure Vegetable Oil',\n","  'Beefsteak Tomato',\n","  'Mesquite with Lime Juice Marinade',\n","  'Spanish Rice Rice Mix',\n","  'Mini Seedless Watermelon Pack',\n","  'All Natural Whole Strawberries',\n","  'Thick & Crispy Tortilla Chips',\n","  'Salsa Casera Mild',\n","  'Rice Krispies Cereal',\n","  'Non Fat Black Cherry on the Bottom Greek Yogurt',\n","  'Cream Top Smooth & Creamy Maple Yogurt',\n","  'Original Low Fat Orange Cream Yogurt',\n","  'Raw Wild Natural Honey'],\n"," ['Organic Whole Milk',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Red Onion',\n","  'Organic Roma Tomato',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Bag of Organic Bananas',\n","  'Classic White Bread',\n","  'Organic Bunch Beets',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Hass Avocados',\n","  'Black Seedless Grapes',\n","  'Organic Broccoli Crowns',\n","  'Clementines, Bag',\n","  'Organic Garbanzo Beans',\n","  'Red Kidney Beans',\n","  'Mango Yoghurt',\n","  'Whole Wheat Bread',\n","  'Organic Mango Yogurt',\n","  'Organic Coconut Yogurt',\n","  'Organic Darjeeling Tea Bags',\n","  'Organic Yellow Zucchini',\n","  'Cream Top Apricot Mango Fruit on the Bottom Yogurt'],\n"," ['Bag of Organic Bananas',\n","  'Organic Apple Juice',\n","  'Hass Avocados',\n","  'Apple Sauce Pouches'],\n"," ['Jalapeno Peppers',\n","  'Organic Hass Avocado',\n","  'Organic Tomato Cluster',\n","  'Organic Raspberries'],\n"," ['Bag of Organic Bananas',\n","  'Organic Small Bunch Celery',\n","  'Organic Broccoli',\n","  'Organic Italian Parsley Bunch',\n","  'Vanilla ... Ahhh Frozen Coconut Dessert',\n","  'Organic 55% Semi Sweet dark Chocolate Chips',\n","  'Organic Cashew Butter'],\n"," ['Banana',\n","  'Fresh Cauliflower',\n","  'Organic Yams',\n","  'Heavy Whipping Cream',\n","  'Fresh Ground Turkey',\n","  'Presliced Everything Bagels',\n","  'Honey Vanilla Chamomile Caffeine-Free Herbal Tea',\n","  'Dark Chocolate Almond Milk',\n","  'Organic Gluten Free Non-Dairy Beans & Rice Burrito',\n","  'Large Grade AA Organic Eggs',\n","  'Organic Ginger Cookie Caramel Coconut Bliss Non-dairy Frozen Dessert',\n","  'Brown Rice Pasta Spirals',\n","  'Mini Peeled Carrots'],\n"," ['Organic Half & Half',\n","  'Organic Cucumber',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Original Apple 100% Juice',\n","  'Original Orange Juice',\n","  'Baby Spring Mix',\n","  'Reduced Sugar Craisins',\n","  'Cashews Halves & Pieces',\n","  'Original Seltzer Water'],\n"," ['Banana',\n","  'Sparkling Water Grapefruit',\n","  'Organic Brown Rice',\n","  'Organic Yellow Onion',\n","  'Organic Lemonade',\n","  'Organic Red Bell Pepper',\n","  'Oven Roasted Turkey Breast',\n","  '100% Whole Wheat Bread',\n","  'Free & Clear Unscented Baby Wipes',\n","  'Organic Apple Chicken Sausage',\n","  'Organic Bunny Fruit Snacks Berry Patch',\n","  'Peanut Butter Whole Grain Clusters',\n","  'Salt & Pepper Krinkle Chips',\n","  'Cold-Brew Black Coffee',\n","  'Orange Sparkling Water',\n","  'Peanut Butter Ice Cream Cup',\n","  'Cut Tulips (Choose Color)',\n","  '100% Recycled Paper Towels'],\n"," ['Small Hass Avocado',\n","  'Organic Cilantro',\n","  'Organic Strawberries',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Michigan Organic Kale',\n","  'Bag of Organic Bananas',\n","  'Organic Granny Smith Apple',\n","  'Sea Salt & Vinegar Potato Chips',\n","  'Organic Raspberries',\n","  'Organic Navel Orange',\n","  'Almond Milk Strawberry Yogurt',\n","  'Limes',\n","  'Organic Whipped Naturally Buttery Spread',\n","  'Organic Ginger Root',\n","  'Organic Good Seed Bread',\n","  'Organic Tortilla Chips',\n","  'Cold-pressed, Deliciously Hydrating Watermelon Water',\n","  'Red Vine Tomato',\n","  'Mild Salsa',\n","  'Sparkling Lemon Water',\n","  'Corn Chips',\n","  '6 OZ LA PANZANELLA CROSTINI ORIGINAL CRACKERS',\n","  '100% Raw Coconut Water',\n","  'Water',\n","  'Traditional Refried Beans',\n","  'Organic Dark Chocolate Peanut Butter Cups',\n","  'Organic Romaine',\n","  'Ancient Grain Original Granola',\n","  'Limonata Sparkling Lemon Beverage',\n","  'Organic Raw Kombucha Gingerade',\n","  'Orange Juice',\n","  'Blood Oranges',\n","  'Organic Jalapeno Pepper',\n","  'Organic Medjool Dates',\n","  'Organic Mint',\n","  'Avocado Roll',\n","  'Pineapple Apple Mint Organic Cold Pressed Juicd',\n","  'Synergy Organic & Raw Cosmic Cranberry',\n","  'Chamomile',\n","  'Midnight Moon',\n","  'Premium Ice Cubes',\n","  'Strawberry Peach Still Artesian Water',\n","  'Organic Pineapple Chunks',\n","  'Organic Vegetarian Mild Refried Beans With Green Chiles',\n","  'Fermented Mango Probiotic Soy Drink',\n","  'Uncooked Medium Flour Tortillas',\n","  'Corn Tortilla Chips',\n","  'Organic Salted Pistachio',\n","  'XL Emerald White Seedless Grapes',\n","  'Watermelon Agave Frozen Pops'],\n"," ['Organic Hass Avocado',\n","  'Large Lemon',\n","  'Reduced Fat Milk 100% Lactose Free',\n","  'Organic Spring Mix',\n","  'Sliced Soppressata Salame',\n","  'Light Organic Agave Nectar',\n","  'Italian Sausage'],\n"," ['Soda', 'Ginger Ale', 'Lemon-Lime Soda'],\n"," ['Bartlett Pears',\n","  'Organic Baby Spinach',\n","  'Red Peppers',\n","  'Bag of Organic Bananas',\n","  'Lacinato Kale Og',\n","  'Organic Fuji Apple',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Apple Cinnamon Cheerios Cereal',\n","  'Pure Irish Butter',\n","  'Cinnamon Rolls with Icing',\n","  'Thin Mint Crisp Oreos',\n","  'Chicken Breast Grilled Strips',\n","  'Bean, Rice and Cheddar Burrito',\n","  'Shredded Beef Burrito',\n","  'Chicken Bean and Rice Burrito',\n","  'Fruit Gushers Fruit Flavored Snacks Variety Pack',\n","  'Golden Grahams Cereal',\n","  'No Sugar Added Apple Sauce',\n","  'Frozen Organic Peach Slices',\n","  'Frozen Unsweetened Whole Strawberries',\n","  'Vanilla Yogurt Rasins',\n","  'Garlic & Chive Hummus',\n","  'Organic Blue Agave'],\n"," ['Banana',\n","  'Ice Cream Sandwiches Vanilla',\n","  'Crinkle Cut French Fries',\n","  'Uncured Beef Hot Dogs',\n","  '100% Whole Wheat Hot Dog Buns'],\n"," ['Organic Whole White Mushrooms',\n","  'Sugar Snap Peas',\n","  'Toasted Coconut Almondmilk Blend',\n","  'Red Lentils',\n","  'Asparation/Broccolini/Baby Broccoli',\n","  'Organic Farro',\n","  'Brussels Sprouts',\n","  '37% Less Sodium Soy Sauce',\n","  'Kale Greens',\n","  'Sweet Red Grape Tomatoes',\n","  '100% Whole Wheat English Muffin 6 Ct',\n","  'Raisins',\n","  'Bag Pink Lady Apples',\n","  'Chicken Stock'],\n"," ['Banana',\n","  'Strawberries',\n","  'Spinach',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Organic Blueberries',\n","  'Chicken Thighs',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Diet Ginger Ale',\n","  'Mango Chunks',\n","  'Original Chocolate Chip Cookies',\n","  'Baby Kale Mix',\n","  'Original Puffins Cereal',\n","  'Milano Dark Chocolate Cookies',\n","  'Diet Soda',\n","  'Pop-Tarts Frosted Strawberry Toaster Pastries',\n","  'Body Wash Pink Grapefruit Body Clear®',\n","  '2 % Reduced Fat  Milk',\n","  'Navel Oranges',\n","  'Vitamin Water Zero Rise Orange',\n","  'Zero Strawberry Lemon',\n","  'Orange Mango Sparkling Water Beverage',\n","  'Golden Delicious Apple',\n","  'Mozzarella Light Low Moisture Part Skim String Cheese'],\n"," ['Sustainably Soft Bath Tissue',\n","  'Red Peppers',\n","  'Red Potatoes',\n","  'Berry Medley',\n","  'Morning Oat Crunch',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Whole Strawberries',\n","  'Organic Whole Grain Granola',\n","  'Sliced Brown Portabello Mushrooms',\n","  'Spanish Rice Pilaf Mix'],\n"," ['Whole Milk',\n","  'Dark Chocolate Double Chocolate Nantucket',\n","  'Frosted Chocolate Fudge Pop-Tarts',\n","  'Plastic Cup Squared Base - 30 CT'],\n"," ['Shredded Parmesan',\n","  'Electrolyte Enhanced Water',\n","  'Crushed Red Pepper',\n","  'Organic Popcorn',\n","  'Traditional Basil Pesto Sauce'],\n"," ['Organic  Dried & Unsulfured Orchard Select Apricots',\n","  'Organic Tree Ripened Plums',\n","  'Organic Whole Cashews',\n","  'Apple Green Cups'],\n"," ['Organic Avocado',\n","  'Strawberries',\n","  'Selects Turkey Hot Dogs',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Reduced Fat 4 Cheese Mexican Shredded Cheese',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Creamy Deluxe Shells & Real Aged Cheddar Sauce',\n","  'Organic 2% Reduced Fat Milk',\n","  'Boneless And Skinless Chicken Breast',\n","  'Glacier Freeze',\n","  'Hearts Of Romaine',\n","  'Sweet Butter Salad',\n","  'Small Curd Low Fat Cottage Cheese',\n","  'Cinnamon French Toaster Sticks',\n","  'Gluten Free Pizza Three Cheese',\n","  'Reduced Fat Medium Cheddar Cheese',\n","  'Natural Choice Deli Oven Roasted Turkey',\n","  'Classic Soda',\n","  'Whipped Butter',\n","  'Sea Salt Garden Veggie Straws',\n","  'G Series Perform Lemon Lime Sports Drink',\n","  'Plain Bagels',\n","  'Cheese Stuffed Crust Supreme'],\n"," ['Hass Avocados', 'Pineapple Spears'],\n"," ['Grape White/Green Seedless', 'Large Lemon'],\n"," ['Organic Unsweetened Vanilla Almond Milk',\n","  'Gluten Free Pizza Three Cheese',\n","  'Triple Caramel Chunk Ice Cream',\n","  'Gluten Free Uncured Frozen Pepperoni Pizza',\n","  'Mint Chip Ice Cream'],\n"," ['Organic Russet Potato',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Organic Whole String Cheese',\n","  'Organic Green Seedless Grapes',\n","  'Organic Bell Pepper',\n","  'Organic Orange Bell Pepper'],\n"," ['Organic Baby Arugula',\n","  'Fresh Cauliflower',\n","  'Organic Avocado',\n","  'Sinfully Sweet Campari Tomatoes',\n","  'Organic Italian Parsley Bunch'],\n"," ['Organic Grape Tomatoes',\n","  'Collard Greens',\n","  'Organic Strawberries',\n","  'Organic Red Onion',\n","  'Organic Zucchini',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Red Potatoes',\n","  'Bag of Organic Bananas',\n","  'Organic Jasmine Rice',\n","  'Organic Brown Rice',\n","  'Asparagus',\n","  'Total 2% Lowfat Greek Strained Yogurt With Blueberry',\n","  'Cantaloupe',\n","  'Original Hummus',\n","  'Carrots',\n","  'Extra Virgin Olive Oil',\n","  'Potato Yukon Gold Organic',\n","  'Organic English Cucumber',\n","  'Rigatoni Pasta',\n","  'Mozzarella Cheese',\n","  'Organic Orange Bell Pepper',\n","  'Sparkling Water',\n","  'Globe Eggplant',\n","  'Organic Fat Free Milk',\n","  'Seven Grain Crispy Tenders',\n","  'Grated Reggiano Parmigiano',\n","  'Peanut Butter Whole Grain Clusters',\n","  'Kumato Tomatoes',\n","  'Cucumber & Garlic  Tzatziki',\n","  'Artichoke Burgers French Herb',\n","  'Fresh Fussilli',\n","  'Organic Creamy Tomato Soup',\n","  \"Teriyaki Chick'n Strips\",\n","  'Homemade Corn Chips',\n","  'Multi Grain Crispbread',\n","  'Strained Tomatoes',\n","  'Vegetable Bouillon',\n","  'Coconut Fruit Bars',\n","  'Tuna Fillets in Olive Oil',\n","  'Whole Wheat Tandoori Naan',\n","  'Pesto Alla Genovese Basil',\n","  'Uncured Diced Pancetta',\n","  'Bucatini Pasta',\n","  'Organic Baby Kale Mix'],\n"," ['Organic Baby Spinach',\n","  '100% Whole Wheat Bread',\n","  'Roma Tomato',\n","  'Vegan Buttery Sticks',\n","  'Organic Chicken Thighs',\n","  'Cultured Coconut Water Probiotic Beverage'],\n"," ['Coconut Cream Pie',\n","  'Organic Bunny Fruit Snacks Berry Patch',\n","  'Pizza Poppers Uncured Pepperoni',\n","  'Cheddar Puffs'],\n"," ['Banana',\n","  'Granny Smith Apples',\n","  'Organic American Cheese Singles',\n","  'Strawberries',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Organic Baby Carrots',\n","  'Guacamole',\n","  'Chocolate Chip',\n","  'Celery Sticks',\n","  'Gluten-Free Chicken Nuggets',\n","  'Reduced Fat 2% Chocolate Milk',\n","  'Premium Apple Cider',\n","  'Bean & Rice Chips sea salt'],\n"," ['Banana',\n","  'Small Hass Avocado',\n","  'Honey Nut Cheerios',\n","  'Organic Strawberries',\n","  'Large Lemon',\n","  'Uncured Hickory Smoked Sunday Bacon',\n","  'Strawberry Preserves',\n","  'Organic Raspberries',\n","  'Organic Large Grade AA Omega-3 Eggs',\n","  'Natural Premium Coconut Water',\n","  'Organic Fuji Apple',\n","  '100% Whole Wheat Bread',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Organic Chicken & Apple Sausage',\n","  'Peanut Butter Gluten Free Breakfast Bars',\n","  'Yogurt, Strained Low-Fat, Coconut',\n","  'Ataulfo Mango',\n","  'Ancient Grain Original Granola',\n","  'Organic White Corn & Wheat Tortillas',\n","  'Organic 1% Low Fat Milk',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Icelandic Style Skyr Blueberry Non-fat Yogurt',\n","  'Tulips 10 Stem',\n","  'Fresh Fussilli',\n","  'Vanilla Skyr Nonfat Yogurt',\n","  'Non Fat Raspberry Yogurt',\n","  'Sprouted Grain Low Sodium Bread',\n","  'Tuna Fillets in Spring Water',\n","  'Smoked Salmon',\n","  'Crunch Granola Bar Chocolate Chip',\n","  'Organic Raisin Bran Cereal',\n","  'Pesto Sauce'],\n"," ['Swaddlers Diapers Super Pack, Size 3',\n","  'Whips Creamy Whipped Peanut Butter',\n","  'Special K Chocolatey Delight Cereal',\n","  'Large Enriched Bread',\n","  'Twinkies'],\n"," ['Strawberries',\n","  'Boneless Skinless Chicken Breasts',\n","  'Mini Original Babybel Cheese',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  'Russet Potato',\n","  'Brussels Sprouts',\n","  'Crackers Cheddar Bunnies Snack Packs',\n","  'Organic Apples Pommes',\n","  'Cold Brew Coffee'],\n"," ['Sparkling Water Grapefruit'],\n"," ['Organic Baby Spinach',\n","  'Raspberries',\n","  'Shredded Parmesan',\n","  'Organic Hass Avocado',\n","  'Organic Garlic',\n","  'Organic Blueberries',\n","  'Bag of Organic Bananas',\n","  'Organic Lentil Soup',\n","  'All Purpose Crushed Tomatoes',\n","  'Organic 100% Whole Wheat No. 4 Spaghetti',\n","  'Organic Beans & Rice Cheddar Cheese Burrito',\n","  'Cafe Latte Pure Lightly Sweetened Iced Coffee With Almond Milk',\n","  'Four Cheese Thin Crust Pizza',\n","  'Total 2% Lowfat Greek Yogurt with Honey',\n","  'Organic Low Fat Vegetable Barley Soup',\n","  'Organic Lentil Vegetable Soup',\n","  'Thin Crust Pepperoni Pizza',\n","  'Tomato Purée',\n","  'Organic Premium Tomato Paste',\n","  'Goat Cheese Crumbles'],\n"," ['Large Lemon',\n","  'Natural Extra Sharp Cheddar Cheese',\n","  '100% Whole Wheat Bread',\n","  'Sweet Tea W/Real Sugar Iced Tea',\n","  'Premium Calcium & Vitamin D No Pulp Orange Juice',\n","  'Hot Wasabi Peas'],\n"," ['Organic Avocado',\n","  'Red Peppers',\n","  'Organic Unsweetened Almond Milk',\n","  'Organic Romaine Lettuce',\n","  'Red Vine Tomato',\n","  'White Onion',\n","  'English Seedless Cucumber',\n","  'Raisin Bran Cereal',\n","  'Made With Organic Beans & Rice Burrito Non-Dairy',\n","  'Organic No Salt Added Diced Tomatoes',\n","  'Thin Crust Pepperoni Pizza',\n","  'Dark Chocolate With Sea Salt & Almonds',\n","  'Not Beef Bouillon Cubes',\n","  'Beyond Beef Fiesty Crumble',\n","  'Dark Red Kidney Beans No Salt Added'],\n"," ['Chocolate Chip Cookies'],\n"," ['Organic Plain Whole Milk Yogurt',\n","  'Organic Recipe Granola',\n","  'Porcini Mushroom Tortellini',\n","  'Organic Greek Whole Milk Blended Vanilla Bean Yogurt',\n","  'Organic Orange Fruit Juice',\n","  'Cold-Pressed Organic Grapefruit',\n","  'Organic Tellicherry Black Peppercorns',\n","  'Peppermint Caffeine Free Herbal Tea Bags'],\n"," ['24/7 Performance Cat Litter',\n","  'Original Restaurant Style Tortilla Chips',\n","  'Lemon-Lime Soda',\n","  'Adult Chicken & Rice Dry Dog Food'],\n"," ['2% Reduced Fat DHA Omega-3 Reduced Fat Milk',\n","  'Pop-Tarts Frosted Brown Sugar Cinnamon Pastries'],\n"," ['Original Pure Creamy Almond Milk',\n","  'Mild Italian Chicken Sausage',\n","  'Organic Summer Strawberry Bunny Fruit Snacks',\n","  'Original Rotisserie Chicken',\n","  'Cage Free Grade A Large Brown Eggs',\n","  'Organic Fettuccine',\n","  'Organic Sensitivity Infant Formula with Iron',\n","  'Sesame Crispbread'],\n"," ['Organic Cilantro',\n","  'Red Raspberries',\n","  'Organic Hass Avocado',\n","  'Organic Tomato Cluster',\n","  'Bag of Organic Bananas',\n","  'Organic Milk',\n","  'Organic Sour Cream',\n","  'Yo Baby Organic Vanilla Yogurt',\n","  'Liquid Vitamin C Orange Flavor',\n","  'Sambucus Immune Bio-Certified Elderberry Natural Syrup',\n","  'Organic Sambucus for Kids Standardized Elderberry',\n","  'Organic Acai Berry 100% Juice',\n","  \"Organic Mother's Milk Herbal Tea\"],\n"," ['Poblano Pepper',\n","  'Clementines',\n","  'Limes',\n","  'Black Beans',\n","  'Natural Fresh Goat Cheese',\n","  'White Onion',\n","  'Blood Oranges',\n","  'Low-Fat Mango on the Bottom Greek Yogurt',\n","  'Squeeze Tomato Ketchup',\n","  'Total Advanced Whitening Toothpaste',\n","  'Medium Black Bean Salsa',\n","  'Red Leaf Lettuce',\n","  'Original Sweetened Dried Cranberries',\n","  'Clover Honey',\n","  'Virgin Avocado Oil',\n","  'Honey Bunches of Oats Honey Roasted Cereal'],\n"," ['Distilled Water'],\n"," ['Premium Original Saltine Crackers',\n","  'Grade A Large Brown Eggs',\n","  'Natural Fresh Goat Cheese',\n","  'Organic Half Spring Mix',\n","  'Original Apple 100% Juice',\n","  '100% White Grape Juice',\n","  'Vitamin D Whole Milk',\n","  'Freshly Shredded Parmesan Cheese',\n","  'Double Noodle Classic Recipe Condensed Soup',\n","  'Star Wars Healthy Kids Pasta Condensed Soup',\n","  'Roasted & Salted Shelled Pistachios',\n","  'Grapes',\n","  'Bag of Organic Lemons',\n","  'Glazed Buttermilk Doughnuts',\n","  'Regular'],\n"," ['Sweet Kale Salad Mix',\n","  'Organic Mixed Vegetables',\n","  'Seedless Cucumbers',\n","  'Frozen Whole Strawberries',\n","  'Original Almondmilk'],\n"," ['Banana',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Organic Bread with 21 Whole Grains',\n","  '1% Lowfat Milk',\n","  'Original Recipe Tapioca Pudding'],\n"," ['Classic White Bread',\n","  'Vanilla Almond Breeze',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Mini Double Caramel Ice Cream Bars',\n","  'Pure Irish Butter',\n","  'Cereal',\n","  'Clean Care Mega Rolls Toilet Paper',\n","  'Mandarin Orange Chicken',\n","  'Cherrios Honey Nut',\n","  'One Ply Choose A Size Big Roll Paper Towel Rolls',\n","  'Ultra Dawn Ultra Dishwashing Liquid Antibacterial Orange 21.6 Oz Dish Care',\n","  'Force Flex Tall Kitchen Drawstring Bags',\n","  'Original Scent HE Laundry Detergent',\n","  'Clean Linen Concentrated Bleach',\n","  'Original 120 count Fabric Enhancers Dryer Sheets',\n","  'Canned Meat 25% Less Sodium',\n","  'Orange Tangerine Liquid Water Enhancer',\n","  'Wieners',\n","  'Chocolate Fudge Brownie Ice Cream',\n","  'Almond Ice Cream Bars',\n","  'Party Size Cheese Flavored Snack Puffs',\n","  'Chicken Wings Family Pack',\n","  'Pizzeria Style Classic Crust Pepperoni Pizza'],\n"," ['Sourdough Deli Bread', 'Ultra Plush 3 ply Toilet Paper 12 Double Rolls'],\n"," ['Uncured Hickory Smoked Sunday Bacon',\n","  'Skim Milk',\n","  'Ginger Ale Soda',\n","  'Finely Shredded Mild Cheddar Cheese',\n","  'Natural Shredded Mexican Style Four Cheese',\n","  \"L'elegance Toothpicks\",\n","  'Medium Pitted California Ripe Olives',\n","  'Manzanilla Pimiento Stuffed Olives'],\n"," ['Banana',\n","  'Yellow Onions',\n","  'Bunched Cilantro',\n","  'Lime Sparkling Water',\n","  'Basil Pesto',\n","  'Organic Large Grade A Brown Eggs',\n","  'Diced Tomatoes',\n","  'Grated Parmesan Cheese',\n","  'Elbow Macaroni Pasta',\n","  'Ditalini Pasta',\n","  'Petite Diced Tomatoes',\n","  'All Purpose Flour',\n","  'Light Vanilla Almond Milk',\n","  'Simply 100 Crunch Strawberry Chocolate Truffle Non-Fat Greek Yogurt'],\n"," ['Distilled Water',\n","  'Classic Soda',\n","  'Honey Nut Crunch Cereal',\n","  'Unsweetened Organic Soy Milk',\n","  'Onions, Minced'],\n"," ['Organic Strawberries',\n","  'Boneless Skinless Chicken Breasts',\n","  'Red Onion',\n","  'Balsamic Vinaigrette',\n","  'Flank Steak'],\n"," ['15 Grain Whole Grain Bread'],\n"," ['Organic Baby Spinach',\n","  'Clementines',\n","  'Hass Avocados',\n","  'Spring Water',\n","  'Rainbow Bell Peppers',\n","  'Frozen Organic Blueberries',\n","  'Roasted Pine Nut Hummus',\n","  'Marcona Almonds'],\n"," ['Lime Sparkling Water',\n","  'Ginger Beer',\n","  'Vantage Choose-A-Size Regular Roll Towels'],\n"," ['Organic Garlic',\n","  'Organic Sliced White Mushrooms',\n","  'Limes',\n","  'Authentic Red Curry Paste',\n","  'Organic Sunday Bacon',\n","  'Vegetarian Roll'],\n"," ['Strawberries',\n","  'Broccoli Crown',\n","  'Organic Strawana Probugs Kefir',\n","  'Ranch Veggie Dip',\n","  'Cherubs Tomatoes',\n","  '4% Milkfat Small Curd Cottage Cheese with Chives',\n","  'Strawberry Cream Cheese Spread',\n","  'Iced Coffee Lightly Sweet'],\n"," ['Fat Free Milk',\n","  'White Italian Bread',\n","  'Sweet Garden Peas',\n","  'Fanta Zero Sugar Free Orange Soda Fridge Pack',\n","  'Hearty Rye Bread',\n","  'Coke Zero'],\n"," ['Organic Gala Apples',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Garbanzo Beans',\n","  'Organic White Onions',\n","  'Water',\n","  'Organic Seaweed Snack, Raw',\n","  'Uncured Bacon + Cranberry Bison Bar',\n","  'Sprouted Green Lentils',\n","  'Simply Stock Organic Vegetable Unsalted Stock'],\n"," ['Organic Strawberries',\n","  'Red Raspberries',\n","  'Medium Navel Orange',\n","  'Wheat Gluten Free Waffles',\n","  'Broccoli Crown',\n","  'Organic Baby Carrots',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Vanilla Coconut Milk Yogurt'],\n"," [\"Organic D'Anjou Pears\",\n","  'Blueberries',\n","  'Unsweetened Vanilla Almond Milk',\n","  '100% Lactose Free 1% Lowfat Milk',\n","  'Organic Apples Pommes',\n","  'Corn Pops Family Size Cereal',\n","  'Baked Soft Pretzels',\n","  'Apple Juice',\n","  'Mandarins Bag',\n","  'Fresh CA Grown Eggs',\n","  'Green Tea',\n","  'Goldfish Cheddar Baked Snack Crackers',\n","  'String Cheese, Mozzarella',\n","  'California Diced Peaches Packed in Water No Sugar Added'],\n"," ['Seedless Red Grapes',\n","  '2% Reduced Fat Milk',\n","  'French Vanilla Creamer',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Ground Beef',\n","  'Vanilla Coke Zero',\n","  'Clean Breeze® Brise Pure® Liquid Laundry Detergent'],\n"," ['Unsweetened Watermelon Water',\n","  'Margherita Pizza',\n","  'Organic Red Bell Pepper',\n","  'Organic Reduced Fat 2% Milk',\n","  'Mozzarella Cheese',\n","  'Organic Basmati Rice',\n","  'Crunchy Baked Corn Sticks',\n","  'Plain Mini Bagels',\n","  'Penne Lisce',\n","  'Cavatappi No. 87 Macaroni',\n","  'Diced Onions'],\n"," ['Papaya',\n","  'Organic Raspberries',\n","  'Plain Greek Yogurt',\n","  'Trilogy Kombucha Drink',\n","  'Dragon Fruit',\n","  'Organic Garden Blend Sprouts',\n","  'Carrot'],\n"," ['Chunky Peanut Butter'],\n"," [\"Organic D'Anjou Pears\",\n","  'Banana',\n","  'Small Hass Avocado',\n","  'Organic Baby Arugula',\n","  'Organic Strawberries',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Organic Granny Smith Apple',\n","  'Organic Cucumber',\n","  'Organic Basil',\n","  'Organic Yellow Onion',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Organic Green Seedless Grapes',\n","  'Uncured Genoa Salami',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Organic Bell Pepper',\n","  'Organic Orange Bell Pepper',\n","  'Organic 1% Low Fat Milk',\n","  'Organic Shredded Carrots',\n","  'Cut Hearts Of Palm',\n","  'Plain Bagels',\n","  'Tommy/Kent/Keitt/Haden Mango',\n","  'Organic Cookies & Cream Ice Cream',\n","  'Organic Broccoli Slaw',\n","  'Tofu Miso Ramen',\n","  'Organic Sea Salt Potato Chips'],\n"," ['Yellow Onions',\n","  'Organic Black Beans',\n","  'Whole Wheat English Muffins',\n","  'Romaine Lettuce',\n","  'Broccoli Crown',\n","  'Low Fat Cottage Cheese',\n","  'Marinara Sauce',\n","  'Green Onions',\n","  'Organic Mixed Vegetables',\n","  'Organic Italian Parsley Bunch',\n","  'Medium Cheddar Cheese Block',\n","  'Organic Cherry Tomatoes',\n","  'Organic Rainbow Carrots',\n","  'Roasted Garlic Hummus',\n","  'Garlic & Fine Herbs Gournay Cheese',\n","  'Medium Grain Rice',\n","  'Baby Seedless Cucumbers',\n","  'Beef Short Ribs',\n","  'Organic Milk Chocolate Peanut Butter Cups',\n","  'Spectacular Ginger Beer',\n","  'Organic Greek Lowfat Yogurt With Cherries',\n","  'Organic Greek Nonfat Yogurt With Mixed Berries',\n","  'Organic Greek Lowfat Yogurt With Blueberries',\n","  'Organic Nonfat Greek Yogurt With Peaches',\n","  'Bay Leaves'],\n"," ['Small Hass Avocado',\n","  'Organic Grape Tomatoes',\n","  'Strawberries',\n","  'Zucchini Noodles',\n","  'Organic Hothouse Cucumbers',\n","  'Organic Baby Rainbow Carrots',\n","  'Apple Honeycrisp Organic',\n","  'Organic Diced Tomatoes',\n","  'Smoked Turkey Breast Slices',\n","  'Walnut Halves & Pieces',\n","  'Heavy Whipping Cream',\n","  'Organic Rolled Oats',\n","  'Olive Hummus',\n","  'Organic Whole Cashews',\n","  'Traditional Plain Greek Yogurt',\n","  'Take & Bake Multigrain Loaf',\n","  'Chocolate Milk Frozen Pops',\n","  'Organic Jumbo Grade A Pastured Eggs',\n","  'Organic Yellow Peaches',\n","  'Light Brown Sugar'],\n"," ['Large Lemon',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Kiwi',\n","  'Tomato Ketchup',\n","  'Organic Capellini',\n","  'Natural Artesian Water',\n","  'Boneless Chicken Breast',\n","  'Skin Trip Coconut Soap Bar'],\n"," ['Banana',\n","  'Organic Strawberries',\n","  'Sparkling Water Grapefruit',\n","  'Red Raspberries',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Organic Black Beans',\n","  'Creamy Almond Butter',\n","  'Organic Brown Rice',\n","  'Organic Diced Tomatoes',\n","  'Asparagus',\n","  'Organic Penne Rigate',\n","  'Organic Extra Virgin Olive Oil',\n","  'Organic Tortilla Chips',\n","  'Marinara Sauce',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Romaine Hearts',\n","  'Organic Lactose Free Whole Milk',\n","  'Corn Chips',\n","  'Organic Promise Autumn Wheat Cereal',\n","  'Macaroni & Cheese',\n","  'Organic Honey Sweet Whole Wheat Bread',\n","  'Organic Capellini',\n","  'Tzatziki',\n","  'Organic Orzo',\n","  'Made With Organic Beans & Rice Burrito Non-Dairy',\n","  'House Blend Deep Roast Ground Coffee',\n","  'Mixed Berries Whole Milk Icelandic Style Skyr Yogurt',\n","  'Organic Whipping Cream',\n","  'Pluot',\n","  'Mango Sriracha Hummus',\n","  'Boneless & Skinless Wild Alaskan Sockeye Salmon',\n","  'Orange Calcium & Vitamin D Pulp Free',\n","  'Organic Refried Black Beans',\n","  '2-Ply Right Size 100% Recycled Paper Towels',\n","  'Laundry Detergent Free & Clear',\n","  'Organic Ice Cream Vanilla Bean',\n","  'Organic Coconut Covered in Dark Chocolate Candy Bar',\n","  'Organic Cheese Frozen Pizza',\n","  'Mango',\n","  'Organic Sparkling Lemonade Beverage',\n","  'Organic Fuel High Protein Chocolate Shake',\n","  'Tall Kitchen Drawstring Bags'],\n"," ['Organic Zucchini',\n","  'Natural Spring Water',\n","  'Gluten Free Rice Crust Spinach Pizza',\n","  'Organic Creamy Tomato Soup',\n","  'Organic Roasted Red Pepper & Tomato Bisque',\n","  'Pizza, Rice Crust, Cheese',\n","  'Coconut Oil Kettle Cooked Potato Chips Sea Salt'],\n"," ['Unsalted Butter',\n","  'Original Citrus Sparkling Flavored Soda',\n","  'Oven Baked Cheddar & Sour Cream Potato Crisps',\n","  'Nuggets Milk Chocolate With Almond',\n","  'Original Baked Whole Grain Wheat Crackers'],\n"," ['Clotted Cream, English Luxury'],\n"," ['Flax Plus Organic Pumpkin Flax Granola',\n","  'Nonfat Icelandic Style Strawberry Yogurt',\n","  'Organic Pineapple Chunks',\n","  'Heritage Flakes Cereal',\n","  'Strained Non Fat Orange & Ginger Yogurt'],\n"," ['Taboule Salad'],\n"," ['Soda',\n","  'Organic Simply Naked Pita Chips',\n","  'Sparkling Natural Mineral Water',\n","  'Corn Tortillas',\n","  'Orange & Lemon Flavor Variety Pack Sparkling Fruit Beverage',\n","  '8\\\\\" Flour Tortillas De Harina'],\n"," ['Organic  Dried & Unsulfured Orchard Select Apricots',\n","  'Bananas',\n","  'Organic Reduced Fat 2% Milk',\n","  'Healthy Grains Oats & Honey Clusters with Toasted Coconut Gluten Free',\n","  'Boomchickapop Sweet & Salty Kettle Corn',\n","  'Organic Summer Strawberry Bunny Fruit Snacks',\n","  'Gluten Free Chocolate Chip Cookies',\n","  'Dark Chocolate Pumpkin Seed Bark',\n","  'Original Baked Cheese Puffs',\n","  'Santa Cruz OG Blackberry Pom Fruit Spread',\n","  'Cereal, Superfood, Cacao Crunch',\n","  'Cereal, Panda Puffs, Peanut Butter',\n","  'Heart to Heart Honey Toasted Oat Cereal',\n","  'Organic Multi Grain Squares Cereal'],\n"," ['Organic Baby Spinach',\n","  'Organic Coconut Milk',\n","  'Dairy Free Coconut Milk Yogurt Alternative',\n","  'Michigan Organic Kale',\n","  'Organic Extra Firm Tofu',\n","  'Vanilla Almond Breeze',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Purified Water',\n","  'Dairy Free Coconut Milk Vanilla Yogurt Alternative',\n","  'Dairy Free Coconut Milk Passionate Mango Yogurt Alternative'],\n"," ['Organic Roma Tomato',\n","  'Organic Granny Smith Apple',\n","  'Organic Cucumber',\n","  'Organic California Style Sprouted Bread',\n","  'Organic Iceberg Lettuce',\n","  'No Salt Added Black Beans',\n","  'Spring Water',\n","  'Organic Sour Cream',\n","  'Icelandic Style Skyr Blueberry Non-fat Yogurt',\n","  'Brussels Sprouts',\n","  'Organic Rainbow Carrots',\n","  'Strained Non-Fat Strawberry Icelandic Style Skyr Yogurt',\n","  'French Vanilla Half+Half',\n","  'Pico De Gallo',\n","  \"S'mores Chocolate Ice Cream\",\n","  'Organic Sliced Mozzarella'],\n"," ['Cola', 'Lemon-Lime Soda'],\n"," ['Organic Whole Milk',\n","  'Large Lemon',\n","  'Unsalted Butter',\n","  'Milk and Cookies Ice Cream',\n","  'Sea Salt Caramel Gelato',\n","  'Americone Dream® Ice Cream',\n","  'Natural Vanilla Ice Cream',\n","  'Premium Pure Cane Granulated Sugar',\n","  '100% Pure Pumpkin',\n","  'Organic Ground Ginger',\n","  'Organic Ground Cloves',\n","  'Sparkling Water Berry',\n","  'Aged White Wine Vinegar'],\n"," ['Organic Blueberries', 'Lavender Hand Soap', '100% Recycled Paper Towels'],\n"," ['Banana',\n","  'Smartwater',\n","  'Organic Red Delicious Apple',\n","  'Curate Melon Pomelo Sparking Water',\n","  'Kiwi Sandia Sparkling Water',\n","  'Vanilla Almond Breeze',\n","  'Lowfat Vanilla Yogurt',\n","  'Blackberry Cucumber Sparkling Water',\n","  'Blood Oranges',\n","  'Organic Frosted Maple Brown Sugar Toaster Pastries',\n","  'Power Grains Waffles 6 ct',\n","  'Chocolate Sea Salt',\n","  'Boneless Chicken Breast',\n","  'Coconut  Chocolate Bar',\n","  'Organic Frosted Wildberry Acai Toaster Pastries',\n","  'Honeydew Melon',\n","  'Organic 1% Milkfat Lowfat Chocolate Milk'],\n"," ['Granny Smith Apples',\n","  'Organic Avocado',\n","  'Strawberries',\n","  'Pure Coconut Water',\n","  'Garlic',\n","  'Romaine Lettuce',\n","  'Pure & Natural Sour Cream',\n","  '100% Whole Wheat Bread',\n","  'Real Guacamole',\n","  'Green Onions',\n","  'Roma Tomato',\n","  'Red Onion',\n","  'Cucumber Kirby',\n","  'Classic Mix Variety',\n","  'Coke Classic',\n","  'Organic Blackberry Sorbet Bars',\n","  'Homestyle Some Pulp Orange Juice',\n","  'Garbanzo Beans',\n","  'Yukon Gold Potatoes',\n","  'Dairy Milk Fine Chocolate Candy Bar',\n","  'Tater Treats Seasoned Shredded Potatoes',\n","  'Pure Cane Sugar Cubes',\n","  'Top Ramen Oriental Flavor',\n","  'Original Style Yoghurt Plain',\n","  'English Toffee Crunch Ice Cream Bars'],\n"," ['Giant Roll Paper Towels',\n","  'Action Pacs, Fresh Scent with Dawn',\n","  'Clean Care Big Roll Toilet Paper',\n","  'Original High Efficiency Liquid Laundry Detergent'],\n"," ['Organic Cilantro', 'Himalayan Salted Ghee', 'Rustic Baguette'],\n"," ['Yellow Onions',\n","  'Eggo Homestyle Waffles',\n","  'Vanilla, Chocolate, Strawberry Ice Cream',\n","  'Roma Tomato',\n","  'Sour Cream',\n","  'Organic Reduced Fat 2% Milk',\n","  'Original Potato Chips',\n","  'Bunched Carrots',\n","  'Original Medium Picante Sauce',\n","  'Hardwood Smoked Bacon',\n","  'Garlic Bread With Mozzarella',\n","  'Big California Sourdough Bread',\n","  'Natural Deli Style Sliced Swiss Cheese',\n","  '4 Cheese Mexican Fine Cut Shredded Cheese',\n","  'Vanilla Bean 1% Milk Fat Yogurt'],\n"," ['Banana',\n","  'European Style Unsalted Butter',\n","  'Large Grapefruit',\n","  'Freshly Shredded Parmesan Cheese',\n","  'Freshly Shaved Parmesan Cheese',\n","  'Pecorino Romano Cheese',\n","  'Natural Jif Creamy Peanut Butter Spread',\n","  'Pure Water',\n","  'Ultra-Purified Water',\n","  'Avocado Oil Canyon Cut Kettle Cooked Potato Chips Sea Salt',\n","  'Kettle Chips, Avocado Oil, Sea Salt',\n","  'Chicken Curry Salad'],\n"," ['Soft Taco Size White Flour Tortillas',\n","  'Organic Cilantro',\n","  'Organic Strawberries',\n","  'Pure Coconut Water',\n","  'Bag of Organic Bananas',\n","  'Organic Cucumber',\n","  'Tortilla Chips, Mexican Kitchen Style, Salted',\n","  'Organic Yukon Gold Potato',\n","  'Organic Vegetable Broth',\n","  'Organic Raspberries',\n","  'Asparagus',\n","  'Frozen Organic Wild Blueberries',\n","  '100% Whole Wheat Bread',\n","  'Carrots',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Black Beans No Salt Added',\n","  'Organic White Onions',\n","  'Tomatillo',\n","  'Serrano Chile Peppers',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Organic Greek Whole Milk Blended Vanilla Bean Yogurt',\n","  'Pita Chips Simply Naked',\n","  'Organic Chocolate Chip Chewy Granola Bars',\n","  'Cultured Low Fat Buttermilk',\n","  'EnviroKidz Chocolate Choco Chimps',\n","  'Uncured Beef Hot Dogs',\n","  'Organic Sea Salt Potato Chips',\n","  'Canola Oil',\n","  'Organic Original Hummus',\n","  'Roasted Red Pepper Hommus',\n","  'Just Once Prenatal One Multivitamin',\n","  'Gluten Free Organic Peanut Butter & Chocolate Cereal'],\n"," ['Organic Baby Spring Mix',\n","  'Organic Thyme',\n","  '100% Recycled Paper Towels',\n","  'Panko Breadcrumbs Original',\n","  'Old Style Whole Grain Dijon Mustard'],\n"," ['Canola Oil'],\n"," ['Organic Avocado',\n","  'Organic Red Onion',\n","  'Krinkle Cut Salt & Fresh Ground Pepper Potato Chips',\n","  'Large Lemon',\n","  'Bunched Cilantro',\n","  'Mandarin Oranges',\n","  'Organic Yellow Onion',\n","  'Limes',\n","  'Organic Broccoli Florets',\n","  'Carrots',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Spring Mix',\n","  'Avocado Oil Himalayan Salt Chips',\n","  'Jalapeno Potato Chips',\n","  'Mint',\n","  'Original Rotisserie Chicken',\n","  'Bok Choy',\n","  'Dark Chocolate Covered Banana',\n","  'Spinach Mountain Bread',\n","  'Sriracha Mayonnaise',\n","  'Organic Gluten Free Sea Salt by the Seashore Multigrain Tortilla Chips'],\n"," ['Seedless Small Watermelon'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Strawberries',\n","  'Organic Garlic',\n","  'Organic Black Beans',\n","  'Bag of Organic Bananas',\n","  'Large Alfresco Eggs',\n","  'ZBar Organic Chocolate Brownie Energy Snack',\n","  'Organic Yellow Onion',\n","  'Organic Red Bell Pepper',\n","  'Organic Free Range Chicken Broth',\n","  'Red Vine Tomato',\n","  'Organic Kiwi',\n","  'Organic Romaine',\n","  'Annie Peely Fruit 4.5 Z',\n","  'Reduced Fat 2% Chocolate Milk',\n","  'Dark Red Kidney Beans No Salt Added',\n","  'Lowfat Small Curd Cottage Cheese',\n","  'Bite Size Cheddar Crackers'],\n"," ['Tzatziki', 'Smoked Mozzarella Cheese', 'Crazy Feta Dip'],\n"," ['Whole Milk',\n","  'White Giant Paper Towel Rolls',\n","  'Original Orange Juice',\n","  'Quart Sized  Easy Open Freezer Bags',\n","  'Ultra Healing Lotion',\n","  'Mint Glide Floss Picks',\n","  '100% Natural Sweetener Zero Calorie Packets'],\n"," ['Zero Calorie Cola', 'Sweet & Salty Nut Granola Bars Peanut'],\n"," ['Super Seed Crispy Crackers',\n","  'Organic Large Grade AA Brown Eggs',\n","  '100% Whole Wheat Bread',\n","  'Lowfat 2% Milkfat Cottage Cheese',\n","  'Original Chocolate Pudding Snacks',\n","  'Goldfish Cheddar Baked Snack Crackers',\n","  'Organic White Rice Bowl',\n","  'Eggo Buttermilk Waffles',\n","  'Family Size Macaroni & Cheese',\n","  'Cran Raspberry Juice Drink',\n","  \"Chicken Noodle O's Condensed Soup\",\n","  'Aged White Cheddar Baked Rice And Corn Puffs',\n","  '1% Milk'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Blackberries',\n","  'Organic Strawberries',\n","  'Organic Hass Avocado',\n","  'Organic Hothouse Cucumbers',\n","  'Sugar Snap Peas',\n","  'Large Alfresco Eggs',\n","  'Organic Small Bunch Celery',\n","  'Organic Broccoli',\n","  'Organic Baby Carrots',\n","  'Organic Kiwi',\n","  'Organic Yellow Peaches',\n","  'Minneola Tangelo',\n","  'Blueberry Figgies & Jammies',\n","  'Fresh Mozzarella Snacking Cheese',\n","  'Snack Pack Mini Classic',\n","  'Frosted berry Strawberry Toaster Pastries'],\n"," ['Large Alfresco Eggs',\n","  'Medium Cheddar Cheese Block',\n","  'Organic Thyme',\n","  'Colby Jack Cheese',\n","  'Organic Chicken Bone Broth',\n","  'Potted Basil'],\n"," ['Imported Mineral Water',\n","  'Natural Premium Coconut Water',\n","  'Organic Romaine Lettuce',\n","  'Organic Wheat-Free & Gluten-Free Original Crackers',\n","  'Organic Red Cherry Tomato',\n","  'Organic Plain Greek Whole Milk Yogurt',\n","  'Gotta Have Vanilla Organic Frozen Nonfat Yogurt',\n","  'Vanilla Bean Ice Cream',\n","  '70% Dark Chocolate Salted Almond Bar',\n","  'Original Thin Rye Crispbread',\n","  'Ricotta Salata Cheese'],\n"," ['Creamy Peanut Butter',\n","  'Honey Low Fat Grahams',\n","  'Jet-Puffed Marshmallows',\n","  'Milk Chocolate Candy Bar',\n","  'Squeeze Real Mayonnaise',\n","  'Whipped Cream Cheese Spread',\n","  'GoGurt Strawberry and Blueberry Tubes'],\n"," ['Banana', 'Organic Spring Mix Salad'],\n"," ['Spring Water',\n","  '1% Lowfat Milk',\n","  '100% Carrot Juice',\n","  'Organic Unsalted Diced Tomatoes',\n","  'Organic  Sweet & Salty Peanut Pretzel Granola Bars',\n","  'Organic Cut Green Beans',\n","  'Bathroom Cleaner Natural Tub + Tile Cleaner'],\n"," ['Organic Baby Arugula',\n","  'Goo Berry Pie Probugs Kefir',\n","  'Chocolate Peppermint Stick Bar',\n","  'Sliced Varzi Salami Meat',\n","  'Mini Original Babybel Cheese',\n","  'Strawberry Preserves',\n","  'Organic Creamy Peanut Butter',\n","  'Whole Wheat English Muffins',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Hass Avocados',\n","  'Organic Baby Carrots',\n","  'Extra Sharp White Cheddar',\n","  'Organic Red Radish, Bunch',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Gluten Free Millet-Chia Bread',\n","  'Mandarin Orange Sparkling Natural Spring Water',\n","  'Salted Tub of Butter',\n","  'Crackers Cheddar Bunnies Snack Packs',\n","  'Organic Greek Lowfat Yogurt With Blueberries',\n","  'Organic Cheese Frozen Pizza',\n","  'Organic Greek Lowfat Yogurt With Strawberries',\n","  'Baby Swiss Slices Cheese',\n","  'Whole Nutrition Bar Chocolate Cupcake',\n","  'Unsweetened Vanilla Coconut Milk Beverage',\n","  'Prosciutto',\n","  'Gluten Free Vanilla Granola',\n","  'Naked Sponges - 2 CT',\n","  'Natural Milk Chocolate Bar',\n","  'Organic Sunflower Seed Spread'],\n"," ['Sonoma Traditional Flour Tortillas 10 Count',\n","  'Organic Broccoli Crowns',\n","  'Cage Free Large White Eggs',\n","  'Organic Mini Sandwich Crackers Cheddar Cheese',\n","  'Butter',\n","  'Baking Soda Toothpowder, Dazzling Mint',\n","  'Tempt Unsweetened Vanilla Hemp Milk',\n","  'Baba Ghanoush',\n","  'Lemon Ricotta Ravioli In Lemon Pasta',\n","  'Chicharrones Fried Pork Rinds'],\n"," ['Colorful Coarse Ground Blend Seasoned Pepper',\n","  'Bolthouse Baby Carrots',\n","  'Original Salt-Free Seasoning Blend'],\n"," ['Banana',\n","  'Raw Chocolate Cacao Nibs',\n","  'Maple Almond Butter',\n","  'Hazelnut Instant Coffee Beverage',\n","  'Organic Extra Virgin Coconut Oil',\n","  'Unsalted Tops Saltine Crackers',\n","  'Quick Cooking Rolled Oats Irish Oatmeal'],\n"," ['Banana',\n","  'Uncured Slow Cooked Ham',\n","  'Broccoli Crown',\n","  '100% Whole Wheat Bread',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Organic Vanilla Bean Ice Cream',\n","  'Skim Milk',\n","  'Cran Raspberry Sparkling Water',\n","  'Organic Super Fruit Punch Juice Drink',\n","  'Appley Ever After Organic Juice Drink',\n","  'Organic Muenster Cheese Slices',\n","  'Soft Pretzel Mini Buns',\n","  'Sesame Street Organic Mini Blueberry Pancakes',\n","  'Alive! Multi-Vitamin Cherry, Grape & Orange Gummies for Children',\n","  'Ground Black Pepper',\n","  'Organic Salted Caramel Ice Cream Juliette Sandwiches',\n","  'Lean & Fit Chicken Apple Sausage Egg White & Cheddar on Multi Grain Flatbread Breakfast Sandwich',\n","  'Chocolate Chip Bunny Grahams Whole Grain Graham Snacks Bunny Grahams'],\n"," ['Organic Cilantro',\n","  'Organic Zucchini',\n","  'Organic Hass Avocado',\n","  'Bag of Organic Bananas',\n","  'Organic Lemon',\n","  'Asparagus',\n","  'Organic Riced Cauliflower',\n","  'Curate Melon Pomelo Sparking Water',\n","  'All Natural Red Tomato Mild Salsa Mexican with Green Chile & Cilantro',\n","  'New Mexico Taco Skillet Sauce For Chicken'],\n"," ['Organic Cilantro',\n","  'Organic Blackberries',\n","  'Organic Roma Tomato',\n","  'Penne Rigate #41 Pasta',\n","  'Classic Mild Cheddar Macaroni & Cheese',\n","  'Red Potatoes',\n","  'Organic Granny Smith Apple',\n","  'Large Alfresco Eggs',\n","  'Organic Cucumber',\n","  'Organic Small Bunch Celery',\n","  'Organic Raspberries',\n","  'Roasted Turkey Breast',\n","  'Crepes',\n","  'Organic Whole Grassmilk Milk',\n","  'Dark Chocolate Cinnamon Pecan Bar',\n","  'Organic Italian Parsley Bunch',\n","  'Fire Roasted Crushed Tomatoes',\n","  'Tomatillo',\n","  'Grassmilk 2% Reduced Fat Milk',\n","  'Nonfat Icelandic Style Strawberry Yogurt',\n","  'Icelandic Style Skyr Blueberry Non-fat Yogurt',\n","  'Non Fat Acai & Mixed Berries Yogurt',\n","  'Oatmeal Raisin Walnut Energy Bar',\n","  'Wild Berry Smoothie',\n","  'Vanilla Skyr Nonfat Yogurt',\n","  'Organic Freeze Dried Bananas and Strawberries',\n","  'Organic Fuel, High Protein Milk Shake, Vanilla',\n","  'Almond Breeze Unsweetened Almond Coconut Milk Blend',\n","  'Wild Mushroom & Herb Couscous Mix',\n","  'Double Fiber Bread',\n","  'Organic 5 Grain Elbows & White Cheddar Macaroni and Cheese',\n","  'Simply Naked Bagel Chips',\n","  'Chocolate Chip Cookie Dough Ice Cream',\n","  'Coconut Almond Chocolate'],\n"," ['Broccoli Florettes'],\n"," ['Organic Large Extra Fancy Fuji Apple',\n","  'Seedless Red Grapes',\n","  'Bag of Organic Bananas',\n","  'Organic Short Grain Brown Rice',\n","  'Original Hummus',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Organic Whole Strawberries',\n","  'Organic Turkey Bacon',\n","  'Organic Lightly Salted Brown Rice Cakes',\n","  'Organic Sugar Snap Peas',\n","  'EnviroKidz Gluten Free & Wheat Free Gorilla Munch Corn Puff Cereal',\n","  'Gluten Free Omega Flax & Fiber Bread',\n","  'Organic Baby Kale Mix',\n","  'Gluten Free Pretzel Sticks',\n","  'Gluten Free Vanilla Granola',\n","  'Lactose Free Low Fat Vanilla Yogurt',\n","  'Orange Blossom Honey',\n","  'Vegan Carob Chips',\n","  'Organic Gluten Free Buckwheat Wildberry Waffles',\n","  'Gluten Free Cinnamon Raisin Bread'],\n"," ['Organic Half & Half'],\n"," ['Organic Hass Avocado',\n","  'Organic Reduced Fat Milk',\n","  'Sonoma Traditional Flour Tortillas 10 Count',\n","  'Sicilian Pistachio'],\n"," ['Organic Sugar Snap Peas',\n","  'Mild Italian Chicken Sausage',\n","  'Whole Wheat Sourdough'],\n"," ['Organic Baby Spinach',\n","  'Organic Zucchini',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'White Sliced Mushrooms',\n","  'Yellow Zucchini',\n","  'Microwave in Bag Green Beans'],\n"," ['Banana',\n","  'Mild Cheddar Cheese Sticks',\n","  'Plain Non-Fat Greek Yogurt',\n","  'Organic Super Fruit Punch Juice Drink',\n","  'Broccoli Bunch',\n","  'Natural Sharp Cheddar Cheese',\n","  'Turkey Store Lean Ground Turkey',\n","  'Greek Toasted Coconut Vanilla Non Fat Yogurt',\n","  'Light & Fit Strawberry Non Fat Greek Yogurt',\n","  'Peanut Powder',\n","  'Original Strawberry/Harvest Peach Variety Pack Low Fat Yogurt',\n","  'Medleys Assorted Fruit Fruit Flavored Snacks',\n","  'Coarse Kosher Salt',\n","  'Sparkling Raspberry Lemonade Water Beverage',\n","  'Diet Cherry Coke',\n","  'Sparkling Water Beverage Lime'],\n"," ['Organic Baby Spinach',\n","  'Bag of Organic Bananas',\n","  'Organic Yellow Onion',\n","  'Hass Avocados',\n","  'Dairy-Free Chive Cream Cheese',\n","  'Organic Original Acai Berry + Guarana Smoothie Packs',\n","  'Organic Original Almond Milk',\n","  'Applewood Smoked Turkey Breast',\n","  'Maple Quinoa Cluster With Chia Seeds'],\n"," ['Organic Medium Salsa',\n","  'Hass Avocados',\n","  'Raisin Bran',\n","  '100% Natural Crunchy Peanut Butter'],\n"," ['Banana',\n","  'Shredded Mild Cheddar Cheese',\n","  'Yellow Onions',\n","  '2% Reduced Fat Milk',\n","  'Organic Small Bunch Celery',\n","  'Green Bell Pepper',\n","  'Spaghetti',\n","  'Smoked Turkey Breast Slices',\n","  'Frozen Broccoli Florets',\n","  'Organic Mini Sandwich Crackers Cheddar Cheese',\n","  'Taco Seasoning',\n","  'Honey Wheat Enriched Bread',\n","  'Microwavable Mac & Cheese',\n","  'Bag'],\n"," ['Organic Bunny Fruit Tropical Treat Fruit Snacks',\n","  'Organic SprouTofu Extra Firm Tofu',\n","  'Gluten and Dairy Free Rice Macaroni and Cheeze',\n","  'Dairy-Free Cheddar Style Shreds',\n","  'Organic Gluten Free Non-Dairy Beans & Rice Burrito',\n","  'Gluten Free Tofu Scramble Breakfast Wrap',\n","  'Enchilada Black Bean Vegetable',\n","  'Sesame Blues Corn Tortilla Chips',\n","  'Cocoa & Vanilla Bunny Cookies Gluten Free Bunny Cookies Gluten Free',\n","  'Peanut Butter Chocolate Chip Fruit & Nut Food Bar'],\n"," ['Original Roasted Seaweed Snacks',\n","  'Spring Water',\n","  'Organic Raw Kombucha Gingerade',\n","  'Organic & Raw Grape Kombucha',\n","  'Trilogy Kombucha Drink',\n","  'Plain Bagels',\n","  'Classic Cosmic Cranberry Kombucha',\n","  'Organic Superfood Oat Based Espresso Maca Mulberry Cereal',\n","  'Oregon Peppermint Cacao-Nectar Bar',\n","  'Superfood Bar Maca Maple Organic',\n","  'Organic Bittersweet Chocolate Ice Cream',\n","  'Maca Cold Brew Coffee Super Herb Elixir'],\n"," ['Lemonade',\n","  'Small Macintosh Apple',\n","  'Lime Ginger Lemon Agave',\n","  'Pico De Gallo',\n","  'Naturally Aged Cheddar Cheese Block Hot Habanero'],\n"," ['Banana',\n","  'Sparkling Water Grapefruit',\n","  'Orange Bell Pepper',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Large Lemon',\n","  'Roma Tomato',\n","  'Fresh Ginger Root',\n","  'Icelandic Style Skyr Blueberry Non-fat Yogurt',\n","  'Non Fat Acai & Mixed Berries Yogurt',\n","  'Bunched Carrots',\n","  'Red Mango',\n","  'Coconut Flavored Sparkling Water',\n","  'Organic Premium Quinoa',\n","  'Tahini',\n","  'Sliced Water Chestnuts',\n","  'Dill Pickle Spears'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Cucumber',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'White Onion',\n","  'Roasted Garlic Hummus',\n","  'Potato Chips Sweet Potato',\n","  'Cheddar Cheese Nut Thins Cracker Snacks'],\n"," ['Organic Large Grade AA Brown Eggs',\n","  'Organic Plain Whole Milk Yogurt',\n","  'Water',\n","  'Milk, Vitamin D',\n","  \"Major Dickason's Blend Whole Bean Coffee\",\n","  \"Jacob's Wonderbar Dark Roast\",\n","  'Organic Traditional Plain Kefir',\n","  'Simply Organic Garlic Salt',\n","  'Bread, Natural Fitness',\n","  'Ruby Red Grapefruit Juice'],\n"," ['Orange Juice',\n","  'Vitamin D Added Evaporated Milk',\n","  'Bun Klasic Kaiser 8 Count'],\n"," ['Medium Navel Orange',\n","  'Cantaloupe',\n","  'Organic Banana',\n","  'Organic Orange Juice',\n","  'Organic Yellow Peaches',\n","  'Honeydew Melon'],\n"," ['Shredded Parmesan',\n","  'Organic Russet Potato',\n","  'Organic Sliced White Mushrooms',\n","  'Organic Free Range Chicken Broth',\n","  'Spring Water',\n","  'Heavy Whipping Cream',\n","  'Phish Food® Ice Cream'],\n"," ['Dark Chocolate Cherry Chia Bar',\n","  'Organic Lemon Cayenne Sparkling Probiotic Drink',\n","  'Honeysuckle Hand Soap'],\n"," ['Banana',\n","  'Dark Chocolate Nuts & Sea Salt Bars',\n","  'Sparkling Water Grapefruit',\n","  'Triscuit Baked Whole Grain Wheat Rosemary & Olive Oil',\n","  'Olive Tapenade Hummus',\n","  'Daily Moisturizing Lotion',\n","  'Fresh Ground Turkey',\n","  'Asparation/Broccolini/Baby Broccoli',\n","  'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale',\n","  'Direct Trade House Blend Medium Roast Ground Coffee',\n","  'Mexican Mix Granola',\n","  'Pesto Pizza',\n","  'Organic Mushroom & Olive Pizza',\n","  'Light Mozzarella String Cheese',\n","  '7 Sprouted Grains Bread'],\n"," ['Banana',\n","  'Fennel Seed',\n","  'Medium Cheddar Cheese Block',\n","  'Premium Pure Cane Granulated Sugar',\n","  'Organic Whole Milk Strawberry Beet Berry Yogurt Pouch',\n","  'Blueberry Whole Milk Yogurt Pouch',\n","  'Microwavable Single Serving Mac & Cheese'],\n"," ['Whole Bean French Roast Dark Roast Blend Extra Bold Coffee'],\n"," ['Organic Baby Spinach', 'Strawberries', 'Clementines'],\n"," ['Curate Cherry Lime Sparkling Water',\n","  'Water, Unsweet, Crisp Apple',\n","  'Unsweetened Watermelon Water',\n","  'Organic Basil',\n","  'Sea Salt Caramel Gelato',\n","  'Corn Chips',\n","  'Macaroni & Cheese',\n","  'Fresh Ciliegine Mozzarella Cheese',\n","  'Moroccan Mint Green Tea',\n","  'Curate Pomme Baya-Apple Berry Sparkling Water',\n","  'Unsweetened Pomegranate Essence Water',\n","  'Mango Grapefruit Water',\n","  'Organic Up Beat Coffee Brew',\n","  'Fresh Roasted Tomate & Chile Asado Medium Salsa',\n","  'Hummus, Roasted Garlic',\n","  'Organic Pita Bread',\n","  'Roasted Mushroom Pizza'],\n"," ['Organic Roasted Turkey Breast',\n","  'Bag of Organic Bananas',\n","  'Organic Creamy Peanut Butter',\n","  'Organic Broccoli',\n","  'Organic Raspberries',\n","  'Mild Cheddar Cheese Sticks',\n","  'Organic Penne Rigate',\n","  'Bean & Rice Chips Nacho',\n","  'Original Sauce',\n","  'Organic Whole Strawberries',\n","  'Mild Pico De Gallo Bean and Rice Chips',\n","  'Organic Australian Style Vanilla Lowfat Yogurt',\n","  'Crispy Wheat, Crackers',\n","  'Organic Ice Cream Chocolate Chocolate Chip',\n","  'Roasted Red Pepper & Basil Quinoa and Brown Rice',\n","  'Aloe Vera Juice',\n","  'Lavender Dryer Sheets',\n","  'Organic Sauce'],\n"," ['Peppermint Patties Candy', 'Minis Candy Bars', 'Candy', 'Chewy Caramels'],\n"," ['Premium Original Saltine Crackers',\n","  'Large Lemon',\n","  'Cookies, Chocolate Chip Walnut',\n","  'Limes',\n","  'Natural Chicken & Sage Breakfast Sausage',\n","  'Vine Ripe Tomatoes',\n","  'Mild Salsa Roja',\n","  'Organic Milk Reduced Fat, 2% Milkfat',\n","  'Philadelphia Original Cream Cheese',\n","  'Salt & Pepper Krinkle Chips',\n","  'Reserve Cheddar Cheese',\n","  'Cranberry Juice Cocktail',\n","  'Thick & Crispy Tortilla Chips',\n","  'One Ply Choose A Size Big Roll Paper Towel Rolls',\n","  'Ice Cream, Super Premium, Mint Chocolate Chip',\n","  'Jalapeno Stuffed Olives',\n","  'Cinnamon Raisin Swirl Pre-Sliced Bagels',\n","  'Some Pulp Orange Juice',\n","  'Extra Crisp English Muffins',\n","  'Post Selects Great Grains Cereal Raisins, Dates and Pecans',\n","  'Olive Oil & Sel Gris Sourdough Flatbread',\n","  'Ultra Strong Toilet Paper Double Rolls Bathroom Tissue',\n","  'Movie Theater Butter Pop Corn',\n","  'Brie'],\n"," ['Fridge Pack Cola',\n","  'Chocolate Cheerios Cereal',\n","  'Indoor Cat Food',\n","  \"Crispy Chick'n Sliders\",\n","  'Caesar Supreme Salad Kit',\n","  'Ready to Bake Sugar Cookie Dough',\n","  'Cheese Danish Twist',\n","  'Peanut Butter Soft Baked Oatmeal Squares'],\n"," ['Mushroom And Ricotta Ravioli',\n","  'Garlic Hummus',\n","  'Electrolyte Enhanced Water',\n","  'Loose White Button Mushrooms',\n","  'Chopped Onions',\n","  'Roasted Salted Peanuts',\n","  'Sliced Pancetta Americana',\n","  'Tomato Goat Cheese & Herbs Pizza',\n","  'Italian Sausage Pizza',\n","  'Lemonade From Concentrate'],\n"," ['Honey Nut Cheerios',\n","  'Limeade',\n","  'Fragrance Free Baby Wipes',\n","  'Applewood Smoked Bacon Mashed',\n","  'Prepare And Serve Mashed Potatoes',\n","  'Original Velveeta Cheese',\n","  '85% Lean Ground Turkey',\n","  'Original Diced Tomatoes & Green Chilies'],\n"," ['Organic Whole Milk',\n","  'Banana',\n","  'Strawberries',\n","  'Almonds & Sea Salt in Dark Chocolate',\n","  'Organic Navel Orange',\n","  'Organic Green Seedless Grapes',\n","  'Oven Roasted Turkey Breast',\n","  'Orange Juice',\n","  'Organic Old Fashioned Rolled Oats',\n","  'Organic Muenster Cheese Slices',\n","  'Vanilla Skyr Nonfat Yogurt',\n","  'Crispy Wheat, Crackers',\n","  'Yotoddler Organic Pear Spinach Mango Yogurt',\n","  'Cheese, Thin Sliced Muenster',\n","  'Black Tea Variety Pack'],\n"," ['Quart Storage Bags',\n","  'Petite Diced Tomatoes',\n","  'Lotion With Aloe & E Upright Facial Tissue',\n","  'Bathroom Tissue, Unscented, Double Rolls, 3-Ply',\n","  'Thick Spaghetti Pasta'],\n"," ['Roma Tomato',\n","  'Original Style Yoghurt Plain',\n","  'Honey Bunches of Oats Honey Roasted with Almonds Cereal',\n","  'Cocoa Puffs Cereal',\n","  'Butter Top White Bread',\n","  'Extra Whitening Toothpaste',\n","  'Spring Water Antibacterial Liquid Hand Soap with Moisturizer',\n","  'Original Whole Fat Lactose Free Milk',\n","  'Low Fat 2% Evaporated Milk',\n","  'Fudge Brownie Mix',\n","  'Ibuprofen Tablets'],\n"," ['Banana', 'Original Semisoft Cheese', 'Organic 2% Reduced Fat Milk'],\n"," ['Uncrustables Peanut Butter & Grape Jelly Sandwich'],\n"," ['Organic Half & Half',\n","  'Sharp Cheddar Cheese',\n","  'Bag of Organic Bananas',\n","  'Large Alfresco Eggs',\n","  'Bunny-Luv Fresh Organic Carrots',\n","  'Organic Penne Rigate',\n","  'Organic Red Bell Pepper',\n","  'Broccoli Crown',\n","  'Organic Egg Whites',\n","  'Organic English Cucumber',\n","  'Super Greens Salad',\n","  'Organic Bell Pepper',\n","  'Macaroni & Cheese',\n","  'Corn Tortillas',\n","  '2% Reduced Fat DHA Omega-3 Reduced Fat Milk',\n","  'Goat Milk',\n","  'Cucumber & Garlic  Tzatziki',\n","  'XL Emerald White Seedless Grapes',\n","  'French Vanilla Soy Creamer',\n","  'Classic Chicken Salad',\n","  'Organic Hass Avocado Bag',\n","  'Original Flax Milk Dairy Free Protein+'],\n"," ['Naked Green Machine Boosted Juice Smoothie',\n","  'Organic Blue Agave',\n","  'Ocean Mist Scent 3-in-1 Laundry Detergent PODS'],\n"," ['Organic Whole Milk',\n","  \"Organic D'Anjou Pears\",\n","  'Banana',\n","  'Organic Avocado',\n","  'Organic Blackberries',\n","  'Sparkling Water Grapefruit',\n","  'Organic Blueberries',\n","  'Unsalted Butter',\n","  'Green Tea With Ginseng and Honey',\n","  'Oven Roasted Turkey Breast',\n","  'Organic Gala Apples',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Sourdough Bread',\n","  'Naturals Savory Turkey Breakfast Sausage',\n","  \"Chik'n Nuggets\",\n","  'Mild Sliced Cheddar Cheese',\n","  'Provolone',\n","  'Chocolate Caramel Protein Snack Bar',\n","  \"Baby's Super Daily Liquid Vitamin D Drops\",\n","  'Vitamin D3 400 Iu Sunny Gummies'],\n"," ['Milk Chocolate Almonds',\n","  'Sparkling Mineral Water',\n","  'Coconut Water',\n","  'Original Rice Krispies Treats'],\n"," ['Organic Fuji Apple', 'French Vanilla Sugar Free Liquid Coffee Creamer'],\n"," ['Hass Avocados', 'Chunk Light Tuna'],\n"," ['2% Reduced Fat Milk',\n","  'Diet Coke',\n","  'Original Apple 100% Juice',\n","  'Small Curd Low Fat Cottage Cheese',\n","  'Whipped Cream Cheese Spread',\n","  'Heavy Duty Non-Stick Aluminum Foil 35 sq ft',\n","  'Soft Frozen Variety Pk Lemonade Lemon & Raspberry Lemonade',\n","  'Cheese Delicato Ravioli',\n","  'Cookie Baking Sheets, Pre-Cut Parchment Paper',\n","  '100% Orange Peach Mango Juice',\n","  'Fancy Feast Wet Classic Chicken Feast Cat Food',\n","  'Classic Potato Chips'],\n"," ['Banana',\n","  'Apple Honeycrisp Organic',\n","  'Organic Baby Carrots',\n","  'Sparkling Natural Spring Water',\n","  'Sea Salt Pita Chips',\n","  '100% Premium Arabica Ground Coffee'],\n"," ['Banana',\n","  'Sparkling Water Grapefruit',\n","  'Large Lemon',\n","  'Organic Cucumber',\n","  'Original Instant Oatmeal',\n","  'Organic Raspberries',\n","  'Limes',\n","  'Frozen Organic Wild Blueberries',\n","  'Organic Fuji Apple',\n","  'Organic Grade A Large Brown Eggs',\n","  'Organic Lactose Free 1% Lowfat Milk',\n","  'Mango Chunks',\n","  'Organic Romaine Hearts',\n","  'Corn Tortillas',\n","  'Organic Mint',\n","  'Organic Shredded Carrots'],\n"," ['Organic Baby Arugula',\n","  'Organic Broccoli Crowns',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Red On the Vine Tomato',\n","  'Organic Red Potatoes',\n","  'Organic Whipping Cream',\n","  'Bok Choy',\n","  'Organic Pasture Raised Local Eggs'],\n"," ['Banana',\n","  'Unsweetened Almondmilk',\n","  'Organic Baby Arugula',\n","  'Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Organic Garlic',\n","  'Organic Baby Broccoli',\n","  'Limes',\n","  'Organic Red Bell Pepper',\n","  'Organic Mung-Bean Sprouts',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Authentic Red Curry Paste',\n","  'Cucumber Kirby',\n","  'Crushed Tomatoes',\n","  'Organic Jalapeno Pepper',\n","  'Fresh Mozzarella Ball',\n","  'Brown Fertile Large Grade AA Eggs',\n","  'Lemon Yogurt',\n","  'Salted Peanut Butter Filled Pretzels',\n","  'Organic Tomato Paste',\n","  'Macaroni And Cheese',\n","  'Peanut Butter Bar',\n","  'Unsweetened Coconut Water',\n","  'Stringless Sugar Snap Peas',\n","  'Blend Blueboon Coffee'],\n"," ['Raspberries', 'Organic Blueberries', 'Blackberries', 'Half And Half Cream'],\n"," ['Organic Strawberries',\n","  'Organic Lemon',\n","  'Organic Yellow Onion',\n","  'Organic Raspberries',\n","  'Limes',\n","  'Organic Plain Whole Milk Yogurt',\n","  'Organic English Cucumber',\n","  'Organic Italian Parsley Bunch',\n","  'Ice Bag',\n","  '100% Natural Sponge Cloths'],\n"," ['Organic Half & Half',\n","  'Whole Milk',\n","  'Large Lemon',\n","  'Organic Granny Smith Apple',\n","  'Large Alfresco Eggs',\n","  'Pure Sparkling Water',\n","  'Broccoli Crown',\n","  'Basil Pesto',\n","  'Organic Ice Cream Vanilla Bean',\n","  'Organic Linguine'],\n"," ['Chewy Granola Bars Variety Pack',\n","  'Mountain Spring Water',\n","  'Classic Mix Variety'],\n"," ['Banana',\n","  'Organic Milk',\n","  'Unsweetened Ice Tea',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  'DanActive Vanilla Probiotic Dairy Drink',\n","  'Deli Fresh Rotisserie Seasoned Chicken Breast',\n","  'Cheddar Squares Cheddar Squares',\n","  'Tissue with Lotion Aloe & E',\n","  'Non Alcoholic The Original Irish Cream Coffee Creamer',\n","  'Steamfresh Premium Selects Broccoli Florets',\n","  'Mint Waxed Floss Interdental'],\n"," ['Banana',\n","  'Organic Strawberries',\n","  'Red Raspberries',\n","  'Organic Zucchini',\n","  'Toasted Coconut Almondmilk Blend',\n","  'Almond Milk Strawberry Yogurt',\n","  'Almond Milk Peach Yogurt',\n","  'Coconut Almond Creamer Blend',\n","  'Jalapeno Hummus',\n","  'Original Pure Creamy Almond Milk',\n","  'Vanilla Almond Milk Yogurt',\n","  'Lentil Chips, Spicy Sriracha',\n","  'Lentil Chips, Himalayan Pink Salt',\n","  'Gin Gins Original Chewy Ginger Candy'],\n"," ['Shoestring Fries',\n","  'Red Peppers',\n","  'Super Greens Salad',\n","  'Organic Whole Grain Wheat English Muffins',\n","  \"Crispy Chick'n Sliders\",\n","  'Bread, Organic, Spelt Ancient Grain',\n","  'Reduced Fat Vegenaise',\n","  'Vegan Molasses Cookies'],\n"," ['Organic Baby Spinach',\n","  'Bean & Rice Chips Nacho',\n","  'Beyond Beef Fiesty Crumble',\n","  'Long Grain Brown Rice',\n","  'Beyond Chicken Homestyle Tenders',\n","  'Feisty Buffalo Poppers',\n","  'Orange Marmalade'],\n"," ['Organic Whole Milk',\n","  'Uncured Slow Cooked Ham',\n","  'Organic Grape Tomatoes',\n","  'Organic Baby Spinach',\n","  'Organic Unsalted Butter',\n","  'Organic Red Bell Pepper',\n","  'Organic Fuji Apple',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Mild Salsa',\n","  'Low Fat Vanilla Yogurt',\n","  'Organic Shredded Mild Cheddar',\n","  'Uncured Hickory Smoked Bacon'],\n"," ['Organic Homestyle Mini Waffles',\n","  'Chopped Tomatoes',\n","  'Total Greek Strained Yogurt',\n","  'Artisan Sausage Pineapple Uncured Bacon Hardwood Smoked with Vermont Maple Syrup'],\n"," ['Gluten Free Whole Grain Bread',\n","  'Distilled Water',\n","  'Organic Hass Avocado',\n","  'Organic Raspberries',\n","  'Organic Raw Sharp Cheddar Cheese',\n","  'Organic Greek Lowfat Yogurt With Cherries',\n","  'Organic Greek Lowfat Yogurt With Blueberries',\n","  'Organic Gluten Free Buckwheat Wildberry Waffles',\n","  'Original Whole Fat Lactose Free Milk',\n","  'Organic Gluten Free Summer Berries Granola',\n","  'Fruit and Nut Granola'],\n"," ['Tiny Twists Pretzels',\n","  'Hint of Lime Flavored Tortilla Chips',\n","  'Harvest Cheddar Multigrain Chips'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Baby Arugula',\n","  'Organic Blackberries',\n","  'Strawberries',\n","  '90% Lean Ground Beef',\n","  'Orange Bell Pepper',\n","  'Red Peppers',\n","  'Organic Snipped Green Beans',\n","  'Guacamole',\n","  'Organic Tomato Sauce',\n","  'Organic Red Radish, Bunch',\n","  'English Seedless Cucumber',\n","  'Corn Maize Tortillas',\n","  'Healthy Grains Fiber Cinnamon Oat Clusters',\n","  'Organic White Corn & Wheat Tortillas',\n","  'Organic Fat Free Milk',\n","  'Total 0% Greek Yogurt',\n","  'Canola Oil',\n","  'Organic Tomato Paste',\n","  'Fajita Seasoning',\n","  'Gluten Free Classic Hamburger Buns',\n","  'Hazelnut Chocolate Chip Gelato'],\n"," ['Grapefruit Sparkling Water',\n","  'Peach-Pear Sparkling Water',\n","  'Multi Surface Glade® Rainshower Scent Everyday Cleaner',\n","  'Classic Clean'],\n"," ['French Vanilla Creamer',\n","  'Oreo  Ice Cream Sandwiches',\n","  'Presliced Everything Bagels',\n","  'Swirl Bread Cinnamon',\n","  'Great Grains'],\n"," ['Banana',\n","  'Strawberries',\n","  'Red Raspberries',\n","  'Organic Broccoli',\n","  'Green Bell Pepper',\n","  'Unsalted Pure Irish Butter',\n","  'Grapefruit Sparkling Water',\n","  'Authentic French Brioche Hamburger Buns',\n","  'White Onion',\n","  'Shiitake Mushroom',\n","  'Whole White Mushrooms',\n","  'Almond Milk Hazelnut Creamer',\n","  'Apricot Satin Shower Body Wash',\n","  'Sesame Deli Style Pretzel Crisps'],\n"," ['Granny Smith Apples',\n","  'Plain Pre-Sliced Bagels',\n","  'Creamy Peanut Butter',\n","  'Gala Apples',\n","  'Presliced Everything Bagels',\n","  'Mandarins',\n","  'Extra Crunchy Peanut Butter',\n","  'Philadelphia Cream Cheese Spread',\n","  'Garden Vegetable Cream Cheese Spread',\n","  'The Original Liquid Coffee Creamer'],\n"," ['Organic Raspberries',\n","  'Organic Bread with 21 Whole Grains',\n","  'Original Nooks & Crannies English Muffins',\n","  'Dha Omega 3 Reduced Fat 2% Milk',\n","  'Vitamin D Whole Milk',\n","  'Special K Red Berries Crunchy Rice & Wheat Flakes with Strawberries'],\n"," ['Meat & Cheese Tray', 'Ranch Dip', 'Veggie Dip'],\n"," ['Almond Breeze Chocolate Almond Milk', 'Quinoa Burgers - 4 CT'],\n"," ['Unsweetened Almondmilk',\n","  'Fruit & Nut Bar Blueberry Vanilla & Cashew',\n","  'Tulsi Holy Basil Sweet Rose Infusion Bags 18 Count',\n","  'Vegetable Fried Rice',\n","  'Vegan Oatmeal Chocolate Chip Cookies',\n","  'Organic Light in Sodium Lentil Vegetable Soup',\n","  'Dairy Free Coconut Milk Vanilla Yogurt Alternative',\n","  \"Organic Qi'a Superfood Oatmeal, Cinnamon Pumpkin Seed\",\n","  'Gluten Free Garden Vegetable Lasagna',\n","  'Toasted Caramel Coconut Chips',\n","  'Miso Soup Bowl',\n","  'Vegan Nutritional Shake Sweet Vanilla Bean',\n","  'Veggie Loaf Mashed Potatoes and Vegetables',\n","  \"Qi'a Gluten Free Oatmeal Superseeds and Grains packets\"],\n"," ['Organic Avocado',\n","  'Extra Virgin Olive Oil',\n","  'Half Baked® Ice Cream',\n","  'Original Cereal',\n","  'Thin Spaghetti No 11',\n","  'Blueberry Muffin Bar',\n","  'Apple Pie Fruit & Nut Food Bar',\n","  'Annie Peely Fruit 4.5 Z',\n","  'Original Hot Sauce',\n","  'Key Lime Pie Fruit & Nut Food Bar',\n","  'The Tonight Dough™ Ice Cream',\n","  'Green Machine',\n","  'Extra Fine Flour',\n","  'Cherry Vanilla Cherry On The Bottom Cream Top',\n","  'Cherry Garcia Ice Cream',\n","  'Tonic Water',\n","  'Low Fat No Chicken Noodle Soup',\n","  'Organic Soups Alphabet Fat Free',\n","  'Vegan Hot & Sour Noodle Soup',\n","  'Homemade Hot Arrabbiata Fra Diavolo Sauce'],\n"," ['Organic Whole Milk',\n","  'Unsweetened Almondmilk',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Grape Tomatoes',\n","  'Organic Strawberries',\n","  'Organic Hass Avocado',\n","  'Bag of Organic Bananas',\n","  'Organic California Style Sprouted Bread',\n","  'Organic Raspberries',\n","  'Original Hummus',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Organic Whole Wheat Pita',\n","  'Boneless Skinless Chicken Breast',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Pomegranate',\n","  'Organic Old Fashioned Rolled Oats',\n","  'Organic Turkey Bacon',\n","  \"Major Dickason's Blend Ground Coffee Dark Roast\",\n","  'Organic Greek Whole Milk Blended Vanilla Bean Yogurt',\n","  'Organic Plain Greek Whole Milk Yogurt',\n","  'Organic Orange Juice',\n","  'Chocolate Peanut Butter',\n","  'Coconut Chia Bar',\n","  'Whole Grain Lavash',\n","  'Whole Wheat Spanakopita',\n","  'Dark Chocolate Almonds',\n","  'Salted Almond Butter Filled Dark Chocolate Bar',\n","  'Mocca-Java Decaffeinated Ground Coffee',\n","  'Organic Forbidden Rice'],\n"," ['Seedless Red Grapes',\n","  'Organic Baby Rainbow Carrots',\n","  'Organic Ginger Root',\n","  'Unsalted Pure Irish Butter',\n","  'Organic Freeze Dried Strawberries',\n","  'Lactose Free Half & Half',\n","  'Vegan Chocolate Chip Mini Muffins',\n","  'Organic Mini Cheddar Cheese Crackers',\n","  'Reduced Fat Irish Butter',\n","  'Mustard, Spicy Brown'],\n"," ['Black Seedless Grapes', 'Wild Alaskan Sockeye Salmon'],\n"," ['Fridge Pack Cola', 'Original Cream Cheese', 'Mixed Fruit'],\n"," ['Organic Baby Spinach',\n","  'Organic Zucchini',\n","  'Organic Ginger Root',\n","  'Organic Mung-Bean Sprouts',\n","  'Organic Green Leaf Lettuce',\n","  'Cucumber Kirby',\n","  'Loose White Button Mushrooms',\n","  'European Cucumber',\n","  'Sticky Toffee Pudding',\n","  'Calrose Rice',\n","  'Extra Ginger Brew Jamaican Style Ginger Beer',\n","  '100% Lactose Free Reduced Fat Calcium Enriched Milk'],\n"," ['Pull-Ups Training Pants Learning Designs 3T-4T 32-40 Lbs',\n","  'Infusions Ultra Downy® Infusions™ Lavender Serenity™ Fabric Softener Sheets 90 count Fabric Enhancers'],\n"," ['Cheerios Cereal',\n","  'Blueberry Almond Breakfast Bars',\n","  'Organic Sparkling Cider'],\n"," ['Banana',\n","  'Honeycrisp Apple',\n","  'Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Strawberries',\n","  'Red Peppers',\n","  'Organic Spring Mix Salad',\n","  'Organic Yellow Onion',\n","  'Organic Diced Tomatoes',\n","  'Limes',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Boneless Skinless Chicken Breast',\n","  'Cage Free Large White Eggs',\n","  'Organic Medjool Dates',\n","  'Garnet Sweet Potato (Yam)',\n","  'Fresh Mozzarella Ball',\n","  'Vanilla Pure Almond Milk',\n","  'Milk, Low Fat, 1% Milkfat',\n","  'Fire Roasted Medium Salsa',\n","  'Nine Grain Sourdough Dough',\n","  'Penne Rigate'],\n"," ['Small Hass Avocado',\n","  'Large Lemon',\n","  'Plain Non-Fat Greek Yogurt',\n","  'Kale Greens',\n","  'Orange Sparkling Water',\n","  'Organic Cranberry Juice',\n","  'Garlic & Herb Butter Stick',\n","  'Smoked Gouda',\n","  'Creamy Deluxe Gluten Free Rice Pasta & Extra Cheesy Cheddar Sauce',\n","  'Potato Chips, Kettle Cooked, Sea Salt & Cracked Pepper'],\n"," ['Spring Water',\n","  'Natural Spring Water',\n","  'Organic Ezekiel 49 Bread Cinnamon Raisin',\n","  'Vanilla Unsweetened Almond Milk',\n","  'Organic Gluten Free Maple Buckwheat Flakes',\n","  '100% Recycled Paper Towels',\n","  'Organic Ice Cream Chocolate Chocolate Chip',\n","  'Essential Greens with Lime Vegetable and Fruit Juice Blend',\n","  'Organic Salted Caramel Ice Cream',\n","  'Electrolyte Water',\n","  'Whole Wheat Cookies Dark Chocolate',\n","  'White Unscented Facial Tissue',\n","  'Bac-Out Stain & Odor Remover'],\n"," ['Banana',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Blueberries',\n","  'Green Bell Pepper',\n","  'Lightly Salted Rice Cakes',\n","  'Classic Hummus',\n","  'Original Wheat Thins',\n","  'Extra Crunchy Peanut Butter',\n","  'Vanilla Light & Fit Greek Yogurt',\n","  'Goat Cheese Log',\n","  '100% Whole Grain Bread',\n","  'Hazelnut Spread With Skim Milk & Cocoa',\n","  'Whole Strawberries',\n","  'Pizza Dough'],\n"," ['Organic Extra Large Grade AA Brown Eggs',\n","  'Bag of Organic Bananas',\n","  'Organic Small Bunch Celery',\n","  'Citrus Mandarins Organic',\n","  'Toasted Sesame Seed Oil',\n","  'Organic Vanilla Soymilk'],\n"," ['Nutri Grain Bars Multi Pack'],\n"," ['Grape White/Green Seedless',\n","  'Organic Raspberries',\n","  'Roasted Turkey Breast',\n","  'Blueberry Yoghurt',\n","  'Cool Mint Chocolate',\n","  'Raspberry Yoghurt',\n","  'Dark Chocolate Pretzels with Sea Salt',\n","  'Reduced Fat Milk',\n","  'Chocolate Milk Frozen Pops',\n","  'Baked Caesar Snapea Crisps',\n","  'Sage Citrus Dish It Out Dish Liquid'],\n"," ['Organic Grape Tomatoes',\n","  '2% Reduced Fat Milk',\n","  'All Whites 100% Egg Whites',\n","  'Creamy Peanut Butter',\n","  'Red Delicious Apple',\n","  'Asparation/Broccolini/Baby Broccoli',\n","  'Spring Water Antibacterial Liquid Hand Soap with Moisturizer',\n","  'Cauliflower Florets',\n","  'High Protein Vanilla Shake',\n","  'Baby Spinach Salad',\n","  'Fit Kitchen Teriyaki Chicken',\n","  'Fruit Tray',\n","  'Bread',\n","  'Pumpernickel Dark Pump Bread',\n","  'Disinfecting Wipes Fresh Scent'],\n"," ['Small Hass Avocado',\n","  'Organic Cilantro',\n","  'Organic Garlic',\n","  'Michigan Organic Kale',\n","  'Large Lemon',\n","  'Organic Basil',\n","  'Organic Carrot Bunch',\n","  'Pretzel Crisps Original Deli Style Pretzel Crackers',\n","  'Garlic Hummus',\n","  'Organic Red Radish, Bunch',\n","  'Organic Italian Parsley Bunch',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Organic Mint',\n","  'Perrier Lime',\n","  'Multigrain Sandwich Bread',\n","  'Cilantro Lime Chicken Burrito',\n","  'Shredded Beef Burrito',\n","  'Pizza Poppers Uncured Pepperoni',\n","  'Mocha Almond Fudge Minis Almond Milk Frozen Dessert',\n","  'Dairy Free Coconut Milk Frozen Dessert Minis',\n","  'Organic Rosemary',\n","  'Beef Skirt Steak'],\n"," ['Organic Half & Half', 'Reduced Fat 2% Milk'],\n"," ['Caramel Cone Ice Cream',\n","  'Sparkling Mineral Water',\n","  'Lager Beer',\n","  'Vanilla Unsweetened Almond Milk',\n","  'Garden Spinach Herb 6 Ct Wraps',\n","  'Cabernet Sauvignon',\n","  'Hot Enchilada Sauce',\n","  'Good Seed Organic Thin Sliced Bread',\n","  'Provolone Slices',\n","  'Mexican Style Four Cheese Shredded Cheese'],\n"," ['Birthday Cake Light Ice Cream',\n","  'Organic Avocado',\n","  'Michigan Organic Kale',\n","  'Mild Diced Green Chiles',\n","  'Garlic',\n","  'Organic Brown Rice',\n","  'Organic Yellow Onion',\n","  'Limes',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Yellow Bell Pepper',\n","  'Flat Parsley, Bunch',\n","  'Grilled Chicken Breast Strips',\n","  'Organic Shredded Carrots',\n","  'Organic Pinto Beans',\n","  'Organic Soups Hearty Spanish Rice & Red Bean',\n","  'Organic Sesame Ginger Vinaigrette Dressing'],\n"," ['Kosher Dill Pickle Spears', 'Pure Peanut Oil'],\n"," ['Mint Chip',\n","  'Pistachio Ice Cream',\n","  'Tomato Paste',\n","  'Culinary Coconut Milk',\n","  'Chocolate Almond Crunch Ice Cream',\n","  'Cookie Dough Ice Cream Chocolate Chip',\n","  'Baby Cut Carrots',\n","  'Pasta Zero Spaghetti Shirataki Noodles',\n","  'Organic Asian Chopped Salad Kit',\n","  'Vanilla Almond Milk'],\n"," ['Honey Nut Cheerios',\n","  'Fridge Pack Cola',\n","  'Chicken Bouillon Cubes',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Spinach Peas & Pear Stage 2 Baby Food',\n","  '100% Whole Wheat Bread',\n","  'Vanilla Almond Breeze',\n","  'Pretzel Crisps Original Deli Style Pretzel Crackers',\n","  'Butter with Canola Oil Spread',\n","  'Original Nooks & Crannies English Muffins',\n","  'Grade A Large White Eggs',\n","  'Creamy Peanut Butter',\n","  'Organic 2% Reduced Fat Milk',\n","  'Classic Yellow Mustard',\n","  'Original Syrup',\n","  'Whole Grain Cheddar Baked Goldfish Crackers',\n","  'Fully Cooked Original Bacon',\n","  'Original Restaurant Style Tortilla Chips',\n","  'Original Hot Sauce',\n","  'Original Apple 100% Juice',\n","  'Original Orange Juice',\n","  'Golden Grahams Cereal',\n","  'Squeeze Tomato Ketchup',\n","  'Honey Bunches of Oats Honey Roasted Cereal',\n","  'Chocolate Chip Cookie Dough Ice Cream',\n","  'Diet Cherry Coke',\n","  'Danimals Strawberry Explosion Flavored Smoothie',\n","  'Crispix Rice & Corn Cereal',\n","  'Coffee Mate Natural Bliss Sweet Creme Coffee Creamer',\n","  'Deluxe Cinnamon Raisin Bagels',\n","  'Fully Cooked Turkey Sausage Patties',\n","  'Super Soft Taco Flour Tortillas',\n","  'Flavor Variety Instant Oatmeal',\n","  'Vanilla Ice Cream',\n","  'Wheat Thins Reduced Fat Crackers',\n","  'Caffeine Free Coke Zero',\n","  'Eggo Nutri-Grain Low Fat Waffles',\n","  'Deluxe Everything Bagels',\n","  'Honey Maid Graham Crackers',\n","  'Peach,  Apricot & Banana Stage 2 Baby Food',\n","  'Original Pancake & Waffle Mix',\n","  'Dino Buddies Chicken Breast Nuggets',\n","  \"Original Berry Flavor  Children's\",\n","  'Apple Jacks Cereal',\n","  'Snack Size Vanilla Yogurt Raisins',\n","  'Original Cooking Spray',\n","  'Genuine Chocolate Flavor Syrup',\n","  'Original Whipped Cream Cheese',\n","  'Diet Coke Caffeine Free Soda',\n","  'Fresh Cut Green Beans',\n","  'Sweet & Salty Nut Almond Granola Bars',\n","  \"Gillette Fusion ProGlide Manual Men's Razor Blade Refills\",\n","  'Normal to Dry Skin Fragrance Free Daily Moisture Fragrance Free',\n","  'Lightly Salted Cashews Halves & Pieces',\n","  '13 Gallon Tall Drawstring Kitchen Bags',\n","  'Organic Apple Raisin & Quinoa Stage 2 Baby Food',\n","  'Baby Naturals Head-to-Toe Baby Wash',\n","  'Mini-Snacks Organic Raisins',\n","  'Mixed Nuts Lightly Salted',\n","  'Light & Fit Greek Vanilla Yogurt',\n","  'Natural Bliss Salted Caramel Flavor All-Natural Coffee Creamer'],\n"," ['Whipped Cream Cheese',\n","  'Organic Strawberries',\n","  'Organic Unsalted Butter',\n","  'Organic Cucumber',\n","  'Sinfully Sweet Campari Tomatoes',\n","  'Freshly Squeezed Orange Juice',\n","  'Ancient Grain Granola Cranberry Pecan',\n","  'Blood Oranges',\n","  'Mint',\n","  'Organic Powdered Sugar',\n","  'Organic Whipping Cream',\n","  \"Sheep's Milk Halloumi Cheese\",\n","  'Shelled & Dry Roasted Organic Pistachios',\n","  'Mascarpone',\n","  'Organic Refined Sunflower Oil',\n","  'Organic Russian Banana Fingerling Potato',\n","  'Organic Cultured Sour Cream',\n","  'Mini Chocolate Chunk Cookies'],\n"," ['Organic Vegetable Broth',\n","  'Organic Chunky Vegetable Soup',\n","  'Real Vegetable Chips Spiced Sweets',\n","  'Almond Breeze Almond & Coconut Milk Blend',\n","  'Salt & Pepper Krinkle Chips',\n","  'Cucumber Jalapeno Juice',\n","  'Organic Creamy Sweet Pea Soup',\n","  'Indian Dal Golden Lentil Soups',\n","  'Gluten Free All Natural Chocolate Chip Cookies',\n","  'Refresh Herbal Tea',\n","  \"Naturе's Calorie-Free Sweetener\",\n","  'Organic Turmeric Tonic Juice',\n","  'High pH 9+ Alkaline Ionized Water',\n","  'Dandelion Greens Juice',\n","  'Cinnamon Cashew Vanilla Organic Cold-Pressed Coffee'],\n"," ['Granny Smith Apples',\n","  'Small Hass Avocado',\n","  'Organic Baby Spinach',\n","  'Red Raspberries',\n","  'Pure Sparkling Water',\n","  'Natural Premium Coconut Water',\n","  'Carrots',\n","  'Whole White Mushrooms',\n","  'Organic Italian Salad',\n","  'Cacao Hemp Walnut Bar'],\n"," ['Gain Original Tall Ktchen Bags',\n","  'Colagate Total Whitening Toothpaste',\n","  'Unscented 1000 Sheets Per Roll Bathroom Tissue',\n","  'Ultra Soft Facial Tissues',\n","  'Wheat Thins Reduced Fat Crackers',\n","  'Orange Sports Drink',\n","  'Dry Roasted Unsalted Peanuts',\n","  \"Mach3 Smooth Men's Disposable Razor\",\n","  'Natural Creamy Peanut Butter Spread'],\n"," ['Gluten Free Whole Grain Bread',\n","  'Banana',\n","  'Organic Avocado',\n","  'Organic Strawberries',\n","  'Organic Yellow Squash',\n","  'Organic Baby Spinach Salad',\n","  'Dairy Free Unsweetened Coconut Milk',\n","  'Dairy Free Coconut Milk Blueberry Yogurt Alternative',\n","  'Sparkling Natural Mineral Water',\n","  'Non Fat Acai & Mixed Berries Yogurt',\n","  'Baby Food Stage 2 Blueberry Pear & Purple Carrot',\n","  'Vanilla Ice Cream',\n","  'Organic Apple Raisin & Quinoa Stage 2 Baby Food'],\n"," ['Dha Omega 3 Vitamin D Milk',\n","  'Alpine Spring Water',\n","  'Gluten Free Blueberry Waffles',\n","  \"Major Dickason's Blend Whole Bean Coffee\",\n","  'Butternut Squash Pear Stage 2 Baby Food',\n","  'Organic YoKids Squeeze! Straw-Nana-Rama Yogurt',\n","  'Organic Breakfast Blend Whole Bean Coffee',\n","  'Garlic Lovers Hommus',\n","  'Gluten Free Vegetable Crackers'],\n"," ['Root Beer',\n","  'Ibuprofen Liqui-Gels Capsules',\n","  'Sparkling Natural Mineral Water',\n","  'Diet Dr.Pepper Soda Pack',\n","  'Original Orange Juice',\n","  'Pure Water'],\n"," ['Sesame Seaweed Salad', 'Sashimi Combo'],\n"," ['Organic Extra Virgin Olive Oil'],\n"," ['Strawberries',\n","  'Fat Free Skim Milk',\n","  'Semi-Sweet Chocolate Morsels',\n","  'Shredded Parmigiano Reggiano'],\n"," ['Banana',\n","  'Michigan Organic Kale',\n","  'Red Delicious Apple',\n","  'Mussels',\n","  'Kidney Bean, White',\n","  'Pure Organic  Wildflower Honey'],\n"," ['Mocha Frappucino Chilled Coffee Drink'],\n"," ['Organic Hass Avocado',\n","  'Organic Garlic',\n","  'Organic Blueberries',\n","  'Organic Yellow Onion',\n","  'Organic Grade A Large Brown Eggs',\n","  'Corn Tortilla Chips',\n","  'Fire Roasted Salsa',\n","  'Uncooked Corn Tortillas',\n","  'Organic Crushed Tomatoes'],\n"," ['Fresh Cauliflower',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Michigan Organic Kale',\n","  'Bag of Organic Bananas',\n","  'Toasted Coconut Almondmilk Blend',\n","  'Apple Honeycrisp Organic',\n","  'Organic Raspberries',\n","  'Kiwi Sandia Sparkling Water',\n","  'Clementines, Bag',\n","  'Healthy Grains Oats & Honey Clusters with Toasted Coconut Gluten Free',\n","  'Cheese Puffs Original',\n","  'Coconut Flavored Sparkling Water',\n","  'Plain Soymilk Creamer',\n","  'Salted Caramel Yoghurt',\n","  'All Natural No Stir Creamy Almond Butter',\n","  'Laksa Noodles',\n","  'Plain Noodles With Morohetya'],\n"," ['Enlightened Organic Raw Kombucha',\n","  'Sparkling Natural Mineral Water',\n","  'Arancita Rossa',\n","  'Vanilla Bean Light Ice Cream',\n","  'Cookie Dough Ice Cream Chocolate Chip'],\n"," ['Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Blueberries',\n","  'Broccoli Crown',\n","  'Yellow Bell Pepper',\n","  'Extra Virgin Olive Oil',\n","  'Roasted Red Pepper Hummus',\n","  'Organic Red Radish, Bunch',\n","  'Cucumber Kirby',\n","  'Chocolate Ice Cream',\n","  'Organic Gluten Free Chia Plus with Quinoa & Amaranth Waffles',\n","  'Baby Portabella Mushrooms',\n","  'Whole Wheat Tandoori Naan',\n","  'Yellow Zucchini',\n","  'Curate Pomme Baya-Apple Berry Sparkling Water',\n","  'Super Greens Veggie Burgers',\n","  'Juice, Raw & Cold-Pressed, Purity',\n","  'Anti Bug Shake & Spray',\n","  'Pink Lady (Cripps) Apple',\n","  'Organic Crunchy Street Taco Slaw Blend',\n","  'Cleansing Kale Lemon Probiotic Tonic',\n","  'Tonics Cleansing Probiotic Tonic With Apple Cider Vinegar Cinnamon',\n","  'Organic Turmeric Ginger Tonic',\n","  'Praline Crunch Frozen Dessert'],\n"," ['Unsalted Pure Irish Butter',\n","  'El Ciprés Whole Bean Coffee',\n","  'Organic Pasture Raised Brown Eggs'],\n"," ['Banana',\n","  'Unsweetened Almondmilk',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Hass Avocado',\n","  'Celery Hearts',\n","  'Organic Bunch Beets',\n","  'Limes',\n","  'Organic 2% Reduced Fat Milk',\n","  'Organic YoBaby Vanilla Yogurt',\n","  'Blue Chips Corn Tortilla Chips',\n","  'Sugarfree Spearmint Chewing Gum'],\n"," ['Unsweetened Almondmilk',\n","  'Spicy Hummus',\n","  'Organic Bread with 21 Whole Grains',\n","  'Organic Cashew Nondairy Blueberry Yogurt',\n","  'Boneless Skinless Chicken Breast Fillets',\n","  'Unscented 1000 Sheets Per Roll Bathroom Tissue',\n","  'Peach on the Bottom Nonfat Greek Yogurt',\n","  'Non Fat Black Cherry on the Bottom Greek Yogurt',\n","  'Jasmine Rice',\n","  'Fresh Frozen Chopped Spinach',\n","  'Fresh European Style Baby Spinach',\n","  'Sumatra Dark Roast K-Cups',\n","  'Brioche Slider Buns',\n","  'Chicken & Vegetable Snack Sticks for Dogs',\n","  'smart Blend Chicken & Rice Formula Dry Dog Food'],\n"," ['Organic Strawberries',\n","  'Michigan Organic Kale',\n","  'Bag of Organic Bananas',\n","  'Hass Avocados',\n","  'Natural Chicken & Sage Breakfast Sausage',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Organic Cinnamon Crunch Cereal',\n","  'Organic Cheddar Bunnies',\n","  'Hearty Nine Grain Bread'],\n"," ['Banana',\n","  'Just Mangos Organic Baby Food',\n","  'Reduced Fat Milk 100% Lactose Free',\n","  'Kids Organic Chocolate Chip ZBars',\n","  'Organic Apple Banana GoGo Squeez',\n","  'Cultured Soy Vanilla Yogurt',\n","  'Super Duper Chicken Nuggets'],\n"," ['Honeycrisp Apple',\n","  'Organic Baby Spinach',\n","  'Red Raspberries',\n","  'Bag of Organic Bananas',\n","  'Large Lemon',\n","  'Organic Baby Broccoli',\n","  'Asparagus',\n","  'Organic Riced Cauliflower',\n","  'Organic Mung-Bean Sprouts',\n","  'Organic Medjool Dates',\n","  'Organic Tahini',\n","  'Coconut Milk Yogurt Alternative Natural Flavor',\n","  'Coffee Cold-Brew Espresso',\n","  'Fiesta Lime Rice Chips'],\n"," ['Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Pure Irish Butter',\n","  'Boneless And Skinless Chicken Breast',\n","  'Febreze Fresh Clean Garbage Bags',\n","  'Dressing, Jersey Sweet Onion, Calorie Free'],\n"," ['Organic Garlic',\n","  'Blueberries',\n","  'Organic Vegetable Broth',\n","  'Unsalted Pure Irish Butter',\n","  'Pecorino Romano',\n","  'Caramel Cookie Crunch Gelato',\n","  'Spaghetti  No 12'],\n"," ['Honeycrisp Apple',\n","  'Small Hass Avocado',\n","  'Distilled Water',\n","  'Bag of Organic Bananas',\n","  'Organic Granny Smith Apple',\n","  'Organic Spring Mix Salad',\n","  'Organic Navel Orange',\n","  'Organic Baby Carrots',\n","  'Organic Kiwi',\n","  'Organic Bartlett Pear',\n","  'Classic Chicken Salad',\n","  'Robust Golden Unsweetened Oolong Tea',\n","  'Organic Rice Probiotic Drink Blueberry',\n","  'Vanilla Whey Protein Powder',\n","  'Natural Chocolate Flavor Whey Protein Powder',\n","  'Ginger Peach Decaf Longevity Tea Bags'],\n"," ['Organic Blackberries',\n","  'Bag of Organic Bananas',\n","  'California Heirloom Monviso Peeled Garlic',\n","  'Chicken & Apple Smoked Chicken Sausage',\n","  'Organic Fuji Apple',\n","  'Grass Fed Ground Beef',\n","  'Extralean Ground Turkey Breast',\n","  'Extra Virgin Olive Oil',\n","  'Sweet Potato Yam',\n","  'White Onion',\n","  'Pale Ale & Honey Spice Mustard',\n","  'Organic Apples Pommes',\n","  'Pineapple',\n","  'Tortillas, Corn, Organic',\n","  'Quick 1 Minute Whole Grain Oats',\n","  'Barbecue Sauce Original'],\n"," ['Birthday Cake Light Ice Cream',\n","  'Organic Red Onion',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Organic Diced Tomatoes',\n","  'Organic Red Bell Pepper',\n","  'Original Popcorn',\n","  'Pesto Tortellini  Bowls',\n","  'Strawberry Ice Cream',\n","  'Organic & Raw Strawberry Serenity Kombucha'],\n"," ['Banana',\n","  'Small Hass Avocado',\n","  'Organic Cilantro',\n","  'Organic Red Onion',\n","  'Mild Diced Green Chiles',\n","  'Garlic',\n","  'Active Dry Yeast',\n","  'Natural Premium Coconut Water',\n","  'Fresh Ginger Root',\n","  'Organic Garbanzo Beans',\n","  'Electrolyte Enhanced Water',\n","  'Tomato Purée',\n","  'Whole Wheat Sourdough',\n","  'Dressing, Jersey Sweet Onion, Calorie Free',\n","  'Tomatoes, Whole Peeled',\n","  'Oregano',\n","  'Organic Parsley',\n","  'Nacho Sliced Jalapenos',\n","  'Semi-Sweet Chocolate Premium Baking Chips',\n","  'Pure Dark Brown Cane Sugar',\n","  'Oh Berries Pacific Blackberry Jam',\n","  'Non-Fat Vanilla Yogurt',\n","  'Four Pepper Goat Cheese',\n","  \"Organic Lori's Lemon Tea\"],\n"," ['Fresh Cauliflower',\n","  'Marinara Pasta Sauce',\n","  'Orange Bell Pepper',\n","  'Scoops! Tortilla Chips',\n","  '100% Pineapple Juice',\n","  'Presliced Everything Bagels',\n","  'Everyday Paper Plates',\n","  \"M&M's Vanilla Lowfat Yogurt\",\n","  'Cuties Non Dairy Vanilla Frozen Dessert Sandwiches',\n","  'Egg Challah Rolls',\n","  'Honey Graham Snacks',\n","  'Honey Maid Teddy Grahams Go Pak',\n","  'Chia Squeeze Vitality Snack Blackberry Bliss',\n","  'Apple Cinnamon Chia Squeeze Vitality Snack'],\n"," ['Banana',\n","  'Organic Zucchini',\n","  'Michigan Organic Kale',\n","  'Alpine Spring Water',\n","  'Organic Edamame',\n","  'Organic Cut Green Beans'],\n"," ['Soda',\n","  'Eggo Homestyle Waffles',\n","  'Organic Milk',\n","  'Original Club Crackers',\n","  'Fresh Cut Golden Sweet Whole Kernel Corn',\n","  'No Pulp Calcium & Vitamin D Pure Orange Juice',\n","  'Beef Franks',\n","  'Cola',\n","  'Cereal',\n","  'Cranberry Juice Cocktail',\n","  'Original Low Fat Orange Cream Yogurt',\n","  'Original Orange Juice',\n","  'Apple Juice',\n","  'Raisin, Date & Walnut Instant Oatmeal',\n","  'All Natural Lemon Tea Bottles',\n","  'Original Key Lime Pie Yogurt',\n","  'Light Lemon Cream Pie Yogurt',\n","  'Original Potato Salad',\n","  'Energy Drink',\n","  'French Onion Chips',\n","  'Luau BBQ Potato Chips',\n","  'Country Potato Bread',\n","  'Raisin Snail Pastries',\n","  '97% Fat Free Beef Franks',\n","  'French Style Fresh Cut Green Beans',\n","  'Solid White Albacore Tuna In Water'],\n"," ['Hass Avocados',\n","  'Organic Fuji Apples',\n","  'Low Fat Fudge Bars',\n","  'Makeup Remover Cleansing Towelettes'],\n"," ['Organic Baby Spinach',\n","  'Half & Half',\n","  'Organic Hass Avocado',\n","  'Organic Garlic',\n","  'Bag of Organic Bananas',\n","  'Organic Baby Broccoli',\n","  'Organic Yellow Onion',\n","  'Red Vine Tomato',\n","  'Organic Wheat-Free & Gluten-Free Original Crackers',\n","  'Russet Potato',\n","  'Organic Italian Parsley Bunch',\n","  'Light and Lean Quinoa Black Beans with Butternut Squash and Chard',\n","  'Tesora Medium Roast',\n","  'Brown Rice Black-Eyed Peas and Veggies Bowl',\n","  '100% Recycled Bathroom Tissue'],\n"," ['Grape White/Green Seedless',\n","  'Boneless Skinless Chicken Breasts',\n","  'Smoked Turkey Breast',\n","  'Extra Virgin Olive Oil',\n","  'Pineapple Strawberry Sparkling Water',\n","  'Paprika',\n","  'Organic Lime',\n","  'Salted Butter',\n","  'Bag of Organic Lemons',\n","  'Red Plum',\n","  'Fat Free Plain Yogurt',\n","  'Organic  Jade Pearl Rice',\n","  'Half And Half',\n","  'Tandoor Baked Naan'],\n"," ['Banana',\n","  'Organic Strawberries',\n","  'Organic Hass Avocado',\n","  'Red Plums',\n","  'Semolina Flour',\n","  'Whole Jersey Milk Low Pasteurized',\n","  'Purple Cauliflower'],\n"," ['Organic Extra Virgin Olive Oil',\n","  'Pure Irish Butter',\n","  'Beef Franks',\n","  'Mineral Water',\n","  'Cheez-It Baked Snack Crackers',\n","  'Mixed Fruit Fruit Snacks',\n","  'De Mexico Bottle',\n","  '2% Lactose Free Milk',\n","  'Orange Juice with Calcium',\n","  '8 Hot Dog Buns'],\n"," ['Organic Avocado',\n","  'Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Organic Strawberries',\n","  'Air Chilled Organic Boneless Skinless Chicken Breasts',\n","  'Sliced Baby Bella Mushrooms',\n","  'Garlic',\n","  'Large Lemon',\n","  'Apple Honeycrisp Organic',\n","  'Organic Broccoli',\n","  'Organic Basil',\n","  'Spaghetti',\n","  'Limes',\n","  'Organic Broccoli Florets',\n","  'Sweet Onion',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Heavy Whipping Cream',\n","  'Cultured Low Fat Buttermilk',\n","  'Fresh Ricotta',\n","  'Classic Macaroni & Mild Cheddar Cheese',\n","  'Unbleached All-Purpose Flour',\n","  'Unsalted Cultured Butter',\n","  'Sage'],\n"," [\"Taster's Choice French Roast Instant Coffee\",\n","  'Baby Dry Diapers Jumbo Pack Size 4',\n","  'Infant Formula Powder',\n","  'Organic Baby Brown Rice Cereal',\n","  '1st Foods Peaches',\n","  '1st Foods Baby Food- Pears',\n","  'Sweet Potato Apple & Pumpkin Purees-Veg/Fruit Blend-WIC'],\n"," ['Organic Whole Milk',\n","  'Banana',\n","  'Small Hass Avocado',\n","  'Organic Baby Spinach',\n","  'Organic Red Onion',\n","  'Organic Roma Tomato',\n","  'Red Potatoes',\n","  'Organic Raspberries',\n","  'Organic Large Grade AA Omega-3 Eggs',\n","  'Organic Whole String Cheese',\n","  'Organic Lactose Free 1% Lowfat Milk',\n","  'Organic Whole Wheat Pita',\n","  'Organic Greek Whole Milk Blended Strawberry Yogurt',\n","  'Organic Greek Whole Milk Blended Vanilla Bean Yogurt',\n","  'Organic Green Cabbage',\n","  'Wheat English Muffins',\n","  'Pastry Kitchens Classic Puff Pastry'],\n"," ['Bartlett Pears',\n","  'Banana',\n","  'Honeycrisp Apple',\n","  'Organic Baby Arugula',\n","  'Organic Zucchini',\n","  'Boneless Skinless Chicken Breasts',\n","  'Yellow Onions',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Red Peppers',\n","  'Large Lemon',\n","  'Limes',\n","  'Asparagus',\n","  'Vegetable Broth Low Sodium',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Jalapeno Pepper',\n","  'Organic Orzo',\n","  '100% Recycled Paper Towels',\n","  'Organic Tomato Puree',\n","  'Organic Whole Wheat Penne Rigate',\n","  'Herb Organic Oregano',\n","  'Fennel',\n","  'California Cauliflower',\n","  'Dolmas',\n","  'French Snacking Brie'],\n"," ['Organic Avocado',\n","  'Sonoma Traditional Flour Tortillas 10 Count',\n","  'Lemon Hummus',\n","  'Whole Strawberries',\n","  'Chipotle Lime Meat-Free Crispy Fingers',\n","  'Spots Stew Chicken Dry Dog Food'],\n"," ['Banana',\n","  'Organic Baby Arugula',\n","  'Organic Avocado',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Strawberries',\n","  'Total 2% Lowfat Greek Strained Yogurt with Peach',\n","  'Organic Tomato Cluster',\n","  'Boneless Skinless Chicken Breasts',\n","  'Large Lemon',\n","  'Limes',\n","  'Broccoli Crown',\n","  'Organic Mango',\n","  'Lemon Verbena Hand Soap',\n","  'Cucumber Kirby',\n","  'Ground Turkey Breast',\n","  'Fresh Dill',\n","  'Organic Cinnamon Crunch Cereal',\n","  'Taco Seasoning',\n","  'Organic Mayonnaise',\n","  'Bok Choy',\n","  'Dressing, Jersey Sweet Onion, Calorie Free',\n","  'Organic Cinnamon Apple Sauce'],\n"," ['Organic Large Extra Fancy Fuji Apple',\n","  'Organic Spring Mix Salad',\n","  'Roasted Turkey Breast',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Ginger Ale',\n","  'Electrolyte Enhanced Water',\n","  'Organic Vanilla Almond Milk',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Organic Edamame',\n","  'Exposed Pulp and Juice Original Aloe Vera + Honey',\n","  'Allure Mangosteen & Mango Aloe Juice',\n","  'Lavender Floral & Mint Natural Dish Liquid',\n","  'Super Antioxidant Green Tea',\n","  'All Natural Gardenia Hand And Body Lotion'],\n"," ['Banana',\n","  'Small Hass Avocado',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Nonfat Probiotic Drinks',\n","  'All Purpose Flour',\n","  'Mandarins Bag',\n","  'Original Style Yoghurt Plain',\n","  'Clover Blossom Honey',\n","  'Graham Crackers'],\n"," ['Yellow Onions',\n","  'Organic Garlic',\n","  'Large Lemon',\n","  'Organic Small Bunch Celery',\n","  'Organic Gold Beet Bunch',\n","  'Carrots',\n","  'Organic Kiwi',\n","  'Super Greens Salad',\n","  'Organic Red Radish, Bunch',\n","  'Coconut Flavored Sparkling Water',\n","  'Ginger Snap Cookies'],\n"," ['Black Forest Berry Caffeine-Free Tea',\n","  'Summer Strawberry Fruit Strip',\n","  'All-Natural Orchard Cherry Fruit Strip'],\n"," ['Trail Mix', 'Popcorn'],\n"," ['Organic Baby Spinach',\n","  '100% Raw Coconut Water',\n","  'Italian Sparkling Mineral Water',\n","  'Grassmilk 2% Reduced Fat Milk',\n","  'Organic Creamy Tomato Soup',\n","  'All American Classic Made with Non-GMO Soy Veggie Burgers',\n","  'Jalapeno Almond Jack Cheese Alternative',\n","  'Almond Cheddar Style Cheese Alternative Block'],\n"," ['Organic YoKids Smoothie Strawberry Banana Lowfat Yogurt',\n","  'YoKids Blueberry & Strawberry/Vanilla Yogurt'],\n"," ['Banana',\n","  'Small Hass Avocado',\n","  'Organic Red Onion',\n","  'Sparkling Water Grapefruit',\n","  'Sliced Baby Bella Mushrooms',\n","  'Reduced Fat Milk 100% Lactose Free',\n","  'Organic Beefsteak Tomato',\n","  'Clean Day Basil Hand Soap'],\n"," ['Small Hass Avocado',\n","  'Jalapeno Peppers',\n","  'Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Organic Cucumber',\n","  'Organic Lemon',\n","  'Organic Yellow Onion',\n","  'Organic Broccoli Florets',\n","  'Carrots',\n","  'Organic Ginger Root',\n","  'Potato Yukon Gold Organic',\n","  'Organic Red Radish, Bunch',\n","  'Organic Italian Parsley Bunch',\n","  'Dill Weed',\n","  'Home Style Beefless Tips',\n","  'Firm Tofu',\n","  'Organic Tahini',\n","  'Organic Cayenne Pepper',\n","  'Fries, Broccoli',\n","  'The Complete Cookie Double Chocolate',\n","  'Whole Wheat Pita Bread'],\n"," ['Bathroom Tissue Softness & Strength, Double Rolls',\n","  'Cola',\n","  'Chicken Broccoli Supreme',\n","  'Light Style Soft Wheat Bread',\n","  '2% Milk American Cheese Singles',\n","  'Pieces Peanut Butter Candy'],\n"," ['Extra Lean Ground Turkey Breast',\n","  'Golden Sweet Potato',\n","  'Plain Unsalted Rice Cakes',\n","  'Quick 1 Minute Oatmeal',\n","  'Salted Caramel Lean Protein & Fiber Bar',\n","  'Long Grain Wild Rice'],\n"," ['Strawberries', 'Blueberries'],\n"," ['Original Coconut Milk Creamer',\n","  'Organic California Style Sprouted Bread',\n","  'Broccoli Crown',\n","  'Organic Wheat-Free & Gluten-Free Original Crackers',\n","  'Simply White Natural Clean Mint Fluoride Toothpaste',\n","  'Chocolate Sea Salt',\n","  'Almond Coconut Bar, Organic',\n","  'Extra Dark Chocolate Baking Chips'],\n"," ['Uncured Slow Cooked Ham',\n","  'Whipped Cream Cheese',\n","  'Organic Hass Avocado',\n","  'Bag of Organic Bananas',\n","  'Organic Reduced Fat Milk',\n","  'Mandarin Oranges',\n","  'Wheat Gluten Free Waffles',\n","  'Organic Broccoli',\n","  '100% Raw Coconut Water',\n","  'Organic Sour Cream',\n","  'Swedish Style Non-Fat Drinkable Yogurt Plain',\n","  'Uncured Pepperoni',\n","  'Organic Dark Sweet Cherries',\n","  'Peanut & Gluten Free Smooth Almond Butter',\n","  'Raisins Red Seedless Organic Jumbo Size',\n","  'Chocolate Delight Granola',\n","  'Gluten-Free Pancake Mix',\n","  'Unrefined Virgin Coconut Oil',\n","  'Thin Sliced American Cheese',\n","  'Organic Chicken Noodle Soup'],\n"," ['Small Hass Avocado',\n","  'Cinnamon Raisin Bread',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Blueberries',\n","  'Organic Hothouse Cucumbers',\n","  'Unsweetened Coconut Milk Beverage',\n","  'Organic Fuji Apple',\n","  'Gala Apple',\n","  'Gluten Free Sliced Mountain White Bread',\n","  'No Salt Added Black Beans',\n","  'Healthy Grains Oats & Honey Clusters with Toasted Coconut Gluten Free',\n","  'Dairy Free Coconut Milk Vanilla Yogurt Alternative',\n","  'Blueberry Almond Breakfast Bars',\n","  'Natural Uncured Beef Hot Dog',\n","  'Aged Artisanal Treenut Cracked Pepper Cheese',\n","  'Organic Quick Oats'],\n"," ['Smartwater',\n","  'Organic Garlic',\n","  'Bag of Organic Bananas',\n","  'Organic Grade A Large Brown Eggs',\n","  'Organic Iceberg Lettuce',\n","  'Organic Rice Vinegar',\n","  'Gluten Free Omega Flax & Fiber Bread',\n","  'Organic Shredded Carrots',\n","  'Organic Pure Lime Juice',\n","  'Stir-fry Rice Noodles',\n","  'Hibiscus Mint Frozen Pops'],\n"," ['Organic Baby Spinach'],\n"," ['Eggo Homestyle Waffles',\n","  'Green Onions',\n","  'Romaine Hearts',\n","  'Red Onion',\n","  'Philadelphia Cream Cheese',\n","  'Iceberg Lettuce',\n","  'Celery Sticks',\n","  'Extra Crisp English Muffins',\n","  'Super Soft Taco Flour Tortillas',\n","  'Sweet Gherkin Pickles',\n","  'Fat Free Beef Broth',\n","  'Variety Minis with Dark Chocolate Ice Cream Bars',\n","  'Original Whipped Cream',\n","  'Tapioca Pudding Cups',\n","  'Apple Puff Pastry Turnovers'],\n"," ['Small Hass Avocado',\n","  'Entertainment Cracker Collection',\n","  'Chick Peas',\n","  'Cut Hearts Of Palm',\n","  'Herb Crackers',\n","  'Blackberry Preserves',\n","  'Soft French-Style Herb-Garlic Nut Cheese',\n","  'Butterhead Lettuce'],\n"," ['Natural Spring Water', 'White Multifold Towels'],\n"," ['Unsweetened Almondmilk',\n","  'Organic Broccoli Florets',\n","  'Frozen Broccoli Florets',\n","  'Water',\n","  'Sparkling Natural Mineral Water',\n","  'Unsweetened Almond Milk',\n","  'Citrus Dish Soap'],\n"," ['Bag of Organic Bananas',\n","  'Whole Organic Omega 3 Milk',\n","  'Cherubs Heavenly Salad Tomatoes'],\n"," ['Banana',\n","  'Granny Smith Apples',\n","  'Shallot',\n","  'Strawberries',\n","  'Large Lemon',\n","  'Total 2% All Natural Plain Greek Yogurt',\n","  'Spring Mix',\n","  'Vine Ripe Tomatoes',\n","  'Fresh Ginger Root',\n","  'Sweet Potato Yam',\n","  'Natural Spring Water',\n","  'Orange Juice',\n","  'Original Soy Milk',\n","  'Large Grapefruit',\n","  'Mache Blend',\n","  'Vanilla Ice Cream',\n","  'Banana Dippers Banana Slices',\n","  'Rocky Road Ice Cream',\n","  'Vanilla Swiss Almond Ice Cream',\n","  'Zucchini Squash, Baby Courgette',\n","  'Whole Chipotle Chili',\n","  'Glacier Freeze Frost',\n","  'Squeezed Lemonade',\n","  'Deli Fresh Shaved Smoked Turkey Breast',\n","  'Scrubbing Bubbles Heavy Duty All Purpose Cleaner',\n","  'Toilet Bowl Cleaner Clinging Bleach Gel',\n","  'Lemon Pre-Moistened Wipes',\n","  'Handy Size Sponges',\n","  'Thin Pizza Crust',\n","  'Reduced Fat Crescent Rolls',\n","  'Gourmet Organic Thyme'],\n"," ['Sausage, Egg, & Cheese Biscuit',\n","  'Sausage, Egg, & Cheese Croissant',\n","  'Regular Cream Cheese Spread',\n","  'Original Pancakes & Sausage On a Stick',\n","  'Variety Pack Hard Cider'],\n"," ['Beef Franks',\n","  'Pepperidge Farm Colors Cheddar Baked Snack Crackers',\n","  'Whiskas® Temptations® SUPER Mega Bag Chicken',\n","  'Fine Hazelnut Chocolates',\n","  'Simply Heinz Tomato Ketchup'],\n"," ['Avocado',\n","  'Gluten Free Crunchy Vanilla Cereal',\n","  'Original Hot Sauce',\n","  'Sea Salt Original Beef Jerky',\n","  'Sweet Chipotle Beef Jerky',\n","  'Ginger Tea',\n","  'DeTox Caffeine Free Organic Herbal Tea Bags',\n","  'Dark Chocolate With Almonds',\n","  'Plantation Mint Herbal Tea'],\n"," ['Organic Bunny Fruit Tropical Treat Fruit Snacks',\n","  'Light Multi-Grain English Muffins',\n","  'Homestyle Turkey Meatballs',\n","  'Dijon Mustard Squeeze Bottle',\n","  'Honey Mustard Yogurt Dressing'],\n"," ['Organic Half & Half',\n","  'Seedless Red Grapes',\n","  'Bag of Organic Bananas',\n","  'Large Lemon',\n","  'Organic Extra Firm Tofu',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Tzatziki',\n","  'Organic Chicken & Vegetable Potstickers'],\n"," ['G2 Grape Sports Drink',\n","  'Zesty Lemon Sorbet',\n","  'Watermelon Lime Sparkling Mountain Spring Water',\n","  'Lemon Sparkling Mountain Spring Water',\n","  '4% Milkfat Min. Small Curd Cottage Cheese',\n","  'Vantage Choose-A-Sheet Paper Towels',\n","  'Garlic Couscous'],\n"," ['Original Barbecue Sauce',\n","  'Cauliflower',\n","  'Broccoli Crown',\n","  'Extralean Ground Turkey Breast',\n","  'Chopped Garlic',\n","  'Smoked Chicken & Apple Mini Sausages'],\n"," ['Japanese Style Noodles & Chicken Flavored Sauce',\n","  'Multi-Grain Sea Salt Crackers'],\n"," ['Ice Bag',\n","  'Sparkling Water Berry',\n","  'Vegan Chao Creamy Original Cheese Slices'],\n"," ['Country Cheddar Bowl',\n","  'Margherita Pizza',\n","  'Vine Ripe Tomatoes',\n","  'Coconut Almond Creamer Blend',\n","  'Blackberry Cucumber Sparkling Water',\n","  'Almond Breeze Original Almond Milk',\n","  'Crunchy Organic Dark Roasted Peanut Butter',\n","  'Nacho Cheese & Bean Snacks',\n","  'Jewish Rye Bread'],\n"," ['ZBar Organic Chocolate Brownie Energy Snack',\n","  'Almond Milk Strawberry Yogurt',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Gluten Free Peanut Butter Dark Chocolate Chewy With a Crunch Granola Bars',\n","  'Almond Milk Ricotta',\n","  'Iced Oatmeal Cookie Kid Z Bar',\n","  'Almond Mozzarella Style Cheese Alternative',\n","  'Organic Spaghetti Squash',\n","  'Milk Free Better Than Sour Cream',\n","  'Blue Chips Corn Tortilla Chips',\n","  'Big Sur Breakfast Burrito',\n","  'Vegan Sour Cream & Onion Kettle Chips',\n","  'Enchilada with Spanish Rice & Beans Meal',\n","  'Golden Fishless Filet',\n","  'Mini Crispy Crabless Cakes',\n","  'Original Tofurky Deli Slices',\n","  'Cheese Alternative, American Style, Slices',\n","  \"Lightly Breaded Turk'y Cutlets\",\n","  'Soy Whip Whipped Topping',\n","  'Organic Chocolate Syrup'],\n"," ['Organic Blackberries',\n","  'Sustainably Soft Bath Tissue',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Mini Original Babybel Cheese',\n","  'Broccoli Crown',\n","  'Organic Fuji Apple',\n","  'Total 0% Nonfat Plain Greek Yogurt',\n","  'Firm Tofu',\n","  'Baby Portabella Mushrooms',\n","  '100% Recycled Paper Towels',\n","  'Garlic Lovers Hommus'],\n"," [\"Children's Allergy Relief Oral Suspension Berry Liquid\",\n","  \"Children's Allergy 24hr Multi-Symptom Nasal Spray\",\n","  'Blueberry',\n","  '100% Lemon Juice'],\n"," ['Organic Lowfat 1% Milk',\n","  'Organic Rosemary',\n","  'Wild Caught Frozen Sockeye Salmon Fillet'],\n"," ['Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Microwaveable 100% Beef Cheeseburgers',\n","  'Carb Control Strawberry Cream Bottle Shakes',\n","  'AdvantEdge Carb Control Creamy Vanilla Shake',\n","  'Four Cheese Rising Crust Pizza',\n","  \"Snack'mms Kosher Dill Pickles\",\n","  'Original Restaurant Style Party Size Tortilla Chips'],\n"," ['Organic Half & Half',\n","  'Honeycrisp Apple',\n","  'Strawberries',\n","  'Seedless Red Grapes',\n","  'French Vanilla Coconut Milk Creamer',\n","  'Raspberry Preserves',\n","  'Vine Ripe Tomatoes',\n","  'Organic White Cheddar Popcorn',\n","  'Avocado Roll',\n","  'Gluten Free 7 Grain Bread',\n","  'Fresh Mozzarella Ball',\n","  'Vanilla 0% Milkfat Yogurt',\n","  'Ginger Ale Soda',\n","  'Squeezed Orange Juice',\n","  'Original Gluten Free Crackers',\n","  'Chicken and Vegetable Egg Rolls'],\n"," ['Organic Hass Avocado',\n","  'Organic Unsalted Butter',\n","  'Organic Lemon',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Distilled White Vinegar',\n","  'Cayenne Pepper',\n","  'Chocolate Ice Cream',\n","  'Organic Whole Grain Wheat English Muffins',\n","  'Original Orange Juice',\n","  'Sliced Soppressata Salame',\n","  'Jamon Serrano Dry Cured Ham'],\n"," ['2% Milkfat Low Fat Large Curd Pot Style Cottage Cheese',\n","  'Impressions 10.25 Inch Plates',\n","  'Farmer Cheese'],\n"," ['Unsweetened Almondmilk',\n","  'Red Vine Tomato',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'White Sliced Mushrooms',\n","  'Soy Free Buttery Spread',\n","  'Organic Whole Grain Wheat English Muffins',\n","  'Fresh Whole Chicken',\n","  'Light Brown Sugar',\n","  'Minced Garlic',\n","  'Vitamin Code Raw Prenatal Probiotic Immune Support System for Two',\n","  'Organic Smoky Maple Barbeque Sauce',\n","  'Naturals Sweet & Spicy BBQ Sauce',\n","  'Banana Mango Yogurt',\n","  'Organic Cotton Balls',\n","  'Organic Sweet Onion'],\n"," ['Banana',\n","  'Unsweetened Almondmilk',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Organic Mountain Forest Amber Honey',\n","  'Part Skim Mozzarella Cheese',\n","  'Green Cabbage'],\n"," ['Diced Butternut Squash', 'Green Onions', 'Organic Delicata Squash'],\n"," ['Sliced Almonds',\n","  'Roma Tomato',\n","  'Cucumber Kirby',\n","  'Spaghetti Pasta',\n","  'Ginger Beer',\n","  'Extra Crunchy Peanut Butter',\n","  'Breakfast Blend Medium Roast Ground Coffee',\n","  'Caesar Dressing',\n","  'Caesar Croutons',\n","  'Dried Cranberries',\n","  'Turkey Meatballs, Dinner Size, Flame Broiled'],\n"," ['Old Fashioned Oatmeal', 'French Roast Single Serve Coffee K-Cups'],\n"," ['Water',\n","  'Blackberry Cucumber Sparkling Water',\n","  'Vitamin D Organic Whole Milk',\n","  'Coconut Sparkling Water',\n","  'NiCola Sparkling Water'],\n"," ['Oven Roasted Turkey Breast',\n","  'Red Seedless Grapes Bunch',\n","  'Original Nooks & Crannies English Muffins',\n","  'Caesar Salad Kit',\n","  'Strawberry on the Bottom Nonfat Greek Yogurt',\n","  'Instant Oatmeal Weight Control Variety',\n","  'Cucumber Kirby',\n","  'Cola',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Diet Cola',\n","  'Star Wars Macaroni and Cheese',\n","  'Salted Butter Half Sticks',\n","  'Large Pitted California Ripe Olives',\n","  'Non Fat Black Cherry on the Bottom Greek Yogurt',\n","  'Provolone Slices',\n","  'Party Cups Plastic 18 oz',\n","  'Rapid Relief Creamy Diaper Rash Ointment',\n","  'Dishwasher Detergent',\n","  'Donettes Powdered Mini Donuts',\n","  '7in1 Aussie Total Miracle Collection 7N1 Dry Shampoo 4.9 fl oz Female Hair Care',\n","  'Chocolate Chip Cookie Dough Tube',\n","  'Milk Chocolate Candies, Bonus Bag',\n","  'Size 5 Cruisers Diapers Super Pack',\n","  'Little Movers Diapers Size 5',\n","  'Grade A Large Eggs',\n","  'Graduates Toddlers Cereal Bars Strawberry Banana 8 Count',\n","  'Graduates For Toddlers Apple Cinnamon Cereal Bars',\n","  'Premium Deli Honey Ham',\n","  'Banana Bread Mix',\n","  'Ultra Soft & Strong® Toilet Paper Double Rolls'],\n"," ['Organic Milk Reduced Fat, 2% Milkfat', 'Pyramid Black Tea Bags'],\n"," ['Banana',\n","  'Seedless Red Grapes',\n","  'Lemonade',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Grated Parmesan Cheese',\n","  'Beef Franks',\n","  'White Sandwich Bread',\n","  'Yukon Gold Potatoes 5lb Bag',\n","  'Quick Cooking Rolled Oats Irish Oatmeal',\n","  'Enriched Poppyseed Hot Dog Buns',\n","  'Lemonade Fruit Bars',\n","  'Outshine Lime Fruit Bars'],\n"," ['Yellow Onions',\n","  'Bunched Cilantro',\n","  'Non Alcoholic Amber Beer',\n","  'Beef Chuck Roast Boneless',\n","  'Ginger Snaps',\n","  '100% Pressed Apple  Fruit Juice',\n","  'Natural Hickory Smoked Canadian Bacon Center Cut From Pork Loin'],\n"," ['Small Hass Avocado',\n","  'Organic Cilantro',\n","  'Organic Thompson Seedless Raisins',\n","  'Garlic',\n","  'Large Lemon',\n","  'Organic Baby Spinach Salad',\n","  'Organic Fuji Red Apple Chips',\n","  'Organic Whole String Cheese',\n","  'Limes',\n","  'Organic Chicken & Apple Sausage',\n","  'Apples, Pumpkin & Carrots Organic Baby Food',\n","  'Apples, Kale & Avocados Organic Baby Food',\n","  'Apples, Guavas & Beets Organic Baby Food',\n","  'Diced Tomatoes',\n","  'Organic Cauliflower',\n","  'Organic Air Chilled Whole Chicken',\n","  'Green Peas',\n","  'Multigrain Tortilla Chips',\n","  'Sage',\n","  'Dairy Pure Whole Milk',\n","  'Giraffes Diapers Size 3 M',\n","  'Organic Stage 2 Broccoli Pears & Peas Baby Food',\n","  'Organic Apples, Carrots and Parsnips Puree'],\n"," ['Banana',\n","  'Granny Smith Apples',\n","  'Jalapeno Peppers',\n","  'Organic Avocado',\n","  'Strawberries',\n","  'Raspberries',\n","  'Original Fresh Stack Crackers',\n","  'Organic Zucchini',\n","  'Garlic',\n","  'Bunched Cilantro',\n","  '100% Whole Wheat Bread',\n","  'Extra Virgin Olive Oil',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Original Nooks & Crannies English Muffins',\n","  'Chewy Granola Bars Variety Pack',\n","  'White Sliced Mushrooms',\n","  'Gala Apples',\n","  'Bits Cheese Cracker Sandwiches',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Original Syrup',\n","  'Baby Food Stage 2 Pumpkin Banana',\n","  'Frosted Mini-Wheats Original Cereal',\n","  'Balsamic Vinegar',\n","  'Original Orange Juice',\n","  'Sea Salt Garden Veggie Straws',\n","  'Yellow Zucchini',\n","  'Organic YoBaby Vanilla Yogurt',\n","  'Dressing, Jersey Sweet Onion, Calorie Free',\n","  'Honey Graham Snacks',\n","  \"Cracklin' Oat Bran Cereal\",\n","  'Sea Salt Kettle Cooked Potato Chips',\n","  'Whole Chicken',\n","  'Mighty 4 Sweet Potato, Blueberry, Millet & Greek Yogurt Tots Snack',\n","  'Stage 2 Cherry, Sweet Corn, and Greek Yogurt Baby Food',\n","  'Mighty 4 Kale, Strawberry, Amaranth & Greek Yogurt Tots Snack',\n","  'Brown Sugar Cinnamon Pre-Sliced Mini Bagels',\n","  '2X Concentrated Clean Burst Laundry Detergent',\n","  'Flour Soft Taco Tortillas',\n","  'Disinfecting Wipes Lemon & Lime Blossom Scent',\n","  'Berry Valley Blueberries',\n","  'Flip Sides Pretzel Crackers',\n","  'Beef Broth',\n","  'Long Grain White Rice',\n","  'Pure Baking Soda',\n","  'Pain Reliever & Fever Reducer Tablets',\n","  'Pain Reliever Fever Reducer Extra Strength For Adults Acetaminophen',\n","  'Pistachio Blend',\n","  'Original Kettlecorn'],\n"," ['Gluten Free Whole Grain Bread',\n","  'Strawberries',\n","  'Bag of Organic Bananas',\n","  'Large Lemon',\n","  'Freshly Squeezed Orange Juice',\n","  'Organic English Cucumber',\n","  'Honeydew Chunks',\n","  'Organic Red On the Vine Tomato',\n","  'Organic Mango Chunks',\n","  'Organic Dill',\n","  'Organic Mango Yogurt',\n","  'Organic Coconut Yogurt',\n","  'Lowfat Small Curd Cottage Cheese',\n","  'Honeysuckle Hand Soap',\n","  'Organic Peeled & Cooked Beets',\n","  'Black Bean Salad',\n","  'Organic Lowfat Sour Cream'],\n"," ['Organic Baby Arugula', 'Natural Spring Water', 'Grilled Chicken Breast'],\n"," ['Classic Yellow Mustard',\n","  'Drinking Water',\n","  'Organic Apple Slices',\n","  'Hamburger Buns'],\n"," ['Unsweetened Almondmilk',\n","  'Organic Zucchini',\n","  'Organic Hass Avocado',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Bag of Organic Bananas',\n","  'Organic Yellow Onion',\n","  'Organic Broccoli Florets',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Spring Water',\n","  'Baking Powder',\n","  'Dairy-Free Chive Cream Cheese',\n","  'Whole Almonds',\n","  'Organic Sunflower Seed Spread',\n","  \"Jacob's Wonderbar Dark Roast\",\n","  'Gluten Free Paleo Fettuccine',\n","  'Raw Sauerkraut',\n","  'Just Mayo',\n","  'Unsweetened Organic Coconut Milk',\n","  'Gluten Free Cinnamon Raisin Bagels',\n","  'Cashew Mix, Raspberry Crumble',\n","  'Sriracha Arare Rice Cracker',\n","  'Balanced B Complex Tablets',\n","  'Calcium-Magnesium With Vitamin D Complex',\n","  'Organic Turmeric'],\n"," ['Organic Cilantro',\n","  'Organic Rainbow Chard Vegetable',\n","  'Bag of Organic Bananas',\n","  'Apple Honeycrisp Organic',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Unsalted Pure Irish Butter',\n","  'Sonoma Handmade Style Corn Tortillas',\n","  'L-Lysine 500 mg Capsules'],\n"," ['Banana',\n","  'Organic Avocado',\n","  'Organic Cilantro',\n","  'Sparkling Water Grapefruit',\n","  'Yellow Onions',\n","  'Red Peppers',\n","  'Red Plums',\n","  'Green Bell Pepper',\n","  'Limes',\n","  'Yellow Bell Pepper',\n","  'Raisin Bran Cereal',\n","  'Corn Tortillas',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Organic Jalapeno Pepper',\n","  'Organic Lowfat Milk',\n","  'Fresh Basil',\n","  'Total 0% Cherry Nonfat Yogurt'],\n"," ['Shredded Mild Cheddar Cheese', 'Baby Tummy Gripe Water Dietary Supplement'],\n"," ['Fruit Punch',\n","  '2X Concentrated Clean Burst Laundry Detergent',\n","  'Cheddar & Sour Cream Potato Chips',\n","  'Tropical Punch',\n","  'Maple Bacon',\n","  'Snack Size Milk Chocolate Peanut Butter Cups'],\n"," ['Organic Hass Avocado',\n","  '1000 Sheets Unscented Bathroom Tissue',\n","  'Nighty Absorbent',\n","  'Almond and Shea Butter Conditioner',\n","  'Trusted Care 2-Ply Tissues'],\n"," ['Hot Sauce', 'Sriracha Chili Sauce', 'Pitcher Replacement Filters'],\n"," ['TruMoo 1% Lowfat Milk Chocolate'],\n"," ['YoKids Squeezers Organic Low-Fat Yogurt, Strawberry',\n","  'Low Fat Plain Yogurt',\n","  'Shredded Parmesan',\n","  'Organic Hass Avocado',\n","  'Bag of Organic Bananas',\n","  'Peach',\n","  'Organic Unsalted Butter',\n","  'Mini Original Babybel Cheese',\n","  'Original Instant Oatmeal',\n","  'Organic Raspberries',\n","  'Organic Whole String Cheese',\n","  'Organic Mini Sandwich Crackers Peanut Butter',\n","  'Organic Gala Apples',\n","  'Organic Vanilla Bean Ice Cream',\n","  'Creamy Peanut Butter Dark Roasted',\n","  'Medium Salsa Roja',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Whole Wheat Bread',\n","  'Organic Mini Sandwich Crackers Cheddar Cheese',\n","  'Organic Frozen Peas',\n","  'Original Pure Creamy Almond Milk',\n","  'Organic Large Green Asparagus',\n","  'Milk, Organic, Vitamin D',\n","  'Roasted Salted Cashews',\n","  'Nine Grain Sourdough Dough',\n","  'Organic Pasture Raised Brown Eggs',\n","  'Instant Coffee',\n","  'Organic Chopped Spinach'],\n"," ['Banana',\n","  'Pure Life Purified Water',\n","  'Blueberries',\n","  'Spring Mix',\n","  'Original Popcorn',\n","  'All Whites 100% Egg Whites',\n","  'Extra Lean Ground Turkey Breast',\n","  'Boneless Skinless Chicken Breast',\n","  'Red Onion',\n","  'Total 0% Greek Yogurt',\n","  'Unsweetened Cashew Milk',\n","  'Multi Grain Crispbread',\n","  'Dill Pickle Spears',\n","  'Grape Tomatoes',\n","  'Lemon Zest Nutrition Bars',\n","  'Fat Free Whipped Topping',\n","  'Premium Chocolate Coconut Water',\n","  'Chicken Rosemary Ravioli',\n","  'Yellow Corn Tortillas',\n","  'All Natural Unsalted Donkey Authentic Tortilla Chips',\n","  'Popcorn, Naturally Sweet',\n","  'Sweet Mesquite Barbecue Kettle Cooked Potato Chips',\n","  'Spaghetti Squash',\n","  'Dark Chocolate Bar Original'],\n"," ['Pad Thai',\n","  'Vanilla Coffee Concentrate',\n","  'Real Mayonnaise',\n","  'Sour Cream',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Celery',\n","  'Dill Weed',\n","  'Salted Caramel Core Ice Cream',\n","  'Sweet Cream Salted Butter',\n","  'Finely Shredded Mild Cheddar Cheese',\n","  'Honey Maid Graham Crackers',\n","  'Original Whipped Cream Cheese',\n","  'Red Bell Pepper',\n","  'Strawberry Guava',\n","  'Frozen Lemonade Concentrate',\n","  'Frozen Concentrated Raspberry Lemonade',\n","  'Green Tea 6pk',\n","  'Egg',\n","  'Thai Coconut Soup',\n","  'Chives',\n","  'Coffee Toffee Bar Crunch Ice Cream',\n","  'Teriyaki  Beef Jerky',\n","  'Garden Salsa Multigrain Chips',\n","  'Kale Salad',\n","  'Nestle Toll House Premier White Chocolate Morsels'],\n"," ['Strawberries',\n","  'Distilled Water',\n","  'Bag of Organic Bananas',\n","  'Organic Fuji Apples',\n","  'Small Curd Lowfat 2% Milkfat Cottage Cheese',\n","  'Organic Blueberries Clamshell',\n","  'Organic Avocados Hass Variety'],\n"," ['Organic Baby Rainbow Carrots',\n","  'Grated Parmesan',\n","  'Uncured Genoa Salami',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Coconut Almond Creamer Blend',\n","  'Organic Romaine',\n","  'Pizza Poppers, Three Cheese',\n","  'Organic Cauliflower',\n","  'Mint',\n","  'Kumato Tomatoes',\n","  'Soft Pretzel Mini Buns',\n","  'Organic Plain Nonfat Greek Yogurt',\n","  'Organic Gravenstein Apple Juice'],\n"," ['Banana',\n","  'Strawberries',\n","  'Pure Coconut Water',\n","  '2% Reduced Fat Milk',\n","  'Blueberries',\n","  'Mild Cheddar Cheese Sticks',\n","  'Basmati Ready Rice',\n","  '100% Oatnut Bread',\n","  'Medium Scarlet Raspberries',\n","  'Multi Grain Waffles',\n","  'Boneless Skinless Chicken Breast Fillets',\n","  'Steamfresh Super Sweet Corn',\n","  'Natural Jif Creamy Peanut Butter Spread',\n","  'Steamfresh Premium Selects Broccoli Florets',\n","  'Baby Spinach Salad',\n","  'Ultra Comfort Care Toilet Paper',\n","  'Sweet Potato Fries with Salt',\n","  'Cafe Steamers Chicken Margherita',\n","  'Cafe Steamers Honey Balsamic Chicken Grilled White Meat',\n","  'Grilled Chicken Pesto with Vegetables Cafe Steamers',\n","  '0% Greek Yogurt Black Cherry on the Bottom',\n","  'Deli Fresh Honey Smoked Turkey Breast, 98% Fat Free, Gluten Free',\n","  'Cottage Cheese 22 Oz',\n","  'Tiny Twists Pretzels, Cheddar',\n","  'Greek Plain Whole Milk Yogurt',\n","  'Jasmine Ready Rice',\n","  'Nutri-Grain Soft Baked Mixed Berry Cereal Breakfast Bars',\n","  'Shells & Real Aged Cheddar Macaroni & Cheese'],\n"," ['Soda', 'Hass Avocados'],\n"," ['Raw Shrimp',\n","  'Broccoli Florettes',\n","  'Premium Solid White Albacore Tuna in Water'],\n"," ['Organic Whole Milk',\n","  'Banana',\n","  'Honeycrisp Apple',\n","  'Organic Zucchini',\n","  'Organic Whole String Cheese',\n","  'Organic Mixed Vegetables',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Apple Chicken Sausage',\n","  'Fresh Mozzarella Ball',\n","  'Organic Whole Milk Strawberry Beet Berry Yogurt Pouch',\n","  'Blueberry Whole Milk Yogurt Pouch',\n","  'Organic Skim Milk'],\n"," ['Banana',\n","  'Raspberries',\n","  'Organic Blueberries',\n","  'Sprouted Whole Wheat Bread',\n","  'Sparkling Natural Mineral Water',\n","  'Cold Brew Coffee',\n","  'Bread, Double Fiber'],\n"," ['Organic Grape Tomatoes',\n","  'YoKids Strawberry Banana/Strawberry Yogurt',\n","  'Organic Red Onion',\n","  'Seedless Red Grapes',\n","  'Organic Garlic',\n","  'Bag of Organic Bananas',\n","  'Unsweet Peach Water',\n","  'Apple Honeycrisp Organic',\n","  'Cookies, Chocolate Chip Walnut',\n","  'Panda Puffs Peanut Butter Cereal',\n","  'Organic Green Seedless Grapes',\n","  'Grated Parmesan',\n","  'English Seedless Cucumber',\n","  'Organic Whole Milk with DHA Omega-3',\n","  'Organic Fresh Carrot Chips',\n","  'Appley Ever After Organic Juice Drink',\n","  'Taco Seasoning',\n","  'Citrus Mandarins Organic',\n","  'Hommus Classic Original',\n","  'Annie Peely Fruit 4.5 Z',\n","  'Crackers Cheddar Bunnies Snack Packs',\n","  'Baby Swiss Slices Cheese',\n","  'Unsweetened Pomegranate Essence Water',\n","  'Unsweetened Coconut Water',\n","  'Variety Snack Pack',\n","  'Chocolate Chip Brownie Thins',\n","  'Organic White Peach',\n","  'Organic Cinnamon Raisin Granola',\n","  'Thin Sliced Colby Jack Cheese',\n","  'Water, Unsweet, Blood Orange',\n","  'Multigrain Oat Bread',\n","  'Organic Yellow Corn Taco Shells 12 Count',\n","  'Organic Cello Lettuce',\n","  'Casera Medium Salsa'],\n"," ['Organic Baby Spinach',\n","  'Organic Strawberries',\n","  'Organic Hass Avocado',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Organic Whole Milk with DHA Omega-3',\n","  'Multigrain Pita Chips',\n","  'Aged White Cheddar Baked Rice & Corn Puffs Gluten Free Lunch Packs',\n","  '100% Natural Spring Water Minis'],\n"," ['Organic Large Extra Fancy Fuji Apple',\n","  'Organic Hass Avocado',\n","  'Organic Russet Potato',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Chopped Organic Garlic',\n","  'Organic Frozen Peas',\n","  'Organic Cinnamon Harvest Cereal',\n","  'Thai Red Curry Simmer Sauce'],\n"," ['Swiss Rolls'],\n"," ['Organic Whole Milk',\n","  'Banana',\n","  'Organic Grape Tomatoes',\n","  'Organic Cucumber',\n","  'Medium Navel Orange',\n","  'Organic Raspberries',\n","  '100% Whole Wheat Bread',\n","  'Organic Gala Apples',\n","  'Marinara Sauce',\n","  'Fat Free Milk',\n","  'Appley Ever After Organic Juice Drink',\n","  'Organic Whole Grain Wheat English Muffins',\n","  'Organic 90% Ground Beef',\n","  'Reduced Fat Milk',\n","  'Organic Chewy Peanut Butter Banana Bites',\n","  'Mixed Fruit Salad',\n","  'Chewy Granola Bar Chocolate Chip Granola',\n","  'Organic Whole Wheat Fusilli',\n","  'Ice Cream, Mint Chip',\n","  'Chocolate Covered Strawberries Ice Cream'],\n"," ['Poblano Pepper',\n","  'Original Sour Cream',\n","  'Large Lemon',\n","  'Limes',\n","  'Carrots',\n","  'Light Harvest Peach Yogurt',\n","  'Creamy Peanut Butter',\n","  'Chick Peas',\n","  'Original Wheat Thins Crackers',\n","  'Organic Premium Quinoa',\n","  'European Cucumber',\n","  \"Snack'mms Kosher Dill Pickles\",\n","  'Light Strawberry Yogurt',\n","  'Light Fat Free Blueberry Patch Yogurt',\n","  'Light, Very Vanilla',\n","  'Vanilla Light & Fit Nonfat Yogurt',\n","  '100% Juice, Apple',\n","  'Boston / Butter Lettuce',\n","  'Tonic Water Contains Quinine',\n","  'Mandarin Oranges in Light Syrup',\n","  'Singles American Cheese Slices',\n","  'Bread Fampak Tortilla',\n","  'Original Applesauce',\n","  'All Purpose Baking Mix'],\n"," ['Organic Half & Half',\n","  'Granny Smith Apples',\n","  'Organic Coconut Milk',\n","  'Organic Minestrone Soup',\n","  'Veggie Burgers'],\n"," ['Granny Smith Apples',\n","  'Large Lemon',\n","  'Organic Brown Rice',\n","  'Broccoli Crown',\n","  'Organic Gala Apples',\n","  'Pineapple Chunks',\n","  'Mango Chunks',\n","  'Chopped Spinach',\n","  'Cage Free Grade A Large Brown Eggs',\n","  'Sun Dried Tomato Basil Chicken Sausage'],\n"," ['Strawberries',\n","  'Bathroom Tissue Softness & Strength, Double Rolls',\n","  'Cereal',\n","  'Classic Tender Beef Feast Cat Food',\n","  'Natural Shredded Mexican Style Four Cheese',\n","  'Honey Bunches of Oats Honey Roasted with Almonds Cereal',\n","  'Fancy Feast Wet Classic Chicken Feast Cat Food',\n","  'Crispix Rice & Corn Cereal',\n","  'Special K Chocolate Peanut Butter Bar',\n","  'Milk Chocolate Mini Eggs',\n","  'Cat Chow Naturals Indoor with Real Chicken & Turkey',\n","  'American Cheese Slices 12 Count',\n","  'Cheerios Family Size Cereal',\n","  'Seedless Strawberry Jam',\n","  'Marketplace Sweet and Spicy Korean Style Beef',\n","  'Orange Chicken',\n","  'Simply Favorites Chicken Friced Rice Entree',\n","  'Classic Meal For 2 Chicken Alla Vodka & Farfalle',\n","  'Fancy Feast Trout Feast Flaked Wet Cat Food',\n","  'Classic Salmon & Shrimp Feast Cat Food',\n","  'Chicken & Tuna Feast Flaked Wet Cat Food',\n","  'Flaked Tuna Feast Cat Food',\n","  'Classic Cod Sole & Shrimp Feast Cat Food',\n","  'Classic Chopped Grill Feast Cat Food',\n","  'Savory Salmon',\n","  'Tender Beef & Liver Feast Classic Wet Cat Food',\n","  'Classic Seafood Feast Cat Food',\n","  'Classic Tender Beef & Chicken Feast Cat Food',\n","  'Classic Tender Liver & Chicken Feast Cat Food',\n","  'Fancy Feast Wet Classic Turkey & Giblets Feast Cat Food'],\n"," ['Water',\n","  'Organic Plain Greek Whole Milk Yogurt',\n","  'Premium Indian Tonic Water'],\n"," ['Organic Strawberries',\n","  'Blackberries',\n","  'Rainbow Bell Peppers',\n","  'Baby Cucumbers'],\n"," ['Hass Avocados'],\n"," ['Bag of Organic Bananas',\n","  'Raw Cashew Butter',\n","  'Hemp Baby Unscented Pure Castile Soap'],\n"," ['Soda',\n","  'Milk Chocolate Almonds',\n","  'Zero Calorie Cola',\n","  \"Crunchy Oats 'n Honey Granola Bars\",\n","  'Chocolate Chip Cookies',\n","  'Extra Fancy Unsalted Mixed Nuts',\n","  'Mixed Fruit Fruit Snacks',\n","  'Orange & Lemon Flavor Variety Pack Sparkling Fruit Beverage',\n","  'Green Tea',\n","  'Variety Diet Tea',\n","  'Pub Mix',\n","  'Variety Pack Hawaiian Potato Chips'],\n"," ['Raisin Bran Cereal',\n","  'Organic Whole Strawberries',\n","  'Organic Mango Chunks',\n","  'Unsweetened Vanilla Almond Milk',\n","  'Soy Free Buttery Spread',\n","  'Puffins Peanut Butter & Chocolate Cereal',\n","  'Dairy Free Mozarella Style Shreds',\n","  'Creamy Vanilla Soy Milk Frozen Dessert'],\n"," ['Organic Apple Juice',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Dark Red Kidney Beans',\n","  'Extralean Ground Turkey Breast',\n","  'Classic Hummus',\n","  'Baby Spinach',\n","  'Total 0% Greek Yogurt',\n","  'Red Onions',\n","  'Grade AA Large White Eggs',\n","  'Fresh Whole Garlic',\n","  'Unsweetened Vanilla Coconut Milk Beverage',\n","  'Original Salt-Free Seasoning Blend',\n","  'Baby Cut Carrots',\n","  'All Natural No Stir Creamy Almond Butter',\n","  'Herb Cilantro Clamshell',\n","  'Gluten Free Quinoa Pasta Shells',\n","  'Sliced Ripe Black Olives',\n","  'Organic Balsamic Vinegar Of Modena',\n","  'Tilapia Fillets',\n","  'Pineapple Juice',\n","  'Coconut Oil'],\n"," ['Banana',\n","  'Organic Whole White Mushrooms',\n","  'Organic Lemon',\n","  'Yellow Bell Pepper',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Potato Yukon Gold Organic',\n","  'Cage Free Large White Eggs',\n","  'Organic Italian Salad',\n","  'Salted Tub of Butter',\n","  'Sprouted Multi-Grain Bread',\n","  'Milk, Vitamin D',\n","  'New Mexico Taco Skillet Sauce For Chicken',\n","  'Organic Cinnamon Apple Sauce',\n","  'Organic Whole Wheat Fusilli'],\n"," ['Distilled Water',\n","  'Trail Mix',\n","  'Organic Extra Virgin Olive Oil',\n","  'Sparkling Water',\n","  'Variety',\n","  'Organic Marinara Sauce'],\n"," ['Organic Cilantro',\n","  'Organic Lime',\n","  'Miso Ramen Broth',\n","  'Organic Miso Broth',\n","  'Chocolate Pudding',\n","  'Dark Chocolate Pot De Creme',\n","  'Lavender Hand Sanitizer',\n","  'Organic Kosher Free Range Chicken Broth',\n","  'Organic Chicken Broth'],\n"," ['Organic Baby Spinach',\n","  'Lime Italian Sparkling Mineral Water',\n","  'Roasted Turkey Breast',\n","  'Organic Riced Cauliflower',\n","  'Hass Avocado',\n","  'Organic Distilled White Vinegar',\n","  'Cayenne Pepper',\n","  'Ancient Grain Original Granola',\n","  'Pumpkin Fig Ancient Grain Granola',\n","  'Baby Arugula',\n","  'Beef Loin New York Strip Steak',\n","  'Apple Pie Fruit & Nut Food Bar',\n","  'Organic Baby Kale Mix',\n","  'Minced Onion',\n","  'Organic Unrefined Coconut Oil',\n","  'Black Peppercorn',\n","  'Sweet Potato (Yam)',\n","  'Organic Roast Beef',\n","  'Raw Cashew Nut Butter',\n","  'Gluten Free Steel Cut Oats Hot Cereal',\n","  'Pacific Cod Fillet'],\n"," ['Organic Boneless Skinless Chicken Breast', 'Pizza Dough', 'Coho Salmon'],\n"," ['Sparkling Water Grapefruit',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Pure Sparkling Water',\n","  'Sparkling Lemon Water',\n","  'Pretzel Crisps Original Deli Style Pretzel Crackers',\n","  'Raspberry Yoghurt',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Blueberry Muffin Bar',\n","  'Coconut Cream Pie',\n","  'Lemon Fruit & Nut Food Bar',\n","  'Avocado Oil Canyon Cut Kettle Cooked Potato Chips Sea Salt',\n","  'Coconut Flavored Sparkling Water',\n","  'Chocolate Fudge High Protein Bars'],\n"," ['Unsweetened Almondmilk',\n","  'Organic Baby Arugula',\n","  'Organic Baby Spinach',\n","  'Organic Garlic',\n","  \"Baker's Pure Cane Ultrafine Sugar\",\n","  'Organic Basil',\n","  'Olive Oil, Extra Virgin, California',\n","  'Tomato Paste',\n","  'Organic Italian Parsley Bunch',\n","  'Crushed Tomatoes',\n","  'Almond Milk Ricotta',\n","  'Dairy-Free Chive Cream Cheese',\n","  'Organic Medjool Dates',\n","  'Organic Mint',\n","  'Organic Whipping Cream',\n","  'Roasted Salted Cashews'],\n"," ['Organic Baby Arugula',\n","  'Organic Hass Avocado',\n","  'Bag of Organic Bananas',\n","  'Organic Lemon',\n","  'Organic Yellow Onion',\n","  'Asparagus',\n","  'Organic Spinach & Feta Dinner Sausage',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Acai Berry Smoothie Packs',\n","  'Organic Sunday Bacon',\n","  'Organic Beef Bone Broth',\n","  'Organic Whipping Cream',\n","  'Organic Bunch Arugula',\n","  'Organic Baby Bella Mushrooms',\n","  'Goldenberries, Organic Dried Fruit',\n","  'Organic Half And Half',\n","  'Sugar Free Monkfruit Sweetened Almond Dark Chocolate Bar',\n","  'Organic Grade A Raw Honey'],\n"," ['Organic Dark Chocolate with Sea Salt & Cracked Black Pepper'],\n"," ['Whipped Cream Cheese',\n","  'Organic Strawberries',\n","  'Organic Baby Rainbow Carrots',\n","  'Organic Lemon',\n","  'Uncured Genoa Salami',\n","  'Organic Reduced Fat Omega-3 Milk',\n","  'Sesame Roasted Seaweed Snacks',\n","  'Raisin Bran Cereal',\n","  'Organic Sea Salt Roasted Seaweed Snacks',\n","  'Ground Buffalo',\n","  'Mild Italian Chicken Sausage',\n","  'Ground Pork',\n","  'Organic Sprouted Wheat Bagels',\n","  '50/50 Spring Mix & Baby Spinach',\n","  'Passionfruit Sparkling Water',\n","  'Uncured Beef Hot Dogs',\n","  'Protein & Fiber Madagascar Vanilla, Almonds & Pecans Hot Oatmeal',\n","  'Stringless Sugar Snap Peas',\n","  'Organic Pasture Raised Brown Eggs',\n","  'Rosemary Mini Croccantini',\n","  'Organic Sweet Onion',\n","  'Grape Tomatoes',\n","  'Bread, Artisan, Bake at Home, Sourdough, Rosemary',\n","  'Organic Bake at Home French Bread',\n","  'Total Plain Greek Strained Yogurt',\n","  'All Natural Apricot Sparkling Water',\n","  'Chocolate Hazelnut Butter Blend',\n","  'Euro Classic Brioche Hot Dog Buns'],\n"," [\"Organic D'Anjou Pears\",\n","  'Banana',\n","  'Vanilla Coffee Concentrate',\n","  'Pure Sparkling Water',\n","  'Organic Gala Apples',\n","  'Organic Baby Carrots',\n","  'Lime Sparkling Water',\n","  'Medium Salsa Roja',\n","  'Blueberry Crisp Energy Bar',\n","  'Sparkling Orange Juice & Prickly Pear Beverage',\n","  'Organic Bagged Mini Dark Peanut Butter',\n","  'Gluten Free Pretzel Twists',\n","  'Pita Chips Simply Naked',\n","  'Unsweetened Premium Iced Tea',\n","  '100% Recycled Paper Towels',\n","  'Peanut Butter Chocolate Chip Macrobar',\n","  'Cold Brew Coffee Double Espresso with Almond Milk',\n","  'Crispy Wheat, Crackers',\n","  'Unsweetened Terere Yerba Mate',\n","  'Vanilla Soy Creamer',\n","  'Crispy Cheddar Crackers',\n","  'Peanut Butter Protein Replenishment Macrobar',\n","  'California Lemonade',\n","  'Sriracha Flavor Tortilla Chips',\n","  'Vanilla Almond Butter',\n","  'Base Peanut Butter Chocolate Protein Bar',\n","  'Organic Multigrain Mild Green Mojo Tortilla Chips',\n","  'White Cheddar Popcorn',\n","  'Lean Protein & Fiber Bar Chunky Chocolate Peanut',\n","  'Almond Milk Vanilla Frozen Dessert Sandwich'],\n"," ['Organic Red Onion',\n","  'Organic Zucchini',\n","  'Organic Red Bell Pepper',\n","  'Organic Butterhead (Boston, Butter, Bibb) Lettuce'],\n"," ['Organic Cilantro',\n","  'Organic Red Onion',\n","  'Organic Garlic',\n","  'Organic Baby Rainbow Carrots',\n","  'Organic Unbleached All-Purpose Flour',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Carrots',\n","  'Kumato Tomatoes',\n","  'Organic Powdered Sugar',\n","  'Condensed Milk, Sweetened, Full Cream'],\n"," ['Organic Baby Spinach',\n","  'Organic Broccoli',\n","  'Organic Pears, Peas and Broccoli Puree Stage 1',\n","  'Gluten Free Homestyle Hot Oatmeal'],\n"," ['Unsweetened Original Almond Breeze Almond Milk',\n","  'Bag of Organic Bananas',\n","  'Clementines',\n","  'Healthy Grains Fiber Cinnamon Oat Clusters',\n","  'Large Grapefruit',\n","  'Dha Omega 3 Reduced Fat 2% Milk',\n","  'Aged White Cheddar Puffs Cheese Snacks',\n","  'Vanilla Blueberry Clusters With Flax Seeds Granola'],\n"," ['White with 30% Cacao Content Organic Chocolate',\n","  '34% Cacao Milk Chocolate Bar',\n","  'Natural Vanilla Miniature Marshmallows',\n","  'Sprinklez Confetti Fun Organic Toppings',\n","  'Killer Chocolate Sauce',\n","  'Organic Hot Cocoa Mix'],\n"," ['Organic Grape Tomatoes',\n","  'Fresh Cauliflower',\n","  'Organic Avocado',\n","  'Seedless Red Grapes',\n","  'Dairy Free Coconut Milk Yogurt Alternative',\n","  'Yellow Onions',\n","  'Red Peppers',\n","  'Organic Black Beans',\n","  'Bag of Organic Bananas',\n","  'Mild Salsa',\n","  'Organic Egg Whites',\n","  'Organic Zucchini Spirals',\n","  'Cucumber Kirby',\n","  'Sparkling Natural Mineral Water',\n","  'Organic Romaine Leaf',\n","  'Raw Chocolate Cacao Nibs',\n","  'Multigrain Pita Chips',\n","  'Fiesta Lime Rice Chips',\n","  'Poppy Seed Dressing',\n","  'Heirloom Bean Veggie Burgers',\n","  'Strawberry Banana Coconut Milk Yogurt',\n","  'Butternut Spirals Organic',\n","  'Tamari Gluten Free Soy Sauce Reduced Sodium',\n","  'Organic Quinoa Cacao Sprouted Oat Granola'],\n"," ['YoKids Strawberry Banana/Strawberry Yogurt',\n","  'Seedless Red Grapes',\n","  'Bag of Organic Bananas',\n","  'Boomchickapop Sea Salt Popcorn',\n","  'Apple Honeycrisp Organic',\n","  'Organic Cucumber',\n","  'Organic Raspberries',\n","  'Organic Whipped Naturally Buttery Spread',\n","  'Organic Baby Carrots',\n","  'Lemon Hummus',\n","  'Organic Premium Raspberry Spread',\n","  'Organic Strawberry Ice Cream',\n","  'Premium Organic Strawberry Spread',\n","  'Perrier Lime',\n","  'Organic Lowfat 1% Milk',\n","  'Sea Salt Pita Chips',\n","  'Tilapia Filet',\n","  'California Roll Sushi',\n","  'Organic Chocolate Almondmilk Pudding'],\n"," ['Organic Half & Half',\n","  'Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Organic Blackberries',\n","  'Organic Strawberries',\n","  'Organic Zucchini',\n","  'Michigan Organic Kale',\n","  'Bag of Organic Bananas',\n","  'Creamy Almond Butter',\n","  'Large Lemon',\n","  'Apple and Carrot Stage 2 Baby Food',\n","  'Organic Granny Smith Apple',\n","  'Uncured Hickory Smoked Sunday Bacon',\n","  'Organic Cucumber',\n","  'Organic Small Bunch Celery',\n","  'Organic Yellow Onion',\n","  'Green Bell Pepper',\n","  'Asparagus',\n","  'Organic Red Bell Pepper',\n","  'Broccoli Crown',\n","  'Original Popcorn',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Extra Virgin Olive Oil',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Whole Milk with DHA Omega-3',\n","  'Broccoli & Apple Stage 2 Baby Food',\n","  'Boneless And Skinless Chicken Breast',\n","  'Baby Food Stage 2 Blueberry Pear & Purple Carrot',\n","  'Baked Caesar Snapea Crisps',\n","  'Peach,  Apricot & Banana Stage 2 Baby Food',\n","  'Mighty 4 Purple Carrot Blackberry Quinoa & Greek Yogurt Tots Snack'],\n"," ['Mini Original Babybel Cheese',\n","  'Organic Fat-Free Milk',\n","  'Grade A Large Brown Eggs',\n","  'Butter',\n","  'Manhattan Style Whole Kosher Pickles'],\n"," ['Organic Baby Spinach',\n","  'Dairy Free Vanilla Coconut Milk',\n","  'Whole Rye Bread',\n","  'Just Black Cherry Juice'],\n"," ['Green Seedless Grapes',\n","  'Bag of Organic Bananas',\n","  'Red Seedless Grapes',\n","  'Romaine Hearts',\n","  'Coconut Water',\n","  'Organic Kettle Corn',\n","  'Pub Mix'],\n"," ['Distilled Water',\n","  'Organic Tortilla Chips',\n","  'Pure Irish Butter',\n","  'Wonderful 100% Pomegranate Juice',\n","  'Organic Acai Juice',\n","  'Butter Lettuce',\n","  'Organic Pine Nuts'],\n"," ['Organic Garlic',\n","  'Unsalted Butter',\n","  'Strawberry Preserves',\n","  'Gluten Free Sliced Mountain White Bread',\n","  'Crimini Delight Mushrooms',\n","  'Pure Irish Butter',\n","  'Organic Tomato Paste',\n","  'Organic Beef Broth',\n","  'Pearl Onions',\n","  'Gluten Free Original Baguettes',\n","  'Pizza Uncured Pepperoni Gluten Free',\n","  'Gourmet Pizza Nut-Free Pesto Gluten Free',\n","  'Gluten Free 100% Organic Whole Grain Traditional Egg Pasta',\n","  'Instant Mashed Potatoes',\n","  'Low Fat Ice Cream Sea Salt Carmel Bar',\n","  '100 Calorie  Per Bag Popcorn'],\n"," ['White English Muffins',\n","  'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry',\n","  'Marinara Pasta Sauce',\n","  'Cane Sugar',\n","  'Macaroni Shells & White Cheddar Cheese',\n","  'Sea Salt Potato Chips',\n","  'Organic Basil',\n","  'Organic Iceberg Lettuce',\n","  'Italian Sparkling Mineral Water',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Iced Oatmeal Cookie Kid Z Bar',\n","  'Organic Greek Whole Milk Blended Vanilla Bean Yogurt',\n","  'Original Veggie Straws',\n","  'Veggie Chips',\n","  'Tomato Medley',\n","  'Mixed Grapes',\n","  'Orignial Recipe Chocolate Pudding',\n","  'YoKids Squeeze! Organic Strawberry Flavor Yogurt',\n","  'Organic Tomato Bisque'],\n"," ['Whole Milk',\n","  'Real Mayonnaise',\n","  'Bag of Organic Bananas',\n","  'Limes',\n","  'Deluxe Plain Bagels',\n","  'Shredded Carrots',\n","  'Roma Tomato',\n","  'Sour Cream',\n","  'White Corn',\n","  'Hass Avocado Bag',\n","  'Apple Juice',\n","  'Fresh CA Grown Eggs',\n","  'California Clementines',\n","  'Original Restaurant Style Party Size Tortilla Chips',\n","  'Ranchero Queso Fresco Cheese',\n","  'Cooked Ham',\n","  'Black Refried Beans',\n","  'Bag of Oranges',\n","  'Corn De Maiz Blanco Tortillas',\n","  'Large Burrito Flour Tortillas',\n","  'Nacho Cheese Sauce',\n","  'Steakhouse Ranch Dressing',\n","  'Tostadas Caseras Doraditas',\n","  'Hazelnut Gourmet Coffee Creamer'],\n"," ['Eggo Thick & Fluffy Original Waffles',\n","  'Pomegranate on the Bottom Non-Fat Greek Yogurt',\n","  'Original English Muffins',\n","  'Fresh Care Flushable Cleansing Cloths Refills',\n","  'The Original Sauce',\n","  'Alfredo Sauce',\n","  'Lite Chocolate Syrup',\n","  'Mini Cucumbers',\n","  'Kosher Reduced Fat Beef Franks',\n","  'Passion Fruit On The Bottom Greek Yogurt',\n","  'Fully Cooked Turkey Sausage Links'],\n"," ['Bacon Caesar Kit', 'Cheese Shredded Mozzarella Reduced Fat 2%'],\n"," ['100% Whole Wheat Bread',\n","  'Strawberry Jam',\n","  'Cat Litter Deodorizer with Activated Baking Soda',\n","  'All Purpose Spray Cleaner With Bleach',\n","  'Murphy Oil Soap Squirt & Mop Wood Floor Cleaner',\n","  '100% Lactose Free Fat Free Milk',\n","  'Reese Puffs Peanut Butter Cereal',\n","  'Spirited Prints Paper Towels with Thirst Pockets - 8 CT',\n","  '1000 Sheets Per Roll Bath Tissue',\n","  'Clear Hand Soap Refill',\n","  'Mountain Rain Liquid Laundry Detergent'],\n"," ['Soda',\n","  'Organic Baby Spinach',\n","  'Organic Baby Carrots',\n","  'Mineral Water',\n","  'Grilled Chicken Strips'],\n"," ['Small Hass Avocado',\n","  'Limes',\n","  'Natural Artisan Water',\n","  'Sparkling Natural Mineral Water',\n","  'Pineapple Apple Mint Organic Cold Pressed Juicd',\n","  '100% Recycled 2 Ply Jumbo Paper Towel Roll',\n","  'Cold Brew Coffee',\n","  'Green Jalapeno Pepper Sauce',\n","  'Fennel',\n","  'Assorted Compostable Flatware',\n","  'Palm Wax Votive Candles'],\n"," ['Seedless Red Grapes',\n","  'Sea Salt & Vinegar Potato Chips',\n","  'Grapefruit Juice',\n","  'Original Hummus',\n","  'Organic Baby Carrots',\n","  'Lime Sparkling Water',\n","  'Sea Salt Pita Chips',\n","  'Original Orange Juice',\n","  'Apple Juice',\n","  '70% Dark Chocolate Salted Almond Bar'],\n"," ['Mineral Water', 'Unsweetened Vanilla Almond Breeze'],\n"," ['Black Beans',\n","  'Fresh Cut Golden Sweet Whole Kernel Corn',\n","  'Organic Banana',\n","  'Tiny Twists Pretzels',\n","  'Organic Premium Tomato Paste',\n","  'Natural Shredded Mexican Style Four Cheese',\n","  'Original Diced Tomatoes & Green Chilies',\n","  'Chicken Cooking Stock'],\n"," ['Organic Cilantro',\n","  'Organic Garlic',\n","  'Red Peppers',\n","  'Bag of Organic Bananas',\n","  'Green Bell Pepper',\n","  'Spring Water',\n","  'Organic White Onions',\n","  'Ginger Ale Soda',\n","  'Sea Salt'],\n"," ['Organic Zucchini',\n","  'Organic Yellow Onion',\n","  'Organic Romaine Lettuce',\n","  'Organic Zucchini Spirals',\n","  'Lactose Free 2% Reduced Fat Milk',\n","  'Organic Green Cabbage',\n","  'Organic 85% Cacao Dark Chocolate Bar',\n","  'Dark Blackout Organic Chocolate',\n","  'Double Chocolate Happiness Cookies',\n","  'Wild Arugula',\n","  'Organic Panama Extra Dark Chocolate'],\n"," ['Organic Large Grade AA Brown Eggs',\n","  'Bananas',\n","  'Asian Sauces, Gourmet, Thai Peanut',\n","  'Organic Tomato Paste, No Salt Added',\n","  'Dark Chocolate With Sea Salt & Almonds',\n","  'Seitan, Traditional, Strips',\n","  'Hummus',\n","  'Madras Lentils Indian Cuisine'],\n"," ['Organic Large Extra Fancy Fuji Apple',\n","  'Large Lemon',\n","  'Oven Roasted Turkey Breast',\n","  'Organic Large Grade A Brown Eggs',\n","  'Chunky Medium Salsa',\n","  'Sparkling Natural Mineral Water',\n","  'Pure Lemon Juice',\n","  'Light Multi-Grain English Muffins',\n","  'Grape Fruit Ice Bars',\n","  '0% Fat Free Organic Milk',\n","  'Plain Mini Bagels',\n","  'Steamfresh Premium Selects Broccoli Florets',\n","  'Mandarins',\n","  'Cinnamon Multigrain Cereal',\n","  'Kale Salad',\n","  'Hamburger Buns Whole Grain',\n","  'Simply Country Style Olive Oil and Sea Salt French Fried Potatoes',\n","  'Steam Crisp Super Sweet Yellow & White Whole Kernel Corn',\n","  'Delightful Multi-Grain Bread',\n","  'Whole Grain Brown Rice',\n","  'Smoth & Creamy Low Fat Vanilla Frozen Yogurt',\n","  'American Blend Salad',\n","  'Original Frosted Mini Wheats Little Bites',\n","  'Original Flavor Instant Oatmeal',\n","  'Revive Zero Vitamin Water',\n","  'Vitamin Water Zero Squeezed Lemonade'],\n"," ['Organic Whole Milk',\n","  'Banana',\n","  'Granny Smith Apples',\n","  'Organic Cilantro',\n","  'Organic Red Onion',\n","  'Yellow Onions',\n","  'Red Potatoes',\n","  'Garlic',\n","  'Large Lemon',\n","  'Green Bell Pepper',\n","  'Limes',\n","  'Oven Roasted Turkey Breast',\n","  'Light Brown Sugar',\n","  'Cream Top with Chocolate on the Bottom Yogurt',\n","  'Chocolate Almond Fudge Energy Bar'],\n"," ['Banana',\n","  'Small Hass Avocado',\n","  'Black Bean Vegetables Burrito',\n","  'Garlic',\n","  'Organic Long Grain White Rice',\n","  'Organic Broccoli',\n","  'Organic Yellow Onion',\n","  'Organic Raspberries',\n","  'Organic Crushed Fire Roasted Tomatoes',\n","  'Organic Red Bell Pepper',\n","  'Green Onions',\n","  'Plain Almond Milk Yogurt',\n","  'Cheese Pizza Snacks',\n","  'Saltine Crackers',\n","  'Organic Old Fashioned Rolled Oats',\n","  'Organic Spring Mix',\n","  'Low Sodium Refried Black Beans',\n","  'Vanilla Almond Milk Yogurt',\n","  'Organic Light in Sodium Lentil Vegetable Soup',\n","  'Baby Portabella Mushrooms',\n","  'Maple Almond Butter',\n","  'Organic Mushroom & Olive Pizza',\n","  'Pizza Roasted Vegetable No Cheese',\n","  'Organic Lentil Beans',\n","  'Strawberry Banana Coconut Milk Yogurt',\n","  'Organic Vegetable Alphabets Pasta',\n","  'Tomato Basil Cooking Sauce',\n","  'Non GMO Classic Flavor Meatless Meatballs',\n","  'Vegan Aged White Cheddar Flavor Puffs',\n","  'Vegetarian Organic Chili Beans',\n","  'Organic Fat Free Refried Pinto Beans',\n","  'Organic Soups Low Fat Split Pea',\n","  'Gluten Free Fusilli Brown Rice Pasta'],\n"," ['Organic Thompson Seedless Raisins',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Bag of Organic Bananas',\n","  'Feta Cheese Crumbles',\n","  'Organic Spring Mix Salad',\n","  'Frozen Organic Wild Blueberries',\n","  'Gala Apple',\n","  'Pineapple Chunks',\n","  'Organic Italian Salad',\n","  'Whole Strawberries',\n","  'Bag of Clementines'],\n"," ['Organic Cilantro',\n","  'Organic Thai Coconut Curry Hummus',\n","  'Coconut Water Organic',\n","  'Unsweetened Organic Coconut Milk',\n","  'Dairy Free Gluten Free Chocolate Almond Butter Miracle Tart',\n","  'Organic Restaurant Style  Sea Salt & Lime Tortilla Chips',\n","  'Classic Chevre Crumbled Goat Cheese',\n","  'Lavender Red Rose Cacao Bar',\n","  'Organic Coconut Cream',\n","  'Organic Greens & Greens Juice'],\n"," ['Soda',\n","  'Banana',\n","  'Organic Avocado',\n","  'Organic Blackberries',\n","  'Strawberries',\n","  'Distilled Water',\n","  'Red Peppers',\n","  'Honey Barbecue Sauce',\n","  'Hot Dog Buns Enriched 8 Count',\n","  'Chicken Broth',\n","  'Natural Extra Sharp Cheddar Cheese',\n","  'Applewood Smoked Center Cut Uncured Bacon',\n","  'Thin Spaghetti Pasta',\n","  'Extralean Ground Turkey Breast',\n","  'Authentic Red Curry Paste',\n","  'White Onion',\n","  'Original Orange Juice',\n","  'Squeeze Tomato Ketchup',\n","  'Unsweetened Organic Soy Milk',\n","  'Cream Of Celery Condensed Soup',\n","  'Original Prepared Cheese Product',\n","  'Sandwich Rolls',\n","  'Raspberry Blackberry Sparkling Water',\n","  'Premium Jumbo Beef Franks',\n","  'Deluxe Sharp Cheddar Macaroni & Cheese Dinner',\n","  'Organic Lite Coconut Milk',\n","  'All Natural Curry Powder',\n","  'Vermont Maple Syrup Breakfast Sausage',\n","  'Blush Wine Vinaigrette Dressing'],\n"," ['Chunky Medium Salsa',\n","  'Pico De Gallo Chunky Salsa',\n","  'Tortilla Strips Restaurant Style'],\n"," ['Applewood Smoked Center Cut Uncured Bacon',\n","  'Hot Dog Buns',\n","  'Classic Bun-Length Wieners'],\n"," ['Organic Blackberries',\n","  'Green Seedless Grapes',\n","  'Lightly Salted Rice Cakes',\n","  'Organic Himalayan Sweetness Popcorn',\n","  'Sugar Free Chocolate Vanilla Swirls Pudding'],\n"," ['Banana',\n","  'Vidalia Onions',\n","  'Seedless Red Grapes',\n","  'Shredded Parmesan',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Medium Salsa',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Green Leaf Lettuce',\n","  'Flat Parsley, Bunch',\n","  'Green Peas No Salt Added',\n","  'Cinnamon Rolls with Icing',\n","  \"Organic Honey Nut O's Cereal\",\n","  'Organic Whole Milk Washington Black Cherry Yogurt',\n","  'Organic Coconut Yogurt',\n","  'Fresh Whole Chicken',\n","  'Chopped Spinach',\n","  'Meyer Lemon',\n","  'Red Leaf Lettuce',\n","  'Pineapple',\n","  'Yellow Straightneck Squash',\n","  'Cozy Chamomile Herbal Tea',\n","  '100% Recycled Aluminum Foil',\n","  'Chopped Pecans',\n","  'Whole Milk Yogurt Organic Indonesian Vanilla Bean',\n","  'Toasted Pine Nut Couscous Mix',\n","  'Granola Bar Peanut Butter'],\n"," ['Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Organic Blackberries',\n","  'Organic Strawberries',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Limes',\n","  'Organic Ginger Root',\n","  'No Salt Added Black Beans',\n","  'Organic Fresh Basil',\n","  'Organic Romaine',\n","  'Cucumber Kirby',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Large Grapefruit',\n","  'Liquid Aminos All Purpose Seasoning',\n","  'Almond Flour Tortillas',\n","  'Yo Baby Organic Whole Milk Banana Mango Yogurt',\n","  'Premium Quality Young And Tender Whole Green Beans'],\n"," ['Sourdough Bread',\n","  'Raisins',\n","  'Sea Salt Crunchy Chickpeas',\n","  'Organic Mini Homestyle Waffles',\n","  'Vegetable Egg Rolls'],\n"," ['Organic Baby Spinach',\n","  'Organic Chicken Strips',\n","  'Bag of Organic Bananas',\n","  'Organic Gala Apples',\n","  'Seven Grain Crispy Tenders',\n","  '100% Recycled Paper Towels',\n","  'Tuna Salad',\n","  'Purifying Tea Tree Body Wash'],\n"," ['Pineapple on the Bottom Greek Yogurt',\n","  'Wild Wonders Gourmet Medley Tomatoes',\n","  'Mache Rosettes French Salad Mix',\n","  'Unsweetened Lemonade',\n","  'Chunky Salsa Medium',\n","  'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale',\n","  'Hint of Lime Flavored Tortilla Chips',\n","  'Vanilla Milk Chocolate Almond Ice Cream Bars',\n","  'Decaffeinated English Breakfast Black Tea',\n","  'No Beans Chili'],\n"," ['Pure Cane Granulated White Sugar', 'Pain Relief Tablets'],\n"," ['Strawberries',\n","  'Boneless Skinless Chicken Breasts',\n","  'Bag of Organic Bananas',\n","  'Clementines',\n","  'Hass Avocado Variety',\n","  'Honeycrisp Apples',\n","  'Organic Chicken & Mozzarella Ravioli',\n","  'Cauliflower Florets',\n","  'Orange Juice with Calcium',\n","  'Oatnut Bread'],\n"," ['Zero Calorie Cherry Cola'],\n"," ['Seedless Watermelon',\n","  'Hass Avocados',\n","  'Organic Spring Mix',\n","  'Honeydew Melon',\n","  'Gourmet Tomato Medley'],\n"," ['Birthday Cake Light Ice Cream',\n","  'Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Spicy Hummus',\n","  'Sliced Baby Bella Mushrooms',\n","  'Shredded Parmesan',\n","  'Organic Spaghetti Squash',\n","  'Large Pineapple Chunks',\n","  'Sea Salt Caramel Ice Cream',\n","  'Cookies & Cream Ice Cream',\n","  'Chopped Pecans',\n","  'Cauliflower Rice',\n","  \"S'mores Ice Cream\",\n","  'Red Velvet Ice Cream'],\n"," ['Organic Low Sodium Chicken Broth',\n","  'Organic Whole String Cheese',\n","  'Organic Penne Rigate',\n","  'Marinara Sauce',\n","  'Cream Cheese'],\n"," ['Bag of Organic Bananas',\n","  'Red Seedless Grapes',\n","  'Almonds & Sea Salt in Dark Chocolate',\n","  'Vitamin D Organic Milk',\n","  'Signature Pepperoni Crispy Thin Crust Pizza',\n","  'Chocolate Strong Dark'],\n"," ['Orange Bell Pepper',\n","  'Red Peppers',\n","  'Organic Yellow Onion',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Coconut Milk',\n","  'Flat Parsley, Bunch',\n","  'Honey Wheat Enriched Bread',\n","  'Bay Leaves',\n","  'Yucca Root',\n","  'Natural Tomato Paste',\n","  'Petite Diced Tomatoes In Tomato Juice',\n","  'Bistro Favorites Black Forest Ham'],\n"," ['Honeycrisp Apple',\n","  'Half & Half',\n","  'Michigan Organic Kale',\n","  'Blueberries',\n","  'Super Seed Crispy Crackers',\n","  'Garlic',\n","  'Large Alfresco Eggs',\n","  'Original Hummus',\n","  'Organic Baby Carrots',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Mango Chunks',\n","  'Lactose Free Plain Kefir',\n","  'Organic 85% Dark Chocolate Black Rice Quinoa Crunch',\n","  'Organic Pure 85% Dark Chocolate Bar',\n","  'Cream Top Smooth & Creamy Plain Yogurt',\n","  'Organic Grass Fed Creamline Yogurt Plain'],\n"," ['Soda',\n","  'Zero Calorie Cola',\n","  'Trail Mix',\n","  'Organic Coconut Water',\n","  'Organic Fruit Snacks'],\n"," ['Organic Half & Half',\n","  'Asian Pears',\n","  'Banana',\n","  'Organic Avocado',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Strawberries',\n","  'Green Bell Pepper',\n","  'Limes',\n","  'Watermelon Chunks',\n","  'Organic Golden Delicious Apple',\n","  '3 lb Clementines',\n","  'Organic Red Potato',\n","  '2% Reduced Fat DHA Omega-3 Reduced Fat Milk',\n","  'Uncured Beef Hot Dogs',\n","  'Organic Creamy Tomato Soup',\n","  'Country Morning White Bread',\n","  'Mighty Mango Juice Smoothie'],\n"," ['Sparkling Water Grapefruit',\n","  'Michigan Organic Kale',\n","  'Berry Medley',\n","  'Organic Ginger Root',\n","  'Organic Granny Smith Apples',\n","  'Cucumber Kirby',\n","  'Ezekiel 4:9 Bread Organic Sprouted Whole Grain',\n","  'Toffee & Sea Salt Milk Chocolate Bar'],\n"," ['Unsweetened Almondmilk',\n","  'Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Organic Red On the Vine Tomato',\n","  'Grassfed Whole Milk Plain Yogurt',\n","  'Organic Strained Tomatoes',\n","  'Organic Brussel Sprouts',\n","  'Organic Pack Peasant Bread'],\n"," ['Organic Red Onion',\n","  'Yellow Onions',\n","  'Sour Cream',\n","  'Rosemary Hand Soap',\n","  'Clean Day Basil Hand Soap',\n","  'Pepper Jack Cheese'],\n"," ['Gourmet Tomato Medley'],\n"," ['Sparkling Tangerine Probiotic Drink',\n","  'Sparkling Probiotic Drink Coconut',\n","  'Sparkling Pineapple Coconut Probiotic Drink'],\n"," ['Banana',\n","  'Vitamin D Organic Whole Milk',\n","  'Movie Theater Butter',\n","  'Navel Oranges',\n","  'Homestyle Some Pulp Orange Juice',\n","  'Delights Turkey Sausage Egg Whites & Cheese English Muffin',\n","  'Berry Sparkling Water Beverage',\n","  'Black Cherry Water',\n","  'Natural Strawberry Ice Cream',\n","  'Salisbury Steak Frozen Dinner',\n","  'Classics Meat Lovers Lasagna',\n","  'All Natural 100% Apple Juice',\n","  'Quick Enriched White Hominy Grits',\n","  'Extra Crispy Seasoned Crinkles',\n","  'Deluxe Salted Whole Cashews'],\n"," ['Green Seedless Grapes',\n","  'Red Onions, Fresh Diced',\n","  'Natural Vanilla Ice Cream',\n","  'All Natural Whole Strawberries',\n","  'Fresh CA Grown Eggs',\n","  'Pure Dark Brown Cane Sugar',\n","  'Power Up Greens Spring Mix & Greens',\n","  'Broccoli Cuts',\n","  'Lemon Sparkling Mineral Water',\n","  'Cornstarch',\n","  'Buttermilk Biscuits Value Pack'],\n"," ['80  Vodka Holiday Edition',\n","  '2% Reduced Fat Milk',\n","  'Coke',\n","  'Brandy',\n","  'Jumbo Grade A White Eggs',\n","  'Mixed Bell Peppers',\n","  'Pepper Strips',\n","  'Prosecco'],\n"," ['Organic Cilantro',\n","  'Half & Half',\n","  'Organic Red Onion',\n","  'Marinara Pasta Sauce',\n","  'Organic Garlic',\n","  'Organic Brown Rice',\n","  'Feta Cheese Crumbles',\n","  'Organic Lemon',\n","  'Organic Navel Orange',\n","  'Organic Unsweetened Almond Milk',\n","  'Spaghetti',\n","  'Organic Large Brown Eggs',\n","  'I Heart Baby Kale',\n","  'Broccoli Crown',\n","  'Mild Salsa',\n","  'California Veggie Burger',\n","  'Sour Cream',\n","  'Organic Green Leaf Lettuce',\n","  'Organic Multigrain Waffles',\n","  'Arancita Rossa',\n","  'Kale and Brown Rice Gratin, Gluten Free',\n","  'Organic Quick Cooking Rolled Oats',\n","  'Organic Hearts Of Romaine'],\n"," ['Green Seedless Grapes',\n","  'Oranges',\n","  'Organic Simply Naked Pita Chips',\n","  'Rainbow Bell Peppers',\n","  'Roasted Pine Nut Hummus',\n","  'Red Delicious Apples',\n","  'Organic Pine Nuts',\n","  'Sea Salt Brown Rice Crackers',\n","  'Original Export Sodas Crackers',\n","  'Forelle Pears'],\n"," ['Organic Hass Avocado', 'Organic Lemon'],\n"," ['Organic Butterhead (Boston, Butter, Bibb) Lettuce',\n","  'Sliced Water Chestnuts',\n","  'Hoisen Sauce',\n","  'Organic Asian Sesame Dressing',\n","  'Club Soda',\n","  'Unsalted Sweet Butter'],\n"," ['Organic Strawberries',\n","  'Bag of Organic Bananas',\n","  'Organic Baby Rainbow Carrots',\n","  'Organic Brown Rice',\n","  'Organic Basil',\n","  'Organic Fuji Red Apple Chips',\n","  'Organic Strawana Probugs Kefir',\n","  'Original Roasted Seaweed Snacks',\n","  'Organic Reduced Fat 2% Milk',\n","  'Veganic Sprouted Brown Rice Cacao Crisps',\n","  'Gluten Free Crunchy Vanilla Cereal',\n","  'Brown Rice Snaps Black Sesame',\n","  'Rice Based Formula Vanilla Probiotic',\n","  'Lime Grain-Free Tortilla Chips',\n","  'Frozen Goo-Berry Pie Kefir',\n","  'Organic Sweet Mini Peppers',\n","  'Cooking Sauce, La Pizza',\n","  'Prepared White Horseradish',\n","  'Organic Deglet Nour Dates',\n","  'Matcha Almondmilk'],\n"," ['Banana',\n","  'Fridge Pack Cola',\n","  'Blueberry Yoghurt',\n","  'Sparkling Lemon Water',\n","  'Vine Ripe Tomatoes',\n","  'Dry Roasted Lightly Salted Peanuts',\n","  'Reduced Fat Original Baked Snack Crackers',\n","  'Honey Wheat Bread',\n","  'Coke Classic',\n","  'Original Restaurant Style Tortilla Chips',\n","  'Ginger Ale Soda',\n","  'Italian Meatballs',\n","  'Tart Cherry Yoghurt',\n","  'Berry Pomegranate Liquid Water Enhancer',\n","  'Classic Vegetables Whole  Kernel Corn',\n","  'Honey Ginger Dressing',\n","  'Cream Cheese Cream Cheese Spread',\n","  \"Super Moist Devil's Food Cake Mix\",\n","  'Grade A Large Eggs Cage Free Omega 3'],\n"," ['Organic Cilantro',\n","  'Sparkling Water Grapefruit',\n","  'Organic AppleApple',\n","  'Bag of Organic Bananas',\n","  'Organic Cucumber',\n","  'Organic Raspberries',\n","  'Organic Free Range Chicken Broth',\n","  'Organic Large Grade A Brown Eggs',\n","  '2% Reduced Fat Organic Milk',\n","  'Medium Cheddar Cheese Block',\n","  'Gluten Free Cheddar Macaroni & Cheese Rice Pasta',\n","  'Organic Whole Cashews',\n","  'Organic Chicken Thighs',\n","  'Rice Pasta & Cheddar Gluten Free Macaroni & Cheese'],\n"," ['Large Grade AA Cage Free Eggs',\n","  'Cinnamon Swirl Raisin Bread',\n","  'Corn Tortilla Chips',\n","  'Cheddar & Sour Cream Potato Chips',\n","  'Deli Deluxe American Cheese Product',\n","  'Decaf House Blend Coffee K-Cups',\n","  'Diet Pepsi'],\n"," ['Organic Tomato Cluster',\n","  'Yoghurt Blueberry',\n","  'Almonds & Sea Salt in Dark Chocolate',\n","  'Medium Salsa Roja',\n","  'Organic Butterhead (Boston, Butter, Bibb) Lettuce',\n","  'Uncured Black Forest Ham',\n","  'Crescent Rolls',\n","  'Three Cheese Ravioli In Egg Pasta',\n","  'Soft Rolls'],\n"," ['Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips',\n","  'Organic Unsalted Butter',\n","  'Organic Cripps Pink Apples',\n","  'Organic Cucumber',\n","  'Limes',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Organic Sour Cream',\n","  'Organic White Cheddar Popcorn',\n","  'Organic Macaroni Shells & Real Aged Cheddar',\n","  'Blood Oranges',\n","  'Large Grapefruit',\n","  'Mixed Berries Whole Milk Icelandic Style Skyr Yogurt',\n","  'Vanilla Skyr Style Yogurt',\n","  'Super Natural Organic Whole Milk',\n","  'Cucumber & Garlic  Tzatziki',\n","  'Meyer Lemon',\n","  'Thin Crust Pepperoni Pizza',\n","  'Organic Restaurant Style  Sea Salt & Lime Tortilla Chips',\n","  'Pepperoni Pizza'],\n"," ['Honeycrisp Apple',\n","  'Shredded Mild Cheddar Cheese',\n","  'Blueberries',\n","  'Selects Turkey Hot Dogs',\n","  'Bag of Organic Bananas',\n","  'Bosc Pear',\n","  'Broccoli Crown',\n","  'Classic Hummus',\n","  'Organic 1% Low Fat Milk',\n","  'Vitamin D Added Evaporated Milk',\n","  'Plain Mini Bagels',\n","  'Butter',\n","  'Dill Pickle Spears',\n","  'Extra Crisp English Muffins',\n","  'Original Whipped Cream Cheese',\n","  'Carb Balance Flour Tortillas',\n","  'Super Moist Yellow Cake Mix',\n","  'Elbows Enriched Macaroni Product',\n","  'Salame, Italian Dry',\n","  'Black Forest Ham',\n","  'Honey Vanilla Greek Yogurt',\n","  'Amazin Prune Juice',\n","  'Mango Sparkling Water',\n","  'Envy Apple'],\n"," ['Sparkling Mineral Water', 'Organic Coconut Water'],\n"," ['Soy Sauce', 'Organic Chicken Stock', 'Mozzarella di Bufala Campana'],\n"," ['Seedless Red Grapes',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Boneless Skinless Chicken Breasts',\n","  'Vanilla Skyr Nonfat Yogurt',\n","  'Non Fat Raspberry Yogurt',\n","  'All Natural Cinnamon Raisin Bread',\n","  'Pork Carnitas Burrito',\n","  'Sriracha Chicken Big Burrito'],\n"," ['Organic Half & Half',\n","  'Organic Red Delicious Apple',\n","  'Honey Yoghurt',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Big Chewy Chocolate Chip Granola',\n","  'Large Pitted California Ripe Olives',\n","  'Wheat Thins Reduced Fat Crackers',\n","  'Solid White Albacore Tuna In Water',\n","  '100% Grape Juice Concentrate',\n","  'Double Caramel Ice Cream Bars',\n","  'Espresso Roast Ground Coffee',\n","  'Whole Berry Cranberry Sauce',\n","  'Organic Extra Virgin Imported Olive Oil',\n","  'Whole Carrots',\n","  'Bordeaux Sweet and Simple Cookies'],\n"," ['Organic Roasted Turkey Breast',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Dry Coppa'],\n"," ['Organic Strawberries', 'Pink Lady Apples', 'Brussels Sprouts'],\n"," ['Strawberries',\n","  'Shredded Mild Cheddar Cheese',\n","  'Unsalted Butter',\n","  'Organic Genoa Salami',\n","  'Challah Bread',\n","  'Lemon Sparkling Mineral Water',\n","  'Organic Apple Sauce + Fruit & Veggie Carroty Chop Mashups'],\n"," ['Bunched Cilantro',\n","  'White Sliced Mushrooms',\n","  'Total 0% Greek Yogurt',\n","  'Orange Sparkling Water'],\n"," ['Cereal', 'Frozen Organic Blueberries'],\n"," ['Banana',\n","  'Blueberries',\n","  'Half Baked® Ice Cream',\n","  'Peanut Butter Creamy With Salt',\n","  'Orange Juice',\n","  '100% Apple Juice',\n","  'Organic Greek Lowfat Yogurt With Cherries',\n","  'Vanilla Ice Cream',\n","  'Family Organic Apple Juice Boxes - 4 CT',\n","  'Pumpkin Ice Cream',\n","  'Apple Strudel Bites'],\n"," ['Organic Hass Avocado',\n","  'Philadelphia Cream Cheese',\n","  'Unsweetened Iced Coffee',\n","  'Homestyle Some Pulp 100% Florida Orange Juice',\n","  'Grade A Large White Eggs',\n","  'Macaroni & Cheese',\n","  'Pesto Tortellini  Bowls',\n","  'Reduced Fat Milk',\n","  'Berry Valley Blueberries',\n","  'Vanilla or Chocolate Chip Variety Pack Ice Cream Pieces',\n","  'Everyday Napkins Design Collection, Printed, 2-Ply',\n","  'Parmesan Shredded Cheese',\n","  'Premium Romaine',\n","  'Vegetable Pot Pie',\n","  'Power Blend Superfood Brussels Sprouts, Napa Cabbage, Kohlrabi, Broccoli, Carrots & Kale',\n","  'Natural Aloe Pampers Baby Wipes Natural Clean 3X 192 count  Baby Wipes',\n","  'STREITS QN01 LIGHTLY SLTD MTZO 11Z',\n","  'Light in Sodium Country Cheddar Bowl',\n","  'Paper Towel',\n","  'Caffe Mocha Iced Coffee',\n","  'Grainiac Organic Bread'],\n"," ['Half & Half',\n","  'Honey Wheat Enriched Bread',\n","  'Grands! Big & Flaky Crescent Rolls'],\n"," ['Organic Whole Milk',\n","  'Organic Roma Tomato',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Bag of Organic Bananas',\n","  'Organic Yellow Onion',\n","  'Thin & Light Tortilla Chips',\n","  'Sonoma Traditional Flour Tortillas 10 Count',\n","  'Lemonade',\n","  'Limes',\n","  'Grated Parmesan',\n","  'Organic Mini Sandwich Crackers Peanut Butter',\n","  'Hass Avocados',\n","  'Organic Gala Apples',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Lactose Free 2% Reduced Fat Milk',\n","  'Organic Chocolate Chip Chewy Granola Bars',\n","  'Original Veggie Straws',\n","  'Stringless Sugar Snap Peas',\n","  'Fajita Seasoning, Organic',\n","  'Baby Mum-Mum Banana  Rice Rusks'],\n"," ['0% Greek Strained Yogurt',\n","  'Seedless Red Grapes',\n","  'Sweet Kale Salad Mix',\n","  'Mozzarella String Cheese',\n","  'Reduced Fat 2% Milk'],\n"," ['Distilled Water'],\n"," ['Banana',\n","  'Organic Blackberries',\n","  'Organic Raw Kombucha Gingerade',\n","  'Pure Irish Butter',\n","  'Maple Quinoa Cluster With Chia Seeds',\n","  'Ghee, Original',\n","  'Picnic Potato Salad',\n","  'Tuna, Wild Albacore'],\n"," ['Banana',\n","  'Original Crescent Rolls',\n","  'Kefir Cultured Strawberry Milk Drink',\n","  'Americone Dream® Ice Cream',\n","  'Cream Cheese',\n","  'Sausage & Uncured Pepperoni Pizza',\n","  'Traditional Chicken & Wild Rice Soup',\n","  'Creamy Roasted Chicken with Herb Dumplings Soup',\n","  'Rich & Hearty Chicken Pot Pie Style Chowder Soup',\n","  'Frozen Microwaveable Chicken Pot Pie',\n","  'Beef Pot Pie',\n","  'Turkey Pot Pie',\n","  'Low Fat Madagascar Vanilla Kefir Probiotic Cultured Milk Smoothie'],\n"," ['Enlightened Organic Raw Kombucha', 'Total Greek Strained Yogurt'],\n"," ['Aged White Cheddar Popcorn',\n","  'Clementines',\n","  'Mineral Water',\n","  'White Cheddar Popcorn'],\n"," ['Sparkling Natural Mineral Water',\n","  'Cola Soft Drink',\n","  'Smartwater Electrolyte Enhanced Water'],\n"," ['Strawberries', 'Pears', 'Organic Mandarins'],\n"," ['Banana',\n","  '2% Reduced Fat Milk',\n","  'Double Stuf Chocolate Sandwich Cookies Family Size',\n","  'Sweet Rolls',\n","  'Frosted Flakes',\n","  'Ripples Sour Cream & Onion Flavored Potato Chips',\n","  'Berry Punch Flavored Fruit Drink',\n","  'Boneless Skinless Thighs',\n","  \"Any'tizers  Popcorn Chicken\",\n","  'Boil In Bag Jasmine White Rice'],\n"," ['Organic Soft Wheat Bread',\n","  'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry',\n","  'Shredded Parmesan',\n","  'Green Tea With Ginseng and Honey',\n","  'Whole Organic Omega 3 Milk',\n","  'Organic Heavy Whipping Cream',\n","  'Mexican Finely Shredded Cheese',\n","  'Pinto Beans No Salt Added',\n","  'Organic Chicken Stock',\n","  'Strawberry Lowfat Yogurt',\n","  'Organic Shredded Mozzarella',\n","  'Homemade Pizza Sauce',\n","  'Ready-to-Bake 9 Inch Pie Crusts',\n","  'Natural Mini Pork Pepperoni'],\n"," ['Pink Lady Apples',\n","  'Oranges',\n","  'Clementines',\n","  'Trail Mix',\n","  'Peanut Chocolate Candies',\n","  \"Crunchy Oats 'n Honey Granola Bars\"],\n"," ['Limes',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Jalapeno Potato Chips',\n","  'Coffee Ice Cream',\n","  'Salted Caramel Core Ice Cream',\n","  'Vanilla Ice Cream',\n","  'Cocktail Style Cubes  Spring Water Ice'],\n"," ['Banana',\n","  'Bacon Breakfast Bowl',\n","  'Smoked Turkey Breast',\n","  'Organic Bread with 21 Whole Grains',\n","  'Roma Tomato',\n","  'Sour Cream',\n","  'Unsweetened Iced Coffee',\n","  'Seedless Cucumbers',\n","  'Alpine Spring Water',\n","  'Green Peas',\n","  'Frozen Unsweetened Whole Strawberries',\n","  'Luau BBQ Potato Chips',\n","  'Watermelon Lime Sparkling Mountain Spring Water',\n","  'Hand Sanitizer',\n","  'Fried Chicken',\n","  'Seltzer Water',\n","  'Frozen Mango Chunks',\n","  'No Sugar Added Red Grapefruit in Water',\n","  'Drumstick Vanilla Fudge Frozen Dairy Dessert Cones',\n","  'Roast Beef',\n","  'Fuji Apple Bag',\n","  'Double Chocolate Ice Cream',\n","  'Almond Ice Cream',\n","  'Meatloaf in Gravy',\n","  'Freshly made pasta in a 100% Real Cheddar cheese sauce Macaroni & Cheese',\n","  'Homestyle Meatballs',\n","  'Original Chili Con Carne With Beans',\n","  'Organic Carrots Baby Peeled Prepacked',\n","  'Blueberry Muffins',\n","  'Sweet Kale Chopped Salad',\n","  'Simple Favorites Lasagna with Meat Sauce',\n","  'Flour corn tortillas filled with chicken and vegetables over a bed of rice topped with a Real cheese sauce Chicken Enchiladas'],\n"," ['Honeycrisp Apple',\n","  'French Vanilla Coconut Milk Creamer',\n","  'Almond Breeze Unsweetened Almond Coconut Milk Blend',\n","  'Instant Oatmeal Maple & Brown Sugar',\n","  'Black Beans Reduced Sodium',\n","  'Mild Chunky Salsa',\n","  'Italian Style Smoked Chicken Sausage With Mozzarella Cheese',\n","  'Classic Grilled Salmon',\n","  'Assorted Citrus Flavor Supplement Drops',\n","  'Moisturizing Facial Wash',\n","  'Moisturizing Non-Drying Facial Wash'],\n"," ['Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Red Raspberries',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Bag of Organic Bananas',\n","  '100% Raw Coconut Water',\n","  'Tortillas, Brown Rice',\n","  'Semi-Sweet Chocolate Premium Baking Chips',\n","  'Tempt Unsweetened Original Hemp Milk',\n","  'Organic Creamy Milk Chocolate',\n","  'Madagascar Vanilla Gelato',\n","  'Organic Raw Coconut Butter'],\n"," ['Organic Whole Milk',\n","  'Banana',\n","  'Organic Baby Arugula',\n","  'Organic Strawberries',\n","  'Organic Yams',\n","  'Grated Parmesan',\n","  'Asparagus',\n","  'Hass Avocado',\n","  'Organic Baby Carrots',\n","  'Hummus, Hope, Original Recipe',\n","  'Authentic French Brioche Hamburger Buns',\n","  'Organic Zucchini Squash',\n","  'Mandarin Clementine',\n","  'Organic Plain Greek Whole Milk Yogurt',\n","  'Lemon',\n","  'Organic Gala Apple'],\n"," ['Organic Avocado',\n","  'Organic Tomato Cluster',\n","  'Original Hummus',\n","  'Organic Fresh Basil',\n","  'Vanilla Almond Fit Granola',\n","  'Multi Grain Crispbread'],\n"," ['Organic Baby Arugula',\n","  'Strawberries',\n","  'Mini Sweet Peppers',\n","  'Extralean Ground Turkey Breast',\n","  'Shredded Sharp Cheddar Cheese',\n","  'Baby Spinach',\n","  'Smartwater Electrolyte Enhanced Water'],\n"," ['Banana',\n","  'Fresh Cauliflower',\n","  'Classic Mild Cheddar Macaroni & Cheese',\n","  'Orange Bell Pepper',\n","  \"Pirate's Booty Aged White Cheddar Baked Rice and Corn Puffs\",\n","  'Cantaloupe',\n","  '100% Whole Wheat Bread',\n","  'Vanilla Almond Breeze',\n","  'YoKids Blueberry & Strawberry/Vanilla Yogurt',\n","  'Vitamin D Organic Whole Milk',\n","  'Whole Grain Cheddar Baked Goldfish Crackers',\n","  'Orange Sparkling Water',\n","  'Honey Bunches of Oats Honey Roasted Cereal',\n","  'Honey Maid Graham Crackers',\n","  'Unbleached All-Purpose Flour',\n","  'Vanilla Yogurt Raisins Halloween Mini-Snacks',\n","  'Nutri-Grain Soft Baked Strawberry Cereal Breakfast Bars',\n","  'Rice Express Fresh Steamed Sticky White Rice',\n","  'Natural Medium Cheddar Cheese Block',\n","  'Creamy White Cheddar Cheese Wedges',\n","  'No Salt Cashews',\n","  'Broccoli Florets Steamers',\n","  'Whole Grain White Corn Salted Tortilla Chips',\n","  'Original Pretzel Thins',\n","  'Table Water Crackers with Cracked Pepper',\n","  'Cheese Pizza',\n","  'Rigatoni',\n","  'Lean Sweet Italian Turkey Sausage'],\n"," ['Scoops! Tortilla Chips',\n","  'Basil',\n","  'Original Orange Juice',\n","  'Mild Chunky Salsa'],\n"," ['Banana',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Boneless Skinless Chicken Breasts',\n","  'Spicy Salmon Avocado Roll',\n","  'Chocolate Protein Soy & Dairy Protein Shake',\n","  'Original Veggie Straws',\n","  'Mixed Grapes',\n","  'Original BBQ Sauce'],\n"," ['Collard Greens',\n","  'Organic Zucchini',\n","  'Organic Black Beans',\n","  'Organic Hothouse Cucumbers',\n","  'Large Lemon',\n","  'Organic Baby Spinach Salad',\n","  'Original Hummus',\n","  'Organic Free Range Chicken Broth',\n","  'Unsalted Pure Irish Butter',\n","  'Basil Pesto',\n","  'Marinara Sauce',\n","  'Organic Whole Grassmilk Milk',\n","  'Fresh Medium Salsa',\n","  'Sour Cream',\n","  'Organic Hazelnut Spread',\n","  'Broccoli Florets',\n","  'Goodness Grapeness Organic Juice Drink',\n","  'Appley Ever After Organic Juice Drink',\n","  'Organic Promise Strawberry Fields Cereal',\n","  'Canola Oil',\n","  'European Cucumber',\n","  'Carrot And Celery Sticks',\n","  'Yellow Straightneck Squash',\n","  'Dressing, Jersey Sweet Onion, Calorie Free',\n","  'Orignial Recipe Chocolate Pudding',\n","  'Organic Shredded Mozzarella',\n","  'Unsweetened Whole Milk Strawberry Yogurt',\n","  'Organic Roasted Seaweed Snacks Teriyaki',\n","  'Whole Milk Greek Blended Vanilla Bean Yogurt',\n","  'Heart to Heart Organic Oat Flakes & Blueberry Clusters Cereal',\n","  'Waffles, Sweet Belgian, Vanilla',\n","  'Lafayette Butter Lettuce & Radicchio Salad Blend',\n","  'Sweetfire Beets',\n","  'Organic Hearts Of Palm',\n","  'Snackimals Vanilla Blast Cereal'],\n"," ['Organic Whole Milk',\n","  'Organic Strawberries',\n","  'Organic Baby Broccoli',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Cheese Ravioli'],\n"," ['Organic Whole Milk',\n","  '85% Lean Ground Beef',\n","  'Organic Strawberries',\n","  'Seedless Red Grapes',\n","  'Organic Granny Smith Apple',\n","  'Organic Cucumber',\n","  'Organic Creamy Peanut Butter',\n","  'Organic Low Sodium Chicken Broth',\n","  'Organic Thousand Island Dressing',\n","  'Broccoli Crown',\n","  'Sourdough Bread',\n","  'Red Vine Tomato',\n","  'Sweet Potato Fries with Sea Salt',\n","  'Kefir Cultured Strawberry Milk Drink',\n","  'Tomato Ketchup',\n","  'Emmentaler Swiss Slices',\n","  'Organic Cinnamon Crunch Cereal',\n","  'Pita Chips Simply Naked',\n","  'Original Veggie Straws',\n","  'Green Peas',\n","  'Cream Cheese',\n","  'Organic White English Muffins',\n","  'Organic Bagged Carrots',\n","  'Oyster Crackers'],\n"," ['Select-A-Size Paper Towels, White, 2 Huge Rolls = 5 Regular Rolls  Towels/Napkins',\n","  'Ultra  April Fresh Scent Liquid Fabric Softener',\n","  'Glass Cleaner',\n","  'Ground Black Pepper',\n","  '13 Gallon Tall Drawstring Kitchen Bags',\n","  'Darks Liquid Laundry Detergent',\n","  'Original Liquid Laundry Detergent',\n","  'Stain Fighter & Color Booster Original',\n","  'Power & Free Toilet Bowl Cleaner with Hydrogen Peroxide',\n","  'Facial Tissue Family Size',\n","  'Jet-Dry Original Rinse Aid',\n","  'Fabric Softener Dryer Sheet Outdoor Fresh 240CT Fabric Enhancers'],\n"," ['April Fresh Liquid Fabric Softener'],\n"," ['Banana',\n","  'Organic Avocado',\n","  'Half & Half',\n","  'Strawberries',\n","  'Red Raspberries',\n","  'Unsweetened Blackberry Water',\n","  'Uncured Hickory Smoked Sunday Bacon',\n","  'Organic Cucumber',\n","  'California Sourdough Bread',\n","  'Organic Navel Orange',\n","  'Icelandic Style Fat Free Plain Yogurt',\n","  'Organic Penne Rigate',\n","  'Marinara Sauce',\n","  'Enriched Vanilla Rice Drink',\n","  'Organic Romaine',\n","  'Organic Sour Cream',\n","  'Organic Capellini',\n","  'Unsweetened Vanilla Almond Milk',\n","  'Chopped Walnuts',\n","  'Salt & Pepper Krinkle Chips',\n","  'Gluten and Dairy Free Rice Macaroni and Cheeze',\n","  'Spicy Black Bean & Kale Organic Soup',\n","  'Thick & Crispy Tortilla Chips',\n","  'Plain Bagels',\n","  'Organic Sparkling Cider',\n","  'Goat Cheese Log',\n","  'Medium Roast Ground Coffee',\n","  'Xylitol Sweetener',\n","  'Strawberry Lemonade Frozen Pops',\n","  'Vegan Margherita Pizza With Daiya Cheeze',\n","  'Sprouted Wheat Cinnamon Raisin Bagels',\n","  'Coconut Milk Vanilla Bean Frozen Dessert',\n","  'Beef Brisket Flat Cut',\n","  'Medium Roast Decaf Ground Coffee',\n","  'Madagascar Vanilla Ice Cream',\n","  'French Baguettes, Take & Bake, Twin Pack',\n","  'Tikka Masala Mild Indian Simmer Sauce'],\n"," [\"Organic D'Anjou Pears\",\n","  'Organic Baby Spinach',\n","  'Organic Strawberries',\n","  'Organic Thompson Seedless Raisins',\n","  'Bag of Organic Bananas',\n","  'Organic Unsalted Butter',\n","  'Organic Whole String Cheese',\n","  'Uncured Genoa Salami',\n","  'Cantaloupe',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Creamy Deluxe Shells & Real Aged Cheddar Sauce',\n","  'Total Greek Strained Yogurt',\n","  'Milk, Organic, Vitamin D',\n","  '4X Ultra Concentrated Natural Laundry Detergent, Free & Clear',\n","  'Dark Chocolate & Oats Granola Cookies'],\n"," ['Organic Chicken Strips',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Spring Mix',\n","  'Eggs, Cheese & Turkey Sausage Breakfast Burrito',\n","  'Organic Cheese Frozen Pizza',\n","  'Light & Lean Pasta & Veggie Bowl',\n","  'Gluten Free Organic Soyrizo',\n","  'Veggie  Breakfast Patties',\n","  'House Napa Cabbage'],\n"," ['Organic Cilantro',\n","  'Organic Strawberries',\n","  'Boneless Skinless Chicken Breasts',\n","  'Medium Navel Orange',\n","  'Sonoma Traditional Flour Tortillas 10 Count',\n","  'Limes',\n","  'Organic White Onions',\n","  'Thick & Crispy Tortilla Chips',\n","  'Roasted Tomato Salsa',\n","  'Gluten Free Organic Taco Sliders Corn Tortillas',\n","  'Head of Lettuce',\n","  'Organic Extra Thick Rolled Oats'],\n"," ['Shelled Pistachios',\n","  'Collard Greens',\n","  'Bag of Organic Bananas',\n","  'Minneola Tangelo',\n","  'Unsalted Cultured Butter',\n","  'Golden Flaxseed'],\n"," [\"Organic D'Anjou Pears\",\n","  'Organic Strawberries',\n","  'Bag of Organic Bananas',\n","  'Organic Unsalted Butter',\n","  'Organic Long Grain White Rice',\n","  'Organic Reduced Fat Milk',\n","  'Organic Whole String Cheese',\n","  'Extra Virgin Olive Oil',\n","  'Organic Garbanzo Beans',\n","  'Organic Vanilla Almond Milk',\n","  'Organic Edamame',\n","  'Organic Gala Apples, Bag',\n","  'Organic Original Almond Milk',\n","  'Dark Sweet Cherries',\n","  'Certified Compostable Large Baking Cups'],\n"," ['Unsweetened Almondmilk',\n","  'Organic Zucchini',\n","  'Bag of Organic Bananas',\n","  'Sweet Italian Chicken Sausage',\n","  'Large Grapefruit',\n","  '100% Carrot Juice',\n","  'Steel Cut Irish Oatmeal',\n","  'Oscillo Oscillococcinum Quick-Dissolving Pellets'],\n"," ['Raspberry Lemonade',\n","  'Ham & American Funpack Lunchable',\n","  'Lunchables Lunch Combinations Pepperoni & Mozzarella',\n","  'Ham & Cheddar Lunchable',\n","  'Chocolate Peanut Butter Nutrition Bar',\n","  'Lemon Lime Soda',\n","  'Whole Grain White Sesame Seed Hamburger Buns',\n","  'Spaghetti with Meatballs'],\n"," ['Granny Smith Apples',\n","  'Blueberries',\n","  'Large Lemon',\n","  'Organic Cucumber',\n","  'Artisan Sausage Pineapple Uncured Bacon Hardwood Smoked with Vermont Maple Syrup'],\n"," ['Organic Avocado',\n","  'Lime Sparkling Water',\n","  'Sensitive Toilet Paper',\n","  'Olive Tapenade Hummus',\n","  'Spring Water',\n","  'Chunky Medium Salsa',\n","  'Lightly Salted Rice Cakes',\n","  'Organic Alfalfa Sprouts',\n","  'Total Greek Strained Yogurt',\n","  'Original Baked  Potato Chips',\n","  'Sugar Free Spearmint Gum Value Pack',\n","  'Pale Ale Beer',\n","  'Tequila Blanco'],\n"," ['Organic Zucchini',\n","  'Organic Garlic',\n","  'Organic Lemon',\n","  'Calcium Enriched 100% Lactose Free Fat Free Milk',\n","  'Organic White Onions',\n","  'Green Peas No Salt Added',\n","  'Spaghetti Squash',\n","  'Organic Russet Potato Bag',\n","  'Refined Coconut Oil',\n","  'Organic Du Puy Lentils'],\n"," ['Original Chicken Patties',\n","  'Organic Dark Chocolate Peanut Butter Cups',\n","  'Sliced White Mushrooms',\n","  'Light Multi-Grain English Muffins',\n","  'All Natural Marinara Pasta Sauce',\n","  'Roasted Pine Nut Hummus',\n","  'Craveables Four Cheese Pizza',\n","  'Pizza Poppers Uncured Pepperoni',\n","  'Reduced Fat Pepperoni Pizza Frozen Sandwiches',\n","  'White meat chicken, shredded cabbage, julienne yellow carrots and spicy red coconut flavored curry Thai-Style Chicken Spring Rolls',\n","  'Simple Favorites Five Cheese Rigatoni',\n","  'Soft Eating Strawberry Flavored Licorice',\n","  'Delights Turkey Sausage, Egg Whites & Cheese Croissant',\n","  'Bold & Crispy Zesty Twirls',\n","  'Reduced Fat Shredded Mozzarella Cheese',\n","  'Sausage  Links'],\n"," ['Birthday Cake Light Ice Cream',\n","  'Organic Hass Avocado',\n","  'Italian Sparkling Mineral Water',\n","  'Gelatin Free Snacks Natural Orange Gels',\n","  'Macaroni & Cheese',\n","  'Reduced Fat Chocolate Milk',\n","  'Total 0% Blueberry Acai Greek Yogurt',\n","  'Mango Sorbet Pops',\n","  'Water Cucumber Pineapple Organic Fruit & Vegetable Juice Drink',\n","  '100% Guava Juice'],\n"," ['Organic Whole Milk',\n","  'Roasted Turkey Breast',\n","  'Green Tea With Ginseng and Honey',\n","  'Spicy Salmon Avocado Roll',\n","  'Organic Cinnamon Crunch Cereal',\n","  \"Organic Honey Nut O's Cereal\",\n","  'Crackers Cheddar Bunnies Snack Packs',\n","  'Roasted Salted Cashews',\n","  'Laundry Liquid Grapefruit Seed & Citrus Extract',\n","  'Honey Snack Packs Bunny Grahams'],\n"," ['Organic Large Extra Fancy Fuji Apple',\n","  'Organic Avocado',\n","  'Organic Strawberries',\n","  'Organic AppleApple',\n","  'Yellow Onions',\n","  'Red Peppers',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Large Lemon',\n","  'Organic Cucumber',\n","  'Bunched Cilantro',\n","  'Gogo Squeez Organic Apple Strawberry Applesauce on the Go',\n","  'Organic Raspberries',\n","  'Limes',\n","  'Lime Sparkling Water',\n","  'Lemon Hummus',\n","  'No Salt Added Black Beans',\n","  'Blackberries',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Baby Spinach',\n","  'Kids Organic Chocolate Chip ZBars',\n","  'Colby Cheese Sticks',\n","  'Organic Light in Sodium Lentil Vegetable Soup',\n","  'Organic Bunny Fruit Snacks Berry Patch',\n","  'Orange Sparkling Water',\n","  'Thin Crust Pepperoni Pizza',\n","  'Organic Cheese Frozen Pizza',\n","  'Crispy Wheat, Crackers',\n","  'Organic Soups Alphabet Fat Free',\n","  'Gluten-Free Pancake Mix',\n","  'Garlic Couscous',\n","  'Organic Pear Juice',\n","  '100% Whole Wheat Farfalle No. 87',\n","  'Pitted Prunes'],\n"," ['Roma Tomato',\n","  'Mini Cucumbers',\n","  'Classic Roast Instant Coffee',\n","  'Fresh Mint Toothpaste'],\n"," ['Strawberries',\n","  'Lemonade',\n","  'Uncured Genoa Salami',\n","  '24/7 Performance Cat Litter',\n","  'Avocado',\n","  'Baby Carrots',\n","  'Snacks Mango',\n","  'Cage Free Grade A Large Brown Eggs',\n","  'Naturals Savory Turkey Breakfast Sausage',\n","  'Baby Spinach Salad',\n","  'Pro-Strength Hair Clog Eliminator With Clorox',\n","  'Multi-Purpose Solution'],\n"," ['Spring Water',\n","  'Cucumber Kirby',\n","  'Organic Lightly Salted Brown Rice Cakes',\n","  'NUTrition Wholesome Nut Mix',\n","  'Turkey Pepperoni',\n","  'Little Snugglers Jumbo Pack Size 2 Disney Diapers - 36 CT',\n","  'Lemon Juice',\n","  'Synergy Organic Kombucha Gingerberry',\n","  'Vanilla Crisp Energy Bar'],\n"," ['Organic Baby Spinach',\n","  'Organic Blueberries',\n","  'Organic Celery',\n","  'Organic Carrot Bunch',\n","  'Broccoli Crown',\n","  '100% Whole Wheat Bread',\n","  'Organic White Cheddar Popcorn',\n","  'Large Grapefruit',\n","  'Organic Green Cabbage',\n","  'Organic Rolled Oats',\n","  'Organic Large Green Asparagus',\n","  'Bar, Toffee & Almonds in Milk Chocolate',\n","  'Pico De Gallo',\n","  'Organic Brussel Sprouts',\n","  'Compostable Forks',\n","  'Purple Sweet Potato (Yam)'],\n"," ['Banana',\n","  'Boneless Skinless Chicken Breast',\n","  'Organic Large Grade A Brown Eggs',\n","  'Red Onion',\n","  'Corn Maize Tortillas',\n","  'Unsweetened Vanilla Almond Milk',\n","  'Honey Wheat Bread',\n","  'Provolone Slices',\n","  'Mozzarella & Provolone Shredded Cheese',\n","  'Pinto Beans',\n","  'Calcium Plus Vitamin D Vegetable Oil Spread',\n","  'Cashews',\n","  'Original Cat Chow Naturals Plus Vitamins & Minerals Cat Food'],\n"," ['Organic Whole Milk',\n","  'Bartlett Pears',\n","  'Banana',\n","  'Fresh Cauliflower',\n","  'Organic Raspberry Lowfat Yogurt',\n","  'Yogurt, Lowfat, Strawberry',\n","  'Organic Peach Lowfat Yogurt',\n","  'Organic Vegetable Broth',\n","  'Organic Extra Firm Tofu',\n","  'Broccoli Crown',\n","  'Sparkling Lemon Water',\n","  'Vanilla Almond Breeze',\n","  'Garlic Hummus',\n","  'Organic Kiwi',\n","  'Lowfat Vanilla Yogurt',\n","  'Organic Garbanzo Beans No Salt Added',\n","  'Cucumber Kirby',\n","  'Organic Spring Mix',\n","  'Soft Potato Bread',\n","  'Organic Creamy Tomato Basil Soup',\n","  'Chopped Spinach',\n","  'Air Chilled Breaded Chicken Breast Nuggets',\n","  'Organic Lowfat Creamy Australian Style Orange Passion Fruit Yogurt',\n","  'Organic Fillo Dough'],\n"," ['Sour Batard',\n","  'Mediterranean Mint Gelato',\n","  'Organic Italian Parsley Bunch',\n","  'Non Fat Raspberry Yogurt',\n","  'Tofu Miso Ramen',\n","  'Red Miso Soup'],\n"," ['Organic Extra Virgin Olive Oil', 'Chunky Peanut Butter'],\n"," ['Organic Whole Milk',\n","  'Organic Roasted Turkey Breast',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Organic Carrot Bunch',\n","  'Organic Vanilla Extract',\n","  'Organic Whole Wheat Bread',\n","  'Organic Green Seedless Grapes',\n","  'Uncured Genoa Salami',\n","  'Organic Plain Whole Milk Yogurt',\n","  'Raisin Bran Cereal',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Organic Mango Chunks',\n","  'Organic Turkey Bacon',\n","  'Organic Stringles Mozzarella String Cheese',\n","  \"Organic Honey Nut O's Cereal\",\n","  'Cheese Puffs Original',\n","  'Organic Original Almond Milk',\n","  'Mighty 4 Kale, Strawberry, Amaranth & Greek Yogurt Tots Snack',\n","  'Natural Mini Pork Pepperoni',\n","  'Kombucha, Organic Raw, Citrus',\n","  'White Cheddar Snack Crackers Cheddar Bunnies',\n","  'Super Morning Organic Apples, Cinnamon, Yogurt & Oats + Super Chia Snack',\n","  'Organic Superfoods Morning Banana, Blueberry, Yogurt & Oats Breakfast Blend Snack'],\n"," ['Banana',\n","  'Organic Baby Spinach',\n","  'Organic Zucchini',\n","  'Organic Baby Spring Mix',\n","  'Organic Ginger Root',\n","  'Green Onions',\n","  'Beyond Beef Beefy Crumble',\n","  'Tomato Kumato',\n","  'Yellow Straightneck Squash',\n","  'Green Cabbage',\n","  'The Ultimate Beefless Ground Gluten Free',\n","  'Ezekiel 4:9 Flax Sprouted Grain Bread'],\n"," ['Banana',\n","  'Half & Half',\n","  'Seedless Red Grapes',\n","  'Organic Apple Juice',\n","  'Milk, Reduced Fat, 2% Milkfat',\n","  'Fruit & Nutty Almonds Raisins Cranberries Pecans Granola'],\n"," ['Soda',\n","  'Organic Lemonade',\n","  'Romaine Hearts',\n","  'Heavy Whipping Cream',\n","  'Fresh Asparagus',\n","  '100% Tangerine Juice'],\n"," ['Organic Rainbow Chard Vegetable',\n","  'Ataulfo Mango',\n","  'Ripe Large Pitted Olives',\n","  'Salted Butter',\n","  'Pink Lady (Cripps) Apple',\n","  'Active Electrolyte Enhanced Drink Tabs 10 Servings Tri-Berry',\n","  'Thick & Chunky Salsa',\n","  'Orange Seltzer Water'],\n"," ['Diet Coke Soda', 'Sensor 3 Disposable Razors'],\n"," ['Organic Avocado',\n","  'Organic Strawberries',\n","  'Organic Blueberries',\n","  'Organic Cucumber',\n","  'Organic Small Bunch Celery',\n","  'Bunny-Luv Fresh Organic Carrots',\n","  'Organic Raspberries',\n","  'Organic Ginger Root',\n","  'Natural Chicken & Sage Breakfast Sausage',\n","  'Spring Water',\n","  'Natural Spring Water',\n","  'Raw Sauerkraut',\n","  'Organic Red Chard Greens',\n","  'Sparkling Probiotic Drink Mojita Lime Mint Coconut',\n","  'Organic Roasted Dandelion Root Herbal Tea',\n","  'Chai Rooibos Herbal Tea Bags'],\n"," ['Bartlett Pears',\n","  'Organic Baby Arugula',\n","  'Organic Tomato Cluster',\n","  'Rising Crust Pepperoni Pizza',\n","  'Crispy Thin Crust White Pizza',\n","  '4 Cheese Mexican Shredded Cheese'],\n"," ['Banana',\n","  'Honeycrisp Apple',\n","  'Half & Half',\n","  'Organic Blueberry Waffles',\n","  'Fusilli No. 34',\n","  'Original Veggie Straws',\n","  'Salted Tub of Butter',\n","  'Original Hot Sauce',\n","  'Green Peas',\n","  'Salted Butter',\n","  'Four Cheese Thin Crust Pizza',\n","  'Air Chilled Breaded Chicken Breast Nuggets',\n","  'Organic Bagged Carrots',\n","  'Original Rice Pilaf Mix',\n","  'Shells & White Cheddar'],\n"," ['Uncured Hickory Smoked Sunday Bacon',\n","  'Flip™ Low-Fat Almond Coco Loco Lowfat Greek Yogurt',\n","  'Americone Dream® Ice Cream',\n","  'Organic Milk Reduced Fat, 2% Milkfat'],\n"," ['Creamy Almond Butter',\n","  'Tomato Ketchup',\n","  'Frozen Whole Strawberries',\n","  'Half Steam Pan',\n","  'Tri Fun Pack Fruit Loops, Cocoa Krispies; Apple Jacks'],\n"," ['Raspberries',\n","  'Whole Milk Plain Greek Yogurt',\n","  'Non Fat Raspberry Yogurt',\n","  'Icelandic Style Skyr Non-Fat Strained Plain Yogurt',\n","  'Smart Dogs Veggie Hot Dogs'],\n"," ['Orange Bell Pepper',\n","  'Red Peppers',\n","  'Original Hummus',\n","  'Enlightened Organic Raw Kombucha',\n","  'Cage Free Large White Eggs',\n","  'Original Tofurky Deli Slices',\n","  'Hickory Smoked Ultra Thin Deli Slices'],\n"," ['Clementines, Bag',\n","  'Sriracha Chili Sauce',\n","  'Original Style Yoghurt Plain',\n","  'Whole Wheat Pre-Sliced Mini Bagels',\n","  'Natural Pure Sparkling Water',\n","  'Old Fashioned Nutty Chunky Peanut Butter'],\n"," ['Original Whole Fat Lactose Free Milk',\n","  'Caramel & Cheddar Popcorn Mix',\n","  'Tahitian Vanilla Bean Gelato',\n","  'Raspberryes Cream Gelato',\n","  'Caramelized Pecans'],\n"," ['Bag of Organic Bananas',\n","  'Mozzarella String Cheese',\n","  'Sweet & Salty Nut Granola Bars Peanut'],\n"," ['100% Whole Wheat Bread',\n","  'Freshly Grated Cheese, Parmesan',\n","  '100% Natural Spring Water',\n","  '2 % Reduced Fat  Milk',\n","  'Sausage  Links',\n","  'Fresh Burst Antiseptic  Mouthwash',\n","  'Ultra Thin Slices Swiss Cheese',\n","  'Whole Wheat Crackers',\n","  'Whole Wheat Eggo Waffles',\n","  'All Natural Roasted Garlic Pasta Sauce'],\n"," ['Organic Hass Avocado',\n","  'Pure Sparkling Water',\n","  'Organic Lemon',\n","  'Total 0% Greek Yogurt',\n","  'Unsweetened Coconut Water'],\n"," ['Organic Avocado',\n","  'Organic Baby Spinach',\n","  'Shredded Parmesan',\n","  'Organic Hothouse Cucumbers',\n","  'Organic Cucumber',\n","  'Sour Cream & Onion Potato Chips',\n","  'Organic Romaine Lettuce',\n","  'Basil Pesto',\n","  'Organic Vanilla Bean Ice Cream',\n","  'Mild Salsa',\n","  'Roma Tomato',\n","  'Garlic Hummus',\n","  'Thin Spaghetti No 11',\n","  'Raisin Bran Cereal',\n","  'Fat Free Skim Milk',\n","  'Rustic Baguette',\n","  'Sparkling Pomegranate',\n","  'Hickory Smoked Ultra Thin Deli Slices',\n","  'Natural Ginger Ale',\n","  '9\\\\\" Pumpkin Pie'],\n"," ['Indian Paneer Tikka',\n","  'Orange Bell Pepper',\n","  'Organic Fuji Apple',\n","  'Natural Chunky Peanut Butter',\n","  'Organic Creamy Tomato Soup',\n","  'Calcium Pulp Free Orange Juice',\n","  'Tomato Yellow Cherry',\n","  'Unsalted Tops Saltine Crackers',\n","  'Enchilada Black Bean Vegetable',\n","  'Hint of Lime Flavored Tortilla Chips',\n","  'Vanilla Light & Fit Greek Yogurt',\n","  'Baby Spinach Salad',\n","  '24/7 Performance Light Weight Cat Litter',\n","  'Fat Free Whipped Topping',\n","  'Traditional Chicken Noodle 99% Fat Free Soup',\n","  'Reduced Sodium Chicken Noodle Soup',\n","  'Spinach Souffle',\n","  'Creamer',\n","  'Lower Sugar Instant Oatmeal  Variety',\n","  'Pronamel Daily Protection - Mint Essence',\n","  'Plus Lotion Facial Tissues',\n","  'Repair & Protect Toothpaste for Sensitive Teeth',\n","  'Chocolate Chip Cookie Dough Frozen Greek Yogurt Bars',\n","  'Organic Low Sodium Chunky Tomato Bisque Soup',\n","  'Crunchy Peanut Butter Granola',\n","  'Tasty Treasures Cat Food Variety Pack',\n","  'Tryst Black Bean Hummus',\n","  'Zero Coke Soda Mini Bottles',\n","  'Light Vanilla Soymilk'],\n"," ['Nutter Butter Peanut Butter Bites Sandwich Cookies',\n","  'Tall Kitchen Drawstring Trash Bags with Reinforcing Bands'],\n"," ['Pure & Natural Sour Cream',\n","  '100% Whole Wheat Bread',\n","  'Dark Red Kidney Beans',\n","  'Green Onions',\n","  'Jumbo Grade A Eggs',\n","  'Red Onion',\n","  'Coconut Milk',\n","  'Organic Fresh Basil',\n","  'Tomato Paste',\n","  'Creamy Peanut Butter',\n","  'Crushed Tomatoes',\n","  'Sweet Cream Salted Butter',\n","  'Organic Lime',\n","  'Half And Half',\n","  '2% Milk',\n","  'Girl Scouts Thin Mints Coffee Creamer',\n","  'Organic Chai Tea Latte Concentrate',\n","  'Raisin Bran Crunch Cereal',\n","  'Chow Mein Stir-Fry Noodles',\n","  'Pure Sesame Oil',\n","  'Ginger Root',\n","  'Crunchy Taco Shells',\n","  'Split Green Peas',\n","  'Unsalted Chicken Cooking Stock',\n","  'Boneless Ham Steak',\n","  'Whole Peeled Tomatoes',\n","  'Chopped Green Chiles',\n","  'Lightly Salted Dry Roasted Peanuts'],\n"," ['Smartwater',\n","  'Organic Garlic',\n","  'Organic Ginger Root',\n","  'Peanut Butter Chocolate Chip Macrobar',\n","  'Coconut Water Organic',\n","  'Organic Sweet Onion',\n","  'Organic Chicken Broth',\n","  'Nacho Grain-Free Tortilla Chips',\n","  'Kombucha Seasonal Plum',\n","  \"Baby's Vitamin D3\"],\n"," ['Raspberry Lemonade',\n","  'Organic Baby Spinach',\n","  'No Pulp Calcium & Vitamin D Pure Orange Juice',\n","  'Annie Peely Fruit 4.5 Z',\n","  'All Natural New England Style Clam Chowder Soup',\n","  'Vitamin D Milk'],\n"," ['Organic Hothouse Cucumbers',\n","  'Organic Unsweetened Almond Milk',\n","  '100% Raw Coconut Water',\n","  'Sparkling Natural Mineral Water',\n","  'Organic AppleBerry Applesauce on the Go',\n","  'Organic Wild Blueberry Bars'],\n"," ['Original Hummus',\n","  'Red Onion',\n","  'Classic Wheat Bread',\n","  'Taboule Salad',\n","  'European Cucumber',\n","  \"Glory's Sweet Cherry Tomatoes\",\n","  'Organic Low Sodium Chunky Tomato Bisque Soup',\n","  'Ultra Thin Cheese Pizza',\n","  'Quarted Artichoke Hearts',\n","  'BelVita Cranberry Orange Breakfast Bar',\n","  'Crumbled Feta Cheese, Fat Free',\n","  'Vanilla Yogurt Raisins',\n","  '1 % Lowfat Milk',\n","  'Leafy Green Romaine Lettuce'],\n"," ['Organic Yellow Onion',\n","  'Organic Hot Salsa',\n","  'Tomato Paste',\n","  'Organic Bell Pepper',\n","  'Organic Spaghetti Squash',\n","  'Fajita Seasoning',\n","  'Organic Chicken Broth',\n","  'Organic Ground Fennel',\n","  'Seasoning, Italian',\n","  'Mild Guacamole'],\n"," ['Organic Fuji Apple',\n","  'Cultured Low Fat Buttermilk',\n","  'Large Grade AA Organic Eggs',\n","  'Raisins',\n","  'All Purpose Flour',\n","  'Coke Zero',\n","  'Pure Baking Soda',\n","  'Kosher Reduced Fat Beef Franks',\n","  'Petite Whole Green Beans',\n","  'Tomato Basil Garlic Italian Sauce',\n","  'Organic Sweet Peas'],\n"," ['Organic Green Leaf Lettuce',\n","  '1% Low Fat Milk',\n","  'Healthy White Clean Mint Vibrant Anticavity Mouthrinse',\n","  'Reduced Fat Creamy Peanut Butter Spread'],\n"," ['Strawberries',\n","  'Organic AppleApple',\n","  'Organic Chicken Strips',\n","  'Butternut Squash',\n","  'Organic Zucchini Spirals',\n","  'Cheese Pizza Snacks',\n","  \"Organic Cookies 'n Cream Ice Cream\",\n","  'Organic Macaroni Shells & Real Aged Cheddar',\n","  'Prosciutto, Americano',\n","  'Wild Berry Smoothie',\n","  'Mini Blueberry Muffins',\n","  'Organic Ice Cream Chocolate Chocolate Chip',\n","  'Dairy Free Gluten Free Chocolate Almond Butter Miracle Tart',\n","  'Apple & Maple Chicken Mini Links'],\n"," ['Organic Black Beans',\n","  'Bean & Cheese Burrito',\n","  'Leaf Spinach',\n","  'Tall Kitchen Bag With Febreze Odor Shield',\n","  'Garlic Salt',\n","  'Organic Whole Ground Golden Flaxseed Meal'],\n"," ['Strawberries',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Organic Reduced Fat 2% Milk',\n","  'Tarragon Chicken Salad'],\n"," ['Honeycrisp Apple',\n","  'Organic Avocado',\n","  'Original Coconut Milk Creamer',\n","  'Organic Garlic',\n","  'Michigan Organic Kale',\n","  'Strawberry Preserves',\n","  'Organic Broccoli',\n","  'Carrots',\n","  'Vine Ripe Tomatoes',\n","  'Pineapple Chunks',\n","  'English Seedless Cucumber',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Organic Whole Strawberries',\n","  'Unsweetened Cashew Milk',\n","  'Edamame In Pod',\n","  \"Chik'n Nuggets\",\n","  'Crunchy Chocolate Chip Chia Granola & Seed Bars',\n","  'Wild Albacore Tuna No Salt Added'],\n"," ['Organic Baby Spinach',\n","  'Hass Avocados',\n","  'Spring Water',\n","  'Cauliflower Florets',\n","  'Organic Cooked Beets'],\n"," ['Pure Leaf Sweet Iced Tea'],\n"," ['Organic Smooth Move Chamomile Laxative Tea Bags',\n","  'Herbal Laxative, Tabs',\n","  'Castor Oil',\n","  'Mighty 4 Blueberry with Carrot Essential Nutrition Bar',\n","  'Pumpkin Banana Mighty 4 Bars'],\n"," ['Organic Raw Kombucha Gingerade',\n","  'Organic Sour Cream',\n","  'Organic Dill',\n","  'Organic Romaine Leaf',\n","  'Organic Whipping Cream',\n","  'Organic Milk Chocolate Peanut Butter Cups',\n","  'Apricot Mango Juice',\n","  'Mascarpone',\n","  'Mighty Dry Hard Cider',\n","  'Yogurt, Organic, Lowfat, Plain',\n","  'Coconut Bliss Lunaberry Swirl',\n","  'Organic Coconut Bliss Cherry Amaretto Frozen Dessert'],\n"," ['Soda',\n","  'Organic Half & Half',\n","  'Jalapeno Peppers',\n","  'Organic Strawberries',\n","  'Bosc Pear',\n","  'Organic Fuji Apple',\n","  'Honey Yoghurt',\n","  'Green Onions',\n","  'Romaine Hearts',\n","  'Vine Ripe Tomatoes',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Honey Nut Chex Cereal',\n","  'Red Onion',\n","  'White Corn Tortillas',\n","  'Flip™ Low-Fat Almond Coco Loco Lowfat Greek Yogurt',\n","  'Original Nooks & Crannies English Muffins',\n","  'Biscuits for Dogs less than 20 lbs',\n","  'Sausage, Egg, & Cheese Biscuit',\n","  'Italian Dry Salame',\n","  'Pure Irish Butter',\n","  'Cream Soda',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Dry Roasted Almonds',\n","  'Double Stuf Oreo Sandwich Cookies',\n","  'Unsweetened Premium Iced Tea',\n","  'Large Pitted California Ripe Olives',\n","  'Medium Cheddar Cheese',\n","  'Gluten Free Chocolate Chip Cookies',\n","  'Natural Shredded Mexican Style Four Cheese',\n","  'Tomato Yellow Cherry',\n","  'Lemon Yogurt',\n","  'Dressing, Jersey Sweet Onion, Calorie Free',\n","  'Pretzel Rods',\n","  '2% Chocolate Milk',\n","  'Ultra-Filtered Whole Milk',\n","  'Small MaroSnacks Dog Snacks',\n","  'Oreo Cookies and Cream Frozen Dairy Dessert',\n","  'Oreo Cookies & Cream Bars',\n","  'Pure & Natural Light Sour Cream',\n","  'Sweet & Salty Mountain Mix',\n","  'Traditional Snack Mix',\n","  'P3 Portable Protein Pack Chicken Cheddar Peanuts',\n","  'Genoa Salame with White Cheddar Cheese & Toasted Rounds Small Plates',\n","  'Albacore Tuna in Water Lunch To-Go Mix Your Own Kit',\n","  'Natural Muenster Cheese',\n","  'Creamy Queso Fresco Chipotle',\n","  'Sriracha Potato Chips',\n","  'Little Gem Lettuce Hearts',\n","  'Sliced California Olives',\n","  'Vegetable Oil, Pure & 100% Natural',\n","  'Thick Cut Bacon',\n","  'Deli-Sliced Hot Jalapeño Peppers',\n","  'Sliced Jalapenos in Escabeche',\n","  'Parmesan Grated Cheese',\n","  'Sweet Peas Steamers'],\n"," ['Organic Half & Half',\n","  'Total 0% with Honey Nonfat Greek Strained Yogurt',\n","  'Total 2% All Natural Plain Greek Yogurt',\n","  'Strawberry on the Bottom Nonfat Greek Yogurt',\n","  'Lemon Blended Non-Fat Greek Yogurt',\n","  'Low-Fat Mango on the Bottom Greek Yogurt',\n","  'Peach on the Bottom Nonfat Greek Yogurt',\n","  'Blueberry on the Bottom Nonfat Greek Yogurt',\n","  'Coconut Blended Greek Yogurt'],\n"," ['Organic Diced Tomatoes',\n","  'Asparagus',\n","  'Peanut Butter Bar',\n","  'Organic Worcestershire',\n","  'Organic Balance Vanilla Bean Protein Shake',\n","  'Carob Chip'],\n"," ['Bartlett Pears',\n","  'Organic Zucchini',\n","  'Bag of Organic Bananas',\n","  'Clementines',\n","  'Organic Raspberries',\n","  'Naturals Chicken Nuggets',\n","  'Organic Mango',\n","  'Zero Calorie Sweetener',\n","  'Organic Whole Milk with DHA Omega-3',\n","  \"Crunchy Oats N' Honey Granola Bars\",\n","  '1 Liter',\n","  'Clasico Instant Coffee',\n","  'Lemon Dishwasher Detergent + Clorox Stain Fighting',\n","  'Clamato Tomato Cocktail',\n","  'Tahoe White Chocolate Macadamia Cookies',\n","  'Chessmen Cookies'],\n"," ['Organic Rooibos Tea',\n","  'Earl Grey Black Tea Bags',\n","  'Best Cinnamon Bread',\n","  'Tropical Green Tea Bags'],\n"," ['Organic Hot Salsa', 'Fresh Salsa'],\n"," ['Raspberries', 'Organic Strawberries', 'Organic Blueberries'],\n"," ['Organic Whole Milk',\n","  'Raspberries',\n","  'Clementines',\n","  'Organic Baby Carrots',\n","  'Organic Tortilla Chips',\n","  'Shredded Mexican Blend Cheese',\n","  'Organic Spring Mix',\n","  'Pure Clover Honey',\n","  '8\\\\\" Flour Tortillas De Harina'],\n"," ['YoKids Strawberry Banana/Strawberry Yogurt',\n","  'Half & Half',\n","  '100% Whole Wheat Bread',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Bunched Carrots',\n","  'Milk, Organic, Vitamin D',\n","  'Sliced Sharp Cheddar Cheese',\n","  'Celery Heart',\n","  '100% Natural Diced Tomatoes No Salt Added'],\n"," ['Organic Red Onion', 'Hass Avocado', 'Ataulfo Mango'],\n"," ['Small Hass Avocado',\n","  'Fresh Cauliflower',\n","  'Organic Cucumber',\n","  'Organic Yellow Onion',\n","  'Organic Free Range Chicken Broth',\n","  'Creamy Peanut Butter Dark Roasted',\n","  'Organic Bartlett Pear',\n","  'Organic Red Lentils',\n","  'Organic Lettuce',\n","  \"Raspberry Gluten-Free Figgies And Jammie's Bars\",\n","  'Organic Turbinado, Raw Cane Sugar'],\n"," ['Oven Roasted Turkey Breast',\n","  'Vanilla Unsweetened Almond Milk',\n","  'Reduced Fat 2% Lactose-Free Milk',\n","  'Diet Soda',\n","  'Original Pancakes & Sausage On a Stick',\n","  'Ten Soda',\n","  'Mild Chili Seasoning Mix',\n","  'Coppertop AA Batteries',\n","  'Jumbo Cotton Balls',\n","  'Restoring Anticavity Fluoride Mouthwash, Cool Mint',\n","  'Non-Stick Parchment Paper',\n","  'Greek Yogurt Caesar Kit',\n","  'Texas Toast Seasoned Croutons',\n","  'Original Creole Seasoning',\n","  'Original Bread Sticks with Real Garlic'],\n"," ['Yellow Onions',\n","  'Extra Lean Ground Turkey Breast',\n","  'Turkey',\n","  'Nacho Cheese Tortilla Chips',\n","  'Iced Coffee Lightly Sweet',\n","  'French Roast, Dark Roast K-Cups',\n","  'French Onion Sour Cream Dip',\n","  'Bold Sloppy Joe Sauce'],\n"," ['Organic Blackberries',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Iceberg Lettuce',\n","  'Heavy Whipping Cream',\n","  'Blood Orange Italian Soda',\n","  'Club Soda',\n","  'Mixed Melons',\n","  'New York Cheddar Potato Chips'],\n"," ['SleepGels Nighttime Sleep Aid',\n","  'Basic Dust Clean Living 300 Filtration Level Filter 16 x 20 x 1',\n","  'Southern Style Diced Hash Brown Potatoes',\n","  'Peanut Chocolate Candy'],\n"," ['Strawberries',\n","  'Raspberries',\n","  'Packaged Grape Tomatoes',\n","  'Sugar Snap Peas',\n","  'Organic Baby Carrots',\n","  'Organic Spring Mix',\n","  'Organic Coconut Water',\n","  'Organic Mandarins',\n","  'English Muffins',\n","  'Prosciutto Di Parma'],\n"," ['Fresh Cauliflower',\n","  'Organic Baby Spinach',\n","  'Organic Zucchini',\n","  'Feta Cheese Crumbles',\n","  'Bunched Cilantro',\n","  'Organic Basil',\n","  'Limes',\n","  'Broccoli Crown',\n","  'Carrots',\n","  'Shredded 3 Cheese Blend',\n","  'Russet Potato',\n","  'Four Cheese Pasta Sauce',\n","  'Sweet Onions',\n","  'Beets Bunch',\n","  'Organic Red Grape Tomato Package',\n","  'Pineapple Salsa'],\n"," ['Raspberries',\n","  'Organic Strawberries',\n","  'Organic Red Onion',\n","  'Seedless Red Grapes',\n","  'Organic Hass Avocado',\n","  'Organic Blueberries',\n","  'Bag of Organic Bananas',\n","  'Organic Extra Firm Tofu',\n","  'Shredded Mozzarella',\n","  'Organic Baby Carrots',\n","  'Organic YoKids Smoothie Strawberry Banana Lowfat Yogurt',\n","  'Organic Egg Whites',\n","  'Apples, Kale & Avocados Organic Baby Food',\n","  'Stage 1 Apples & Strawberries Organic Pureed Baby Food',\n","  'Cucumber Kirby',\n","  'Organic Mango Chunks',\n","  'Organic Macaroni Shells & Real Aged Cheddar',\n","  'Organic Stringles Mozzarella String Cheese',\n","  'Organic Spring Mix',\n","  'Black Plum',\n","  'Hommus Classic Original',\n","  'Organic Nonfat Greek Yogurt With Peaches',\n","  'Organic Greek Lowfat Yogurt With Strawberries',\n","  'Premium Healthy Kids No Pulp Orange Juice',\n","  'Gluten Free Nutty Cranberry Maple Granola',\n","  'Organic Broccoli Crown'],\n"," ['Shredded Mild Cheddar Cheese',\n","  'Yellow Onions',\n","  'Coke Classic',\n","  'Chopped Spinach',\n","  'Potato Gnocchi'],\n"," ['Quesadilla Shredded Cheese', 'Toaster Strudel Raspberry Toaster Pastries'],\n"," ['Chicken Bouillon Cubes',\n","  'Flip™ Low-Fat Almond Coco Loco Lowfat Greek Yogurt',\n","  'Homemade Vanilla Ice Cream',\n","  'Flip Peanut Butter Dream Greek Yogurt',\n","  'Flip™ Low-Fat Key Lime Crumble Greek Yogurt',\n","  'Frozen Dairy Dessert Blasts Girl Scouts Thin Mints'],\n"," ['Organic Whole Milk',\n","  'Enlightened Organic Raw Kombucha',\n","  '100% Raw Coconut Water',\n","  'Fat Free Milk'],\n"," ['Banana',\n","  'Organic Avocado',\n","  'Strawberries',\n","  'Large Brown Eggs',\n","  'Organic Fuji Apple',\n","  'Basil Pesto',\n","  'Taco Seasoning',\n","  'Enlighten Mint Organic',\n","  'Classic French White Bread',\n","  'Veggie Burger, Quarter Pound'],\n"," ['Sparkling Water Grapefruit', 'Original Style Yoghurt Plain'],\n"," ['Organic Baby Arugula',\n","  'Organic Baby Spinach',\n","  'Organic Hass Avocado',\n","  'Jalapeno Pepper',\n","  'Heavy Whipping Cream',\n","  'Ground Buffalo',\n","  'Sriracha Mayonnaise',\n","  'Bluebell Dish Soap',\n","  'Mayonnaise, Chipotle',\n","  'Organic Shallot'],\n"," ['Granny Smith Apples',\n","  'Blueberries',\n","  'Garlic',\n","  'Flat Parsley, Bunch',\n","  'Fresh Basil',\n","  'Fennel',\n","  'Country Potato Hamburger Buns',\n","  'Organic Shiitake Mushrooms'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Leek',\n","  'Organic Baby Spinach',\n","  'Organic Coconut Milk',\n","  'Organic Red Onion',\n","  'Sliced Baby Bella Mushrooms',\n","  'Yellow Onions',\n","  'Organic Granny Smith Apple',\n","  'Organic Whole Kernel Sweet Corn No Salt Added',\n","  'Organic Lemon',\n","  'Organic Vegetable Broth',\n","  'Total 2% All Natural Plain Greek Yogurt',\n","  'Asparagus',\n","  'Carrots',\n","  'Organic Romaine',\n","  'Kale Greens',\n","  'Organic Shredded Carrots',\n","  'European Cucumber',\n","  'Tilapia Filet',\n","  'Shelled Edamame',\n","  'Organic SprouTofu Savory Baked Tofu',\n","  'Wild Rice',\n","  'Tomato Basil Sauce',\n","  '93% Ground Beef'],\n"," ['Organic Grade A Large Brown Eggs',\n","  'Blueberry Muffins',\n","  'Pods Ocean Mist Detergent + Stain Remover + Brightener',\n","  'Zen Tea'],\n"," ['Red Peppers',\n","  'Active Dry Yeast',\n","  'Cage Free Large White Eggs',\n","  'Cocoa & Vanilla Bunny Cookies Gluten Free Bunny Cookies Gluten Free',\n","  'Belgian Chocolate Reduced Fat Milk',\n","  'Heirloom Whole Bean Coffee',\n","  'Sausage Buns'],\n"," ['Romaine Lettuce',\n","  'Sour Cream',\n","  'Chopped Garlic',\n","  'Chopped Ginger',\n","  'Flat Parsley, Bunch',\n","  'Organic Butternut Squash',\n","  'Unsalted Chicken Cooking Stock',\n","  'Beets Bunch',\n","  'Whipping Cream Ultra Pasteurized',\n","  'Chicken Base',\n","  'Hot House Seedless Cucumbers',\n","  'Traditional Crumbled Feta Cheese',\n","  'Low Sodium Beef Broth'],\n"," ['Banana',\n","  'Organic Avocado',\n","  'Strawberries',\n","  'Seedless Red Grapes',\n","  'Yellow Onions',\n","  'Large Lemon',\n","  'Organic Cripps Pink Apples',\n","  'Feta Cheese Crumbles',\n","  'Asparagus',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Carrots',\n","  'Organic Kosher Dill Pickles',\n","  'Pitted Dates',\n","  'Ranch Dressing',\n","  'Vanilla 0% Milkfat Yogurt',\n","  'Original Orange Juice',\n","  'Organic Red Grape Tomato Package',\n","  'Parsnip',\n","  'Mild Red Pepper Sauce',\n","  'Gluten Free Sunrise Crunchy Maple Cereal',\n","  'Organic Yellow Mustard'],\n"," ['Heavy Whipping Cream', 'Organic Coconut Oil'],\n"," ['Garlic Parmesan Deli Style Pretzel Crisps',\n","  'Real Bacon Bits',\n","  'Original Restaurant Style Tortilla Chips',\n","  '4 Cheese Mexican Fine Cut Shredded Cheese',\n","  'Classic Ranch Dressing',\n","  'The Original Five Cheese Texas Toast',\n","  'Ground Cayenne Red Pepper'],\n"," ['Natural Spring Water', 'Lemon Bag'],\n"," ['Seedless Red Grapes', 'Organic Broccoli'],\n"," ['Chicken Apple Sausage'],\n"," ['Strawberries',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Roasted Garlic Hummus',\n","  'Supremely Spicy Hummus',\n","  'Disinfectant Spray, Crisp Linen Scent',\n","  'Otria Spinach Artichoke Greek Yogurt Veggie Dip'],\n"," ['Organic Baby Arugula',\n","  'Seedless Red Grapes',\n","  'Yellow Onions',\n","  'Bag of Organic Bananas',\n","  'Organic Cucumber',\n","  'Organic Whole Kernel Sweet Corn No Salt Added',\n","  'Monterey Jack Cheese',\n","  'Asparagus',\n","  'Uncured Genoa Salami',\n","  'Sour Cream',\n","  'Russet Potato',\n","  'Corn Tortillas',\n","  'Chilpotle Peppers in Adobo Sauce',\n","  'Shredded Hash Browns',\n","  'Original Orange Juice',\n","  'New Mexico Taco Skillet Sauce For Chicken',\n","  'Naturals Savory Turkey Breakfast Sausage',\n","  'Uncured Pepperoni'],\n"," ['Sauvignon Blanc',\n","  \"Mixed 12 Pack Lion's Share Ale\",\n","  'India Pale Ale',\n","  'Pinot Noir Wine',\n","  'Sonoma Pinot Noir Wine',\n","  'California Red Velvet Wine'],\n"," ['Banana',\n","  'Black Bean Vegetables Burrito',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Hass Avocado',\n","  'Organic Lemon',\n","  'Coconut Almond Unsweetened Creamer Blend',\n","  'Calm Chamomile Herbal Tea',\n","  'Chocolate Sea Salt',\n","  'Chocolate Peanut Butter',\n","  'Gluten Free Chocolate Chunk Cookie Dough',\n","  'Peanut Butter Egg White Protein Bar'],\n"," ['Whipped Cream Cheese',\n","  'Organic Tomato Cluster',\n","  'Lemon Hummus',\n","  'Organic Green Beans',\n","  'Truffle Mousse',\n","  'Flourless  Sprouted Whole Grain 7-Sprouted Grains English Muffins',\n","  'Vitamin C Rejuvenating Oil-Free Moisturizer',\n","  '100% Juice Medley Of Fruits',\n","  'Organic Fresh Pressed Pure Carrot 100% Juice',\n","  'Kelp Atlantic Kombu',\n","  'Frankincense, 100% Pure, Essential Oils',\n","  'Lemon Verbena Laundry Detergent',\n","  'Jalapeno Chomperz Crunchy Seaweed Chips',\n","  'Organic Cottage Cheese Blueberry Acai Chia',\n","  'Organic Lemon Ginger Flavor Super Shot Probiotic Drink',\n","  'Straightshot Probiotic Oat Drink'],\n"," ['Strawberries',\n","  'Raspberries',\n","  'Bag of Organic Bananas',\n","  'Clementines',\n","  'Fat Free Skim Milk',\n","  'Baby Cucumbers',\n","  'Broccoli Florettes',\n","  \"Danimals Drinkable Yogurt Smoothie Strawberry Explosion & Strikin' Strawberry Kiwi\"],\n"," ['Reduced Fat 2% Milk'],\n"," ['Organic Yellow Squash',\n","  'Papaya',\n","  'Organic Cucumber',\n","  'Probiotic Green Coconut Water'],\n"," ['Jalapeno Peppers',\n","  'Green Bell Pepper',\n","  'Black Beans',\n","  '100% Natural Diced Tomatoes',\n","  'Russet Potato',\n","  'Organic Red Radish, Bunch',\n","  'Organic Apple Sauce',\n","  'Light Sour Cream',\n","  'Tortilla Strips Restaurant Style',\n","  'Lime',\n","  'Pinto Beans',\n","  'C&W Frozen Petite Sweet Corn'],\n"," ['Bag of Organic Bananas',\n","  'Asparagus',\n","  'Roma Tomato',\n","  'Russet Potato',\n","  'Kale Greens',\n","  'Whole Strawberries',\n","  'Dairy Free Mozarella Style Shreds',\n","  'Cage Free Real Egg Product',\n","  'Roast Beef Style Deli Slices'],\n"," ['Bread, Country Buttermilk',\n","  'Spinach',\n","  'Cauliflower',\n","  'Green Onions',\n","  'Extra Firm Tofu',\n","  'Chicken Breast Tenders',\n","  'Banana Chips',\n","  'Pork & Vegetable Dumplings Potstickers',\n","  'Thirsty Ultra Big Roll towel White Vsa'],\n"," ['Organic Strawberries',\n","  'Small Curd Lowfat 2% Milkfat Cottage Cheese',\n","  'Movie Theater Butter Microwave Popcorn',\n","  'Low Sodium Bacon',\n","  'Raisin Bran',\n","  'Uncrustables Peanut Butter & Grape Jelly Sandwich',\n","  'Stir Fry Vegetables',\n","  'Solid Light Tuna In Olive Oil'],\n"," ['Beverage, Love Greens, Chia & Greens, Beet & Ginger'],\n"," ['Organic Raw Cacao Powder'],\n"," ['Antioxidant Infusions Ipanema Pomegranate Beverage',\n","  'Ultra Soft Facial Tissues',\n","  'One Ply Choose A Size Big Roll Paper Towel Rolls',\n","  'Antioxidant Infusions Brasilia Blueberry',\n","  'Antioxidant Infusions Costa Rica Clementine'],\n"," ['Organic Half & Half',\n","  'Organic Grape Tomatoes',\n","  'Organic Avocado',\n","  'Whole Milk',\n","  'Blackberry Cucumber Sparkling Water',\n","  'Corn Maize Tortillas',\n","  'Natural Spring Water',\n","  'Cucumber Kirby',\n","  'Large Grapefruit',\n","  'Pineapple Chunks, Organic, in Their Own Organic Juice',\n","  'Power Blend Superfood Brussels Sprouts, Napa Cabbage, Kohlrabi, Broccoli, Carrots & Kale',\n","  'Oat Flour, Organic'],\n"," ['Yellow Onions',\n","  'Organic Black Beans',\n","  'Organic Blueberries',\n","  'Organic Vegetable Broth',\n","  'Green Bell Pepper',\n","  'Organic Large Brown Eggs',\n","  'Organic Garbanzo Beans',\n","  'Everything Bagel',\n","  'Organic Spring Mix',\n","  'Organic Jalapeno Pepper',\n","  'Tomato Sauce'],\n"," ['Natural Chicken & Maple Breakfast Sausage Patty',\n","  'Organic Sunday Bacon',\n","  'Coffee',\n","  'Gluten Free Supreme Pizza',\n","  'Cheddar Cheezy Mac'],\n"," ['Bananas',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Original Vanilla Nutrition Shake',\n","  'Gala (3 Lb)',\n","  'White Cran-Strawberry Juice Drink',\n","  'Special Dark Miniatures Chocolate Candy'],\n"," ['Banana',\n","  'Orange Bell Pepper',\n","  'Organic Bartlett Pear',\n","  'Strawberry Flavored Organic Z Fruit Rope',\n","  'Roasted Brussel Sprouts',\n","  'Cutlery Apple Green - 8 PK',\n","  'Harvest Berry Chewy Granola Bars'],\n"," ['Pineapple Chunks', 'Frozen Blueberries', 'Raw Shrimp'],\n"," ['Raspberries',\n","  'Spring Water',\n","  '100% Juice',\n","  'Old Fashioned Apple Cider',\n","  'Peaches'],\n"," ['Natural Chunky Peanut Butter',\n","  'Old Fashioned Rolled Oats',\n","  'Diced Tomatoes',\n","  'Roasted Pine Nut Hummus',\n","  'Tomatoes Sauce',\n","  \"Snack'mms Kosher Dill Pickles\",\n","  'Mild Chunky Salsa',\n","  'Healthy Multi Grain Bread',\n","  'Roasted Bell Peppers',\n","  'Mild Enchilada Sauce',\n","  'Italian Kitchen Red Wine Vinegar',\n","  'Red Mild Enchilada Sauce',\n","  'Chunky Healthy Request Old Fashioned Vegetable Beef',\n","  'Pop-Tarts Unfrosted Strawberry',\n","  'Quartered & Marinated Artichoke Hearts',\n","  'Lemongrass & Chili Instant Rice Noodle Soup'],\n"," ['Berry Medley'],\n"," ['Organic Baby Arugula',\n","  'Grade A Extra Large Eggs',\n","  'Green Onions',\n","  'Roma Tomato',\n","  'Shredded Parmesan Cheese'],\n"," ['Granny Smith Apples',\n","  'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry',\n","  'Bag of Organic Bananas',\n","  'Organic Vanilla Almond Milk',\n","  'Stringless Sugar Snap Peas',\n","  'Organic Sweet Pepper Medley'],\n"," ['Naturals Flushable Moist Refill Wipes'],\n"," ['Organic American Cheese Singles',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Unsalted Butter',\n","  'Medium Navel Orange',\n","  'Asparagus',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Whole Almonds',\n","  'Flourless  Sprouted Whole Grain 7-Sprouted Grains English Muffins',\n","  'Light Brown Sugar',\n","  'Brown Rice Black-Eyed Peas and Veggies Bowl',\n","  '2% Milk',\n","  'Light & Lean Spinach Lasagna',\n","  'Organic Greek Fat Free Plain Yogurt',\n","  'Cornmeal Medium Grind'],\n"," ['Organic Roasted Turkey Breast',\n","  'Uncured Slow Cooked Ham',\n","  'Organic Strawberries',\n","  'Original Mountain Blueberry Low Fat Yogurt',\n","  'Lowfat Milk',\n","  'Oatmeal Squares Brown Sugar',\n","  'Green Beans',\n","  'Organic Stringles Mozzarella String Cheese',\n","  'Original Wheat Thins',\n","  'Sweet Rolls',\n","  'Spaghetti Pasta',\n","  'Original Life Cereal',\n","  'American Blend Salad',\n","  'Organic Chai Tea Latte Concentrate',\n","  'Bagels Plain Presliced',\n","  'Organic Mini Peeled Carrots',\n","  'Original Bacon',\n","  'Mixed Berry Yogurt',\n","  'Smoked Turkey Rope Sausage',\n","  'Oats & Honey Gluten Free Granola',\n","  'Applesauce On The Go Apple Strawberry Pouches'],\n"," ['100% Juice'],\n"," ['Peanut Chocolate Candies',\n","  'Spring Water',\n","  'Spearmint',\n","  'Peppermints',\n","  'Wint-O-Green',\n","  'Variety Pack'],\n"," ['Raspberries'],\n"," ['Organic Half & Half',\n","  'Organic Cucumber',\n","  'Uncured Genoa Salami',\n","  'Organic Riced Cauliflower',\n","  'Natural Chicken & Sage Breakfast Sausage',\n","  'Purity Farms Ghee Clarified Butter',\n","  'Sweet Potatoes',\n","  'Grilled Chicken Breast Strips',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Milk, Vitamin D',\n","  'Goat Cheese Crumbles',\n","  'Almond Flour Tortillas',\n","  'Extra Sharp Aged Cheddar Cheese slices',\n","  'Gluten Free White Sandwich Bread'],\n"," ['Banana',\n","  'Yellow Onions',\n","  'Blueberries',\n","  'Spaghetti',\n","  'Chicken Broth',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Condensed Cream of Mushroom Soup',\n","  'Jumbo Garlic',\n","  'Fresh Cut Golden Sweet Whole Kernel Corn',\n","  'Orange Juice',\n","  'Green Beans',\n","  'All Purpose Flour',\n","  'Bathroom Tissue, Unscented, Double Rolls, 3-Ply',\n","  'Hint of Lime Flavored Tortilla Chips',\n","  'Organic Bagged Carrots',\n","  '5-Lettuce Mix',\n","  'Original French Fried Onions',\n","  'Cherry Coke',\n","  'Fresh Cut Sweet Peas',\n","  'Pie Crusts',\n","  \"Jack's Special Mild Salsa\",\n","  'Black Pearls Medium Pitted Ripe Olives',\n","  'Cream Of Tartar'],\n"," ['Hot Dog Buns Enriched 8 Count',\n","  '100% Whole Wheat Bread',\n","  'Japanese Style Noodles & Chicken Flavored Sauce',\n","  'Garlic & Olive Oil Vermicelli',\n","  'Organic Reduced Fat 2% Milk',\n","  'Organic Zucchini Squash',\n","  'Extra Long Grain Enriched Rice',\n","  'Eggo Blueberry Waffles',\n","  'Classic Potato Chips',\n","  'French Bread Pizza Cheese',\n","  'The Original Flavor 1 Oz Popcorn',\n","  'Distilled White Vinegar',\n","  'Cheese & Pepperoni Mini Bagels',\n","  'Corn Dogs, 100% Beef',\n","  'Premium Bun Length Beef Franks',\n","  'Low Moisture Part Skim Mozzarella String Cheese',\n","  'San Marzano Peeled Tomatoes'],\n"," [\"Organic D'Anjou Pears\",\n","  'Organic Cilantro',\n","  'Organic Strawberries',\n","  'Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Mushroom And Ricotta Ravioli',\n","  'Organic Dill',\n","  'Globe Eggplant',\n","  'Organic Nondairy Strawberry Cashew Yogurt',\n","  'Organic Cashew Nondairy Blueberry Yogurt',\n","  'Organic Campari Cocktail Tomatoes',\n","  'Organic Baby Kale Mix',\n","  'Pizza Roasted Vegetable No Cheese',\n","  'Vanilla Bean Chia Pod',\n","  'Organic Sweetened Almond Milk',\n","  'Himalayan Raw Acacia Honey',\n","  'Organic Green Tea Bags',\n","  'Organic Blonde Coconut Palm Sugar'],\n"," ['Organic Whole Milk',\n","  'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry',\n","  'Bag of Organic Bananas',\n","  'Emmentaler Swiss Slices',\n","  'Ravioli, Spinach & Cheese',\n","  'Whole Milk Pear Spinach & Mango Yogurt Pouch',\n","  'YoKids Organic Low Fat Strawberry Banana Yogurt'],\n"," ['Organic Avocado',\n","  'Organic Whole White Mushrooms',\n","  'Whole Milk',\n","  'Sparkling Water Grapefruit',\n","  'Cane Sugar',\n","  'Limes',\n","  'Cheddar Bunnies Snack Crackers',\n","  'Large Grapefruit',\n","  'Cherry Pie Fruit & Nut Bar',\n","  'Italian Pasta Sauce Basilico Tomato, Basil & Garlic',\n","  'Sourdough Baguette',\n","  'Organic Pink Lemonade Bunny Fruit Snacks',\n","  'French Vanilla Yogurt',\n","  'Friends Bunny Grahams'],\n"," ['Organic Baby Rainbow Carrots',\n","  'Organic Fuji Apple',\n","  'Curate Melon Pomelo Sparking Water',\n","  'Kiwi Sandia Sparkling Water',\n","  'Cran Raspberry Sparkling Water',\n","  'Blackberry Cucumber Sparkling Water',\n","  'Organic Beef Bone Broth',\n","  'Vanilla Bean Light Ice Cream',\n","  'Fig Newmans Fruit Filled Cookies',\n","  'Roasted Red Pepper Hommus',\n","  'Black Cherry Ice Cream',\n","  'Tuna Salad',\n","  'Multi-Seed Original Crackers',\n","  'Currant + Mint Lamb Bar',\n","  'Organic Spicy Taco Seasoning',\n","  'Organic Black Pepper'],\n"," ['Banana',\n","  'Small Hass Avocado',\n","  'Ancient Grain Original Granola',\n","  'Whole Milk Plain Yogurt',\n","  'Cashew Milk Salted Caramel Cluster Non-Dairy Frozen Dessert',\n","  'Organic Plain Greek Whole Milk Yogurt',\n","  'Thin Stackers Organic Red Rice & Quinoa Puffed Grain Cakes',\n","  'Gluten Free Chocolate Chip Cookies',\n","  'Organic Peeled & Cooked Beets',\n","  'Unrefined Virgin Coconut Oil',\n","  'Coho Salmon',\n","  'Original Alcohol Free Witch Hazel With Aloe Vera',\n","  'Dishwasher Gel Free & Clear',\n","  'Apple Cider Vinegar',\n","  'Whole Grain Oat Flour',\n","  'Gluten Free Brown Rice English Muffins 6 ct',\n","  'Organic Whole Milk Plain Kefir',\n","  'Gluten Free Old Fashioned Rolled Oats',\n","  'Organic Atage 3 Nibbly Fingers Mangoes Carrots'],\n"," ['Sharp Cheddar Cheese',\n","  'Bag of Organic Bananas',\n","  'Organic Yellow Onion',\n","  'Carrots',\n","  'Basil Pesto',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Tomato Sauce',\n","  'Coconut  Chocolate Bar',\n","  'Organic Peeled & Cooked Beets',\n","  'Penne Rigate',\n","  'Bag of Organic Fuji Apples',\n","  'Organic Diced Tomatoes No Salt Added',\n","  'Organic Ground Nutmeg'],\n"," ['Organic Blueberries',\n","  'Natural Artesian Bottled Water',\n","  'Natural Artisan Water',\n","  'Vanilla 0% Milkfat Yogurt',\n","  'Non Fat Raspberry Yogurt'],\n"," ['Spinach',\n","  'Uncured Hickory Smoked Sunday Bacon',\n","  'Organic California Style Sprouted Bread',\n","  'Organic Fuji Red Apple Chips',\n","  'Monterey Jack Cheese',\n","  'Raspberry Yoghurt',\n","  'Healthy Grains Oats & Honey Clusters with Toasted Coconut Gluten Free',\n","  'Fusilli No. 34',\n","  'Tiny Twists Pretzels',\n","  'Original Baked Whole Grain Wheat Crackers',\n","  'Post Selects Great Grains Cereal Raisins, Dates and Pecans',\n","  'Lemon Yogurt',\n","  'Applesauce On The Go Apple Strawberry Pouches',\n","  'Bagels',\n","  'Organic Fruit and Nut Granola Cereal',\n","  'TLC Cherry Dark Chocolate Chewy Granola'],\n"," ['Organic Strawberries',\n","  'Packaged Grape Tomatoes',\n","  'Cereal',\n","  'Brussels Sprouts'],\n"," ['Green Seedless Grapes',\n","  'Packaged Grape Tomatoes',\n","  'Hass Avocados',\n","  '2% Lactose Free Milk'],\n"," ['Total 0% Nonfat Greek Yogurt',\n","  'Dairy Free Coconut Milk Yogurt Alternative',\n","  'French Vanilla Coconut Milk Creamer',\n","  'Organic Yellow Onion',\n","  'Organic Medium Salsa',\n","  'Organic Large Grade A Brown Eggs',\n","  'Tomato Paste',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Sour Cream',\n","  'Heavy Whipping Cream',\n","  'Italian Extra Virgin Olive Oil',\n","  'Organic Thyme',\n","  'Chopped Walnuts',\n","  'Mixed Berries Whole Milk Icelandic Style Skyr Yogurt',\n","  'Organic Cream of Mushroom Condensed Soup',\n","  'Turkey Pastrami',\n","  'Cream Cheese',\n","  'Pure Baking Soda',\n","  'Organic Beef Base',\n","  'Dairy Pure 1% Low Fat Milk',\n","  'Seasoning Paprika',\n","  'Cold Brew Coffee With Milk Chocolate',\n","  'Cheese Filled Blintzes Crepes'],\n"," ['Grapefruit Sparkling Water',\n","  'Craveables Supreme Pizza',\n","  'Gluten Free Uncured Frozen Pepperoni Pizza',\n","  'Sliced Ripe Black Olives',\n","  'Go Lean Chocolate Crunch Cereal'],\n"," ['Shoestring Fries',\n","  'Bag of Organic Bananas',\n","  'Lacinato Kale Og',\n","  'Organic Distilled White Vinegar',\n","  'Diced Tomatoes',\n","  'Raspberry Chocolate Chip Gelato',\n","  'Reduced Fat Milk 100% Lactose Free',\n","  'Organic Radicchio Castelfranco',\n","  'Organic Tree Ripened Plums',\n","  'Four Cheese Thin Crust Pizza',\n","  'Uncured Beef Hot Dog',\n","  'Organic Mini Homestyle Waffles',\n","  'Free and Clear Natural Liquid Laundry Detergent',\n","  'Mixed Melons',\n","  'High Pulp Orange Juice',\n","  'Imported Butter',\n","  'White Chocolate Macadamia Nut Energy Bar',\n","  'Mini Croissants',\n","  'Essential Greens With Lime  Vegetable and Fruit Juice Blend'],\n"," ['Smartwater',\n","  'Organic Half Tea & Half Lemonade',\n","  'Electrolyte Enhanced Water',\n","  'Gluten Free Honey Mustard & Onion Pretzel Sticks',\n","  'Eco Phosphate Free Lemon Splash Gel Dishwasher Detergent'],\n"," ['Bag of Organic Bananas',\n","  'Large Lemon',\n","  '100% Raw Coconut Water',\n","  'Red Onion',\n","  'Veganic Sprouted Brown Rice Cacao Crisps',\n","  'Organic Medjool Dates',\n","  'Almond Breeze Original Almond Milk',\n","  'Organic Skim Milk with DHA Omega-3',\n","  'Mini Cucumbers'],\n"," ['Zero Calorie Cola', 'Diet'],\n"," ['Real Mayonnaise',\n","  'Orange Juice 100% Juice',\n","  'Soft & Smooth Whole Grain White Bread',\n","  'Refined Canola Oil',\n","  'Dijon Mustard'],\n"," ['Organic Hass Avocado',\n","  'Organic Granny Smith Apple',\n","  'Organic Small Bunch Celery',\n","  'Organic Whole String Cheese',\n","  'Organic White Corn & Wheat Tortillas',\n","  'Tortillas, Corn, Organic',\n","  'Organic Greek Plain Nonfat Yogurt',\n","  'Cherry Preserves'],\n"," ['Organic Avocado',\n","  'Cucumber Kirby',\n","  'Organic Gluten Free Buckwheat Wildberry Waffles',\n","  'Grade A Large Eggs Cage Free Omega 3',\n","  'Flax Milk Dairy Free Protein+ Unsweetened Vanilla'],\n"," ['Water',\n","  'Organic Half Tea & Half Lemonade',\n","  'Pineapple Coconut Water',\n","  'Lemon Yogurt',\n","  'Organic Honey Green Tea Drink'],\n"," ['Whole Organic Omega 3 Milk',\n","  'Sparkling Probiotic Drink Blueberry Cherry',\n","  'Sparkling Tangerine Probiotic Drink',\n","  'Organic Lemon Cayenne Sparkling Probiotic Drink',\n","  'Sparkling Pineapple Coconut Probiotic Drink',\n","  'Sparkling Probiotic Drink Mojita Lime Mint Coconut',\n","  'Natural Laundry Detergent, Free & Clear 33'],\n"," ['Banana',\n","  'Fresh Cauliflower',\n","  'Organic Blackberries',\n","  'Organic Strawberries',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Shredded Sharp Cheddar Cheese',\n","  'Steamfresh Super Sweet Corn',\n","  'Roasted Pine Nut Hummus',\n","  'Presliced Everything Bagels',\n","  '15 Grain Whole Grain Bread',\n","  'Orange Sports Drink',\n","  'American Cheese Slices',\n","  'Sesame Topped Hamburger Buns',\n","  'Townhouse Flip Sides Pretzel Crackers Original',\n","  'Honey Crisp Apples',\n","  'Quaker Life Cinnamon Cereal'],\n"," ['Spring Mix',\n","  'Classic Yellow Mustard',\n","  'Roasted Salted Almonds',\n","  'Jumbo Grade A White Eggs',\n","  'Sliced Bacon',\n","  'Smokehouse Almonds Value Pack',\n","  'Classic Roast Instant Coffee Crystals'],\n"," ['Sweet Hot Dog Buns',\n","  'Cajun Andouille Smoked Pork Sausage',\n","  'Bunched Cilantro',\n","  'White Onion',\n","  'Classic Yellow Mustard',\n","  'Italian Sausage',\n","  'Italian Style Smoked Chicken Sausage With Mozzarella Cheese',\n","  'Spicy Mango With Jalapeño Smoked Chicken Sausage',\n","  'Vegetarian Grain Meat Sausages Italian - 4 CT',\n","  'Tailgaters Brat Buns - 6 CT',\n","  'Sauerkraut',\n","  'Sweet Relish'],\n"," ['Unsweetened Almondmilk',\n","  'Organic Avocado',\n","  'Organic Strawberries',\n","  'Roasted Turkey',\n","  'Pure Irish Butter',\n","  'Uncured, No Sugar, Hickory Smoked Bacon',\n","  'Almond Dark Chocolate',\n","  'Organic Naked Lip Balm',\n","  'Gluten free Sesame Bagels',\n","  'Towelettes Coconut Plus Argan Oil'],\n"," ['Strawberries',\n","  'Bag of Organic Bananas',\n","  'Bunny-Luv Organic Carrots',\n","  'Organic Green Beans'],\n"," ['Uncured Slow Cooked Ham',\n","  'Grated Parmesan',\n","  'Original Hummus',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Light and Lean Macaroni and Cheese',\n","  'Organic Spring Mix',\n","  \"S'mores Chocolate Ice Cream\",\n","  'Organic Vanilla Soymilk',\n","  'Organic Chocolate Almondmilk Pudding',\n","  'All Natural Cinnamon Raisin Bread',\n","  'Chocolate Soy',\n","  'Organic Honest Fizz Root Beer'],\n"," ['Bologna'],\n"," ['Watermelon Lime Sparkling Mountain Spring Water'],\n"," ...]"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["#Aplicando apriori\n","res = list(apriori(transactions1, min_support = 0.001, min_confidence = 0.1, lift = 1.0))\n","res"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PvYjnvEYNAyC","executionInfo":{"status":"ok","timestamp":1700881576816,"user_tz":360,"elapsed":32698,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"f14b17d8-ed19-426c-ebf2-6c904dd1770a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[RelationRecord(items=frozenset({'Bag of Organic Bananas'}), support=0.11621272185239404, ordered_statistics=[OrderedStatistic(items_base=frozenset(), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.11621272185239404, lift=1.0)]),\n"," RelationRecord(items=frozenset({'Banana'}), support=0.14028657826407515, ordered_statistics=[OrderedStatistic(items_base=frozenset(), items_add=frozenset({'Banana'}), confidence=0.14028657826407515, lift=1.0)]),\n"," RelationRecord(items=frozenset({'100% Raw Coconut Water', 'Bag of Organic Bananas'}), support=0.0027567931443469714, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.28013029315960913, lift=2.410495931034235)]),\n"," RelationRecord(items=frozenset({'100% Raw Coconut Water', 'Banana'}), support=0.0011646916772628678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Banana'}), confidence=0.11834961997828448, lift=0.8436275333161481)]),\n"," RelationRecord(items=frozenset({'100% Raw Coconut Water', 'Organic Baby Spinach'}), support=0.0012074326562449913, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.12269272529858849, lift=1.6391783129934334)]),\n"," RelationRecord(items=frozenset({'100% Raw Coconut Water', 'Organic Hass Avocado'}), support=0.001645527690811758, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.16720955483170466, lift=3.0233076908877017)]),\n"," RelationRecord(items=frozenset({'100% Raw Coconut Water', 'Organic Raspberries'}), support=0.0012715441247181766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.12920738327904452, lift=3.1424457845467617)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', '100% Raw Coconut Water'}), support=0.0015386752433564491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.15635179153094464, lift=1.9357712811227035)]),\n"," RelationRecord(items=frozenset({'100% Recycled Paper Towels', 'Bag of Organic Bananas'}), support=0.0019767702779232158, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Recycled Paper Towels'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22076372315035797, lift=1.8996519454277814)]),\n"," RelationRecord(items=frozenset({'100% Recycled Paper Towels', 'Banana'}), support=0.0015279899986109181, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Recycled Paper Towels'}), items_add=frozenset({'Banana'}), confidence=0.17064439140811455, lift=1.2163985572938698)]),\n"," RelationRecord(items=frozenset({'Large Lemon', '100% Recycled Paper Towels'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Recycled Paper Towels'}), items_add=frozenset({'Large Lemon'}), confidence=0.11575178997613364, lift=1.833902618672155)]),\n"," RelationRecord(items=frozenset({'100% Recycled Paper Towels', 'Organic Baby Spinach'}), support=0.0011646916772628678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Recycled Paper Towels'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.13007159904534607, lift=1.7377602769245972)]),\n"," RelationRecord(items=frozenset({'100% Recycled Paper Towels', 'Organic Hass Avocado'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Recycled Paper Towels'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.11217183770883053, lift=2.0281734497017627)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', '100% Recycled Paper Towels'}), support=0.001132635943026275, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Recycled Paper Towels'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.12649164677804295, lift=1.5660766962583286)]),\n"," RelationRecord(items=frozenset({'100% Whole Wheat Bread', 'Bag of Organic Bananas'}), support=0.002767478389092502, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Whole Wheat Bread'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15696969696969698, lift=1.3507100984096203)]),\n"," RelationRecord(items=frozenset({'100% Whole Wheat Bread', 'Banana'}), support=0.004936583072435274, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Whole Wheat Bread'}), items_add=frozenset({'Banana'}), confidence=0.28, lift=1.9959143879960395)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', '100% Whole Wheat Bread'}), support=0.0025003472704542297, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Whole Wheat Bread'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14181818181818182, lift=1.7558325415819793)]),\n"," RelationRecord(items=frozenset({'2% Reduced Fat DHA Omega-3 Reduced Fat Milk', 'Banana'}), support=0.001047153985062028, ordered_statistics=[OrderedStatistic(items_base=frozenset({'2% Reduced Fat DHA Omega-3 Reduced Fat Milk'}), items_add=frozenset({'Banana'}), confidence=0.245, lift=1.7464250894965343)]),\n"," RelationRecord(items=frozenset({'2% Reduced Fat Milk', 'Banana'}), support=0.002778163633838033, ordered_statistics=[OrderedStatistic(items_base=frozenset({'2% Reduced Fat Milk'}), items_add=frozenset({'Banana'}), confidence=0.23963133640552994, lift=1.708155829094701)]),\n"," RelationRecord(items=frozenset({'2% Reduced Fat Organic Milk', 'Banana'}), support=0.001335655593191362, ordered_statistics=[OrderedStatistic(items_base=frozenset({'2% Reduced Fat Organic Milk'}), items_add=frozenset({'Banana'}), confidence=0.2705627705627705, lift=1.9286433093653745)]),\n"," RelationRecord(items=frozenset({'85% Lean Ground Beef', 'Banana'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'85% Lean Ground Beef'}), items_add=frozenset({'Banana'}), confidence=0.23409090909090907, lift=1.6686621912629223)]),\n"," RelationRecord(items=frozenset({'Air Chilled Organic Boneless Skinless Chicken Breasts', 'Bag of Organic Bananas'}), support=0.001143321187771806, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Air Chilled Organic Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23362445414847163, lift=2.0103173768290743)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Air Chilled Organic Boneless Skinless Chicken Breasts'}), support=0.0010685244745530897, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Air Chilled Organic Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.2183406113537118, lift=2.703246830898244)]),\n"," RelationRecord(items=frozenset({'Apple Honeycrisp Organic', 'Bag of Organic Bananas'}), support=0.005171658456836954, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3065231158961368, lift=2.6376037925130333)]),\n"," RelationRecord(items=frozenset({'Apple Honeycrisp Organic', 'Banana'}), support=0.002959812794512058, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Banana'}), confidence=0.17542748575047498, lift=1.2504937244976542)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Apple Honeycrisp Organic'}), support=0.0019019735647044995, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Large Lemon'}), confidence=0.11272957568081063, lift=1.7860204501845311)]),\n"," RelationRecord(items=frozenset({'Apple Honeycrisp Organic', 'Organic Baby Spinach'}), support=0.00238280957825339, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14122862571247627, lift=1.8868184717421153)]),\n"," RelationRecord(items=frozenset({'Apple Honeycrisp Organic', 'Organic Hass Avocado'}), support=0.0030132390182397127, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.1785940468651045, lift=3.2291501282775372)]),\n"," RelationRecord(items=frozenset({'Apple Honeycrisp Organic', 'Organic Raspberries'}), support=0.002446921046726575, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.14502849905003165, lift=3.5272302860174927)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Apple Honeycrisp Organic'}), support=0.003494075031788603, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.2070930968967701, lift=2.563992811122903)]),\n"," RelationRecord(items=frozenset({'Asparagus', 'Bag of Organic Bananas'}), support=0.005737976428350091, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19178571428571428, lift=1.6502987902590236)]),\n"," RelationRecord(items=frozenset({'Asparagus', 'Banana'}), support=0.006069219015461549, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Banana'}), confidence=0.20285714285714285, lift=1.4460196076297833)]),\n"," RelationRecord(items=frozenset({'Asparagus', 'Broccoli Crown'}), support=0.002254586641307019, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Asparagus'}), confidence=0.10047619047619047, lift=3.358309013605442)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Asparagus'}), support=0.005545642022930535, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Large Lemon'}), confidence=0.18535714285714283, lift=2.9366884930711743)]),\n"," RelationRecord(items=frozenset({'Asparagus', 'Limes'}), support=0.0031735176894226763, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Limes'}), confidence=0.10607142857142857, lift=2.2638327903567355)]),\n"," RelationRecord(items=frozenset({'Asparagus', 'Organic Avocado'}), support=0.0039107995768643085, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13071428571428573, lift=2.2895672575599586)]),\n"," RelationRecord(items=frozenset({'Asparagus', 'Organic Baby Broccoli'}), support=0.0011753769220083986, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Asparagus'}), confidence=0.11133603238866396, lift=3.7212875939849623)]),\n"," RelationRecord(items=frozenset({'Asparagus', 'Organic Baby Spinach'}), support=0.005513586288693943, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1842857142857143, lift=2.462062404405017)]),\n"," RelationRecord(items=frozenset({'Asparagus', 'Organic Hass Avocado'}), support=0.003323111115860109, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.11107142857142857, lift=2.008277006513579)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Asparagus'}), support=0.004829730624979965, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.16142857142857142, lift=1.9986262355186815)]),\n"," RelationRecord(items=frozenset({'Asparagus', 'Organic Zucchini'}), support=0.003750520905681345, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.12535714285714286, lift=3.5041215437788016), OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Asparagus'}), confidence=0.10483870967741936, lift=3.504121543778802)]),\n"," RelationRecord(items=frozenset({'Asparation/Broccolini/Baby Broccoli', 'Banana'}), support=0.0016134719565751654, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparation/Broccolini/Baby Broccoli'}), items_add=frozenset({'Banana'}), confidence=0.32969432314410485, lift=2.3501487257283373)]),\n"," RelationRecord(items=frozenset({'Baby Cucumbers', 'Bag of Organic Bananas'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Cucumbers'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21651785714285715, lift=1.8631166510140282)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Baby Spinach'}), support=0.0015173047538653874, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Spinach'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1772784019975031, lift=1.5254646752243768)]),\n"," RelationRecord(items=frozenset({'Banana', 'Baby Spinach'}), support=0.0018485473409768451, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Spinach'}), items_add=frozenset({'Banana'}), confidence=0.21598002496878901, lift=1.5395629976962493)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Baby Spinach'}), support=0.001218117900990522, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Spinach'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14232209737827714, lift=1.7620714548671548)]),\n"," RelationRecord(items=frozenset({'Bartlett Pears', 'Bag of Organic Bananas'}), support=0.001346340837936893, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14893617021276595, lift=1.2815823245404676)]),\n"," RelationRecord(items=frozenset({'Blackberries', 'Bag of Organic Bananas'}), support=0.0010792097192986205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.13272010512483573, lift=1.1420445456342405)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Blood Oranges'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blood Oranges'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2298288508557457, lift=1.9776565525042913)]),\n"," RelationRecord(items=frozenset({'Blueberries', 'Bag of Organic Bananas'}), support=0.0019447145436866232, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blueberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.10820451843043996, lift=0.931090131146523)]),\n"," RelationRecord(items=frozenset({'Broccoli Crown', 'Bag of Organic Bananas'}), support=0.0026499406968916624, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.11809523809523809, lift=1.016198882642428)]),\n"," RelationRecord(items=frozenset({'Brussels Sprouts', 'Bag of Organic Bananas'}), support=0.001335655593191362, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Brussels Sprouts'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15188335358444716, lift=1.3069425718929437)]),\n"," RelationRecord(items=frozenset({'Cantaloupe', 'Bag of Organic Bananas'}), support=0.0022225309070704265, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.25060240963855424, lift=2.1564111539944255)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Bag of Organic Bananas'}), support=0.003504760276534134, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18111540585311983, lift=1.558481747662369)]),\n"," RelationRecord(items=frozenset({'Celery Hearts', 'Bag of Organic Bananas'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Celery Hearts'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2236024844720497, lift=1.9240792308096464)]),\n"," RelationRecord(items=frozenset({'Citrus Mandarins Organic', 'Bag of Organic Bananas'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Citrus Mandarins Organic'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2323943661971831, lift=1.9997325808473494)]),\n"," RelationRecord(items=frozenset({'Clementines', 'Bag of Organic Bananas'}), support=0.002799534123329095, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.25889328063241107, lift=2.227753351833896)]),\n"," RelationRecord(items=frozenset({'Clementines, Bag', 'Bag of Organic Bananas'}), support=0.001859232585722376, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines, Bag'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.17042115572967678, lift=1.4664586889732678)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Cream Cheese Spread'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cream Cheese Spread'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3168316831683169, lift=2.7263080850196095)]),\n"," RelationRecord(items=frozenset({'Creamy Almond Butter', 'Bag of Organic Bananas'}), support=0.0011860621667539296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Creamy Almond Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.189419795221843, lift=1.6299402698994685)]),\n"," RelationRecord(items=frozenset({'Electrolyte Enhanced Water', 'Bag of Organic Bananas'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Electrolyte Enhanced Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18055555555555555, lift=1.553664286298067)]),\n"," RelationRecord(items=frozenset({'Extra Virgin Olive Oil', 'Bag of Organic Bananas'}), support=0.00226527188605255, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Extra Virgin Olive Oil'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1419959812458138, lift=1.2218626238370702)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Ezekiel 4:9 Bread Organic Sprouted Whole Grain'}), support=0.0012929146142092384, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ezekiel 4:9 Bread Organic Sprouted Whole Grain'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24248496993987972, lift=2.086561316822685)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Bag of Organic Bananas'}), support=0.0016134719565751654, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14218455743879474, lift=1.2234853049857009)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Bag of Organic Bananas'}), support=0.004402320835158729, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21638655462184872, lift=1.8619868046519819)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Bag of Organic Bananas'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.12595837897042717, lift=1.0838605013520932)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Bag of Organic Bananas'}), support=0.0025430882494363533, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.31274638633377133, lift=2.691154473870785)]),\n"," RelationRecord(items=frozenset({'Garlic', 'Bag of Organic Bananas'}), support=0.0018164916067402524, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.12318840579710144, lift=1.0600251317886478)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Globe Eggplant'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Globe Eggplant'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24109014675052412, lift=2.0745589889611344)]),\n"," RelationRecord(items=frozenset({'Grape White/Green Seedless', 'Bag of Organic Bananas'}), support=0.002607199717909539, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22889305816135083, lift=1.9696041406901745)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Grated Parmesan'}), support=0.0027140521653648475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20616883116883117, lift=1.774064215023667)]),\n"," RelationRecord(items=frozenset({'Green Beans', 'Bag of Organic Bananas'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.11533888228299644, lift=0.9924806892440959)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Bag of Organic Bananas'}), support=0.0029170718155299346, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14693218514531756, lift=1.264338213607469)]),\n"," RelationRecord(items=frozenset({'Ground Turkey Breast', 'Bag of Organic Bananas'}), support=0.001335655593191362, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1773049645390071, lift=1.5256932435005568)]),\n"," RelationRecord(items=frozenset({'Half & Half', 'Bag of Organic Bananas'}), support=0.0029277570602754656, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Half & Half'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1557703240477544, lift=1.3403896024877888)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Hass Avocado'}), support=0.0019340292989410922, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocado'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15509854327335046, lift=1.3346089894559625)]),\n"," RelationRecord(items=frozenset({'Hass Avocados', 'Bag of Organic Bananas'}), support=0.004039022513810679, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24230769230769228, lift=2.0850358587716067)]),\n"," RelationRecord(items=frozenset({'Honey Nut Cheerios', 'Bag of Organic Bananas'}), support=0.0013677113274279547, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honey Nut Cheerios'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15023474178403756, lift=1.292756415901317)]),\n"," RelationRecord(items=frozenset({'Honeycrisp Apple', 'Bag of Organic Bananas'}), support=0.004391635590413198, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.16407185628742513, lift=1.4118235393868384)]),\n"," RelationRecord(items=frozenset({'Italian Sparkling Mineral Water', 'Bag of Organic Bananas'}), support=0.001560045732847511, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Italian Sparkling Mineral Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1841109709962169, lift=1.5842583157983587)]),\n"," RelationRecord(items=frozenset({'Jalapeno Peppers', 'Bag of Organic Bananas'}), support=0.0018164916067402524, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.11830201809324982, lift=1.0179782058930646)]),\n"," RelationRecord(items=frozenset({'Large Alfresco Eggs', 'Bag of Organic Bananas'}), support=0.0033551668500967015, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23105224429727741, lift=1.9881837428327787)]),\n"," RelationRecord(items=frozenset({'Large Grapefruit', 'Bag of Organic Bananas'}), support=0.001047153985062028, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Grapefruit'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.16695059625212946, lift=1.436594837389485)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Bag of Organic Bananas'}), support=0.008184897475076667, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.12967665481631965, lift=1.1158559299645925)]),\n"," RelationRecord(items=frozenset({'Lightly Salted Baked Snap Pea Crisps', 'Bag of Organic Bananas'}), support=0.0016989539145394125, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lightly Salted Baked Snap Pea Crisps'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22268907563025211, lift=1.9162194300301953)]),\n"," RelationRecord(items=frozenset({'Lime Sparkling Water', 'Bag of Organic Bananas'}), support=0.0018806030752134377, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lime Sparkling Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.12230715774843641, lift=1.0524420717362006)]),\n"," RelationRecord(items=frozenset({'Limes', 'Bag of Organic Bananas'}), support=0.00738350411916185, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15758266818700115, lift=1.3559846605017356)]),\n"," RelationRecord(items=frozenset({'Marinara Sauce', 'Bag of Organic Bananas'}), support=0.0014104523064100783, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Marinara Sauce'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23076923076923078, lift=1.9857484369253402)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Medium Navel Orange'}), support=0.001132635943026275, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Medium Navel Orange'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1872791519434629, lift=1.6115202273752172)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Bag of Organic Bananas'}), support=0.0038894290873732465, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19238900634249473, lift=1.6554900640469892)]),\n"," RelationRecord(items=frozenset({'Milk, Organic, Vitamin D', 'Bag of Organic Bananas'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Milk, Organic, Vitamin D'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.30831099195710454, lift=2.6529883049181264)]),\n"," RelationRecord(items=frozenset({'No Salt Added Black Beans', 'Bag of Organic Bananas'}), support=0.0011646916772628678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.11964873765093306, lift=1.0295666063385318)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Orange Bell Pepper'}), support=0.0019447145436866232, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.13501483679525222, lift=1.1617905048875754)]),\n"," RelationRecord(items=frozenset({'Organic American Cheese Singles', 'Bag of Organic Bananas'}), support=0.0013142851037003002, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic American Cheese Singles'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.260593220338983, lift=2.242381179833064)]),\n"," RelationRecord(items=frozenset({'Organic AppleApple', 'Bag of Organic Bananas'}), support=0.001335655593191362, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic AppleApple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.27901785714285715, lift=2.4009235193479745)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Bag of Organic Bananas'}), support=0.008270379433040913, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14486243683323974, lift=1.2465282158801403)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Baby Arugula'}), support=0.004445061814140853, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19294990723562153, lift=1.660316565691441)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Baby Broccoli'}), support=0.002703366920619317, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2560728744939271, lift=2.2034840111496097)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Bag of Organic Bananas'}), support=0.006186756707662389, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23031026252983292, lift=1.9817990565814152)]),\n"," RelationRecord(items=frozenset({'Organic Baby Kale Mix', 'Bag of Organic Bananas'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Kale Mix'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3086816720257235, lift=2.656177973507851)]),\n"," RelationRecord(items=frozenset({'Organic Baby Rainbow Carrots', 'Bag of Organic Bananas'}), support=0.0014852490196287946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Rainbow Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21189024390243902, lift=1.8232964560589886)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Bag of Organic Bananas'}), support=0.01720324404030474, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bag of Organic Bananas'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1480323648400147, lift=1.9777166207398225), OrderedStatistic(items_base=frozenset({'Organic Baby Spinach'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22983583154889364, lift=1.9777166207398225)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach Salad', 'Bag of Organic Bananas'}), support=0.0012715441247181766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Spinach Salad'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2413793103448276, lift=2.0770472156345514)]),\n"," RelationRecord(items=frozenset({'Organic Bartlett Pear', 'Bag of Organic Bananas'}), support=0.0024896620257086987, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bartlett Pear'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3509036144578313, lift=3.0194939836580597)]),\n"," RelationRecord(items=frozenset({'Organic Basil', 'Bag of Organic Bananas'}), support=0.0014959342643743256, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Basil'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15217391304347827, lift=1.309442809856565)]),\n"," RelationRecord(items=frozenset({'Organic Bell Pepper', 'Bag of Organic Bananas'}), support=0.001869917830467907, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bell Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.26475037821482605, lift=2.2781531487670947)]),\n"," RelationRecord(items=frozenset({'Organic Black Beans', 'Bag of Organic Bananas'}), support=0.0032483144026413924, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Black Beans'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.26527050610820246, lift=2.282628802422613)]),\n"," RelationRecord(items=frozenset({'Organic Blackberries', 'Bag of Organic Bananas'}), support=0.0036222979687349738, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blackberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.17730125523012552, lift=1.5256613252318643)]),\n"," RelationRecord(items=frozenset({'Organic Blueberries', 'Bag of Organic Bananas'}), support=0.008505454817442594, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blueberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23032407407407407, lift=1.9819179036750982)]),\n"," RelationRecord(items=frozenset({'Organic Bosc Pear', 'Bag of Organic Bananas'}), support=0.0016241572013206962, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bosc Pear'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3108384458077709, lift=2.6747368175626938)]),\n"," RelationRecord(items=frozenset({'Organic Bread with 21 Whole Grains', 'Bag of Organic Bananas'}), support=0.0016134719565751654, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bread with 21 Whole Grains'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23520249221183803, lift=2.023896252172608)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Broccoli'}), support=0.0039749110453374936, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3163265306122449, lift=2.721961292792218)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli Crowns', 'Bag of Organic Bananas'}), support=0.0017630653830125978, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli Crowns'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.28596187175043325, lift=2.4606761393442254)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli Florets', 'Bag of Organic Bananas'}), support=0.0022973276202891426, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli Florets'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2232606438213915, lift=1.9211377228128508)]),\n"," RelationRecord(items=frozenset({'Organic Brown Rice', 'Bag of Organic Bananas'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Brown Rice'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22871046228710462, lift=1.9680329196453898)]),\n"," RelationRecord(items=frozenset({'Organic Bunch Beets', 'Bag of Organic Bananas'}), support=0.0010792097192986205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bunch Beets'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22645739910313897, lift=1.9486455139633565)]),\n"," RelationRecord(items=frozenset({'Organic Butternut Squash', 'Bag of Organic Bananas'}), support=0.0013677113274279547, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Butternut Squash'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24242424242424243, lift=2.0860387620225795)]),\n"," RelationRecord(items=frozenset({'Organic Carrot Bunch', 'Bag of Organic Bananas'}), support=0.0035475012555162577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Carrot Bunch'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.26709573612228477, lift=2.298334742228417)]),\n"," RelationRecord(items=frozenset({'Organic Celery Hearts', 'Bag of Organic Bananas'}), support=0.0018378620962313142, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Celery Hearts'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2202304737516005, lift=1.8950633824007939)]),\n"," RelationRecord(items=frozenset({'Organic Cheese Frozen Pizza', 'Bag of Organic Bananas'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cheese Frozen Pizza'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2724867724867725, lift=2.34472412437657)]),\n"," RelationRecord(items=frozenset({'Organic Chicken & Apple Sausage', 'Bag of Organic Bananas'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Chicken & Apple Sausage'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3029411764705882, lift=2.6067815265127745)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Bag of Organic Bananas'}), support=0.005289196149037794, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19404155233241865, lift=1.66971007338489)]),\n"," RelationRecord(items=frozenset({'Organic Coconut Milk', 'Bag of Organic Bananas'}), support=0.0015279899986109181, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1881578947368421, lift=1.6190817299316698)]),\n"," RelationRecord(items=frozenset({'Organic Creamy Peanut Butter', 'Bag of Organic Bananas'}), support=0.0016241572013206962, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Creamy Peanut Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.28679245283018867, lift=2.4678232146946364)]),\n"," RelationRecord(items=frozenset({'Organic Cripps Pink Apples', 'Bag of Organic Bananas'}), support=0.0018806030752134377, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cripps Pink Apples'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3352380952380952, lift=2.8846936023397953)]),\n"," RelationRecord(items=frozenset({'Organic Cucumber', 'Bag of Organic Bananas'}), support=0.009851795655379487, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2823889739663093, lift=2.4299316758537133)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', \"Organic D'Anjou Pears\"}), support=0.004434376569395322, ordered_statistics=[OrderedStatistic(items_base=frozenset({\"Organic D'Anjou Pears\"}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.318495778971604, lift=2.7406274794607857)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Diced Tomatoes'}), support=0.0012074326562449913, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Diced Tomatoes'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19618055555555555, lift=1.6881160033815537)]),\n"," RelationRecord(items=frozenset({'Organic Dill', 'Bag of Organic Bananas'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Dill'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2275711159737418, lift=1.95822894728159)]),\n"," RelationRecord(items=frozenset({'Organic Egg Whites', 'Bag of Organic Bananas'}), support=0.0013783965721734857, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Egg Whites'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2125205930807249, lift=1.8287205539394815)]),\n"," RelationRecord(items=frozenset({'Organic English Cucumber', 'Bag of Organic Bananas'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic English Cucumber'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2644628099173554, lift=2.2756786494791776)]),\n"," RelationRecord(items=frozenset({'Organic Extra Firm Tofu', 'Bag of Organic Bananas'}), support=0.0017310096487760053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.192627824019025, lift=1.6575450686344697)]),\n"," RelationRecord(items=frozenset({'Organic Extra Virgin Olive Oil', 'Bag of Organic Bananas'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Virgin Olive Oil'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22274881516587677, lift=1.9167334833513157)]),\n"," RelationRecord(items=frozenset({'Organic Fat Free Milk', 'Bag of Organic Bananas'}), support=0.0012822293694637076, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fat Free Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.210896309314587, lift=1.8147437384906449)]),\n"," RelationRecord(items=frozenset({'Organic Frozen Peas', 'Bag of Organic Bananas'}), support=0.0014211375511556093, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Frozen Peas'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2725409836065574, lift=2.3451906061775363)]),\n"," RelationRecord(items=frozenset({'Organic Fuji Apple', 'Bag of Organic Bananas'}), support=0.003494075031788603, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14004282655246253, lift=1.2050559036930222)]),\n"," RelationRecord(items=frozenset({'Organic Fuji Apples', 'Bag of Organic Bananas'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apples'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.38289962825278806, lift=3.2948167993098267)]),\n"," RelationRecord(items=frozenset({'Organic Gala Apples', 'Bag of Organic Bananas'}), support=0.006047848525970487, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Gala Apples'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.294025974025974, lift=2.530067012795957)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Garbanzo Beans'}), support=0.0020088260121598083, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garbanzo Beans'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22815533980582522, lift=1.9632561407142115)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Bag of Organic Bananas'}), support=0.006806500902903181, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21318607764390896, lift=1.834446988641091)]),\n"," RelationRecord(items=frozenset({'Organic Garnet Sweet Potato (Yam)', 'Bag of Organic Bananas'}), support=0.004573284751087224, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23529411764705885, lift=2.0246846807866214)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Bag of Organic Bananas'}), support=0.003707779926699221, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2431674842326559, lift=2.092434290812943)]),\n"," RelationRecord(items=frozenset({'Organic Grade A Free Range Large Brown Eggs', 'Bag of Organic Bananas'}), support=0.0032696848921324544, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Free Range Large Brown Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24578313253012046, lift=2.114941708725302)]),\n"," RelationRecord(items=frozenset({'Organic Grade A Large Brown Eggs', 'Bag of Organic Bananas'}), support=0.0012394883904815839, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Large Brown Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19365609348914856, lift=1.6663932347709585)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Granny Smith Apple'}), support=0.004722878177524656, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.26674713337356665, lift=2.295335046987126)]),\n"," RelationRecord(items=frozenset({'Organic Grape Tomatoes', 'Bag of Organic Bananas'}), support=0.0059944223022428324, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grape Tomatoes'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20909429742825192, lift=1.799237588581998)]),\n"," RelationRecord(items=frozenset({'Organic Green Cabbage', 'Bag of Organic Bananas'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Green Cabbage'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.16725352112676056, lift=1.439201478640138)]),\n"," RelationRecord(items=frozenset({'Organic Green Seedless Grapes', 'Bag of Organic Bananas'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Green Seedless Grapes'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.26598465473145777, lift=2.2887739869761803)]),\n"," RelationRecord(items=frozenset({'Organic Half & Half', 'Bag of Organic Bananas'}), support=0.0038680585978821845, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Half & Half'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18545081967213115, lift=1.595787592925316)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Bag of Organic Bananas'}), support=0.018335879983331017, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bag of Organic Bananas'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.15777859507171751, lift=2.8527869739136062), OrderedStatistic(items_base=frozenset({'Organic Hass Avocado'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.33153013910355483, lift=2.8527869739136067)]),\n"," RelationRecord(items=frozenset({'Organic Heavy Whipping Cream', 'Bag of Organic Bananas'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Heavy Whipping Cream'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1640378548895899, lift=1.4115309604222186)]),\n"," RelationRecord(items=frozenset({'Organic Honey Sweet Whole Wheat Bread', 'Bag of Organic Bananas'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Honey Sweet Whole Wheat Bread'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.34782608695652173, lift=2.9930121368150053)]),\n"," RelationRecord(items=frozenset({'Organic Hothouse Cucumbers', 'Bag of Organic Bananas'}), support=0.001869917830467907, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Hothouse Cucumbers'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2615844544095665, lift=2.2509106596936466)]),\n"," RelationRecord(items=frozenset({'Organic Italian Parsley Bunch', 'Bag of Organic Bananas'}), support=0.0036864094372081593, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Italian Parsley Bunch'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1978211009174312, lift=1.7022327483964355)]),\n"," RelationRecord(items=frozenset({'Organic Jalapeno Pepper', 'Bag of Organic Bananas'}), support=0.0013783965721734857, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Jalapeno Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2028301886792453, lift=1.7453354972346937)]),\n"," RelationRecord(items=frozenset({'Organic Ketchup', 'Bag of Organic Bananas'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ketchup'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.27577937649880097, lift=2.3730566852145354)]),\n"," RelationRecord(items=frozenset({'Organic Kiwi', 'Bag of Organic Bananas'}), support=0.004669451953797002, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Kiwi'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3449092344119969, lift=2.9679128834972004)]),\n"," RelationRecord(items=frozenset({'Organic Lacinato (Dinosaur) Kale', 'Bag of Organic Bananas'}), support=0.0034513340528064796, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.25757575757575757, lift=2.2164161846489905)]),\n"," RelationRecord(items=frozenset({'Organic Large Brown Grade AA Cage Free Eggs', 'Bag of Organic Bananas'}), support=0.0020195112569053393, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Brown Grade AA Cage Free Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24137931034482757, lift=2.077047215634551)]),\n"," RelationRecord(items=frozenset({'Organic Large Extra Fancy Fuji Apple', 'Bag of Organic Bananas'}), support=0.007201854958487824, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Extra Fancy Fuji Apple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3349900596421471, lift=2.8825592783863203)]),\n"," RelationRecord(items=frozenset({'Organic Large Grade A Brown Eggs', 'Bag of Organic Bananas'}), support=0.0011967474114994603, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Grade A Brown Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20253164556962025, lift=1.7427665606770917)]),\n"," RelationRecord(items=frozenset({'Organic Large Grade AA Brown Eggs', 'Bag of Organic Bananas'}), support=0.0015921014670841037, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Grade AA Brown Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19893190921228304, lift=1.7117911536824137)]),\n"," RelationRecord(items=frozenset({'Organic Large Green Asparagus', 'Bag of Organic Bananas'}), support=0.0019126588094500305, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Green Asparagus'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.34489402697495186, lift=2.967782024871719)]),\n"," RelationRecord(items=frozenset({'Organic Leek', 'Bag of Organic Bananas'}), support=0.001218117900990522, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Leek'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21189591078066913, lift=1.8233452190355353)]),\n"," RelationRecord(items=frozenset({'Organic Lemon', 'Bag of Organic Bananas'}), support=0.007928451601183925, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lemon'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3005265289590927, lift=2.5860037022521705)]),\n"," RelationRecord(items=frozenset({'Organic Mexican Blend Finely Shredded Cheese', 'Bag of Organic Bananas'}), support=0.0013677113274279547, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Mexican Blend Finely Shredded Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.26834381551362685, lift=2.3090743529306543)]),\n"," RelationRecord(items=frozenset({'Organic Milk', 'Bag of Organic Bananas'}), support=0.0018058063619947214, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.27614379084967317, lift=2.3761924378676316)]),\n"," RelationRecord(items=frozenset({'Organic Mint', 'Bag of Organic Bananas'}), support=0.001132635943026275, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Mint'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20384615384615384, lift=1.754077785950717)]),\n"," RelationRecord(items=frozenset({'Organic Navel Orange', 'Bag of Organic Bananas'}), support=0.005428104330729695, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3710737764791818, lift=3.1930564103859127)]),\n"," RelationRecord(items=frozenset({'Organic Old Fashioned Rolled Oats', 'Bag of Organic Bananas'}), support=0.001442508040646671, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Old Fashioned Rolled Oats'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.25280898876404495, lift=2.175398568541805)]),\n"," RelationRecord(items=frozenset({'Organic Orange Bell Pepper', 'Bag of Organic Bananas'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Orange Bell Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3058823529411765, lift=2.632090085022608)]),\n"," RelationRecord(items=frozenset({'Organic Peeled Whole Baby Carrots', 'Bag of Organic Bananas'}), support=0.004306153632448951, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Peeled Whole Baby Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23622508792497066, lift=2.032695596141433)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Rainbow Carrots'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Rainbow Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21363636363636362, lift=1.838321659032398)]),\n"," RelationRecord(items=frozenset({'Organic Raspberries', 'Bag of Organic Bananas'}), support=0.013014628100056632, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bag of Organic Bananas'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.11198970209635895, lift=2.7236954911881353), OrderedStatistic(items_base=frozenset({'Organic Raspberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3165280665280665, lift=2.723695491188135)]),\n"," RelationRecord(items=frozenset({'Organic Raw Kombucha Gingerade', 'Bag of Organic Bananas'}), support=0.0015707309775930417, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Raw Kombucha Gingerade'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23824959481361424, lift=2.0501162954966636)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Bag of Organic Bananas'}), support=0.0049686388066718665, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2681660899653979, lift=2.3075450406023994)]),\n"," RelationRecord(items=frozenset({'Organic Red Cabbage', 'Bag of Organic Bananas'}), support=0.0010792097192986205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Cabbage'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23379629629629628, lift=2.011796063026984)]),\n"," RelationRecord(items=frozenset({'Organic Red Delicious Apple', 'Bag of Organic Bananas'}), support=0.0011646916772628678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Delicious Apple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.30704225352112674, lift=2.642070924998316)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Bag of Organic Bananas'}), support=0.00596236656800624, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20158959537572255, lift=1.7346603036435955)]),\n"," RelationRecord(items=frozenset({'Organic Red Radish, Bunch', 'Bag of Organic Bananas'}), support=0.0016027867118296344, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Radish, Bunch'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20026702269692923, lift=1.7232796849151815)]),\n"," RelationRecord(items=frozenset({'Organic Reduced Fat 2% Milk', 'Bag of Organic Bananas'}), support=0.0025003472704542297, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat 2% Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21606648199445982, lift=1.8592326085339748)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Reduced Fat Milk'}), support=0.0019447145436866232, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21615201900237532, lift=1.859968646779634)]),\n"," RelationRecord(items=frozenset({'Organic Riced Cauliflower', 'Bag of Organic Bananas'}), support=0.0013142851037003002, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Riced Cauliflower'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.205, lift=1.7640065281353436)]),\n"," RelationRecord(items=frozenset({'Organic Roasted Turkey Breast', 'Bag of Organic Bananas'}), support=0.0023186981097802046, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roasted Turkey Breast'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.27125, lift=2.334081808569327)]),\n"," RelationRecord(items=frozenset({'Organic Roma Tomato', 'Bag of Organic Bananas'}), support=0.002179789928088303, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roma Tomato'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2334096109839817, lift=2.0084686707574377)]),\n"," RelationRecord(items=frozenset({'Organic Romaine', 'Bag of Organic Bananas'}), support=0.0018485473409768451, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20969696969696972, lift=1.8044235291495314)]),\n"," RelationRecord(items=frozenset({'Organic Romaine Lettuce', 'Bag of Organic Bananas'}), support=0.001752380138267067, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine Lettuce'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19854721549636806, lift=1.7084808989204299)]),\n"," RelationRecord(items=frozenset({'Organic Russet Potato', 'Bag of Organic Bananas'}), support=0.0021156784596151174, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Russet Potato'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2302325581395349, lift=1.9811304173045836)]),\n"," RelationRecord(items=frozenset({'Organic Salted Butter', 'Bag of Organic Bananas'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Salted Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24470588235294116, lift=2.105672068018086)]),\n"," RelationRecord(items=frozenset({'Organic Shredded Carrots', 'Bag of Organic Bananas'}), support=0.0011860621667539296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Shredded Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1834710743801653, lift=1.5787520630761795)]),\n"," RelationRecord(items=frozenset({'Organic Shredded Mozzarella', 'Bag of Organic Bananas'}), support=0.0012822293694637076, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Shredded Mozzarella'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2810304449648712, lift=2.4182416562088447)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Small Bunch Celery'}), support=0.004733563422270187, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Small Bunch Celery'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23626666666666668, lift=2.033053377467206)]),\n"," RelationRecord(items=frozenset({'Organic Snipped Green Beans', 'Bag of Organic Bananas'}), support=0.0016027867118296344, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Snipped Green Beans'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2906976744186046, lift=2.501427294576494)]),\n"," RelationRecord(items=frozenset({'Organic Sour Cream', 'Bag of Organic Bananas'}), support=0.0016882686697938815, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sour Cream'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2036082474226804, lift=1.7520306226136806)]),\n"," RelationRecord(items=frozenset({'Organic Spring Mix', 'Bag of Organic Bananas'}), support=0.0024041800677444517, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Spring Mix'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22455089820359284, lift=1.9322402455111845)]),\n"," RelationRecord(items=frozenset({'Organic Spring Mix Salad', 'Bag of Organic Bananas'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Spring Mix Salad'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18342151675485008, lift=1.5783256241758141)]),\n"," RelationRecord(items=frozenset({'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese', 'Bag of Organic Bananas'}), support=0.0025110325151997607, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2554347826086957, lift=2.1979932879735196)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Bag of Organic Bananas'}), support=0.022609977881543376, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bag of Organic Bananas'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.19455682236116217, lift=2.4087828197266945), OrderedStatistic(items_base=frozenset({'Organic Strawberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.27993120783172376, lift=2.4087828197266945)]),\n"," RelationRecord(items=frozenset({'Organic Sunday Bacon', 'Bag of Organic Bananas'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sunday Bacon'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2696335078534031, lift=2.320172039304564)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Thompson Seedless Raisins'}), support=0.001218117900990522, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Thompson Seedless Raisins'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3294797687861271, lift=2.8351437220841555)]),\n"," RelationRecord(items=frozenset({'Organic Tomato Basil Pasta Sauce', 'Bag of Organic Bananas'}), support=0.001335655593191362, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Basil Pasta Sauce'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22851919561243142, lift=1.9663870871442275)]),\n"," RelationRecord(items=frozenset({'Organic Tomato Cluster', 'Bag of Organic Bananas'}), support=0.004712192932779125, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Cluster'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24310915104740902, lift=2.0919323390101017)]),\n"," RelationRecord(items=frozenset({'Organic Tortilla Chips', 'Bag of Organic Bananas'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tortilla Chips'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19915254237288132, lift=1.7136896821488454)]),\n"," RelationRecord(items=frozenset({'Organic Turkey Bacon', 'Bag of Organic Bananas'}), support=0.001121950698280744, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Turkey Bacon'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2464788732394366, lift=2.1209284948380978)]),\n"," RelationRecord(items=frozenset({'Organic Uncured Sliced Black Forest Ham', 'Bag of Organic Bananas'}), support=0.0010685244745530897, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Uncured Sliced Black Forest Ham'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2785515320334262, lift=2.3969108338003178)]),\n"," RelationRecord(items=frozenset({'Organic Unsalted Butter', 'Bag of Organic Bananas'}), support=0.0014638785301377328, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Unsalted Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.25897920604914937, lift=2.228492732302477)]),\n"," RelationRecord(items=frozenset({'Organic Unsweetened Almond Milk', 'Bag of Organic Bananas'}), support=0.004466432303631915, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Unsweetened Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2730241672109732, lift=2.3493483575554754)]),\n"," RelationRecord(items=frozenset({'Organic Unsweetened Vanilla Almond Milk', 'Bag of Organic Bananas'}), support=0.0012608588799726459, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Unsweetened Vanilla Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3017902813299233, lift=2.596878177530667)]),\n"," RelationRecord(items=frozenset({'Organic Whipped Naturally Buttery Spread', 'Bag of Organic Bananas'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whipped Naturally Buttery Spread'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22673031026252982, lift=1.9509938898988026)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic White Onions'}), support=0.0013783965721734857, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic White Onions'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20443740095087162, lift=1.7591654140115136)]),\n"," RelationRecord(items=frozenset({'Organic Whole Cashews', 'Bag of Organic Bananas'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Cashews'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2732394366197183, lift=2.3512007314205197)]),\n"," RelationRecord(items=frozenset({'Organic Whole Grassmilk Milk', 'Bag of Organic Bananas'}), support=0.0012608588799726459, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Grassmilk Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3522388059701493, lift=3.0309831863119125)]),\n"," RelationRecord(items=frozenset({'Organic Whole Kernel Sweet Corn No Salt Added', 'Bag of Organic Bananas'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Kernel Sweet Corn No Salt Added'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21658986175115205, lift=1.8637362441803114)]),\n"," RelationRecord(items=frozenset({'Organic Whole Milk', 'Bag of Organic Bananas'}), support=0.008013933559148173, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22032902467685078, lift=1.8959114042324783)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Whole Strawberries'}), support=0.0029277570602754656, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Strawberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.328537170263789, lift=2.8270327467338374)]),\n"," RelationRecord(items=frozenset({'Organic Whole String Cheese', 'Bag of Organic Bananas'}), support=0.004402320835158729, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole String Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2951289398280802, lift=2.5395579341385197)]),\n"," RelationRecord(items=frozenset({'Organic Whole Wheat Bread', 'Bag of Organic Bananas'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Wheat Bread'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.32094594594594594, lift=2.761710945498643)]),\n"," RelationRecord(items=frozenset({'Organic Yellow Onion', 'Bag of Organic Bananas'}), support=0.007939136845929456, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Onion'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2333542713567839, lift=2.00799247825187)]),\n"," RelationRecord(items=frozenset({'Organic Yellow Peaches', 'Bag of Organic Bananas'}), support=0.0014852490196287946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Peaches'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.30616740088105726, lift=2.634542896860565)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Bag of Organic Bananas'}), support=0.007992563069657111, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22341696535244923, lift=1.922482855501992)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Original Hummus'}), support=0.004145874961265988, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Hummus'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19477911646586343, lift=1.6760567462937441)]),\n"," RelationRecord(items=frozenset({'Original Orange Juice', 'Bag of Organic Bananas'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Orange Juice'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1291208791208791, lift=1.1110735301844163)]),\n"," RelationRecord(items=frozenset({'Original Pure Creamy Almond Milk', 'Bag of Organic Bananas'}), support=0.001047153985062028, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Pure Creamy Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24197530864197533, lift=2.0821757272780936)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Original Veggie Straws'}), support=0.0013035998589547694, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Veggie Straws'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2494887525562372, lift=2.146828235149004)]),\n"," RelationRecord(items=frozenset({'Oven Roasted Turkey Breast', 'Bag of Organic Bananas'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Oven Roasted Turkey Breast'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15262321144674088, lift=1.3133089821318626)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Pineapple Chunks'}), support=0.001752380138267067, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pineapple Chunks'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.212987012987013, lift=1.8327340552055522)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Pure Irish Butter'}), support=0.0021370489491061794, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Irish Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.189753320683112, lift=1.632810226440824)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Pure Sparkling Water'}), support=0.0013249703484458312, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Sparkling Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14553990610328638, lift=1.2523577779044006)]),\n"," RelationRecord(items=frozenset({'Raspberries', 'Bag of Organic Bananas'}), support=0.004113819227029395, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Raspberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1676099259904223, lift=1.4422683103774963)]),\n"," RelationRecord(items=frozenset({'Red Peppers', 'Bag of Organic Bananas'}), support=0.002703366920619317, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.119678334910123, lift=1.029821288086951)]),\n"," RelationRecord(items=frozenset({'Red Raspberries', 'Bag of Organic Bananas'}), support=0.001966085033177685, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Raspberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.17829457364341084, lift=1.534208740673583)]),\n"," RelationRecord(items=frozenset({'Red Vine Tomato', 'Bag of Organic Bananas'}), support=0.0025644587389274153, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Vine Tomato'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14751075599262448, lift=1.2693167636154603)]),\n"," RelationRecord(items=frozenset({'Roasted Turkey Breast', 'Bag of Organic Bananas'}), support=0.0013035998589547694, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roasted Turkey Breast'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1903276131045242, lift=1.637751960979506)]),\n"," RelationRecord(items=frozenset({'Romaine Hearts', 'Bag of Organic Bananas'}), support=0.0011753769220083986, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Romaine Hearts'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1532033426183844, lift=1.3183009585901746)]),\n"," RelationRecord(items=frozenset({'Russet Potato', 'Bag of Organic Bananas'}), support=0.0012822293694637076, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Russet Potato'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1137440758293839, lift=0.9787575234134378)]),\n"," RelationRecord(items=frozenset({'Sea Salt Pita Chips', 'Bag of Organic Bananas'}), support=0.0011967474114994603, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sea Salt Pita Chips'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22489959839357426, lift=1.9352407792257662)]),\n"," RelationRecord(items=frozenset({'Seedless Red Grapes', 'Bag of Organic Bananas'}), support=0.005876884610041993, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Seedless Red Grapes'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19386676066267186, lift=1.6682060068166118)]),\n"," RelationRecord(items=frozenset({'Sharp Cheddar Cheese', 'Bag of Organic Bananas'}), support=0.0016668981803028198, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sharp Cheddar Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.16974972796517954, lift=1.46068111355988)]),\n"," RelationRecord(items=frozenset({'Shredded Mild Cheddar Cheese', 'Bag of Organic Bananas'}), support=0.0013890818169190165, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Mild Cheddar Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1761517615176152, lift=1.5157700354127484)]),\n"," RelationRecord(items=frozenset({'Shredded Mozzarella', 'Bag of Organic Bananas'}), support=0.001218117900990522, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Mozzarella'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.16838995568685378, lift=1.4489803956294212)]),\n"," RelationRecord(items=frozenset({'Shredded Parmesan', 'Bag of Organic Bananas'}), support=0.001859232585722376, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Parmesan'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18277310924369747, lift=1.572746135968179)]),\n"," RelationRecord(items=frozenset({'Small Hass Avocado', 'Bag of Organic Bananas'}), support=0.0038894290873732465, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Small Hass Avocado'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1625, lift=1.3982978576682603)]),\n"," RelationRecord(items=frozenset({'Sourdough Bread', 'Bag of Organic Bananas'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sourdough Bread'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18476190476190474, lift=1.5898595421986372)]),\n"," RelationRecord(items=frozenset({'Sparkling Lemon Water', 'Bag of Organic Bananas'}), support=0.0014638785301377328, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Lemon Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.12924528301886792, lift=1.1121440145169907)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Sparkling Natural Mineral Water'}), support=0.0023186981097802046, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Natural Mineral Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.16913484021823852, lift=1.455390059902932)]),\n"," RelationRecord(items=frozenset({'Sparkling Water Grapefruit', 'Bag of Organic Bananas'}), support=0.0035581865002617887, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Water Grapefruit'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.13438256658595643, lift=1.1563498767083398)]),\n"," RelationRecord(items=frozenset({'Spring Water', 'Bag of Organic Bananas'}), support=0.0031628324446771453, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Spring Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19023136246786632, lift=1.636923732923888)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Bag of Organic Bananas'}), support=0.005780717407332215, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Strawberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1177622986504136, lift=1.0133339687197735)]),\n"," RelationRecord(items=frozenset({'Sugar Snap Peas', 'Bag of Organic Bananas'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sugar Snap Peas'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22391304347826085, lift=1.9267515630746597)]),\n"," RelationRecord(items=frozenset({'Super Greens Salad', 'Bag of Organic Bananas'}), support=0.0012608588799726459, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Super Greens Salad'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24894514767932494, lift=2.1421505641655925)]),\n"," RelationRecord(items=frozenset({'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale', 'Bag of Organic Bananas'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.168141592920354, lift=1.446843256402829)]),\n"," RelationRecord(items=frozenset({'Sustainably Soft Bath Tissue', 'Bag of Organic Bananas'}), support=0.0010685244745530897, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sustainably Soft Bath Tissue'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.17094017094017094, lift=1.4709247680928446)]),\n"," RelationRecord(items=frozenset({'Sweet Onion', 'Bag of Organic Bananas'}), support=0.0014104523064100783, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sweet Onion'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2, lift=1.7209819786686282)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Total 0% Greek Yogurt'}), support=0.001143321187771806, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Greek Yogurt'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14597544338335608, lift=1.2561055369545922)]),\n"," RelationRecord(items=frozenset({'Total 0% Nonfat Greek Yogurt', 'Bag of Organic Bananas'}), support=0.0011860621667539296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Nonfat Greek Yogurt'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15677966101694915, lift=1.3490748561597297)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Total 2% with Strawberry Lowfat Greek Strained Yogurt'}), support=0.0013890818169190165, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% with Strawberry Lowfat Greek Strained Yogurt'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18624641833810887, lift=1.6026336477573184)]),\n"," RelationRecord(items=frozenset({'Total Greek Strained Yogurt', 'Bag of Organic Bananas'}), support=0.0012394883904815839, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total Greek Strained Yogurt'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.17058823529411762, lift=1.4678963935703002)]),\n"," RelationRecord(items=frozenset({'Trilogy Kombucha Drink', 'Bag of Organic Bananas'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Trilogy Kombucha Drink'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20869565217391306, lift=1.7958072820890034)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Uncured Genoa Salami'}), support=0.0027247374101103785, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Uncured Genoa Salami'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20047169811320753, lift=1.7250408984296388)]),\n"," RelationRecord(items=frozenset({'Uncured Hickory Smoked Sunday Bacon', 'Bag of Organic Bananas'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Uncured Hickory Smoked Sunday Bacon'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18055555555555555, lift=1.553664286298067)]),\n"," RelationRecord(items=frozenset({'Unsalted Butter', 'Bag of Organic Bananas'}), support=0.0011860621667539296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsalted Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.10925196850393702, lift=0.9401033446467408)]),\n"," RelationRecord(items=frozenset({'Unsweetened Almondmilk', 'Bag of Organic Bananas'}), support=0.003312425871114578, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Almondmilk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19859064702114032, lift=1.7088546232776258)]),\n"," RelationRecord(items=frozenset({'Unsweetened Original Almond Breeze Almond Milk', 'Bag of Organic Bananas'}), support=0.0016027867118296344, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Original Almond Breeze Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14191106906338694, lift=1.22113196215844)]),\n"," RelationRecord(items=frozenset({'Unsweetened Vanilla Almond Milk', 'Bag of Organic Bananas'}), support=0.0016348424460662272, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Vanilla Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.17505720823798626, lift=1.5063515030680783)]),\n"," RelationRecord(items=frozenset({'Vanilla Almond Breeze Almond Milk', 'Bag of Organic Bananas'}), support=0.0013035998589547694, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Vanilla Almond Breeze Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.13800904977375567, lift=1.187555437769076)]),\n"," RelationRecord(items=frozenset({'Watermelon Chunks', 'Bag of Organic Bananas'}), support=0.001560045732847511, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Watermelon Chunks'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24132231404958676, lift=2.0765567676497496)]),\n"," RelationRecord(items=frozenset({'Whipped Cream Cheese', 'Bag of Organic Bananas'}), support=0.0020088260121598083, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Whipped Cream Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2480211081794195, lift=2.134199287531016)]),\n"," RelationRecord(items=frozenset({'Whole Milk Plain Yogurt', 'Bag of Organic Bananas'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Whole Milk Plain Yogurt'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24808184143222506, lift=2.1347218916989377)]),\n"," RelationRecord(items=frozenset({'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry', 'Bag of Organic Bananas'}), support=0.0013035998589547694, ordered_statistics=[OrderedStatistic(items_base=frozenset({'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24746450304259637, lift=2.1294097504824814)]),\n"," RelationRecord(items=frozenset({'Baked Aged White Cheddar Rice and Corn Puffs', 'Banana'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baked Aged White Cheddar Rice and Corn Puffs'}), items_add=frozenset({'Banana'}), confidence=0.2727272727272727, lift=1.9440724558402978)]),\n"," RelationRecord(items=frozenset({'Baked Aged White Cheddar Rice and Corn Puffs', 'Organic Strawberries'}), support=0.0010898949640441515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baked Aged White Cheddar Rice and Corn Puffs'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.25757575757575757, lift=3.189012094753595)]),\n"," RelationRecord(items=frozenset({'Bartlett Pears', 'Banana'}), support=0.0033551668500967015, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Banana'}), confidence=0.3711583924349882, lift=2.64571562745169)]),\n"," RelationRecord(items=frozenset({'Basil Pesto', 'Banana'}), support=0.0012929146142092384, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Basil Pesto'}), items_add=frozenset({'Banana'}), confidence=0.23586744639376217, lift=1.6813258211328372)]),\n"," RelationRecord(items=frozenset({'Berry Medley', 'Banana'}), support=0.0014745637748832638, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Berry Medley'}), items_add=frozenset({'Banana'}), confidence=0.2948717948717949, lift=2.1019244928529717)]),\n"," RelationRecord(items=frozenset({'Black Beans', 'Banana'}), support=0.0012715441247181766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Black Beans'}), items_add=frozenset({'Banana'}), confidence=0.2279693486590038, lift=1.6250260821806832)]),\n"," RelationRecord(items=frozenset({'Blackberries', 'Banana'}), support=0.001335655593191362, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Banana'}), confidence=0.164257555847569, lift=1.170871496618664)]),\n"," RelationRecord(items=frozenset({'Blueberries', 'Banana'}), support=0.005374678107002041, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blueberries'}), items_add=frozenset({'Banana'}), confidence=0.2990487514863258, lift=2.13169894929932)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breast', 'Banana'}), support=0.0017951211172491906, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breast'}), items_add=frozenset({'Banana'}), confidence=0.2413793103448276, lift=1.7206158517207235)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breasts', 'Banana'}), support=0.004797674890743372, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Banana'}), confidence=0.2881899871630295, lift=2.0542947923395873)]),\n"," RelationRecord(items=frozenset({'Broccoli Crown', 'Banana'}), support=0.006870612371376366, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Banana'}), confidence=0.3061904761904762, lift=2.1826070603426073)]),\n"," RelationRecord(items=frozenset({'Brussels Sprouts', 'Banana'}), support=0.0015173047538653874, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Brussels Sprouts'}), items_add=frozenset({'Banana'}), confidence=0.17253948967193197, lift=1.2299073211917966)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Banana'}), support=0.003836002863645592, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Banana'}), confidence=0.24913254684247052, lift=1.775882981289229)]),\n"," RelationRecord(items=frozenset({'Cage Free Brown Eggs-Large, Grade A', 'Banana'}), support=0.0014852490196287946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cage Free Brown Eggs-Large, Grade A'}), items_add=frozenset({'Banana'}), confidence=0.281947261663286, lift=2.009794986463702)]),\n"," RelationRecord(items=frozenset({'Cantaloupe', 'Banana'}), support=0.0024148653124899827, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Banana'}), confidence=0.27228915662650605, lift=1.940949447879109)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Banana'}), support=0.004028337269065148, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Banana'}), confidence=0.20817228050800662, lift=1.483907320885278)]),\n"," RelationRecord(items=frozenset({'Cherubs Heavenly Salad Tomatoes', 'Banana'}), support=0.0019447145436866232, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cherubs Heavenly Salad Tomatoes'}), items_add=frozenset({'Banana'}), confidence=0.24137931034482762, lift=1.7206158517207237)]),\n"," RelationRecord(items=frozenset({'Citrus Mandarins Organic', 'Banana'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Citrus Mandarins Organic'}), items_add=frozenset({'Banana'}), confidence=0.22535211267605634, lift=1.606369728769448)]),\n"," RelationRecord(items=frozenset({'Classic Hummus', 'Banana'}), support=0.0013677113274279547, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Classic Hummus'}), items_add=frozenset({'Banana'}), confidence=0.26069246435845217, lift=1.8582851444827833)]),\n"," RelationRecord(items=frozenset({'Clementines, Bag', 'Banana'}), support=0.0033337963606056395, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines, Bag'}), items_add=frozenset({'Banana'}), confidence=0.30558276199804113, lift=2.1782751121266415)]),\n"," RelationRecord(items=frozenset({'Creamy Almond Butter', 'Banana'}), support=0.001121950698280744, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Creamy Almond Butter'}), items_add=frozenset({'Banana'}), confidence=0.17918088737201363, lift=1.2772489684274992)]),\n"," RelationRecord(items=frozenset({'Creamy Peanut Butter', 'Banana'}), support=0.0014852490196287946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Creamy Peanut Butter'}), items_add=frozenset({'Banana'}), confidence=0.19093406593406592, lift=1.3610287477013807)]),\n"," RelationRecord(items=frozenset({'Cucumber Kirby', 'Banana'}), support=0.005834143631059869, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cucumber Kirby'}), items_add=frozenset({'Banana'}), confidence=0.31040363843092666, lift=2.21263960010931)]),\n"," RelationRecord(items=frozenset({'Diced Tomatoes', 'Banana'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Diced Tomatoes'}), items_add=frozenset({'Banana'}), confidence=0.24731182795698928, lift=1.7629044133605571)]),\n"," RelationRecord(items=frozenset({'Dressing, Jersey Sweet Onion, Calorie Free', 'Banana'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Dressing, Jersey Sweet Onion, Calorie Free'}), items_add=frozenset({'Banana'}), confidence=0.2516411378555799, lift=1.7937648844915952)]),\n"," RelationRecord(items=frozenset({'Eggo Homestyle Waffles', 'Banana'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Eggo Homestyle Waffles'}), items_add=frozenset({'Banana'}), confidence=0.290519877675841, lift=2.0709028709002153)]),\n"," RelationRecord(items=frozenset({'English Seedless Cucumber', 'Banana'}), support=0.0012608588799726459, ordered_statistics=[OrderedStatistic(items_base=frozenset({'English Seedless Cucumber'}), items_add=frozenset({'Banana'}), confidence=0.2197392923649907, lift=1.5663600544262613)]),\n"," RelationRecord(items=frozenset({'European Cucumber', 'Banana'}), support=0.0013570260826824237, ordered_statistics=[OrderedStatistic(items_base=frozenset({'European Cucumber'}), items_add=frozenset({'Banana'}), confidence=0.2899543378995434, lift=2.066871553127014)]),\n"," RelationRecord(items=frozenset({'Extra Virgin Olive Oil', 'Banana'}), support=0.002681996431128255, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Extra Virgin Olive Oil'}), items_add=frozenset({'Banana'}), confidence=0.1681178834561286, lift=1.1983889373911727)]),\n"," RelationRecord(items=frozenset({'Ezekiel 4:9 Bread Organic Sprouted Whole Grain', 'Banana'}), support=0.0010685244745530897, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ezekiel 4:9 Bread Organic Sprouted Whole Grain'}), items_add=frozenset({'Banana'}), confidence=0.20040080160320642, lift=1.4285101545920693)]),\n"," RelationRecord(items=frozenset({'Fat Free Milk', 'Banana'}), support=0.0019874555226687468, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fat Free Milk'}), items_add=frozenset({'Banana'}), confidence=0.21428571428571427, lift=1.527485501017377)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Banana'}), support=0.002692681675873786, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Banana'}), confidence=0.23728813559322035, lift=1.691452871183084)]),\n"," RelationRecord(items=frozenset({'Flat Parsley, Bunch', 'Banana'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Flat Parsley, Bunch'}), items_add=frozenset({'Banana'}), confidence=0.2066805845511482, lift=1.4732741158038165)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Banana'}), support=0.004039022513810679, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Banana'}), confidence=0.19852941176470587, lift=1.415170390648452)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Banana'}), support=0.0020301965016508703, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Banana'}), confidence=0.20810514786418402, lift=1.4834287815648861)]),\n"," RelationRecord(items=frozenset({'Frozen Broccoli Florets', 'Banana'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Broccoli Florets'}), items_add=frozenset({'Banana'}), confidence=0.2302771855010661, lift=1.6414769563171812)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Banana'}), support=0.0014638785301377328, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Banana'}), confidence=0.1800262812089356, lift=1.2832751602940555)]),\n"," RelationRecord(items=frozenset({'Gala Apples', 'Banana'}), support=0.0028422751023112185, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Gala Apples'}), items_add=frozenset({'Banana'}), confidence=0.386066763425254, lift=2.751986456598312)]),\n"," RelationRecord(items=frozenset({'Garlic', 'Banana'}), support=0.0031521471999316143, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Banana'}), confidence=0.21376811594202896, lift=1.523795922512504)]),\n"," RelationRecord(items=frozenset({'Grade A Large Eggs Cage Free Omega 3', 'Banana'}), support=0.001143321187771806, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grade A Large Eggs Cage Free Omega 3'}), items_add=frozenset({'Banana'}), confidence=0.27720207253886014, lift=1.9759700177236883)]),\n"," RelationRecord(items=frozenset({'Grade A Large White Eggs', 'Banana'}), support=0.0015173047538653874, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grade A Large White Eggs'}), items_add=frozenset({'Banana'}), confidence=0.30537634408602155, lift=2.176803710410427)]),\n"," RelationRecord(items=frozenset({'Granny Smith Apples', 'Banana'}), support=0.003483389787043072, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Granny Smith Apples'}), items_add=frozenset({'Banana'}), confidence=0.3199214916584887, lift=2.2804853865369017)]),\n"," RelationRecord(items=frozenset({'Grape White/Green Seedless', 'Banana'}), support=0.0031414619551860833, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Banana'}), confidence=0.2757973733583489, lift=1.965956948776586)]),\n"," RelationRecord(items=frozenset({'Grapefruit Sparkling Water', 'Banana'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grapefruit Sparkling Water'}), items_add=frozenset({'Banana'}), confidence=0.19958847736625515, lift=1.4227196916197518)]),\n"," RelationRecord(items=frozenset({'Grated Parmesan', 'Banana'}), support=0.0024789767809631678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Banana'}), confidence=0.1883116883116883, lift=1.3423357433183007)]),\n"," RelationRecord(items=frozenset({'Green Beans', 'Banana'}), support=0.0025324030046908223, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Banana'}), confidence=0.28180737217598095, lift=2.0087978170335536)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Banana'}), support=0.004904527338198681, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Banana'}), confidence=0.24703982777179764, lift=1.7609655237778372)]),\n"," RelationRecord(items=frozenset({'Green Onions', 'Banana'}), support=0.002436235801981044, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Onions'}), items_add=frozenset({'Banana'}), confidence=0.21489161168708765, lift=1.5318044986639858)]),\n"," RelationRecord(items=frozenset({'Green Peas', 'Banana'}), support=0.001047153985062028, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Peas'}), items_add=frozenset({'Banana'}), confidence=0.27605633802816903, lift=1.967802917742574)]),\n"," RelationRecord(items=frozenset({'Ground Turkey Breast', 'Banana'}), support=0.0015386752433564491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Banana'}), confidence=0.2042553191489362, lift=1.4559861796931595)]),\n"," RelationRecord(items=frozenset({'Half & Half', 'Banana'}), support=0.0039535405558464316, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Half & Half'}), items_add=frozenset({'Banana'}), confidence=0.21034678794769754, lift=1.499407787619862)]),\n"," RelationRecord(items=frozenset({'Hass Avocado', 'Banana'}), support=0.002681996431128255, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocado'}), items_add=frozenset({'Banana'}), confidence=0.21508140531276776, lift=1.5331573980505746)]),\n"," RelationRecord(items=frozenset({'Hass Avocados', 'Banana'}), support=0.001741694893521536, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Banana'}), confidence=0.10448717948717948, lift=0.7448123746413791)]),\n"," RelationRecord(items=frozenset({'Hint Of Sea Salt Almond Nut Thins', 'Banana'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hint Of Sea Salt Almond Nut Thins'}), items_add=frozenset({'Banana'}), confidence=0.2654155495978552, lift=1.891952550857984)]),\n"," RelationRecord(items=frozenset({'Honey Nut Cheerios', 'Banana'}), support=0.0024789767809631678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honey Nut Cheerios'}), items_add=frozenset({'Banana'}), confidence=0.27230046948356806, lift=1.9410300889297496)]),\n"," RelationRecord(items=frozenset({'Honeycrisp Apple', 'Banana'}), support=0.009114513767937855, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Banana'}), confidence=0.3405189620758483, lift=2.4273096278309403)]),\n"," RelationRecord(items=frozenset({'Iceberg Lettuce', 'Banana'}), support=0.0013035998589547694, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Iceberg Lettuce'}), items_add=frozenset({'Banana'}), confidence=0.2332695984703633, lift=1.6628076709609176)]),\n"," RelationRecord(items=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt', 'Banana'}), support=0.0014745637748832638, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.2732673267326733, lift=1.9479221042677046)]),\n"," RelationRecord(items=frozenset({'Italian Sparkling Mineral Water', 'Banana'}), support=0.0013249703484458312, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Italian Sparkling Mineral Water'}), items_add=frozenset({'Banana'}), confidence=0.15636822194199243, lift=1.1146342285692166)]),\n"," RelationRecord(items=frozenset({'Jalapeno Peppers', 'Banana'}), support=0.0030666652419673673, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Banana'}), confidence=0.19972164231036882, lift=1.423668926719513)]),\n"," RelationRecord(items=frozenset({'Kale Greens', 'Banana'}), support=0.001143321187771806, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Kale Greens'}), items_add=frozenset({'Banana'}), confidence=0.24429223744292242, lift=1.7413799699574057)]),\n"," RelationRecord(items=frozenset({'Large Alfresco Eggs', 'Banana'}), support=0.002179789928088303, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Banana'}), confidence=0.1501103752759382, lift=1.070026635002607)]),\n"," RelationRecord(items=frozenset({'Large Grapefruit', 'Banana'}), support=0.0014638785301377328, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Grapefruit'}), items_add=frozenset({'Banana'}), confidence=0.23339011925042588, lift=1.66366677510013)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Banana'}), support=0.01630568348168015, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Banana'}), items_add=frozenset({'Large Lemon'}), confidence=0.11623124381140985, lift=1.8414988005042179), OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Banana'}), confidence=0.2583375656001355, lift=1.841498800504218)]),\n"," RelationRecord(items=frozenset({'Lemonade', 'Banana'}), support=0.001121950698280744, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lemonade'}), items_add=frozenset({'Banana'}), confidence=0.18617021276595744, lift=1.327070736699494)]),\n"," RelationRecord(items=frozenset({'Lightly Salted Baked Snap Pea Crisps', 'Banana'}), support=0.001656212935557289, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lightly Salted Baked Snap Pea Crisps'}), items_add=frozenset({'Banana'}), confidence=0.21708683473389356, lift=1.5474526317496302)]),\n"," RelationRecord(items=frozenset({'Lime Sparkling Water', 'Banana'}), support=0.0030773504867128982, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lime Sparkling Water'}), items_add=frozenset({'Banana'}), confidence=0.2001389854065323, lift=1.426643859185097)]),\n"," RelationRecord(items=frozenset({'Limes', 'Banana'}), support=0.009926592368598202, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Banana'}), confidence=0.21185860889395663, lift=1.5101844489724061)]),\n"," RelationRecord(items=frozenset({'Macaroni & Cheese', 'Banana'}), support=0.0010898949640441515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Macaroni & Cheese'}), items_add=frozenset({'Banana'}), confidence=0.2052313883299799, lift=1.4629438601293188)]),\n"," RelationRecord(items=frozenset({'Mandarin Oranges', 'Banana'}), support=0.0012822293694637076, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Mandarin Oranges'}), items_add=frozenset({'Banana'}), confidence=0.3468208092485549, lift=2.4722308686986447)]),\n"," RelationRecord(items=frozenset({'Mango Chunks', 'Banana'}), support=0.0018164916067402524, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Mango Chunks'}), items_add=frozenset({'Banana'}), confidence=0.3366336633663366, lift=2.3996141864167373)]),\n"," RelationRecord(items=frozenset({'Marinara Pasta Sauce', 'Banana'}), support=0.0010685244745530897, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Marinara Pasta Sauce'}), items_add=frozenset({'Banana'}), confidence=0.26737967914438504, lift=1.9059533880787236)]),\n"," RelationRecord(items=frozenset({'Marinara Sauce', 'Banana'}), support=0.001121950698280744, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Marinara Sauce'}), items_add=frozenset({'Banana'}), confidence=0.18356643356643357, lift=1.3085103068155852)]),\n"," RelationRecord(items=frozenset({'Medium Navel Orange', 'Banana'}), support=0.0019233440541955612, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Medium Navel Orange'}), items_add=frozenset({'Banana'}), confidence=0.31802120141342755, lift=2.2669396128173083)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Banana'}), support=0.0049579535619263355, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Banana'}), confidence=0.2452431289640592, lift=1.748158177344764)]),\n"," RelationRecord(items=frozenset({'Mini Original Babybel Cheese', 'Banana'}), support=0.0010792097192986205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Mini Original Babybel Cheese'}), items_add=frozenset({'Banana'}), confidence=0.2576530612244898, lift=1.8366194714613697)]),\n"," RelationRecord(items=frozenset({'No Salt Added Black Beans', 'Banana'}), support=0.002671311186382724, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Banana'}), confidence=0.27442371020856204, lift=1.9561651129018733)]),\n"," RelationRecord(items=frozenset({'Non Fat Raspberry Yogurt', 'Banana'}), support=0.0012715441247181766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Non Fat Raspberry Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.2938271604938272, lift=2.094478061477325)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Banana'}), support=0.003718465171444752, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Banana'}), confidence=0.258160237388724, lift=1.8402347579022402)]),\n"," RelationRecord(items=frozenset({'Orange Juice', 'Banana'}), support=0.0012394883904815839, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Juice'}), items_add=frozenset({'Banana'}), confidence=0.2871287128712871, lift=2.0467297472378054)]),\n"," RelationRecord(items=frozenset({'Orange Sparkling Water', 'Banana'}), support=0.0010898949640441515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Sparkling Water'}), items_add=frozenset({'Banana'}), confidence=0.20400000000000001, lift=1.4541661969685429)]),\n"," RelationRecord(items=frozenset({'Organic 2% Reduced Fat Milk', 'Banana'}), support=0.0015707309775930417, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic 2% Reduced Fat Milk'}), items_add=frozenset({'Banana'}), confidence=0.22755417956656346, lift=1.6220666465912084)]),\n"," RelationRecord(items=frozenset({'Organic American Cheese Singles', 'Banana'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic American Cheese Singles'}), items_add=frozenset({'Banana'}), confidence=0.20127118644067796, lift=1.4347144889499372)]),\n"," RelationRecord(items=frozenset({'Organic AppleApple', 'Banana'}), support=0.0010792097192986205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic AppleApple'}), items_add=frozenset({'Banana'}), confidence=0.22544642857142858, lift=1.6070420375286987)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Banana'}), support=0.016989539145394125, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Banana'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12110594866326452, lift=2.121269402498397), OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Banana'}), confidence=0.29758562605277933, lift=2.121269402498397)]),\n"," RelationRecord(items=frozenset({'Organic Baby Arugula', 'Banana'}), support=0.004541229016850631, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Banana'}), confidence=0.1971243042671614, lift=1.4051544111090588)]),\n"," RelationRecord(items=frozenset({'Organic Baby Broccoli', 'Banana'}), support=0.0016882686697938815, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Banana'}), confidence=0.15991902834008095, lift=1.1399453199225498)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Banana'}), support=0.005449474820220757, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Banana'}), confidence=0.20286396181384247, lift=1.4460682149647401)]),\n"," RelationRecord(items=frozenset({'Organic Baby Kale', 'Banana'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Kale'}), items_add=frozenset({'Banana'}), confidence=0.2159090909090909, lift=1.5390573608735691)]),\n"," RelationRecord(items=frozenset({'Organic Baby Rainbow Carrots', 'Banana'}), support=0.0012608588799726459, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Rainbow Carrots'}), items_add=frozenset({'Banana'}), confidence=0.17987804878048783, lift=1.2822185201629608)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Banana'}), support=0.014799063972560292, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Banana'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.10549165968466753, lift=1.4093715852832236), OrderedStatistic(items_base=frozenset({'Organic Baby Spinach'}), items_add=frozenset({'Banana'}), confidence=0.1977159172019986, lift=1.4093715852832236)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach Salad', 'Banana'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Spinach Salad'}), items_add=frozenset({'Banana'}), confidence=0.19675456389452334, lift=1.4025188035034468)]),\n"," RelationRecord(items=frozenset({'Organic Bartlett Pear', 'Banana'}), support=0.0015386752433564491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bartlett Pear'}), items_add=frozenset({'Banana'}), confidence=0.21686746987951808, lift=1.5458889407886707)]),\n"," RelationRecord(items=frozenset({'Organic Basil', 'Banana'}), support=0.001741694893521536, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Basil'}), items_add=frozenset({'Banana'}), confidence=0.17717391304347826, lift=1.2629427222179908)]),\n"," RelationRecord(items=frozenset({'Organic Bell Pepper', 'Banana'}), support=0.0012608588799726459, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bell Pepper'}), items_add=frozenset({'Banana'}), confidence=0.178517397881997, lift=1.2725194390724694)]),\n"," RelationRecord(items=frozenset({'Organic Black Beans', 'Banana'}), support=0.0020515669911419323, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Black Beans'}), items_add=frozenset({'Banana'}), confidence=0.16753926701570682, lift=1.1942644056819982)]),\n"," RelationRecord(items=frozenset({'Organic Blackberries', 'Banana'}), support=0.004754933911761249, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blackberries'}), items_add=frozenset({'Banana'}), confidence=0.2327405857740586, lift=1.6590367279181066)]),\n"," RelationRecord(items=frozenset({'Organic Blueberries', 'Banana'}), support=0.006956094329340613, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blueberries'}), items_add=frozenset({'Banana'}), confidence=0.18836805555555555, lift=1.342737544007752)]),\n"," RelationRecord(items=frozenset({'Organic Bosc Pear', 'Banana'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bosc Pear'}), items_add=frozenset({'Banana'}), confidence=0.20245398773006132, lift=1.4431458107771535)]),\n"," RelationRecord(items=frozenset({'Organic Bread with 21 Whole Grains', 'Banana'}), support=0.0015386752433564491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bread with 21 Whole Grains'}), items_add=frozenset({'Banana'}), confidence=0.22429906542056077, lift=1.5988633281677218)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli', 'Banana'}), support=0.0016348424460662272, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli'}), items_add=frozenset({'Banana'}), confidence=0.13010204081632654, lift=0.9274019113319789)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli Florets', 'Banana'}), support=0.00143182279590114, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli Florets'}), items_add=frozenset({'Banana'}), confidence=0.1391484942886812, lift=0.9918874350670125)]),\n"," RelationRecord(items=frozenset({'Organic Brown Rice', 'Banana'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Brown Rice'}), items_add=frozenset({'Banana'}), confidence=0.23357664233576647, lift=1.6649963612062895)]),\n"," RelationRecord(items=frozenset({'Organic Carrot Bunch', 'Banana'}), support=0.001859232585722376, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Carrot Bunch'}), items_add=frozenset({'Banana'}), confidence=0.13998390989541432, lift=0.997842499457852)]),\n"," RelationRecord(items=frozenset({'Organic Celery Hearts', 'Banana'}), support=0.0013249703484458312, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Celery Hearts'}), items_add=frozenset({'Banana'}), confidence=0.1587708066581306, lift=1.1317604907239291)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Banana'}), support=0.004509173282614038, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Banana'}), confidence=0.16542532340258723, lift=1.179195653993292)]),\n"," RelationRecord(items=frozenset({'Organic Coconut Milk', 'Banana'}), support=0.0014638785301377328, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Banana'}), confidence=0.18026315789473685, lift=1.284963680241811)]),\n"," RelationRecord(items=frozenset({'Organic Creamy Peanut Butter', 'Banana'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Creamy Peanut Butter'}), items_add=frozenset({'Banana'}), confidence=0.2037735849056604, lift=1.4525522500240717)]),\n"," RelationRecord(items=frozenset({'Organic Cucumber', 'Banana'}), support=0.005866199365296462, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Banana'}), confidence=0.1681470137825421, lift=1.1985965860969432)]),\n"," RelationRecord(items=frozenset({\"Organic D'Anjou Pears\", 'Banana'}), support=0.002767478389092502, ordered_statistics=[OrderedStatistic(items_base=frozenset({\"Organic D'Anjou Pears\"}), items_add=frozenset({'Banana'}), confidence=0.1987720644666155, lift=1.4169000835735504)]),\n"," RelationRecord(items=frozenset({'Organic Egg Whites', 'Banana'}), support=0.0012501736352271149, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Egg Whites'}), items_add=frozenset({'Banana'}), confidence=0.1927512355848435, lift=1.3739820157421545)]),\n"," RelationRecord(items=frozenset({'Organic Extra Firm Tofu', 'Banana'}), support=0.002072937480632994, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Banana'}), confidence=0.23067776456599287, lift=1.644332390314386)]),\n"," RelationRecord(items=frozenset({'Organic Fat Free Milk', 'Banana'}), support=0.0013677113274279547, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fat Free Milk'}), items_add=frozenset({'Banana'}), confidence=0.22495606326889278, lift=1.60354658337618)]),\n"," RelationRecord(items=frozenset({'Organic Fuji Apple', 'Banana'}), support=0.009328218662848473, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apple'}), items_add=frozenset({'Banana'}), confidence=0.3738758029978587, lift=2.665086051882139)]),\n"," RelationRecord(items=frozenset({'Organic Gala Apples', 'Banana'}), support=0.004797674890743372, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Gala Apples'}), items_add=frozenset({'Banana'}), confidence=0.23324675324675323, lift=1.6626448241377023)]),\n"," RelationRecord(items=frozenset({'Organic Garbanzo Beans', 'Banana'}), support=0.0015707309775930417, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garbanzo Beans'}), items_add=frozenset({'Banana'}), confidence=0.1783980582524272, lift=1.2716687544877676)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Banana'}), support=0.005214399435819078, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Banana'}), confidence=0.16331994645247658, lift=1.164187967754431)]),\n"," RelationRecord(items=frozenset({'Organic Garnet Sweet Potato (Yam)', 'Banana'}), support=0.004423691324649791, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Banana'}), confidence=0.22759758108851016, lift=1.6223760241701881)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Banana'}), support=0.0022225309070704265, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Banana'}), confidence=0.14576033637000702, lift=1.0390184020001405)]),\n"," RelationRecord(items=frozenset({'Organic Grade A Free Range Large Brown Eggs', 'Banana'}), support=0.002681996431128255, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Free Range Large Brown Eggs'}), items_add=frozenset({'Banana'}), confidence=0.20160642570281123, lift=1.4371041634739123)]),\n"," RelationRecord(items=frozenset({'Organic Grade A Large Brown Eggs', 'Banana'}), support=0.0013035998589547694, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Large Brown Eggs'}), items_add=frozenset({'Banana'}), confidence=0.20367278797996663, lift=1.4518337427588648)]),\n"," RelationRecord(items=frozenset({'Organic Granny Smith Apple', 'Banana'}), support=0.003504760276534134, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Banana'}), confidence=0.19794809897404947, lift=1.411026638638462)]),\n"," RelationRecord(items=frozenset({'Organic Grape Tomatoes', 'Banana'}), support=0.006443202581555131, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grape Tomatoes'}), items_add=frozenset({'Banana'}), confidence=0.2247484159522922, lift=1.6020664181374948)]),\n"," RelationRecord(items=frozenset({'Organic Green Cabbage', 'Banana'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Green Cabbage'}), items_add=frozenset({'Banana'}), confidence=0.16901408450704225, lift=1.204777296577086)]),\n"," RelationRecord(items=frozenset({'Organic Green Leaf Lettuce', 'Banana'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Green Leaf Lettuce'}), items_add=frozenset({'Banana'}), confidence=0.23111111111111113, lift=1.6474213996157785)]),\n"," RelationRecord(items=frozenset({'Organic Half & Half', 'Banana'}), support=0.0039107995768643085, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Half & Half'}), items_add=frozenset({'Banana'}), confidence=0.1875, lift=1.3365498133902047)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Banana'}), support=0.0071591139795057004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Hass Avocado'}), items_add=frozenset({'Banana'}), confidence=0.1294435857805255, lift=0.9227082689041084)]),\n"," RelationRecord(items=frozenset({'Organic Hothouse Cucumbers', 'Banana'}), support=0.001132635943026275, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Hothouse Cucumbers'}), items_add=frozenset({'Banana'}), confidence=0.15844544095665172, lift=1.1294411975634218)]),\n"," RelationRecord(items=frozenset({'Organic Italian Parsley Bunch', 'Banana'}), support=0.002671311186382724, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Italian Parsley Bunch'}), items_add=frozenset({'Banana'}), confidence=0.14334862385321098, lift=1.021827074457343)]),\n"," RelationRecord(items=frozenset({'Organic Kiwi', 'Banana'}), support=0.0028209046128201565, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Kiwi'}), items_add=frozenset({'Banana'}), confidence=0.20836621941594316, lift=1.4852897689450737)]),\n"," RelationRecord(items=frozenset({'Organic Lacinato (Dinosaur) Kale', 'Banana'}), support=0.0022973276202891426, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Banana'}), confidence=0.17145135566188197, lift=1.2221508128820586)]),\n"," RelationRecord(items=frozenset({'Organic Large Brown Eggs', 'Banana'}), support=0.001121950698280744, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Brown Eggs'}), items_add=frozenset({'Banana'}), confidence=0.23385300668151446, lift=1.6669663596848878)]),\n"," RelationRecord(items=frozenset({'Organic Large Brown Grade AA Cage Free Eggs', 'Banana'}), support=0.0013570260826824237, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Brown Grade AA Cage Free Eggs'}), items_add=frozenset({'Banana'}), confidence=0.16219667943805874, lift=1.1561810220557243)]),\n"," RelationRecord(items=frozenset({'Organic Large Extra Fancy Fuji Apple', 'Banana'}), support=0.0034513340528064796, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Extra Fancy Fuji Apple'}), items_add=frozenset({'Banana'}), confidence=0.16053677932405566, lift=1.1443488130550992)]),\n"," RelationRecord(items=frozenset({'Organic Large Grade A Brown Eggs', 'Banana'}), support=0.0012822293694637076, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Grade A Brown Eggs'}), items_add=frozenset({'Banana'}), confidence=0.216998191681736, lift=1.5468207605239261)]),\n"," RelationRecord(items=frozenset({'Organic Large Grade AA Brown Eggs', 'Banana'}), support=0.0013783965721734857, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Grade AA Brown Eggs'}), items_add=frozenset({'Banana'}), confidence=0.17222963951935913, lift=1.227698626985929)]),\n"," RelationRecord(items=frozenset({'Organic Lemon', 'Banana'}), support=0.0028529603470567495, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lemon'}), items_add=frozenset({'Banana'}), confidence=0.10814094775212636, lift=0.7708574055357034)]),\n"," RelationRecord(items=frozenset({'Organic Navel Orange', 'Banana'}), support=0.0023080128650346736, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Banana'}), confidence=0.15777940102264426, lift=1.1246934879660453)]),\n"," RelationRecord(items=frozenset({'Organic Old Fashioned Rolled Oats', 'Banana'}), support=0.0013783965721734857, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Old Fashioned Rolled Oats'}), items_add=frozenset({'Banana'}), confidence=0.24157303370786518, lift=1.7219967633192153)]),\n"," RelationRecord(items=frozenset({'Organic Peeled Whole Baby Carrots', 'Banana'}), support=0.004616025730069347, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Peeled Whole Baby Carrots'}), items_add=frozenset({'Banana'}), confidence=0.2532239155920281, lift=1.8050473446957982)]),\n"," RelationRecord(items=frozenset({'Organic Raspberries', 'Banana'}), support=0.006646222231720218, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Raspberries'}), items_add=frozenset({'Banana'}), confidence=0.16164241164241164, lift=1.1522300539552424)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Banana'}), support=0.003472704542297541, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Banana'}), confidence=0.18742791234140713, lift=1.3360359534081245)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Banana'}), support=0.0049900092961629285, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Banana'}), confidence=0.16871387283236994, lift=1.2026373080023616)]),\n"," RelationRecord(items=frozenset({'Organic Red Radish, Bunch', 'Banana'}), support=0.001335655593191362, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Radish, Bunch'}), items_add=frozenset({'Banana'}), confidence=0.16688918558077434, lift=1.189630452505745)]),\n"," RelationRecord(items=frozenset({'Organic Reduced Fat 2% Milk', 'Banana'}), support=0.0022225309070704265, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat 2% Milk'}), items_add=frozenset({'Banana'}), confidence=0.19205909510618652, lift=1.3690482545283478)]),\n"," RelationRecord(items=frozenset({'Organic Reduced Fat Milk', 'Banana'}), support=0.0026392554521461314, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat Milk'}), items_add=frozenset({'Banana'}), confidence=0.2933491686460808, lift=2.0910708085978187)]),\n"," RelationRecord(items=frozenset({'Organic Roasted Turkey Breast', 'Banana'}), support=0.001645527690811758, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roasted Turkey Breast'}), items_add=frozenset({'Banana'}), confidence=0.19249999999999998, lift=1.3721911417472767)]),\n"," RelationRecord(items=frozenset({'Organic Roma Tomato', 'Banana'}), support=0.001442508040646671, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roma Tomato'}), items_add=frozenset({'Banana'}), confidence=0.15446224256292906, lift=1.1010479011910155)]),\n"," RelationRecord(items=frozenset({'Organic Romaine', 'Banana'}), support=0.0016775834250483508, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine'}), items_add=frozenset({'Banana'}), confidence=0.1903030303030303, lift=1.35653055807523)]),\n"," RelationRecord(items=frozenset({'Organic Romaine Lettuce', 'Banana'}), support=0.0015066195091198564, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine Lettuce'}), items_add=frozenset({'Banana'}), confidence=0.17070217917675545, lift=1.2168104838613003)]),\n"," RelationRecord(items=frozenset({'Organic Russet Potato', 'Banana'}), support=0.0012929146142092384, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Russet Potato'}), items_add=frozenset({'Banana'}), confidence=0.14069767441860465, lift=1.002930402605983)]),\n"," RelationRecord(items=frozenset({'Organic Shredded Carrots', 'Banana'}), support=0.0013570260826824237, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Shredded Carrots'}), items_add=frozenset({'Banana'}), confidence=0.2099173553719008, lift=1.496346678131623)]),\n"," RelationRecord(items=frozenset({'Organic Small Bunch Celery', 'Banana'}), support=0.0031842029341682073, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Small Bunch Celery'}), items_add=frozenset({'Banana'}), confidence=0.15893333333333334, lift=1.1329190240434661)]),\n"," RelationRecord(items=frozenset({'Organic Sour Cream', 'Banana'}), support=0.0012501736352271149, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sour Cream'}), items_add=frozenset({'Banana'}), confidence=0.15077319587628865, lift=1.0747513963343915)]),\n"," RelationRecord(items=frozenset({'Organic Spring Mix', 'Banana'}), support=0.001645527690811758, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Spring Mix'}), items_add=frozenset({'Banana'}), confidence=0.1536926147704591, lift=1.0955617898181853)]),\n"," RelationRecord(items=frozenset({'Organic Spring Mix Salad', 'Banana'}), support=0.0013142851037003002, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Spring Mix Salad'}), items_add=frozenset({'Banana'}), confidence=0.21693121693121692, lift=1.5463433467089494)]),\n"," RelationRecord(items=frozenset({'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese', 'Banana'}), support=0.0018912883199589687, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese'}), items_add=frozenset({'Banana'}), confidence=0.1923913043478261, lift=1.3714163302612536)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Banana'}), support=0.015899644181349974, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Banana'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.11333688780562114, lift=1.4032093291526215), OrderedStatistic(items_base=frozenset({'Organic Strawberries'}), items_add=frozenset({'Banana'}), confidence=0.19685143537504962, lift=1.4032093291526215)]),\n"," RelationRecord(items=frozenset({'Organic Tomato Basil Pasta Sauce', 'Banana'}), support=0.0013890818169190165, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Basil Pasta Sauce'}), items_add=frozenset({'Banana'}), confidence=0.2376599634369287, lift=1.6941033588370664)]),\n"," RelationRecord(items=frozenset({'Organic Tomato Cluster', 'Banana'}), support=0.002991868528748651, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Cluster'}), items_add=frozenset({'Banana'}), confidence=0.1543550165380375, lift=1.1002835655986987)]),\n"," RelationRecord(items=frozenset({'Organic Tomato Paste', 'Banana'}), support=0.0010792097192986205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Paste'}), items_add=frozenset({'Banana'}), confidence=0.20039682539682538, lift=1.4284818111366209)]),\n"," RelationRecord(items=frozenset({'Organic Unsweetened Almond Milk', 'Banana'}), support=0.0025003472704542297, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Unsweetened Almond Milk'}), items_add=frozenset({'Banana'}), confidence=0.15284128020901372, lift=1.0894932508889457)]),\n"," RelationRecord(items=frozenset({'Organic White Onions', 'Banana'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic White Onions'}), items_add=frozenset({'Banana'}), confidence=0.1537242472266244, lift=1.095787274369571)]),\n"," RelationRecord(items=frozenset({'Organic Whole Milk', 'Banana'}), support=0.007757487685255431, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Milk'}), items_add=frozenset({'Banana'}), confidence=0.21327849588719153, lift=1.5203057806835703)]),\n"," RelationRecord(items=frozenset({'Organic Whole Milk with DHA Omega-3', 'Banana'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Milk with DHA Omega-3'}), items_add=frozenset({'Banana'}), confidence=0.2618384401114206, lift=1.8664539641029414)]),\n"," RelationRecord(items=frozenset({'Organic Whole Strawberries', 'Banana'}), support=0.0017096391592849435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Strawberries'}), items_add=frozenset({'Banana'}), confidence=0.19184652278177458, lift=1.3675329825255493)]),\n"," RelationRecord(items=frozenset({'Organic Whole String Cheese', 'Banana'}), support=0.0035261307660251957, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole String Cheese'}), items_add=frozenset({'Banana'}), confidence=0.23638968481375358, lift=1.6850484753343558)]),\n"," RelationRecord(items=frozenset({'Organic Yams', 'Banana'}), support=0.0012394883904815839, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yams'}), items_add=frozenset({'Banana'}), confidence=0.2334004024144869, lift=1.6637400762254997)]),\n"," RelationRecord(items=frozenset({'Organic Yellow Onion', 'Banana'}), support=0.005160973212091423, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Onion'}), items_add=frozenset({'Banana'}), confidence=0.15169597989949749, lift=1.0813292460091606)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Banana'}), support=0.007105687755778046, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Banana'}), confidence=0.19862604540023895, lift=1.4158592208753265)]),\n"," RelationRecord(items=frozenset({'Original Hummus', 'Banana'}), support=0.004733563422270187, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Hummus'}), items_add=frozenset({'Banana'}), confidence=0.22238955823293172, lift=1.5852518536328266)]),\n"," RelationRecord(items=frozenset({'Original No Pulp 100% Florida Orange Juice', 'Banana'}), support=0.0016668981803028198, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original No Pulp 100% Florida Orange Juice'}), items_add=frozenset({'Banana'}), confidence=0.27416520210896306, lift=1.9543223984897193)]),\n"," RelationRecord(items=frozenset({'Original Nooks & Crannies English Muffins', 'Banana'}), support=0.0012822293694637076, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Nooks & Crannies English Muffins'}), items_add=frozenset({'Banana'}), confidence=0.25210084033613445, lift=1.7970417659027964)]),\n"," RelationRecord(items=frozenset({'Original Orange Juice', 'Banana'}), support=0.0018378620962313142, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Orange Juice'}), items_add=frozenset({'Banana'}), confidence=0.23626373626373626, lift=1.6841506806089028)]),\n"," RelationRecord(items=frozenset({'Original Veggie Straws', 'Banana'}), support=0.0011646916772628678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Veggie Straws'}), items_add=frozenset({'Banana'}), confidence=0.2229038854805726, lift=1.588918114896058)]),\n"," RelationRecord(items=frozenset({'Oven Roasted Turkey Breast', 'Banana'}), support=0.0015066195091198564, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Oven Roasted Turkey Breast'}), items_add=frozenset({'Banana'}), confidence=0.22416534181240064, lift=1.5979101107622162)]),\n"," RelationRecord(items=frozenset({'Peach Pear Flavored Sparkling Water', 'Banana'}), support=0.0013783965721734857, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Peach Pear Flavored Sparkling Water'}), items_add=frozenset({'Banana'}), confidence=0.19111111111111112, lift=1.3622907727592015)]),\n"," RelationRecord(items=frozenset({'Pineapple Chunks', 'Banana'}), support=0.0018378620962313142, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pineapple Chunks'}), items_add=frozenset({'Banana'}), confidence=0.2233766233766234, lift=1.5922879162120536)]),\n"," RelationRecord(items=frozenset({'Pretzel Crisps Original Deli Style Pretzel Crackers', 'Banana'}), support=0.0014745637748832638, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pretzel Crisps Original Deli Style Pretzel Crackers'}), items_add=frozenset({'Banana'}), confidence=0.2555555555555556, lift=1.821667893805909)]),\n"," RelationRecord(items=frozenset({'Pure Coconut Water', 'Banana'}), support=0.0013142851037003002, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Coconut Water'}), items_add=frozenset({'Banana'}), confidence=0.24212598425196852, lift=1.725938341700737)]),\n"," RelationRecord(items=frozenset({'Pure Irish Butter', 'Banana'}), support=0.0015707309775930417, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Irish Butter'}), items_add=frozenset({'Banana'}), confidence=0.13946869070208728, lift=0.994169880168805)]),\n"," RelationRecord(items=frozenset({'Pure Sparkling Water', 'Banana'}), support=0.0015707309775930417, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Sparkling Water'}), items_add=frozenset({'Banana'}), confidence=0.17253521126760563, lift=1.2298768235891087)]),\n"," RelationRecord(items=frozenset({'Raisin Bran Cereal', 'Banana'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Raisin Bran Cereal'}), items_add=frozenset({'Banana'}), confidence=0.2619589977220957, lift=1.8673133307805445)]),\n"," RelationRecord(items=frozenset({'Raspberries', 'Banana'}), support=0.004754933911761249, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Raspberries'}), items_add=frozenset({'Banana'}), confidence=0.19373095341750113, lift=1.3809657047363606)]),\n"," RelationRecord(items=frozenset({'Red Onion', 'Banana'}), support=0.0026606259416371934, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Onion'}), items_add=frozenset({'Banana'}), confidence=0.2316279069767442, lift=1.6511052578438996)]),\n"," RelationRecord(items=frozenset({'Red Peppers', 'Banana'}), support=0.006325664889354291, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Banana'}), confidence=0.28003784295175027, lift=1.9961841426099056)]),\n"," RelationRecord(items=frozenset({'Red Potatoes', 'Banana'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Potatoes'}), items_add=frozenset({'Banana'}), confidence=0.25984251968503935, lift=1.852226513044693)]),\n"," RelationRecord(items=frozenset({'Red Raspberries', 'Banana'}), support=0.0031735176894226763, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Raspberries'}), items_add=frozenset({'Banana'}), confidence=0.2877906976744186, lift=2.051448550784966)]),\n"," RelationRecord(items=frozenset({'Red Vine Tomato', 'Banana'}), support=0.004487802793122976, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Vine Tomato'}), items_add=frozenset({'Banana'}), confidence=0.2581438229870928, lift=1.8401177516865759)]),\n"," RelationRecord(items=frozenset({'Roasted Red Pepper Hummus', 'Banana'}), support=0.0013249703484458312, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roasted Red Pepper Hummus'}), items_add=frozenset({'Banana'}), confidence=0.20563847429519072, lift=1.4658456770404458)]),\n"," RelationRecord(items=frozenset({'Roasted Turkey Breast', 'Banana'}), support=0.0016775834250483508, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roasted Turkey Breast'}), items_add=frozenset({'Banana'}), confidence=0.2449297971918877, lift=1.7459246652294305)]),\n"," RelationRecord(items=frozenset({'Roma Tomato', 'Banana'}), support=0.004423691324649791, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roma Tomato'}), items_add=frozenset({'Banana'}), confidence=0.29320113314447593, lift=2.090015572213578)]),\n"," RelationRecord(items=frozenset({'Romaine Hearts', 'Banana'}), support=0.0010685244745530897, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Romaine Hearts'}), items_add=frozenset({'Banana'}), confidence=0.1392757660167131, lift=0.9927946617568838)]),\n"," RelationRecord(items=frozenset({'Romaine Lettuce', 'Banana'}), support=0.0013035998589547694, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Romaine Lettuce'}), items_add=frozenset({'Banana'}), confidence=0.2747747747747748, lift=1.9586675943976577)]),\n"," RelationRecord(items=frozenset({'Russet Potato', 'Banana'}), support=0.003109406220949491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Russet Potato'}), items_add=frozenset({'Banana'}), confidence=0.27582938388625594, lift=1.9661851283237897)]),\n"," RelationRecord(items=frozenset({'Salted Butter', 'Banana'}), support=0.0016348424460662272, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Salted Butter'}), items_add=frozenset({'Banana'}), confidence=0.24878048780487808, lift=1.7733734109372477)]),\n"," RelationRecord(items=frozenset({'Sea Salt & Vinegar Potato Chips', 'Banana'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sea Salt & Vinegar Potato Chips'}), items_add=frozenset({'Banana'}), confidence=0.2111111111111111, lift=1.5048560861874898)]),\n"," RelationRecord(items=frozenset({'Sea Salt Pita Chips', 'Banana'}), support=0.001132635943026275, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sea Salt Pita Chips'}), items_add=frozenset({'Banana'}), confidence=0.21285140562248994, lift=1.5172613678111024)]),\n"," RelationRecord(items=frozenset({'Seedless Red Grapes', 'Banana'}), support=0.008366546635750692, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Seedless Red Grapes'}), items_add=frozenset({'Banana'}), confidence=0.2759957701797674, lift=1.967371174028021)]),\n"," RelationRecord(items=frozenset({'Shallot', 'Banana'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shallot'}), items_add=frozenset({'Banana'}), confidence=0.17010309278350516, lift=1.2125400368900827)]),\n"," RelationRecord(items=frozenset({'Sharp Cheddar Cheese', 'Banana'}), support=0.0021370489491061794, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sharp Cheddar Cheese'}), items_add=frozenset({'Banana'}), confidence=0.2176278563656148, lift=1.5513091776745214)]),\n"," RelationRecord(items=frozenset({'Shredded Mild Cheddar Cheese', 'Banana'}), support=0.0016882686697938815, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Mild Cheddar Cheese'}), items_add=frozenset({'Banana'}), confidence=0.2140921409214092, lift=1.5261056586497008)]),\n"," RelationRecord(items=frozenset({'Shredded Mozzarella', 'Banana'}), support=0.0017630653830125978, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Mozzarella'}), items_add=frozenset({'Banana'}), confidence=0.24372230428360414, lift=1.7373173349828364)]),\n"," RelationRecord(items=frozenset({'Shredded Parmesan', 'Banana'}), support=0.0020408817463964013, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Parmesan'}), items_add=frozenset({'Banana'}), confidence=0.20063025210084034, lift=1.4301457386976422)]),\n"," RelationRecord(items=frozenset({'Small Hass Avocado', 'Banana'}), support=0.006592796007992563, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Small Hass Avocado'}), items_add=frozenset({'Banana'}), confidence=0.27544642857142854, lift=1.9634553210994197)]),\n"," RelationRecord(items=frozenset({'Sour Cream', 'Banana'}), support=0.0016775834250483508, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sour Cream'}), items_add=frozenset({'Banana'}), confidence=0.20310478654592498, lift=1.4477848776352715)]),\n"," RelationRecord(items=frozenset({'Sourdough Bread', 'Banana'}), support=0.001218117900990522, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sourdough Bread'}), items_add=frozenset({'Banana'}), confidence=0.2171428571428571, lift=1.5478519743642751)]),\n"," RelationRecord(items=frozenset({'Spaghetti', 'Banana'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Spaghetti'}), items_add=frozenset({'Banana'}), confidence=0.25784753363228696, lift=1.8380057224499078)]),\n"," RelationRecord(items=frozenset({'Sparkling Lemon Water', 'Banana'}), support=0.0022332161518159575, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Lemon Water'}), items_add=frozenset({'Banana'}), confidence=0.19716981132075473, lift=1.4054787974769953)]),\n"," RelationRecord(items=frozenset({'Sparkling Natural Mineral Water', 'Banana'}), support=0.002286642375543612, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Natural Mineral Water'}), items_add=frozenset({'Banana'}), confidence=0.16679657053780206, lift=1.1889702678742693)]),\n"," RelationRecord(items=frozenset({'Sparkling Water Berry', 'Banana'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Water Berry'}), items_add=frozenset({'Banana'}), confidence=0.18333333333333332, lift=1.306848706425978)]),\n"," RelationRecord(items=frozenset({'Sparkling Water Grapefruit', 'Banana'}), support=0.005299881393783325, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Water Grapefruit'}), items_add=frozenset({'Banana'}), confidence=0.20016142050040356, lift=1.4268037824945743)]),\n"," RelationRecord(items=frozenset({'Spinach', 'Banana'}), support=0.0017096391592849435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Spinach'}), items_add=frozenset({'Banana'}), confidence=0.25806451612903225, lift=1.839552431332755)]),\n"," RelationRecord(items=frozenset({'Spring Water', 'Banana'}), support=0.0016882686697938815, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Spring Water'}), items_add=frozenset({'Banana'}), confidence=0.10154241645244215, lift=0.7238213213904108)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Banana'}), support=0.014286172224774808, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Banana'}), items_add=frozenset({'Strawberries'}), confidence=0.10183563104577652, lift=2.074551850823049), OrderedStatistic(items_base=frozenset({'Strawberries'}), items_add=frozenset({'Banana'}), confidence=0.29103178058336965, lift=2.0745518508230494)]),\n"," RelationRecord(items=frozenset({'Strawberry Preserves', 'Banana'}), support=0.0012394883904815839, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Strawberry Preserves'}), items_add=frozenset({'Banana'}), confidence=0.2636363636363636, lift=1.879270040645621)]),\n"," RelationRecord(items=frozenset({'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale', 'Banana'}), support=0.0013249703484458312, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale'}), items_add=frozenset({'Banana'}), confidence=0.21946902654867256, lift=1.5644335278856438)]),\n"," RelationRecord(items=frozenset({'Sweet Potato Yam', 'Banana'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sweet Potato Yam'}), items_add=frozenset({'Banana'}), confidence=0.38205980066445183, lift=2.7234237615038506)]),\n"," RelationRecord(items=frozenset({'Total 0% Greek Yogurt', 'Banana'}), support=0.0021156784596151174, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Greek Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.27012278308321963, lift=1.92550696171904)]),\n"," RelationRecord(items=frozenset({'Total 0% Nonfat Greek Yogurt', 'Banana'}), support=0.0020408817463964013, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Nonfat Greek Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.269774011299435, lift=1.92302082378553)]),\n"," RelationRecord(items=frozenset({'Total 0% Nonfat Plain Greek Yogurt', 'Banana'}), support=0.0013677113274279547, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Nonfat Plain Greek Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.2752688172043011, lift=1.962189260088272)]),\n"," RelationRecord(items=frozenset({'Total 0% Raspberry Yogurt', 'Banana'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Raspberry Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.29846153846153844, lift=2.1275131388529207)]),\n"," RelationRecord(items=frozenset({'Total 2% All Natural Greek Strained Yogurt with Honey', 'Banana'}), support=0.0017310096487760053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% All Natural Greek Strained Yogurt with Honey'}), items_add=frozenset({'Banana'}), confidence=0.2764505119453925, lift=1.970612694145285)]),\n"," RelationRecord(items=frozenset({'Total 2% All Natural Plain Greek Yogurt', 'Banana'}), support=0.0011646916772628678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% All Natural Plain Greek Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.24008810572687225, lift=1.7114118021677807)]),\n"," RelationRecord(items=frozenset({'Total 2% Greek Strained Yogurt with Cherry 5.3 oz', 'Banana'}), support=0.0013997670616645475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% Greek Strained Yogurt with Cherry 5.3 oz'}), items_add=frozenset({'Banana'}), confidence=0.29046563192904656, lift=2.0705161928055205)]),\n"," RelationRecord(items=frozenset({'Total 2% Lowfat Greek Strained Yogurt With Blueberry', 'Banana'}), support=0.0015279899986109181, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% Lowfat Greek Strained Yogurt With Blueberry'}), items_add=frozenset({'Banana'}), confidence=0.3023255813953489, lift=2.1550570634508732)]),\n"," RelationRecord(items=frozenset({'Total 2% Lowfat Greek Strained Yogurt with Peach', 'Banana'}), support=0.0013997670616645475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% Lowfat Greek Strained Yogurt with Peach'}), items_add=frozenset({'Banana'}), confidence=0.29111111111111115, lift=2.075117339900644)]),\n"," RelationRecord(items=frozenset({'Total 2% Lowfat Plain Greek Yogurt', 'Banana'}), support=0.0013142851037003002, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% Lowfat Plain Greek Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.2827586206896551, lift=2.0155785691585613)]),\n"," RelationRecord(items=frozenset({'Total 2% with Strawberry Lowfat Greek Strained Yogurt', 'Banana'}), support=0.0022332161518159575, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% with Strawberry Lowfat Greek Strained Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.2994269340974212, lift=2.134394735423517)]),\n"," RelationRecord(items=frozenset({'Total Greek Strained Yogurt', 'Banana'}), support=0.0015279899986109181, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total Greek Strained Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.21029411764705883, lift=1.499032339723916)]),\n"," RelationRecord(items=frozenset({'Uncured Genoa Salami', 'Banana'}), support=0.002703366920619317, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Uncured Genoa Salami'}), items_add=frozenset({'Banana'}), confidence=0.1988993710691824, lift=1.4178075588583725)]),\n"," RelationRecord(items=frozenset({'Uncured Hickory Smoked Sunday Bacon', 'Banana'}), support=0.0011753769220083986, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Uncured Hickory Smoked Sunday Bacon'}), items_add=frozenset({'Banana'}), confidence=0.1909722222222222, lift=1.3613007358603937)]),\n"," RelationRecord(items=frozenset({'Unsalted Butter', 'Banana'}), support=0.0024041800677444517, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsalted Butter'}), items_add=frozenset({'Banana'}), confidence=0.22145669291338585, lift=1.5786021417994547)]),\n"," RelationRecord(items=frozenset({'Unsweetened Almondmilk', 'Banana'}), support=0.0032483144026413924, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Almondmilk'}), items_add=frozenset({'Banana'}), confidence=0.19474695707879566, lift=1.3882080487571977)]),\n"," RelationRecord(items=frozenset({'Unsweetened Original Almond Breeze Almond Milk', 'Banana'}), support=0.003312425871114578, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Original Almond Breeze Almond Milk'}), items_add=frozenset({'Banana'}), confidence=0.293282876064333, lift=2.0905982574630766)]),\n"," RelationRecord(items=frozenset({'Unsweetened Vanilla Almond Milk', 'Banana'}), support=0.0019126588094500305, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Vanilla Almond Milk'}), items_add=frozenset({'Banana'}), confidence=0.20480549199084666, lift=1.4599079578754943)]),\n"," RelationRecord(items=frozenset({'Vanilla Almond Breeze Almond Milk', 'Banana'}), support=0.0027140521653648475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Vanilla Almond Breeze Almond Milk'}), items_add=frozenset({'Banana'}), confidence=0.2873303167420814, lift=2.048166833189213)]),\n"," RelationRecord(items=frozenset({'Vanilla Skyr Nonfat Yogurt', 'Banana'}), support=0.0015173047538653874, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Vanilla Skyr Nonfat Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.268939393939394, lift=1.917071449509183)]),\n"," RelationRecord(items=frozenset({'Vine Ripe Tomatoes', 'Banana'}), support=0.001656212935557289, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Vine Ripe Tomatoes'}), items_add=frozenset({'Banana'}), confidence=0.29922779922779924, lift=2.1329752491684095)]),\n"," RelationRecord(items=frozenset({'Watermelon Chunks', 'Banana'}), support=0.00143182279590114, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Watermelon Chunks'}), items_add=frozenset({'Banana'}), confidence=0.2214876033057851, lift=1.5788224792884842)]),\n"," RelationRecord(items=frozenset({'Whipped Cream Cheese', 'Banana'}), support=0.0019233440541955612, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Whipped Cream Cheese'}), items_add=frozenset({'Banana'}), confidence=0.23746701846965698, lift=1.6927279958503914)]),\n"," RelationRecord(items=frozenset({'White Onion', 'Banana'}), support=0.0015386752433564491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'White Onion'}), items_add=frozenset({'Banana'}), confidence=0.2162162162162162, lift=1.541246631657173)]),\n"," RelationRecord(items=frozenset({'Whole Milk', 'Banana'}), support=0.0022973276202891426, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Whole Milk'}), items_add=frozenset({'Banana'}), confidence=0.22751322751322747, lift=1.6217747294752394)]),\n"," RelationRecord(items=frozenset({'Whole Wheat Bread', 'Banana'}), support=0.001143321187771806, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Whole Wheat Bread'}), items_add=frozenset({'Banana'}), confidence=0.3101449275362319, lift=2.2107954401198366)]),\n"," RelationRecord(items=frozenset({'XL Emerald White Seedless Grapes', 'Banana'}), support=0.0016775834250483508, ordered_statistics=[OrderedStatistic(items_base=frozenset({'XL Emerald White Seedless Grapes'}), items_add=frozenset({'Banana'}), confidence=0.3450549450549451, lift=2.4596433195869563)]),\n"," RelationRecord(items=frozenset({'Yellow Bell Pepper', 'Banana'}), support=0.0027140521653648475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Banana'}), confidence=0.29777256740914415, lift=2.1226019701515404)]),\n"," RelationRecord(items=frozenset({'Yellow Onions', 'Banana'}), support=0.00846271383846047, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Onions'}), items_add=frozenset({'Banana'}), confidence=0.2859205776173285, lift=2.0381178381805864)]),\n"," RelationRecord(items=frozenset({'YoKids Blueberry & Strawberry/Vanilla Yogurt', 'Banana'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'YoKids Blueberry & Strawberry/Vanilla Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.30158730158730157, lift=2.1497944088392713)]),\n"," RelationRecord(items=frozenset({'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry', 'Banana'}), support=0.001442508040646671, ordered_statistics=[OrderedStatistic(items_base=frozenset({'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry'}), items_add=frozenset({'Banana'}), confidence=0.27383367139959436, lift=1.9519591595151067)]),\n"," RelationRecord(items=frozenset({'Bartlett Pears', 'Large Lemon'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Large Lemon'}), confidence=0.1359338061465721, lift=2.1536544973487803)]),\n"," RelationRecord(items=frozenset({'Bartlett Pears', 'Organic Avocado'}), support=0.0011646916772628678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12884160756501184, lift=2.2567657733832607)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Bartlett Pears'}), support=0.0013035998589547694, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Strawberries'}), confidence=0.14420803782505912, lift=2.93774437003348)]),\n"," RelationRecord(items=frozenset({'Berry Medley', 'Organic Baby Spinach'}), support=0.0012074326562449913, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Berry Medley'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.24145299145299146, lift=3.22581885954477)]),\n"," RelationRecord(items=frozenset({'Blackberries', 'Organic Blueberries'}), support=0.0013997670616645475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Organic Blueberries'}), confidence=0.1721419185282523, lift=4.661529435562369)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Blackberries'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13534822601839683, lift=1.6757288567778414)]),\n"," RelationRecord(items=frozenset({'Blackberries', 'Raspberries'}), support=0.0023293833545257356, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Raspberries'}), confidence=0.28646517739816035, lift=11.67149175322666)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Blackberries'}), support=0.002350753844016797, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Strawberries'}), confidence=0.2890932982917214, lift=5.889284829609781)]),\n"," RelationRecord(items=frozenset({'Kiwi Sandia Sparkling Water', 'Blackberry Cucumber Sparkling Water'}), support=0.001218117900990522, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberry Cucumber Sparkling Water'}), items_add=frozenset({'Kiwi Sandia Sparkling Water'}), confidence=0.285, lift=75.98944444444443), OrderedStatistic(items_base=frozenset({'Kiwi Sandia Sparkling Water'}), items_add=frozenset({'Blackberry Cucumber Sparkling Water'}), confidence=0.32478632478632474, lift=75.98944444444443)]),\n"," RelationRecord(items=frozenset({'Blueberries', 'Organic Strawberries'}), support=0.0019126588094500305, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blueberries'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.10642092746730084, lift=1.3175837199209266)]),\n"," RelationRecord(items=frozenset({'Blueberries', 'Raspberries'}), support=0.002094307970124056, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blueberries'}), items_add=frozenset({'Raspberries'}), confidence=0.1165279429250892, lift=4.747714668929179)]),\n"," RelationRecord(items=frozenset({'Blueberries', 'Strawberries'}), support=0.0030346095077307747, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blueberries'}), items_add=frozenset({'Strawberries'}), confidence=0.16884661117717006, lift=3.4396708315711395)]),\n"," RelationRecord(items=frozenset({'Strawberry Rhubarb Yoghurt', 'Blueberry Yoghurt'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blueberry Yoghurt'}), items_add=frozenset({'Strawberry Rhubarb Yoghurt'}), confidence=0.3185595567867036, lift=88.46597400889385), OrderedStatistic(items_base=frozenset({'Strawberry Rhubarb Yoghurt'}), items_add=frozenset({'Blueberry Yoghurt'}), confidence=0.34124629080118696, lift=88.46597400889387)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breasts', 'Large Lemon'}), support=0.0025110325151997607, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Large Lemon'}), confidence=0.15083440308087293, lift=2.3897307061333426)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breasts', 'Limes'}), support=0.0019767702779232158, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Limes'}), confidence=0.11874197689345314, lift=2.5342543652286427)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breasts', 'Organic Avocado'}), support=0.0028209046128201565, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Organic Avocado'}), confidence=0.16944801026957637, lift=2.9680200144298787)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breasts', 'Organic Baby Spinach'}), support=0.0030132390182397127, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1810012836970475, lift=2.418182317966536)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Boneless Skinless Chicken Breasts'}), support=0.00214773419385171, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.12901155327342745, lift=1.5972753322132895)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breasts', 'Yellow Onions'}), support=0.0016989539145394125, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Yellow Onions'}), confidence=0.10205391527599486, lift=3.44798547614965)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Broccoli Crown'}), support=0.004060393003301741, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Large Lemon'}), confidence=0.18095238095238095, lift=2.866902061315469)]),\n"," RelationRecord(items=frozenset({'Limes', 'Broccoli Crown'}), support=0.002340068599271266, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Limes'}), confidence=0.10428571428571427, lift=2.2257211272194164)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Broccoli Crown'}), support=0.003600927479243912, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Organic Avocado'}), confidence=0.16047619047619047, lift=2.8108712779515694)]),\n"," RelationRecord(items=frozenset({'Broccoli Crown', 'Organic Baby Spinach'}), support=0.004081763492792803, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1819047619047619, lift=2.4302528126168386)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Broccoli Crown'}), support=0.003120091465695022, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13904761904761903, lift=1.7215305627476547)]),\n"," RelationRecord(items=frozenset({'Broccoli Crown', 'Organic Zucchini'}), support=0.0025537734941818843, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.1138095238095238, lift=3.1813297206576774)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Brussels Sprouts'}), support=0.0010898949640441515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Brussels Sprouts'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.12393681652490889, lift=1.655799407297166)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Fresh Ginger Root'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Bunched Cilantro'}), confidence=0.10295728368017525, lift=6.686650456472284)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Green Onions'}), support=0.0013997670616645475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Onions'}), items_add=frozenset({'Bunched Cilantro'}), confidence=0.1234684260131951, lift=8.01876445891526)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Jalapeno Peppers'}), support=0.0023080128650346736, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Jalapeno Peppers'}), confidence=0.14989590562109648, lift=9.762218593849378), OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Bunched Cilantro'}), confidence=0.15031315240083507, lift=9.762218593849378)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Large Lemon'}), support=0.003280370136877985, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Large Lemon'}), confidence=0.21304649548924356, lift=3.3753821522518774)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Limes'}), support=0.004423691324649791, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Limes'}), confidence=0.2873004857737682, lift=6.131719626478824)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Organic Avocado'}), support=0.002350753844016797, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Organic Avocado'}), confidence=0.15267175572519084, lift=2.674170242008878)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Organic Baby Spinach'}), support=0.001752380138267067, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.11380985426786955, lift=1.520502902407867)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Yellow Onions'}), support=0.0019447145436866232, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Yellow Onions'}), confidence=0.12630117973629426, lift=4.267201627429809)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Cantaloupe'}), support=0.001121950698280744, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Large Lemon'}), confidence=0.12650602409638553, lift=2.004286317438367)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Cantaloupe'}), support=0.001335655593191362, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1506024096385542, lift=2.637923958608155)]),\n"," RelationRecord(items=frozenset({'Cantaloupe', 'Organic Baby Spinach'}), support=0.0012608588799726459, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14216867469879518, lift=1.8993775530387074)]),\n"," RelationRecord(items=frozenset({'Cantaloupe', 'Organic Cucumber'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Organic Cucumber'}), confidence=0.11325301204819276, lift=3.246251037842026)]),\n"," RelationRecord(items=frozenset({'Cantaloupe', 'Organic Raspberries'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.13012048192771083, lift=3.1646532074242915)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Cantaloupe'}), support=0.002372124333507859, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.26746987951807233, lift=3.311509937089276)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Carrots'}), support=0.0031414619551860833, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Large Lemon'}), confidence=0.1623412479293208, lift=2.572038322322896)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Limes'}), support=0.0024041800677444517, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Limes'}), confidence=0.12424075096631695, lift=2.6516121233032393)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Avocado'}), support=0.0020301965016508703, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1049144119271121, lift=1.837661439083406)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Baby Spinach'}), support=0.0035475012555162577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18332413031474326, lift=2.4492156150986264)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Garlic'}), support=0.002575143983672946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Garlic'}), confidence=0.1330756488128106, lift=4.1680558050349745)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Hass Avocado'}), support=0.0021156784596151174, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.10933186085035893, lift=1.9768239685862714)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Small Bunch Celery'}), support=0.00214773419385171, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Small Bunch Celery'}), confidence=0.11098840419657648, lift=5.539771617890668), OrderedStatistic(items_base=frozenset({'Organic Small Bunch Celery'}), items_add=frozenset({'Carrots'}), confidence=0.1072, lift=5.539771617890668)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Carrots'}), support=0.0025430882494363533, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13141910546659305, lift=1.627082924103988)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Yellow Onion'}), support=0.0025110325151997607, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Yellow Onion'}), confidence=0.12976256212037549, lift=3.814098272977255)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Zucchini'}), support=0.0025537734941818843, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.13197128658199891, lift=3.68900740661575)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Yellow Onions'}), support=0.0023080128650346736, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Yellow Onions'}), confidence=0.11927112092766427, lift=4.029684618865457)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Cherubs Heavenly Salad Tomatoes'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cherubs Heavenly Salad Tomatoes'}), items_add=frozenset({'Strawberries'}), confidence=0.1259946949602122, lift=2.5667099515109664)]),\n"," RelationRecord(items=frozenset({'Clementines', 'Hass Avocados'}), support=0.0011967474114994603, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines'}), items_add=frozenset({'Hass Avocados'}), confidence=0.11067193675889327, lift=6.639393939393939)]),\n"," RelationRecord(items=frozenset({'Clementines', 'Raspberries'}), support=0.0011646916772628678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines'}), items_add=frozenset({'Raspberries'}), confidence=0.10770750988142293, lift=4.388342502077809)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Clementines'}), support=0.001442508040646671, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines'}), items_add=frozenset({'Strawberries'}), confidence=0.13339920948616601, lift=2.7175515494518545)]),\n"," RelationRecord(items=frozenset({'Clementines, Bag', 'Organic Strawberries'}), support=0.0015066195091198564, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines, Bag'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13809990205680706, lift=1.7097970014274908)]),\n"," RelationRecord(items=frozenset({'Clementines, Bag', 'Strawberries'}), support=0.001132635943026275, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines, Bag'}), items_add=frozenset({'Strawberries'}), confidence=0.10381978452497552, lift=2.114972175520001)]),\n"," RelationRecord(items=frozenset({'Limes', 'Corn Tortillas'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Corn Tortillas'}), items_add=frozenset({'Limes'}), confidence=0.22838137472283812, lift=4.874236651353763)]),\n"," RelationRecord(items=frozenset({'Creamy Almond Butter', 'Organic Baby Spinach'}), support=0.0013142851037003002, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Creamy Almond Butter'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2098976109215017, lift=2.8042380747052933)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Cucumber Kirby'}), support=0.0032162586684048, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cucumber Kirby'}), items_add=frozenset({'Large Lemon'}), confidence=0.1711199545196134, lift=2.7111229361142812)]),\n"," RelationRecord(items=frozenset({'Cucumber Kirby', 'Limes'}), support=0.0022011604175793645, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cucumber Kirby'}), items_add=frozenset({'Limes'}), confidence=0.11711199545196133, lift=2.499466435202441)]),\n"," RelationRecord(items=frozenset({'Cucumber Kirby', 'Organic Avocado'}), support=0.0032483144026413924, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cucumber Kirby'}), items_add=frozenset({'Organic Avocado'}), confidence=0.17282546901648663, lift=3.027178957298509)]),\n"," RelationRecord(items=frozenset({'Cucumber Kirby', 'Organic Baby Spinach'}), support=0.0029277570602754656, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cucumber Kirby'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1557703240477544, lift=2.081095976681969)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'English Seedless Cucumber'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'English Seedless Cucumber'}), items_add=frozenset({'Large Lemon'}), confidence=0.18063314711359404, lift=2.861844309957665)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Extra Virgin Olive Oil'}), support=0.0021263637043606484, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Extra Virgin Olive Oil'}), items_add=frozenset({'Large Lemon'}), confidence=0.13328868050904222, lift=2.111746697612957)]),\n"," RelationRecord(items=frozenset({'Extra Virgin Olive Oil', 'Organic Baby Spinach'}), support=0.0018271768514857834, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Extra Virgin Olive Oil'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.11453449430676492, lift=1.5301841140167323)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Extra Virgin Olive Oil'}), support=0.0016989539145394125, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Extra Virgin Olive Oil'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.10649698593436036, lift=1.318525389950917)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Ezekiel 4:9 Bread Organic Sprouted Whole Grain'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ezekiel 4:9 Bread Organic Sprouted Whole Grain'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20841683366733466, lift=2.7844548483118987)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Large Lemon'}), support=0.0021263637043606484, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Large Lemon'}), confidence=0.1873822975517891, lift=2.9687738413711338)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Limes'}), support=0.0014104523064100783, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Limes'}), confidence=0.12429378531073446, lift=2.652744010461962)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Organic Avocado'}), support=0.001966085033177685, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Avocado'}), confidence=0.17325800376647832, lift=3.0347551559972685)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Organic Baby Spinach'}), support=0.002436235801981044, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.21468926553672316, lift=2.8682547171713506)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Organic Cucumber'}), support=0.0012715441247181766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Cucumber'}), confidence=0.11205273069679848, lift=3.2118465261014637)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Organic Grape Tomatoes'}), support=0.0013570260826824237, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Grape Tomatoes'}), confidence=0.11958568738229754, lift=4.171325279555378)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Organic Hass Avocado'}), support=0.0013249703484458312, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.1167608286252354, lift=2.1111467674941857)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Organic Red Onion'}), support=0.0019340292989410922, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.1704331450094162, lift=5.7624012796229165)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Organic Strawberries'}), support=0.0016668981803028198, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14689265536723162, lift=1.8186589413749312)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Organic Zucchini'}), support=0.0011860621667539296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.10451977401129944, lift=2.9216523567489485)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Flat Parsley, Bunch'}), support=0.001346340837936893, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Flat Parsley, Bunch'}), items_add=frozenset({'Large Lemon'}), confidence=0.2630480167014614, lift=4.167576559850968)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Fresh Cauliflower'}), support=0.0027140521653648475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Large Lemon'}), confidence=0.1334033613445378, lift=2.1135636326648486)]),\n"," RelationRecord(items=frozenset({'Limes', 'Fresh Cauliflower'}), support=0.002340068599271266, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Limes'}), confidence=0.11502100840336134, lift=2.454839478550827)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Fresh Cauliflower'}), support=0.0025110325151997607, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12342436974789917, lift=2.1618784375063895)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Organic Baby Spinach'}), support=0.003729150416190283, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1832983193277311, lift=2.4488707795752136)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Fresh Cauliflower'}), support=0.0021370489491061794, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Cilantro'}), confidence=0.10504201680672269, lift=3.8536131818466313)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Organic Garlic'}), support=0.0024041800677444517, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Garlic'}), confidence=0.11817226890756302, lift=3.701267781208869)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Organic Hass Avocado'}), support=0.0027354226548559095, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.13445378151260504, lift=2.431052173574221)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Organic Raspberries'}), support=0.0023186981097802046, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.11397058823529413, lift=2.7718725158982513)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Fresh Cauliflower'}), support=0.0037825766399179374, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.18592436974789917, lift=2.301905541949549)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Organic Yellow Onion'}), support=0.0022118456623248955, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Yellow Onion'}), confidence=0.10871848739495799, lift=3.1955518466808837)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Organic Zucchini'}), support=0.002788848878583564, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.13707983193277312, lift=3.8318071180084936)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Garlic'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Garlic'}), confidence=0.11391018619934283, lift=7.725009127418766)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Fresh Ginger Root'}), support=0.002072937480632994, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Large Lemon'}), confidence=0.21248630887185105, lift=3.3665068881648765)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Limes'}), support=0.0016989539145394125, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Limes'}), confidence=0.17415115005476453, lift=3.716826380883751)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Organic Avocado'}), support=0.0012074326562449913, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12376779846659366, lift=2.167893871437975)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Organic Baby Spinach'}), support=0.0013142851037003002, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.13472070098576122, lift=1.7998724115852158)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Fresh Ginger Root'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Organic Cilantro'}), confidence=0.10514786418400877, lift=3.8574963408031477)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Fresh Ginger Root'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.10295728368017525, lift=1.2747007947845694)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Yellow Onions'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Yellow Onions'}), confidence=0.11829134720700986, lift=3.99658206175539)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Organic Baby Spinach'}), support=0.001859232585722376, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.22864651773981604, lift=3.0547240050986675)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Organic Hass Avocado'}), support=0.0013249703484458312, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.16294349540078842, lift=2.9461732813125168)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Organic Raspberries'}), support=0.001645527690811758, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.20236530880420497, lift=4.921715736761728)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Frozen Organic Wild Blueberries'}), support=0.0012074326562449913, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14848883048620237, lift=1.838420978795108)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Organic Whole Strawberries'}), support=0.0020088260121598083, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Organic Whole Strawberries'}), confidence=0.24704336399474372, lift=27.721879264000094), OrderedStatistic(items_base=frozenset({'Organic Whole Strawberries'}), items_add=frozenset({'Frozen Organic Wild Blueberries'}), confidence=0.2254196642685851, lift=27.721879264000094)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Garlic'}), support=0.003515445521279665, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Large Lemon'}), confidence=0.2384057971014493, lift=3.7771598668246718)]),\n"," RelationRecord(items=frozenset({'Limes', 'Garlic'}), support=0.002350753844016797, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Limes'}), confidence=0.15942028985507245, lift=3.4024325351577343)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Garlic'}), support=0.001645527690811758, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.11159420289855072, lift=1.4909017368546278)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Garlic'}), support=0.001741694893521536, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.1181159420289855, lift=3.9935392581888243)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Garlic'}), support=0.0015279899986109181, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1036231884057971, lift=1.2829452749481853)]),\n"," RelationRecord(items=frozenset({'Yellow Onions', 'Garlic'}), support=0.00214773419385171, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Yellow Onions'}), confidence=0.14565217391304347, lift=4.920992779783393)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Globe Eggplant'}), support=0.001121950698280744, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Globe Eggplant'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.220125786163522, lift=2.9408867879636738)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Globe Eggplant'}), support=0.0016027867118296344, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Globe Eggplant'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.31446540880503143, lift=8.790285010106475)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Goat Cheese Crumbles'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Goat Cheese Crumbles'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2425, lift=3.2398069236259817)]),\n"," RelationRecord(items=frozenset({'Granny Smith Apples', 'Large Lemon'}), support=0.0015386752433564491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Granny Smith Apples'}), items_add=frozenset({'Large Lemon'}), confidence=0.14131501472031405, lift=2.238911170243784)]),\n"," RelationRecord(items=frozenset({'Granny Smith Apples', 'Strawberries'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Granny Smith Apples'}), items_add=frozenset({'Strawberries'}), confidence=0.10107948969578018, lift=2.059148063160422)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Grape White/Green Seedless'}), support=0.0014638785301377328, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Large Lemon'}), confidence=0.12851782363977485, lift=2.0361600746530573)]),\n"," RelationRecord(items=frozenset({'Grape White/Green Seedless', 'Organic Avocado'}), support=0.0014852490196287946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13039399624765477, lift=2.2839571264887266)]),\n"," RelationRecord(items=frozenset({'Grape White/Green Seedless', 'Organic Baby Spinach'}), support=0.0016882686697938815, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14821763602251406, lift=1.980191849027698)]),\n"," RelationRecord(items=frozenset({'Grape White/Green Seedless', 'Organic Hass Avocado'}), support=0.0012394883904815839, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.10881801125703564, lift=1.9675330795039014)]),\n"," RelationRecord(items=frozenset({'Grape White/Green Seedless', 'Organic Raspberries'}), support=0.0012394883904815839, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.10881801125703564, lift=2.646556969727701)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Grape White/Green Seedless'}), support=0.002446921046726575, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.2148217636022514, lift=2.6596804326291705)]),\n"," RelationRecord(items=frozenset({'Lemon Sparkling Water', 'Grapefruit Sparkling Water'}), support=0.001121950698280744, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grapefruit Sparkling Water'}), items_add=frozenset({'Lemon Sparkling Water'}), confidence=0.21604938271604937, lift=60.53716640792489), OrderedStatistic(items_base=frozenset({'Lemon Sparkling Water'}), items_add=frozenset({'Grapefruit Sparkling Water'}), confidence=0.3143712574850299, lift=60.537166407924886)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Grated Parmesan'}), support=0.0019981407674142778, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Large Lemon'}), confidence=0.1517857142857143, lift=2.4048027159060683)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Grated Parmesan'}), support=0.0014531932853922018, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11038961038961038, lift=1.9335640029070684)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Grated Parmesan'}), support=0.0024041800677444517, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18262987012987014, lift=2.439940279206875)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Grated Parmesan'}), support=0.0014745637748832638, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Garlic'}), confidence=0.11201298701298702, lift=3.508353218067074)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Grated Parmesan'}), support=0.0015386752433564491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.1168831168831169, lift=2.1133578554366808)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Grated Parmesan'}), support=0.002350753844016797, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.17857142857142858, lift=2.2108697295560638)]),\n"," RelationRecord(items=frozenset({'Green Beans', 'Large Lemon'}), support=0.0017951211172491906, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Large Lemon'}), confidence=0.19976218787158148, lift=3.164913471531691)]),\n"," RelationRecord(items=frozenset({'Green Beans', 'Limes'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Limes'}), confidence=0.12366230677764567, lift=2.639266660068307)]),\n"," RelationRecord(items=frozenset({'Green Beans', 'Organic Avocado'}), support=0.001442508040646671, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Organic Avocado'}), confidence=0.16052318668252083, lift=2.8116944548113563)]),\n"," RelationRecord(items=frozenset({'Green Beans', 'Organic Baby Spinach'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.12366230677764567, lift=1.652131949236192)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Green Beans'}), support=0.001143321187771806, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.12722948870392392, lift=1.575211821581443)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Green Bell Pepper'}), support=0.002671311186382724, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Large Lemon'}), confidence=0.13455328310010764, lift=2.1317823100541347)]),\n"," RelationRecord(items=frozenset({'Limes', 'Green Bell Pepper'}), support=0.002788848878583564, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Limes'}), confidence=0.14047362755651238, lift=2.998062800942149)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Orange Bell Pepper'}), support=0.002083622725378525, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Orange Bell Pepper'}), confidence=0.10495156081808397, lift=7.286425610001502), OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Green Bell Pepper'}), confidence=0.1446587537091988, lift=7.286425610001502)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Green Bell Pepper'}), support=0.002692681675873786, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1356297093649085, lift=2.37566490928948)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Baby Spinach'}), support=0.0030239242629852437, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15231431646932186, lift=2.034923616761517)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Garlic'}), support=0.00214773419385171, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Garlic'}), confidence=0.10818083961248655, lift=3.3883267191478508)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Hass Avocado'}), support=0.0021263637043606484, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.1071044133476857, lift=1.9365496004578557)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Green Bell Pepper'}), support=0.0020088260121598083, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Red Bell Pepper'}), confidence=0.10118406889128094, lift=5.461080424064769), OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Green Bell Pepper'}), confidence=0.10841983852364474, lift=5.461080424064769)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Green Bell Pepper'}), support=0.00226527188605255, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.11410118406889129, lift=3.8577989571731677)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Green Bell Pepper'}), support=0.002190475172833834, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.11033369214208828, lift=1.366027152599764)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Yellow Onion'}), support=0.0026285702074006004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Yellow Onion'}), confidence=0.13240043057050593, lift=3.8916328818473427)]),\n"," RelationRecord(items=frozenset({'Red Peppers', 'Green Bell Pepper'}), support=0.0037932618846634684, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Red Peppers'}), confidence=0.1910656620021529, lift=8.458496740679037), OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Green Bell Pepper'}), confidence=0.16792809839167455, lift=8.458496740679035)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Yellow Bell Pepper'}), support=0.0012929146142092384, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Green Bell Pepper'}), confidence=0.14185228604923797, lift=7.145064528789039)]),\n"," RelationRecord(items=frozenset({'Yellow Onions', 'Green Bell Pepper'}), support=0.0021156784596151174, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Yellow Onions'}), confidence=0.10656620021528526, lift=3.600437176732094)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Green Onions'}), support=0.0017096391592849435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Onions'}), items_add=frozenset({'Large Lemon'}), confidence=0.15080113100848258, lift=2.3892035631777317)]),\n"," RelationRecord(items=frozenset({'Limes', 'Green Onions'}), support=0.001656212935557289, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Onions'}), items_add=frozenset({'Limes'}), confidence=0.1460885956644675, lift=3.117900433854166)]),\n"," RelationRecord(items=frozenset({'Ground Turkey Breast', 'Organic Avocado'}), support=0.0013142851037003002, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Organic Avocado'}), confidence=0.17446808510638298, lift=3.055950716985039)]),\n"," RelationRecord(items=frozenset({'Ground Turkey Breast', 'Organic Baby Spinach'}), support=0.0015386752433564491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2042553191489362, lift=2.7288568955305483)]),\n"," RelationRecord(items=frozenset({'Ground Turkey Breast', 'Organic Hass Avocado'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.13333333333333333, lift=2.4107934054611024)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Ground Turkey Breast'}), support=0.0010792097192986205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14326241134751772, lift=1.773713360336042)]),\n"," RelationRecord(items=frozenset({'Ground Turkey Breast', 'Organic Zucchini'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.13617021276595748, lift=3.806380436716745)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Half & Half'}), support=0.0018912883199589687, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Half & Half'}), items_add=frozenset({'Large Lemon'}), confidence=0.10062535531552018, lift=1.5942483710705244)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Half & Half'}), support=0.0022332161518159575, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Half & Half'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.11881750994883457, lift=1.4710642020877869)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Hass Avocado'}), support=0.0016989539145394125, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocado'}), items_add=frozenset({'Large Lemon'}), confidence=0.13624678663239073, lift=2.1586131742958443)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Hass Avocado'}), support=0.0013997670616645475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocado'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.11225364181662383, lift=1.499711859627748)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Hass Avocado'}), support=0.00154936048810198, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocado'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.12425021422450727, lift=1.5383258101109885)]),\n"," RelationRecord(items=frozenset({'Hass Avocados', 'Organic Baby Spinach'}), support=0.002340068599271266, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14038461538461536, lift=1.875542469664525)]),\n"," RelationRecord(items=frozenset({'Organic Blueberries', 'Hass Avocados'}), support=0.0016989539145394125, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Organic Blueberries'}), confidence=0.10192307692307692, lift=2.760033275462963)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Hass Avocados'}), support=0.00226527188605255, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1358974358974359, lift=1.6825285531595888)]),\n"," RelationRecord(items=frozenset({'Packaged Grape Tomatoes', 'Hass Avocados'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Packaged Grape Tomatoes'}), items_add=frozenset({'Hass Avocados'}), confidence=0.25679012345679014, lift=15.405267489711935)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Hass Avocados'}), support=0.0019874555226687468, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Strawberries'}), confidence=0.11923076923076922, lift=2.428918154114062)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Honey Nut Cheerios'}), support=0.0012074326562449913, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honey Nut Cheerios'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13262910798122066, lift=1.6420638085247385)]),\n"," RelationRecord(items=frozenset({'Honeycrisp Apple', 'Large Lemon'}), support=0.0039749110453374936, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Large Lemon'}), confidence=0.14850299401197603, lift=2.3527932454035554)]),\n"," RelationRecord(items=frozenset({'Honeycrisp Apple', 'Organic Avocado'}), support=0.00416724545075705, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Organic Avocado'}), confidence=0.15568862275449102, lift=2.7270131270306104)]),\n"," RelationRecord(items=frozenset({'Honeycrisp Apple', 'Organic Baby Spinach'}), support=0.0037825766399179374, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14131736526946106, lift=1.8880040347570384)]),\n"," RelationRecord(items=frozenset({'Honeycrisp Apple', 'Organic Hass Avocado'}), support=0.0027461078996014405, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.10259481037924152, lift=1.855011692226058)]),\n"," RelationRecord(items=frozenset({'Honeycrisp Apple', 'Organic Strawberries'}), support=0.004274097898212359, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1596806387225549, lift=1.976985307068097)]),\n"," RelationRecord(items=frozenset({'Honeycrisp Apple', 'Strawberries'}), support=0.002874330836547811, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Strawberries'}), confidence=0.10738522954091816, lift=2.1876058940021568)]),\n"," RelationRecord(items=frozenset({'Non Fat Acai & Mixed Berries Yogurt', 'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), support=0.0013890818169190165, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), items_add=frozenset({'Non Fat Acai & Mixed Berries Yogurt'}), confidence=0.25742574257425743, lift=82.7893572862441), OrderedStatistic(items_base=frozenset({'Non Fat Acai & Mixed Berries Yogurt'}), items_add=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), confidence=0.44673539518900346, lift=82.78935728624408)]),\n"," RelationRecord(items=frozenset({'Non Fat Raspberry Yogurt', 'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), support=0.001645527690811758, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), items_add=frozenset({'Non Fat Raspberry Yogurt'}), confidence=0.30495049504950494, lift=70.46765921036548), OrderedStatistic(items_base=frozenset({'Non Fat Raspberry Yogurt'}), items_add=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), confidence=0.3802469135802469, lift=70.46765921036548)]),\n"," RelationRecord(items=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt', 'Nonfat Icelandic Style Strawberry Yogurt'}), support=0.001218117900990522, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), items_add=frozenset({'Nonfat Icelandic Style Strawberry Yogurt'}), confidence=0.22574257425742572, lift=79.12573144954943), OrderedStatistic(items_base=frozenset({'Nonfat Icelandic Style Strawberry Yogurt'}), items_add=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), confidence=0.4269662921348314, lift=79.12573144954943)]),\n"," RelationRecord(items=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt', 'Vanilla Skyr Nonfat Yogurt'}), support=0.0015279899986109181, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), items_add=frozenset({'Vanilla Skyr Nonfat Yogurt'}), confidence=0.28316831683168314, lift=50.191047854785474), OrderedStatistic(items_base=frozenset({'Vanilla Skyr Nonfat Yogurt'}), items_add=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), confidence=0.2708333333333333, lift=50.191047854785474)]),\n"," RelationRecord(items=frozenset({'Italian Sparkling Mineral Water', 'Large Lemon'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Italian Sparkling Mineral Water'}), items_add=frozenset({'Large Lemon'}), confidence=0.13619167717528374, lift=2.1577400527853867)]),\n"," RelationRecord(items=frozenset({'Italian Sparkling Mineral Water', 'Organic Baby Spinach'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Italian Sparkling Mineral Water'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.12988650693568726, lift=1.7352874410549843)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Italian Sparkling Mineral Water'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Italian Sparkling Mineral Water'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.12988650693568726, lift=1.6081080201865543)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Jalapeno Peppers'}), support=0.002959812794512058, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Large Lemon'}), confidence=0.1927627000695894, lift=3.054017743594492)]),\n"," RelationRecord(items=frozenset({'Limes', 'Jalapeno Peppers'}), support=0.004252727408721297, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Limes'}), confidence=0.27696590118302017, lift=5.911153430790264)]),\n"," RelationRecord(items=frozenset({'Jalapeno Peppers', 'Organic Avocado'}), support=0.0023080128650346736, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Avocado'}), confidence=0.15031315240083507, lift=2.632857382320223)]),\n"," RelationRecord(items=frozenset({'Jalapeno Peppers', 'Organic Baby Spinach'}), support=0.0020515669911419323, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.13361169102296452, lift=1.7850560068188697)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Jalapeno Peppers'}), support=0.0025110325151997607, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Cilantro'}), confidence=0.16353514265831592, lift=5.999515247339794)]),\n"," RelationRecord(items=frozenset({'Jalapeno Peppers', 'Organic Garlic'}), support=0.0016882686697938815, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Garlic'}), confidence=0.10995128740431453, lift=3.4437788267428324)]),\n"," RelationRecord(items=frozenset({'Jalapeno Peppers', 'Organic Hass Avocado'}), support=0.001741694893521536, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.11343075852470423, lift=2.0509359347085576)]),\n"," RelationRecord(items=frozenset({'Jalapeno Peppers', 'Organic Red Onion'}), support=0.0019981407674142778, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.1301322199025748, lift=4.399813606944461)]),\n"," RelationRecord(items=frozenset({'Yellow Onions', 'Jalapeno Peppers'}), support=0.0017096391592849435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Yellow Onions'}), confidence=0.11134307585247043, lift=3.7618283176191873)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Large Alfresco Eggs'}), support=0.0018164916067402524, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Large Lemon'}), confidence=0.12509197939661515, lift=1.981883032976303)]),\n"," RelationRecord(items=frozenset({'Large Alfresco Eggs', 'Limes'}), support=0.0015173047538653874, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Limes'}), confidence=0.10448859455481972, lift=2.2300511057244954)]),\n"," RelationRecord(items=frozenset({'Large Alfresco Eggs', 'Organic Avocado'}), support=0.0017096391592849435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11773362766740252, lift=2.0622004515270818)]),\n"," RelationRecord(items=frozenset({'Large Alfresco Eggs', 'Organic Baby Spinach'}), support=0.0021263637043606484, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14643119941133187, lift=1.9563250048976897)]),\n"," RelationRecord(items=frozenset({'Large Alfresco Eggs', 'Organic Hass Avocado'}), support=0.0020088260121598083, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.13833701250919792, lift=2.501264681162733)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Large Alfresco Eggs'}), support=0.0025430882494363533, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1751287711552612, lift=2.1682466339605018)]),\n"," RelationRecord(items=frozenset({'Large Alfresco Eggs', 'Organic Yellow Onion'}), support=0.0015279899986109181, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Organic Yellow Onion'}), confidence=0.10522442972774099, lift=3.0928513520509093)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Limes'}), support=0.012458995373289025, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Limes'}), confidence=0.1973929236499069, lift=4.212864662628013), OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Large Lemon'}), confidence=0.26590649942987454, lift=4.212864662628013)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Medium Navel Orange'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Medium Navel Orange'}), items_add=frozenset({'Large Lemon'}), confidence=0.18374558303886926, lift=2.9111558963701807)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Michigan Organic Kale'}), support=0.0037932618846634684, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Large Lemon'}), confidence=0.18763213530655393, lift=2.9727321223860614)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'No Salt Added Black Beans'}), support=0.0016668981803028198, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Large Lemon'}), confidence=0.1712403951701427, lift=2.713031126254976)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Orange Bell Pepper'}), support=0.002179789928088303, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Large Lemon'}), confidence=0.1513353115727003, lift=2.3976668028024894)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Avocado'}), support=0.010535651319093464, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Organic Avocado'}), confidence=0.16692060267479264, lift=2.9237504103548226), OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Large Lemon'}), confidence=0.18454052030694365, lift=2.9237504103548226)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Baby Arugula'}), support=0.00393217006635537, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Large Lemon'}), confidence=0.1706864564007421, lift=2.7042548493611394)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Baby Broccoli'}), support=0.0011860621667539296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Large Lemon'}), confidence=0.11234817813765183, lift=1.7799778140119218)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Baby Carrots'}), support=0.0031628324446771453, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Large Lemon'}), confidence=0.1177406523468576, lift=1.8654129729448727)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Baby Spinach'}), support=0.009712887473687586, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1538852209243271, lift=2.055910945131335), OrderedStatistic(items_base=frozenset({'Organic Baby Spinach'}), items_add=frozenset({'Large Lemon'}), confidence=0.1297644539614561, lift=2.055910945131335)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Basil'}), support=0.001645527690811758, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Basil'}), items_add=frozenset({'Large Lemon'}), confidence=0.1673913043478261, lift=2.6520484171322165)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Blackberries'}), support=0.0022332161518159575, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blackberries'}), items_add=frozenset({'Large Lemon'}), confidence=0.10930962343096234, lift=1.731836757750715)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Carrot Bunch'}), support=0.0017096391592849435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Carrot Bunch'}), items_add=frozenset({'Large Lemon'}), confidence=0.12872083668543846, lift=2.0393764927848537)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Celery Hearts'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Celery Hearts'}), items_add=frozenset({'Large Lemon'}), confidence=0.12419974391805377, lift=1.9677469839273574)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Large Lemon'}), support=0.003921484821609839, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Large Lemon'}), confidence=0.14386515092120736, lift=2.2793140137570735)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Coconut Milk'}), support=0.0010685244745530897, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Large Lemon'}), confidence=0.13157894736842107, lift=2.084658701095044)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Cucumber'}), support=0.005054120764636114, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Large Lemon'}), confidence=0.1448698315467075, lift=2.2952315769361293)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Dill'}), support=0.0010898949640441515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Dill'}), items_add=frozenset({'Large Lemon'}), confidence=0.22319474835886216, lift=3.536165043958157)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Extra Firm Tofu'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Large Lemon'}), confidence=0.1367419738406659, lift=2.1664586263460976)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Fuji Apple'}), support=0.002895701326038873, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apple'}), items_add=frozenset({'Large Lemon'}), confidence=0.11605995717344755, lift=1.8387850367346261)]),\n"," RelationRecord(items=frozenset({'Organic Gala Apples', 'Large Lemon'}), support=0.002446921046726575, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Gala Apples'}), items_add=frozenset({'Large Lemon'}), confidence=0.11896103896103896, lift=1.8847480537069161)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Garbanzo Beans'}), support=0.0014531932853922018, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garbanzo Beans'}), items_add=frozenset({'Large Lemon'}), confidence=0.1650485436893204, lift=2.614931108558055)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Garlic'}), support=0.005951681323260709, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Large Lemon'}), confidence=0.1864123159303882, lift=2.953406028606271)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Garnet Sweet Potato (Yam)'}), support=0.0030452947524763053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Large Lemon'}), confidence=0.15667949422759758, lift=2.4823368590279626)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Large Lemon'}), support=0.0023934948229989207, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Large Lemon'}), confidence=0.15697266993693063, lift=2.4869817608578852)]),\n"," RelationRecord(items=frozenset({'Organic Grade A Free Range Large Brown Eggs', 'Large Lemon'}), support=0.0016775834250483508, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Free Range Large Brown Eggs'}), items_add=frozenset({'Large Lemon'}), confidence=0.12610441767068273, lift=1.9979235037322136)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Granny Smith Apple'}), support=0.002372124333507859, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Large Lemon'}), confidence=0.13397706698853348, lift=2.122653084180783)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Grape Tomatoes'}), support=0.00429546838770342, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grape Tomatoes'}), items_add=frozenset({'Large Lemon'}), confidence=0.14983227730152812, lift=2.3738536204195215)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Hass Avocado'}), support=0.005620438736149251, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Hass Avocado'}), items_add=frozenset({'Large Lemon'}), confidence=0.10162287480680061, lift=1.610052477491798)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Hothouse Cucumbers'}), support=0.001047153985062028, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Hothouse Cucumbers'}), items_add=frozenset({'Large Lemon'}), confidence=0.14648729446935727, lift=2.3208576989171728)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Italian Parsley Bunch'}), support=0.0034620192975520106, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Italian Parsley Bunch'}), items_add=frozenset({'Large Lemon'}), confidence=0.18577981651376146, lift=2.9433850834727266)]),\n"," RelationRecord(items=frozenset({'Organic Kiwi', 'Large Lemon'}), support=0.0016134719565751654, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Kiwi'}), items_add=frozenset({'Large Lemon'}), confidence=0.11917916337805842, lift=1.888203887432259)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Lacinato (Dinosaur) Kale'}), support=0.0022011604175793645, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Large Lemon'}), confidence=0.164274322169059, lift=2.602664802579266)]),\n"," RelationRecord(items=frozenset({'Organic Navel Orange', 'Large Lemon'}), support=0.0018485473409768451, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Large Lemon'}), confidence=0.12636961285609935, lift=2.002125098758045)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Peeled Whole Baby Carrots'}), support=0.0019340292989410922, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Peeled Whole Baby Carrots'}), items_add=frozenset({'Large Lemon'}), confidence=0.10609613130128956, lift=1.6809240968501415)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Large Lemon'}), support=0.002254586641307019, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Large Lemon'}), confidence=0.12168396770472895, lift=1.927888519651679)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Red Onion'}), support=0.005171658456836954, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Large Lemon'}), confidence=0.17485549132947975, lift=2.7703065629002914)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Red Radish, Bunch'}), support=0.0011646916772628678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Radish, Bunch'}), items_add=frozenset({'Large Lemon'}), confidence=0.14552736982643524, lift=2.305649222946774)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Reduced Fat Milk'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat Milk'}), items_add=frozenset({'Large Lemon'}), confidence=0.1152019002375297, lift=1.8251904922176558)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Roma Tomato'}), support=0.001218117900990522, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roma Tomato'}), items_add=frozenset({'Large Lemon'}), confidence=0.13043478260869562, lift=2.066531234128999)]),\n"," RelationRecord(items=frozenset({'Organic Romaine', 'Large Lemon'}), support=0.0011967474114994603, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine'}), items_add=frozenset({'Large Lemon'}), confidence=0.13575757575757577, lift=2.1508624077237593)]),\n"," RelationRecord(items=frozenset({'Organic Russet Potato', 'Large Lemon'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Russet Potato'}), items_add=frozenset({'Large Lemon'}), confidence=0.11046511627906977, lift=1.7501437002216529)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Small Bunch Celery'}), support=0.0030666652419673673, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Small Bunch Celery'}), items_add=frozenset({'Large Lemon'}), confidence=0.15306666666666668, lift=2.4250973647085385)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Spring Mix'}), support=0.001132635943026275, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Spring Mix'}), items_add=frozenset({'Large Lemon'}), confidence=0.10578842315369262, lift=1.6760489516987696)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Large Lemon'}), support=0.007639949993054591, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.12104283054003726, lift=1.4986156081162147)]),\n"," RelationRecord(items=frozenset({'Organic Thyme', 'Large Lemon'}), support=0.001047153985062028, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Thyme'}), items_add=frozenset({'Large Lemon'}), confidence=0.20081967213114754, lift=3.181667624130304)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Tomato Cluster'}), support=0.002169104683342772, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Cluster'}), items_add=frozenset({'Large Lemon'}), confidence=0.11190738699007717, lift=1.7729941808431273)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Whole Milk'}), support=0.0038573733531366535, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Milk'}), items_add=frozenset({'Large Lemon'}), confidence=0.10605170387779082, lift=1.6802202151364163)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Yellow Onion'}), support=0.004071078248047272, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Onion'}), items_add=frozenset({'Large Lemon'}), confidence=0.1196608040201005, lift=1.8958347157320377)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Zucchini'}), support=0.0058448288758054, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Large Lemon'}), confidence=0.1633811230585424, lift=2.5885134863178956)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Original Hummus'}), support=0.0026392554521461314, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Hummus'}), items_add=frozenset({'Large Lemon'}), confidence=0.12399598393574296, lift=1.9645187317749073)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Pure Sparkling Water'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Sparkling Water'}), items_add=frozenset({'Large Lemon'}), confidence=0.11150234741784038, lift=1.7665769744021378)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Red Onion'}), support=0.0020301965016508703, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Onion'}), items_add=frozenset({'Large Lemon'}), confidence=0.17674418604651163, lift=2.8002299203546444)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Red Peppers'}), support=0.0035795569897528502, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Large Lemon'}), confidence=0.1584673604541154, lift=2.510662749757796)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Red Raspberries'}), support=0.0011860621667539296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Raspberries'}), items_add=frozenset({'Large Lemon'}), confidence=0.10755813953488372, lift=1.7040872870579251)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Red Vine Tomato'}), support=0.002767478389092502, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Vine Tomato'}), items_add=frozenset({'Large Lemon'}), confidence=0.15918869084204057, lift=2.5220910800463945)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Roma Tomato'}), support=0.0021263637043606484, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roma Tomato'}), items_add=frozenset({'Large Lemon'}), confidence=0.14093484419263455, lift=2.232887974175739)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Russet Potato'}), support=0.0015066195091198564, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Russet Potato'}), items_add=frozenset({'Large Lemon'}), confidence=0.13364928909952606, lift=2.117459965965354)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Salted Butter'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Salted Butter'}), items_add=frozenset({'Large Lemon'}), confidence=0.16097560975609757, lift=2.5504019621201803)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Seedless Red Grapes'}), support=0.0035581865002617887, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Seedless Red Grapes'}), items_add=frozenset({'Large Lemon'}), confidence=0.11737751145576314, lift=1.8596595843254622)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Shallot'}), support=0.0017310096487760053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shallot'}), items_add=frozenset({'Large Lemon'}), confidence=0.27835051546391754, lift=4.4100202625227105)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Sharp Cheddar Cheese'}), support=0.0011967474114994603, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sharp Cheddar Cheese'}), items_add=frozenset({'Large Lemon'}), confidence=0.12187159956474428, lift=1.9308612474125146)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Shredded Parmesan'}), support=0.0014104523064100783, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Parmesan'}), items_add=frozenset({'Large Lemon'}), confidence=0.13865546218487396, lift=2.196774799305197)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Small Hass Avocado'}), support=0.0031735176894226763, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Small Hass Avocado'}), items_add=frozenset({'Large Lemon'}), confidence=0.13258928571428572, lift=2.100665901835595)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Large Lemon'}), support=0.0051289174778548306, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Strawberries'}), items_add=frozenset({'Large Lemon'}), confidence=0.1044841097083152, lift=1.6553841840650239)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Total 0% Greek Yogurt'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Greek Yogurt'}), items_add=frozenset({'Large Lemon'}), confidence=0.13096862210095497, lift=2.0749890700122013)]),\n"," RelationRecord(items=frozenset({'Total Greek Strained Yogurt', 'Large Lemon'}), support=0.0011753769220083986, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total Greek Strained Yogurt'}), items_add=frozenset({'Large Lemon'}), confidence=0.16176470588235295, lift=2.56290393252273)]),\n"," RelationRecord(items=frozenset({'Unsalted Butter', 'Large Lemon'}), support=0.0017310096487760053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsalted Butter'}), items_add=frozenset({'Large Lemon'}), confidence=0.15944881889763782, lift=2.5262123944765924)]),\n"," RelationRecord(items=frozenset({'Unsweetened Almondmilk', 'Large Lemon'}), support=0.0016882686697938815, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Almondmilk'}), items_add=frozenset({'Large Lemon'}), confidence=0.10121716848174248, lift=1.6036247074150727)]),\n"," RelationRecord(items=frozenset({'Unsweetened Original Almond Breeze Almond Milk', 'Large Lemon'}), support=0.0012608588799726459, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Original Almond Breeze Almond Milk'}), items_add=frozenset({'Large Lemon'}), confidence=0.11163670766319773, lift=1.7687056983368354)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'White Onion'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'White Onion'}), items_add=frozenset({'Large Lemon'}), confidence=0.14264264264264265, lift=2.2599453186045366)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Yellow Bell Pepper'}), support=0.0015707309775930417, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Large Lemon'}), confidence=0.1723329425556858, lift=2.7303407981985726)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Yellow Onions'}), support=0.005748661673095622, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Onions'}), items_add=frozenset({'Large Lemon'}), confidence=0.19422382671480143, lift=3.077166966439499)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Lightly Salted Baked Snap Pea Crisps'}), support=0.001132635943026275, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lightly Salted Baked Snap Pea Crisps'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1484593837535014, lift=1.8380564026113158)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Lime Sparkling Water'}), support=0.00154936048810198, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lime Sparkling Water'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.10076441973592772, lift=1.2475512302984875)]),\n"," RelationRecord(items=frozenset({'Lime Sparkling Water', 'Peach Pear Flavored Sparkling Water'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Peach Pear Flavored Sparkling Water'}), items_add=frozenset({'Lime Sparkling Water'}), confidence=0.15999999999999998, lift=10.405781792911743)]),\n"," RelationRecord(items=frozenset({'Lime Sparkling Water', 'Pure Sparkling Water'}), support=0.0011753769220083986, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Sparkling Water'}), items_add=frozenset({'Lime Sparkling Water'}), confidence=0.12910798122065728, lift=8.396684251909418)]),\n"," RelationRecord(items=frozenset({'Lime Sparkling Water', 'Sparkling Lemon Water'}), support=0.0027354226548559095, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lime Sparkling Water'}), items_add=frozenset({'Sparkling Lemon Water'}), confidence=0.17790132036136205, lift=15.706840442130934), OrderedStatistic(items_base=frozenset({'Sparkling Lemon Water'}), items_add=frozenset({'Lime Sparkling Water'}), confidence=0.24150943396226415, lift=15.706840442130934)]),\n"," RelationRecord(items=frozenset({'Sparkling Water Berry', 'Lime Sparkling Water'}), support=0.001143321187771806, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Water Berry'}), items_add=frozenset({'Lime Sparkling Water'}), confidence=0.19814814814814816, lift=12.886789951869869)]),\n"," RelationRecord(items=frozenset({'Lime Sparkling Water', 'Sparkling Water Grapefruit'}), support=0.004071078248047272, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lime Sparkling Water'}), items_add=frozenset({'Sparkling Water Grapefruit'}), confidence=0.26476719944405835, lift=9.999502782232078), OrderedStatistic(items_base=frozenset({'Sparkling Water Grapefruit'}), items_add=frozenset({'Lime Sparkling Water'}), confidence=0.15375302663438256, lift=9.999502782232078)]),\n"," RelationRecord(items=frozenset({'Limes', 'Michigan Organic Kale'}), support=0.002286642375543612, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Limes'}), confidence=0.11310782241014801, lift=2.4140072464990925)]),\n"," RelationRecord(items=frozenset({'Limes', 'No Salt Added Black Beans'}), support=0.0016241572013206962, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Limes'}), confidence=0.1668496158068057, lift=3.5609931572432214)]),\n"," RelationRecord(items=frozenset({'Limes', 'Orange Bell Pepper'}), support=0.0016989539145394125, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Limes'}), confidence=0.11795252225519287, lift=2.517405404856724)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Avocado'}), support=0.008152841740840074, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Avocado'}), confidence=0.17400228050171038, lift=3.0477917696637786), OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Limes'}), confidence=0.1428036683511136, lift=3.0477917696637786)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Baby Arugula'}), support=0.00261788496265507, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Limes'}), confidence=0.11363636363636365, lift=2.4252876541930135)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Baby Broccoli'}), support=0.001132635943026275, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Limes'}), confidence=0.10728744939271255, lift=2.2897857528656305)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Baby Spinach'}), support=0.007426245098143973, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15849486887115163, lift=2.1174959733111303)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Basil'}), support=0.0013570260826824237, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Basil'}), items_add=frozenset({'Limes'}), confidence=0.13804347826086955, lift=2.946197263397947)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Black Beans'}), support=0.0017310096487760053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Black Beans'}), items_add=frozenset({'Limes'}), confidence=0.14136125654450263, lift=3.017007050451623)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Carrot Bunch'}), support=0.0015173047538653874, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Carrot Bunch'}), items_add=frozenset({'Limes'}), confidence=0.11423974255832663, lift=2.4381652877551)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Limes'}), support=0.007971192580166049, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Cilantro'}), confidence=0.1701254275940707, lift=6.241289060073028), OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Limes'}), confidence=0.2924343394747158, lift=6.2412890600730275)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Coconut Milk'}), support=0.0015066195091198564, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Limes'}), confidence=0.18552631578947368, lift=3.9596012122666986)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Cucumber'}), support=0.0038680585978821845, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Limes'}), confidence=0.11087289433384379, lift=2.3663082239501567)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Extra Firm Tofu'}), support=0.0011860621667539296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Limes'}), confidence=0.1319857312722949, lift=2.816909608342135)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Garbanzo Beans'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garbanzo Beans'}), items_add=frozenset({'Limes'}), confidence=0.11407766990291261, lift=2.4347062470248306)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Garlic'}), support=0.005107546988363769, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Garlic'}), confidence=0.10900798175598632, lift=3.41423359725485), OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Limes'}), confidence=0.15997322623828647, lift=3.4142335972548494)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Garnet Sweet Potato (Yam)'}), support=0.0024148653124899827, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Limes'}), confidence=0.12424409015942826, lift=2.6516833901369243)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Limes'}), support=0.0025110325151997607, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Limes'}), confidence=0.1646811492641906, lift=3.5147125920610733)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Granny Smith Apple'}), support=0.0018271768514857834, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Limes'}), confidence=0.1031985515992758, lift=2.2025183234940533)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Grape Tomatoes'}), support=0.002874330836547811, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grape Tomatoes'}), items_add=frozenset({'Limes'}), confidence=0.10026090197540066, lift=2.139821444280917)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Hass Avocado'}), support=0.006240182931390044, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.1331812998859749, lift=2.408044496218843), OrderedStatistic(items_base=frozenset({'Organic Hass Avocado'}), items_add=frozenset({'Limes'}), confidence=0.11282843894899536, lift=2.408044496218843)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Italian Parsley Bunch'}), support=0.002575143983672946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Italian Parsley Bunch'}), items_add=frozenset({'Limes'}), confidence=0.1381880733944954, lift=2.9492832895714116)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Jalapeno Pepper'}), support=0.0019126588094500305, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Jalapeno Pepper'}), items_add=frozenset({'Limes'}), confidence=0.28144654088050314, lift=6.006781624032758)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Lacinato (Dinosaur) Kale'}), support=0.0017844358725036596, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Limes'}), confidence=0.13317384370015947, lift=2.8422669350893557)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Lemon'}), support=0.0037825766399179374, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lemon'}), items_add=frozenset({'Limes'}), confidence=0.1433778857837181, lift=3.0600470232248176)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Mint'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Mint'}), items_add=frozenset({'Limes'}), confidence=0.2076923076923077, lift=4.432679589509692)]),\n"," RelationRecord(items=frozenset({'Organic Navel Orange', 'Limes'}), support=0.0016241572013206962, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Limes'}), confidence=0.11102994886778669, lift=2.3696601652655764)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Limes'}), support=0.002179789928088303, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Limes'}), confidence=0.11764705882352941, lift=2.5108860419880608)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Red Onion'}), support=0.005203714191073547, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.11106043329532497, lift=3.7549901628647318), OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Limes'}), confidence=0.1759393063583815, lift=3.7549901628647318)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Red Radish, Bunch'}), support=0.0011860621667539296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Radish, Bunch'}), items_add=frozenset({'Limes'}), confidence=0.14819759679572764, lift=3.16291185662982)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Roma Tomato'}), support=0.0013142851037003002, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roma Tomato'}), items_add=frozenset({'Limes'}), confidence=0.14073226544622425, lift=3.0035827882134067)]),\n"," RelationRecord(items=frozenset({'Organic Romaine Lettuce', 'Limes'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine Lettuce'}), items_add=frozenset({'Limes'}), confidence=0.11501210653753027, lift=2.4546494902001927)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Small Bunch Celery'}), support=0.002243901396561488, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Small Bunch Celery'}), items_add=frozenset({'Limes'}), confidence=0.112, lift=2.390363511972634)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Limes'}), support=0.0061440157286802655, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13112884834663627, lift=1.6234892882943046)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Tomato Cluster'}), support=0.0020515669911419323, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Cluster'}), items_add=frozenset({'Limes'}), confidence=0.10584343991179714, lift=2.2589669352395343)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic White Onions'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic White Onions'}), items_add=frozenset({'Limes'}), confidence=0.16323296354992073, lift=3.483804643043656)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Yellow Onion'}), support=0.004434376569395322, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Onion'}), items_add=frozenset({'Limes'}), confidence=0.13033919597989949, lift=2.781768377233946)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Zucchini'}), support=0.00404970775855621, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Limes'}), confidence=0.11320191158900836, lift=2.4160153477492643)]),\n"," RelationRecord(items=frozenset({'Limes', 'Red Onion'}), support=0.0015707309775930417, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Onion'}), items_add=frozenset({'Limes'}), confidence=0.13674418604651162, lift=2.918467078571239)]),\n"," RelationRecord(items=frozenset({'Limes', 'Red Peppers'}), support=0.003312425871114578, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Limes'}), confidence=0.1466414380321665, lift=3.1296994894222046)]),\n"," RelationRecord(items=frozenset({'Limes', 'Red Vine Tomato'}), support=0.0023186981097802046, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Vine Tomato'}), items_add=frozenset({'Limes'}), confidence=0.1333743085433313, lift=2.8465453622907058)]),\n"," RelationRecord(items=frozenset({'Limes', 'Roma Tomato'}), support=0.0022225309070704265, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roma Tomato'}), items_add=frozenset({'Limes'}), confidence=0.14730878186968838, lift=3.143942296200348)]),\n"," RelationRecord(items=frozenset({'Limes', 'Serrano Chile Peppers'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Serrano Chile Peppers'}), items_add=frozenset({'Limes'}), confidence=0.276657060518732, lift=5.904561989228409)]),\n"," RelationRecord(items=frozenset({'Limes', 'Sharp Cheddar Cheese'}), support=0.0010792097192986205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sharp Cheddar Cheese'}), items_add=frozenset({'Limes'}), confidence=0.10990206746463546, lift=2.3455883210519586)]),\n"," RelationRecord(items=frozenset({'Limes', 'Small Hass Avocado'}), support=0.0028209046128201565, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Small Hass Avocado'}), items_add=frozenset({'Limes'}), confidence=0.11785714285714284, lift=2.515369767063039)]),\n"," RelationRecord(items=frozenset({'Unsalted Butter', 'Limes'}), support=0.001121950698280744, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsalted Butter'}), items_add=frozenset({'Limes'}), confidence=0.10334645669291338, lift=2.2056749925928583)]),\n"," RelationRecord(items=frozenset({'White Onion', 'Limes'}), support=0.0011112654535352132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'White Onion'}), items_add=frozenset({'Limes'}), confidence=0.15615615615615616, lift=3.3327676593355045)]),\n"," RelationRecord(items=frozenset({'Limes', 'Yellow Bell Pepper'}), support=0.001335655593191362, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Limes'}), confidence=0.1465416178194607, lift=3.1275690734024786)]),\n"," RelationRecord(items=frozenset({'Limes', 'Yellow Onions'}), support=0.0036970946819536903, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Onions'}), items_add=frozenset({'Limes'}), confidence=0.12490974729241877, lift=2.6658901983707173)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Mango Chunks'}), support=0.0012074326562449913, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Mango Chunks'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.22376237623762377, lift=2.9894717351820836)]),\n"," RelationRecord(items=frozenset({'Pineapple Chunks', 'Mango Chunks'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Mango Chunks'}), items_add=frozenset({'Pineapple Chunks'}), confidence=0.21386138613861386, lift=25.993046161759036), OrderedStatistic(items_base=frozenset({'Pineapple Chunks'}), items_add=frozenset({'Mango Chunks'}), confidence=0.14025974025974028, lift=25.993046161759036)]),\n"," RelationRecord(items=frozenset({'Marinara Sauce', 'Organic Strawberries'}), support=0.0011753769220083986, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Marinara Sauce'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.19230769230769232, lift=2.3809366318296075)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Medium Navel Orange'}), support=0.001047153985062028, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Medium Navel Orange'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.17314487632508835, lift=2.143684289011251)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Michigan Organic Kale'}), support=0.003130776710440553, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Avocado'}), confidence=0.15486257928118397, lift=2.712544302299862)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Organic Baby Spinach'}), support=0.004028337269065148, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1992600422832981, lift=2.662119853985299)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Organic Cucumber'}), support=0.002361439088762328, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Cucumber'}), confidence=0.11680761099365751, lift=3.3481390168647547)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Organic Garlic'}), support=0.002083622725378525, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Garlic'}), confidence=0.10306553911205076, lift=3.228110645541999)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Organic Hass Avocado'}), support=0.0024789767809631678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.1226215644820296, lift=2.2171144426545024)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Michigan Organic Kale'}), support=0.0028422751023112185, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14059196617336153, lift=1.7406509244961483)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Organic Zucchini'}), support=0.0023293833545257356, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.11522198731501058, lift=3.2208124632168142)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'No Salt Added Black Beans'}), support=0.0020195112569053393, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Organic Avocado'}), confidence=0.2074643249176729, lift=3.6339067520251267)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'No Salt Added Black Beans'}), support=0.002254586641307019, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.23161361141602635, lift=3.0943644613264323)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'No Salt Added Black Beans'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Organic Cilantro'}), confidence=0.10867178924259056, lift=3.9867764562314085)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'No Salt Added Black Beans'}), support=0.0010898949640441515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.11196487376509331, lift=3.785569595756426)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'No Salt Added Black Beans'}), support=0.0010685244745530897, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.10976948408342482, lift=1.3590417656985685)]),\n"," RelationRecord(items=frozenset({'Yellow Onions', 'No Salt Added Black Beans'}), support=0.0012822293694637076, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Yellow Onions'}), confidence=0.1317233809001098, lift=4.450395685306344)]),\n"," RelationRecord(items=frozenset({'Non Fat Acai & Mixed Berries Yogurt', 'Non Fat Raspberry Yogurt'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Non Fat Acai & Mixed Berries Yogurt'}), items_add=frozenset({'Non Fat Raspberry Yogurt'}), confidence=0.32646048109965636, lift=75.43816554240381), OrderedStatistic(items_base=frozenset({'Non Fat Raspberry Yogurt'}), items_add=frozenset({'Non Fat Acai & Mixed Berries Yogurt'}), confidence=0.23456790123456792, lift=75.43816554240381)]),\n"," RelationRecord(items=frozenset({'Non Fat Raspberry Yogurt', 'Nonfat Icelandic Style Strawberry Yogurt'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Non Fat Raspberry Yogurt'}), items_add=frozenset({'Nonfat Icelandic Style Strawberry Yogurt'}), confidence=0.23209876543209876, lift=81.35365977713043), OrderedStatistic(items_base=frozenset({'Nonfat Icelandic Style Strawberry Yogurt'}), items_add=frozenset({'Non Fat Raspberry Yogurt'}), confidence=0.3520599250936329, lift=81.35365977713042)]),\n"," RelationRecord(items=frozenset({'Non Fat Raspberry Yogurt', 'Vanilla Skyr Nonfat Yogurt'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Non Fat Raspberry Yogurt'}), items_add=frozenset({'Vanilla Skyr Nonfat Yogurt'}), confidence=0.23703703703703707, lift=42.01436588103255), OrderedStatistic(items_base=frozenset({'Vanilla Skyr Nonfat Yogurt'}), items_add=frozenset({'Non Fat Raspberry Yogurt'}), confidence=0.18181818181818185, lift=42.01436588103255)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Orange Bell Pepper'}), support=0.002254586641307019, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Organic Avocado'}), confidence=0.15652818991097922, lift=2.7417188300952295)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Orange Bell Pepper'}), support=0.001966085033177685, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.13649851632047477, lift=1.8236240752154567)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Orange Bell Pepper'}), support=0.0015279899986109181, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.10608308605341246, lift=1.3134009491309317)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Orange Bell Pepper'}), support=0.0017310096487760053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.1201780415430267, lift=3.3593495740403942)]),\n"," RelationRecord(items=frozenset({'Red Peppers', 'Orange Bell Pepper'}), support=0.0027140521653648475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Red Peppers'}), confidence=0.18842729970326408, lift=8.341696167137831), OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Orange Bell Pepper'}), confidence=0.12015137180700095, lift=8.341696167137831)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Orange Bell Pepper'}), support=0.0016775834250483508, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Strawberries'}), confidence=0.11646884272997032, lift=2.3726533706072557)]),\n"," RelationRecord(items=frozenset({'Yellow Bell Pepper', 'Orange Bell Pepper'}), support=0.003130776710440553, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Yellow Bell Pepper'}), confidence=0.21735905044510387, lift=23.847574975387964), OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Orange Bell Pepper'}), confidence=0.34349355216881594, lift=23.847574975387964)]),\n"," RelationRecord(items=frozenset({'Sparkling Water Grapefruit', 'Orange Sparkling Water'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Sparkling Water'}), items_add=frozenset({'Sparkling Water Grapefruit'}), confidence=0.19200000000000003, lift=7.251292978208234)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Organic American Cheese Singles'}), support=0.001143321187771806, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic American Cheese Singles'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.2266949152542373, lift=2.806680385487274)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Organic AppleApple'}), support=0.0013249703484458312, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic AppleApple'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.2767857142857143, lift=3.426848080811899)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Baby Arugula'}), support=0.003387222584333294, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14703153988868273, lift=2.5753772643762214)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Organic Avocado'}), support=0.00286364559180228, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1066030230708035, lift=1.867238839627042)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Baby Spinach'}), support=0.010802782437731737, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18921953958450308, lift=2.527978451262654), OrderedStatistic(items_base=frozenset({'Organic Baby Spinach'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1443254817987152, lift=2.527978451262654)]),\n"," RelationRecord(items=frozenset({'Organic Black Beans', 'Organic Avocado'}), support=0.0018485473409768451, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Black Beans'}), items_add=frozenset({'Organic Avocado'}), confidence=0.15095986038394416, lift=2.6441849997664573)]),\n"," RelationRecord(items=frozenset({'Organic Blackberries', 'Organic Avocado'}), support=0.00214773419385171, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blackberries'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10512552301255229, lift=1.8413592218184036)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Broccoli'}), support=0.0015386752433564491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12244897959183675, lift=2.1447936838969164)]),\n"," RelationRecord(items=frozenset({'Organic Celery Hearts', 'Organic Avocado'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Celery Hearts'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1267605633802817, lift=2.220314588259484)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Organic Avocado'}), support=0.004071078248047272, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14935319482555862, lift=2.6160429429420837)]),\n"," RelationRecord(items=frozenset({'Organic Coconut Milk', 'Organic Avocado'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14210526315789473, lift=2.489089512101421)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Cucumber'}), support=0.0039962815348285555, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11454823889739663, lift=2.0064057708573193)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', \"Organic D'Anjou Pears\"}), support=0.0015814162223385727, ordered_statistics=[OrderedStatistic(items_base=frozenset({\"Organic D'Anjou Pears\"}), items_add=frozenset({'Organic Avocado'}), confidence=0.113584036838066, lift=1.9895169858813555)]),\n"," RelationRecord(items=frozenset({'Organic Extra Firm Tofu', 'Organic Avocado'}), support=0.0012715441247181766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14149821640903687, lift=2.4784565935003804)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Fuji Apple'}), support=0.0028422751023112185, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apple'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11391862955032121, lift=1.9953776499580593)]),\n"," RelationRecord(items=frozenset({'Organic Gala Apples', 'Organic Avocado'}), support=0.0024789767809631678, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Gala Apples'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12051948051948051, lift=2.1109969349385405)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Garbanzo Beans'}), support=0.0012929146142092384, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garbanzo Beans'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14684466019417478, lift=2.572103914204049)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Garlic'}), support=0.004263412653466828, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13353413654618473, lift=2.338959243299231)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Garnet Sweet Potato (Yam)'}), support=0.003301740626369047, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Organic Avocado'}), confidence=0.16987355689939526, lift=2.975473810507899)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Organic Avocado'}), support=0.00154936048810198, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10161177295024527, lift=1.779813025471571)]),\n"," RelationRecord(items=frozenset({'Organic Grade A Free Range Large Brown Eggs', 'Organic Avocado'}), support=0.0015814162223385727, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Free Range Large Brown Eggs'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11887550200803212, lift=2.082201311328037)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Granny Smith Apple'}), support=0.0019767702779232158, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1116475558237779, lift=1.9555979425191656)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Grape Tomatoes'}), support=0.0051396027226003616, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grape Tomatoes'}), items_add=frozenset({'Organic Avocado'}), confidence=0.17927692881103244, lift=3.140181534089106)]),\n"," RelationRecord(items=frozenset({'Organic Kiwi', 'Organic Avocado'}), support=0.001752380138267067, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Kiwi'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12943962115232835, lift=2.267240468797109)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Lacinato (Dinosaur) Kale'}), support=0.001752380138267067, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13078149920255183, lift=2.290744556591656)]),\n"," RelationRecord(items=frozenset({'Organic Large Brown Eggs', 'Organic Avocado'}), support=0.001121950698280744, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Brown Eggs'}), items_add=frozenset({'Organic Avocado'}), confidence=0.23385300668151446, lift=4.096126022141661)]),\n"," RelationRecord(items=frozenset({'Organic Navel Orange', 'Organic Avocado'}), support=0.0015386752433564491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10518626734842951, lift=1.8424232083730998)]),\n"," RelationRecord(items=frozenset({'Organic Peeled Whole Baby Carrots', 'Organic Avocado'}), support=0.0025537734941818843, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Peeled Whole Baby Carrots'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14009378663540445, lift=2.4538568612853444)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Organic Avocado'}), support=0.0023080128650346736, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1245674740484429, lift=2.1819008410577627)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Organic Avocado'}), support=0.004156560206011519, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14053468208092484, lift=2.461579504380968)]),\n"," RelationRecord(items=frozenset({'Organic Red Radish, Bunch', 'Organic Avocado'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Radish, Bunch'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1268357810413885, lift=2.221632086902569)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Reduced Fat Milk'}), support=0.0013677113274279547, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat Milk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.15201900237529692, lift=2.6627367350359186)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Roma Tomato'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roma Tomato'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13157894736842105, lift=2.3047125112050195)]),\n"," RelationRecord(items=frozenset({'Organic Romaine', 'Organic Avocado'}), support=0.00154936048810198, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine'}), items_add=frozenset({'Organic Avocado'}), confidence=0.17575757575757575, lift=3.078537196785372)]),\n"," RelationRecord(items=frozenset({'Organic Romaine Lettuce', 'Organic Avocado'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine Lettuce'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11622276029055692, lift=2.0357363779360567)]),\n"," RelationRecord(items=frozenset({'Organic Russet Potato', 'Organic Avocado'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Russet Potato'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11511627906976744, lift=2.016355457477508)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Small Bunch Celery'}), support=0.0020195112569053393, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Small Bunch Celery'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1008, lift=1.7655941605839416)]),\n"," RelationRecord(items=frozenset({'Organic Sour Cream', 'Organic Avocado'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sour Cream'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12371134020618559, lift=2.1669049589886376)]),\n"," RelationRecord(items=frozenset({'Organic Spring Mix', 'Organic Avocado'}), support=0.0012074326562449913, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Spring Mix'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1127744510978044, lift=1.9753364317593525)]),\n"," RelationRecord(items=frozenset({'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese', 'Organic Avocado'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10326086956521739, lift=1.808698296836983)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Organic Avocado'}), support=0.008142156496094543, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14261650758001124, lift=1.7657165094444387), OrderedStatistic(items_base=frozenset({'Organic Strawberries'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10080698505093266, lift=1.7657165094444385)]),\n"," RelationRecord(items=frozenset({'Organic Unsweetened Almond Milk', 'Organic Avocado'}), support=0.0016775834250483508, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Unsweetened Almond Milk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10254735467015023, lift=1.7962005018744804)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Whole Milk'}), support=0.003729150416190283, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Milk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10252643948296122, lift=1.7958341553232064)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Whole Strawberries'}), support=0.001143321187771806, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Strawberries'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12829736211031176, lift=2.2472328706377964)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Whole String Cheese'}), support=0.0017737506277581288, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole String Cheese'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11891117478510028, lift=2.082826149094737)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Yellow Onion'}), support=0.003483389787043072, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Onion'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10238693467336683, lift=1.7933906148748608)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Organic Zucchini'}), support=0.00464808146430594, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12992831541218638, lift=2.2758003470859602)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Original Hummus'}), support=0.002767478389092502, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Hummus'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13002008032128512, lift=2.2774076842650404)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Red Onion'}), support=0.00143182279590114, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Onion'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12465116279069767, lift=2.1833667175918063)]),\n"," RelationRecord(items=frozenset({'Red Peppers', 'Organic Avocado'}), support=0.003739835660935814, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Organic Avocado'}), confidence=0.16556291390728478, lift=2.899969384959959)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Red Vine Tomato'}), support=0.002970498039257589, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Vine Tomato'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1708666256914567, lift=2.992868219836488)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Roma Tomato'}), support=0.001966085033177685, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roma Tomato'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13031161473087818, lift=2.282514147074433)]),\n"," RelationRecord(items=frozenset({'Seedless Red Grapes', 'Organic Avocado'}), support=0.0035475012555162577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Seedless Red Grapes'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11702502643637645, lift=2.049788723395314)]),\n"," RelationRecord(items=frozenset({'Sharp Cheddar Cheese', 'Organic Avocado'}), support=0.001036468740316497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sharp Cheddar Cheese'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10554951033732317, lift=1.8487857053975412)]),\n"," RelationRecord(items=frozenset({'Shredded Mozzarella', 'Organic Avocado'}), support=0.001047153985062028, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Mozzarella'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14475627769571642, lift=2.535524192533972)]),\n"," RelationRecord(items=frozenset({'Shredded Parmesan', 'Organic Avocado'}), support=0.0012501736352271149, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Parmesan'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12289915966386555, lift=2.1526789547935965)]),\n"," RelationRecord(items=frozenset({'Total 0% Nonfat Greek Yogurt', 'Organic Avocado'}), support=0.0010792097192986205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Nonfat Greek Yogurt'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1426553672316384, lift=2.4987250333347077)]),\n"," RelationRecord(items=frozenset({'Vanilla Almond Breeze Almond Milk', 'Organic Avocado'}), support=0.0010044130060799042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Vanilla Almond Breeze Almond Milk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10633484162895926, lift=1.8625414230824275)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Yellow Bell Pepper'}), support=0.0015921014670841037, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1746776084407972, lift=3.059620688966664)]),\n"," RelationRecord(items=frozenset({'Yellow Onions', 'Organic Avocado'}), support=0.004252727408721297, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Onions'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14368231046931407, lift=2.516712781188788)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Baby Arugula'}), support=0.004626710974814878, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20083487940630798, lift=2.683159722911941)]),\n"," RelationRecord(items=frozenset({'Organic Grape Tomatoes', 'Organic Baby Arugula'}), support=0.0025217177599452917, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Organic Grape Tomatoes'}), confidence=0.10946196660482375, lift=3.8181949566327393)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Organic Baby Arugula'}), support=0.00286364559180228, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.12430426716141, lift=2.2475393065755176)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Organic Baby Arugula'}), support=0.003205573423659269, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1391465677179963, lift=1.7227556334203096)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Baby Broccoli'}), support=0.0020408817463964013, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.19331983805668018, lift=2.582758555918705)]),\n"," RelationRecord(items=frozenset({'Organic Cucumber', 'Organic Baby Broccoli'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Cucumber'}), confidence=0.10931174089068826, lift=3.133279600225679)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Organic Baby Broccoli'}), support=0.0011540064325173368, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Garlic'}), confidence=0.10931174089068826, lift=3.423747622067216)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Organic Baby Broccoli'}), support=0.002072937480632994, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.19635627530364372, lift=3.5503081021719676)]),\n"," RelationRecord(items=frozenset({'Organic Lemon', 'Organic Baby Broccoli'}), support=0.0010792097192986205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Lemon'}), confidence=0.10222672064777327, lift=3.8748854213297514)]),\n"," RelationRecord(items=frozenset({'Organic Raspberries', 'Organic Baby Broccoli'}), support=0.001143321187771806, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.10829959514170041, lift=2.6339485994091256)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Organic Baby Broccoli'}), support=0.001741694893521536, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.16497975708502025, lift=2.0425930052011894)]),\n"," RelationRecord(items=frozenset({'Organic Yellow Onion', 'Organic Baby Broccoli'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Yellow Onion'}), confidence=0.11639676113360324, lift=3.4212385942872254)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Organic Baby Broccoli'}), support=0.0012501736352271149, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.11842105263157895, lift=3.3102362761743067)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Organic Baby Spinach'}), support=0.004658766709051471, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1734287987271281, lift=2.31701370256613)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Organic Hass Avocado'}), support=0.002874330836547811, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.10700079554494829, lift=1.934676092091398)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Organic Baby Carrots'}), support=0.0051396027226003616, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1913285600636436, lift=2.3688141223278496)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Original Hummus'}), support=0.0023934948229989207, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Hummus'}), items_add=frozenset({'Organic Baby Carrots'}), confidence=0.11244979919678713, lift=4.186093618707127)]),\n"," RelationRecord(items=frozenset({'Organic Baby Kale', 'Organic Baby Spinach'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Kale'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.26136363636363635, lift=3.491825644020505)]),\n"," RelationRecord(items=frozenset({'Organic Baby Rainbow Carrots', 'Organic Baby Spinach'}), support=0.0011860621667539296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Rainbow Carrots'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.16920731707317074, lift=2.260614587141589)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Organic Baby Rainbow Carrots'}), support=0.001132635943026275, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Rainbow Carrots'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.16158536585365854, lift=2.000567486988536)]),\n"," RelationRecord(items=frozenset({'Organic Banana', 'Organic Baby Spinach'}), support=0.0028422751023112185, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Banana'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.16130988477865374, lift=2.1551046662069764)]),\n"," RelationRecord(items=frozenset({'Organic Bartlett Pear', 'Organic Baby Spinach'}), support=0.0010898949640441515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bartlett Pear'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1536144578313253, lift=2.0522935424782642)]),\n"," RelationRecord(items=frozenset({'Organic Basil', 'Organic Baby Spinach'}), support=0.001752380138267067, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Basil'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1782608695652174, lift=2.381570306923626)]),\n"," RelationRecord(items=frozenset({'Organic Bell Pepper', 'Organic Baby Spinach'}), support=0.001132635943026275, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bell Pepper'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.16036308623298035, lift=2.1424554106047013)]),\n"," RelationRecord(items=frozenset({'Organic Black Beans', 'Organic Baby Spinach'}), support=0.002361439088762328, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Black Beans'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.19284467713787087, lift=2.5764103924770767)]),\n"," RelationRecord(items=frozenset({'Organic Blackberries', 'Organic Baby Spinach'}), support=0.00261788496265507, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blackberries'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.12813807531380753, lift=1.7119283446671385)]),\n"," RelationRecord(items=frozenset({'Organic Blueberries', 'Organic Baby Spinach'}), support=0.005160973212091423, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blueberries'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.13975694444444445, lift=1.8671567679831869)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Broccoli'}), support=0.0026392554521461314, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2100340136054422, lift=2.806060418457176)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli Crowns', 'Organic Baby Spinach'}), support=0.001346340837936893, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli Crowns'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.21837088388214904, lift=2.9174412433802543)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli Florets', 'Organic Baby Spinach'}), support=0.0016134719565751654, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli Florets'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15680166147455868, lift=2.0948746741498248)]),\n"," RelationRecord(items=frozenset({'Organic Brown Rice', 'Organic Baby Spinach'}), support=0.0010150982508254352, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Brown Rice'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.23114355231143555, lift=3.0880844582684253)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Bunch Beets'}), support=0.0010685244745530897, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bunch Beets'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.22421524663677128, lift=2.995522096644613)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Butternut Squash'}), support=0.0012394883904815839, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Butternut Squash'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2196969696969697, lift=2.935157787727381)]),\n"," RelationRecord(items=frozenset({'Organic Carrot Bunch', 'Organic Baby Spinach'}), support=0.002094307970124056, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Carrot Bunch'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1576830249396621, lift=2.1066497152074457)]),\n"," RelationRecord(items=frozenset({'Organic Celery Hearts', 'Organic Baby Spinach'}), support=0.0018271768514857834, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Celery Hearts'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.21895006402048656, lift=2.925179106564636)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Organic Baby Spinach'}), support=0.0051182322331092996, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18776950215601726, lift=2.508605909818014)]),\n"," RelationRecord(items=frozenset({'Organic Coconut Milk', 'Organic Baby Spinach'}), support=0.0016348424460662272, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20131578947368423, lift=2.6895846951425675)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Cucumber'}), support=0.006870612371376366, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.19693721286370594, lift=2.6310867866203638)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', \"Organic D'Anjou Pears\"}), support=0.0021263637043606484, ordered_statistics=[OrderedStatistic(items_base=frozenset({\"Organic D'Anjou Pears\"}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15272448196469687, lift=2.0404034394903765)]),\n"," RelationRecord(items=frozenset({'Organic Egg Whites', 'Organic Baby Spinach'}), support=0.0014852490196287946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Egg Whites'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.22899505766062603, lift=3.059380508391864)]),\n"," RelationRecord(items=frozenset({'Organic Extra Firm Tofu', 'Organic Baby Spinach'}), support=0.0018378620962313142, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20451843043995244, lift=2.732372069890625)]),\n"," RelationRecord(items=frozenset({'Organic Frozen Peas', 'Organic Baby Spinach'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Frozen Peas'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2110655737704918, lift=2.8198420917143494)]),\n"," RelationRecord(items=frozenset({'Organic Fuji Apple', 'Organic Baby Spinach'}), support=0.0028422751023112185, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apple'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.11391862955032121, lift=1.521956143287068)]),\n"," RelationRecord(items=frozenset({'Organic Gala Apples', 'Organic Baby Spinach'}), support=0.003323111115860109, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Gala Apples'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.16155844155844157, lift=2.158425391881495)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Garbanzo Beans'}), support=0.0018058063619947214, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garbanzo Beans'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20509708737864077, lift=2.7401029431127557)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Garlic'}), support=0.006507314050028316, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2038152610441767, lift=2.722977706686847)]),\n"," RelationRecord(items=frozenset({'Organic Garnet Sweet Potato (Yam)', 'Organic Baby Spinach'}), support=0.00477630440125231, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.24573941726223197, lift=3.283085630738116)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Organic Baby Spinach'}), support=0.0036864094372081593, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.24176594253679048, lift=3.229999894959402)]),\n"," RelationRecord(items=frozenset({'Organic Grade A Free Range Large Brown Eggs', 'Organic Baby Spinach'}), support=0.002062252235887463, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Free Range Large Brown Eggs'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15502008032128511, lift=2.071072699076104)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Granny Smith Apple'}), support=0.0031842029341682073, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.17984308992154496, lift=2.4027088160581913)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Grape Tomatoes'}), support=0.006261553420881106, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grape Tomatoes'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.21841222512113306, lift=2.9179935635134164)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Organic Baby Spinach'}), support=0.009573979291995683, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Spinach'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.12790863668807995, lift=2.312709733718574), OrderedStatistic(items_base=frozenset({'Organic Hass Avocado'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1731066460587326, lift=2.312709733718574)]),\n"," RelationRecord(items=frozenset({'Organic Hothouse Cucumbers', 'Organic Baby Spinach'}), support=0.0011005802087896822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Hothouse Cucumbers'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15396113602391628, lift=2.0569251730293012)]),\n"," RelationRecord(items=frozenset({'Organic Italian Parsley Bunch', 'Organic Baby Spinach'}), support=0.0035475012555162577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Italian Parsley Bunch'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.19036697247706422, lift=2.5433081874676673)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Jalapeno Pepper'}), support=0.0013570260826824237, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Jalapeno Pepper'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.19968553459119495, lift=2.667804443367047)]),\n"," RelationRecord(items=frozenset({'Organic Kiwi', 'Organic Baby Spinach'}), support=0.0022225309070704265, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Kiwi'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.16416732438831888, lift=2.1932801409749607)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Lacinato (Dinosaur) Kale'}), support=0.0027461078996014405, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20494417862838915, lift=2.738060077843691)]),\n"," RelationRecord(items=frozenset({'Organic Large Extra Fancy Fuji Apple', 'Organic Baby Spinach'}), support=0.0033551668500967015, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Extra Fancy Fuji Apple'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15606361829025844, lift=2.085014396135677)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Large Grade AA Brown Eggs'}), support=0.0010257834955709662, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Grade AA Brown Eggs'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.12817089452603472, lift=1.7123668102795164)]),\n"," RelationRecord(items=frozenset({'Organic Leek', 'Organic Baby Spinach'}), support=0.0010685244745530897, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Leek'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1858736059479554, lift=2.483276682348509)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Lemon'}), support=0.004744248667015718, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lemon'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1798298906439854, lift=2.402532473333143)]),\n"," RelationRecord(items=frozenset({'Organic Navel Orange', 'Organic Baby Spinach'}), support=0.0023293833545257356, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15924032140248356, lift=2.127455240413166)]),\n"," RelationRecord(items=frozenset({'Organic Old Fashioned Rolled Oats', 'Organic Baby Spinach'}), support=0.0010578392298075587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Old Fashioned Rolled Oats'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18539325842696627, lift=2.476859225753675)]),\n"," RelationRecord(items=frozenset({'Organic Peeled Whole Baby Carrots', 'Organic Baby Spinach'}), support=0.003109406220949491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Peeled Whole Baby Carrots'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.17057444314185227, lift=2.2788794304520383)]),\n"," RelationRecord(items=frozenset({'Organic Raspberries', 'Organic Baby Spinach'}), support=0.005534956778185004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Raspberries'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1346153846153846, lift=1.7984653818700929)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Organic Baby Spinach'}), support=0.0031842029341682073, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1718569780853518, lift=2.296014133914892)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Organic Baby Spinach'}), support=0.005577697757167128, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18858381502890173, lift=2.5194851530492257)]),\n"," RelationRecord(items=frozenset({'Organic Red Radish, Bunch', 'Organic Baby Spinach'}), support=0.001442508040646671, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Radish, Bunch'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1802403204272363, lift=2.4080158269555696)]),\n"," RelationRecord(items=frozenset({'Organic Reduced Fat 2% Milk', 'Organic Baby Spinach'}), support=0.001228803145736053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat 2% Milk'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1061865189289012, lift=1.4186549246251359)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Reduced Fat Milk'}), support=0.0013570260826824237, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat Milk'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1508313539192399, lift=2.0151111947523064)]),\n"," RelationRecord(items=frozenset({'Organic Riced Cauliflower', 'Organic Baby Spinach'}), support=0.0012608588799726459, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Riced Cauliflower'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.19666666666666668, lift=2.6274722817035454)]),\n"," RelationRecord(items=frozenset({'Organic Roasted Turkey Breast', 'Organic Baby Spinach'}), support=0.0012501736352271149, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roasted Turkey Breast'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14625, lift=1.953904175588865)]),\n"," ...]"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["#Creando un dataframe con columnas especificas para darle mas formato a las reglas de asociación\n","result_df = pd.DataFrame(columns=['Antecedente', 'Consecuente', 'Soporte', 'Confianza', 'Lift'])\n","\n","#Pasando cada resultado de las reglas al dataframe\n","for result in res:\n","    antecedente = tuple(result.items)[0] if result.items else None\n","    consecuente = tuple(result.items)[1] if len(result.items) > 1 else None\n","    soporte = result.support\n","    confianza = result.ordered_statistics[0].confidence\n","    levantamiento = result.ordered_statistics[0].lift\n","\n","    result_df = result_df.append({\n","        'Antecedente': antecedente,\n","        'Consecuente': consecuente,\n","        'Soporte': soporte,\n","        'Confianza': confianza,\n","        'Lift': levantamiento\n","    }, ignore_index=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"roTFbZXPNRC6","executionInfo":{"status":"ok","timestamp":1700884376413,"user_tz":360,"elapsed":4540,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"6146e600-ed19-45d0-b6df-1bcb91d5392e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-62-829f70aabc3c>:12: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n"]}]},{"cell_type":"code","source":["#Data frame de las reglas\n","result_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"29D0OFWNNeN_","executionInfo":{"status":"ok","timestamp":1700884378009,"user_tz":360,"elapsed":185,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"4cdfdcd5-ab17-4777-f1dd-febe39d810f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Antecedente             Consecuente   Soporte  Confianza  \\\n","0     Bag of Organic Bananas                    None  0.116213   0.116213   \n","1                     Banana                    None  0.140287   0.140287   \n","2     100% Raw Coconut Water  Bag of Organic Bananas  0.002757   0.280130   \n","3     100% Raw Coconut Water                  Banana  0.001165   0.118350   \n","4     100% Raw Coconut Water    Organic Baby Spinach  0.001207   0.122693   \n","...                      ...                     ...       ...        ...   \n","1818    Organic Hass Avocado    Organic Strawberries  0.001197   0.125000   \n","1819    Organic Strawberries        Organic Cucumber  0.001036   0.105206   \n","1820    Organic Strawberries     Organic Raspberries  0.001699   0.130542   \n","1821             Large Lemon                   Limes  0.001079   0.108719   \n","1822             Large Lemon         Organic Avocado  0.001026   0.105611   \n","\n","           Lift  \n","0      1.000000  \n","1      1.000000  \n","2      2.410496  \n","3      0.843628  \n","4      1.639178  \n","...         ...  \n","1818   5.528533  \n","1819   9.210403  \n","1820  11.428459  \n","1821  10.319158  \n","1822   6.216211  \n","\n","[1823 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-6269628c-bb09-44f0-b7f4-5b81354bc038\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Antecedente</th>\n","      <th>Consecuente</th>\n","      <th>Soporte</th>\n","      <th>Confianza</th>\n","      <th>Lift</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Bag of Organic Bananas</td>\n","      <td>None</td>\n","      <td>0.116213</td>\n","      <td>0.116213</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Banana</td>\n","      <td>None</td>\n","      <td>0.140287</td>\n","      <td>0.140287</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>100% Raw Coconut Water</td>\n","      <td>Bag of Organic Bananas</td>\n","      <td>0.002757</td>\n","      <td>0.280130</td>\n","      <td>2.410496</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>100% Raw Coconut Water</td>\n","      <td>Banana</td>\n","      <td>0.001165</td>\n","      <td>0.118350</td>\n","      <td>0.843628</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>100% Raw Coconut Water</td>\n","      <td>Organic Baby Spinach</td>\n","      <td>0.001207</td>\n","      <td>0.122693</td>\n","      <td>1.639178</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1818</th>\n","      <td>Organic Hass Avocado</td>\n","      <td>Organic Strawberries</td>\n","      <td>0.001197</td>\n","      <td>0.125000</td>\n","      <td>5.528533</td>\n","    </tr>\n","    <tr>\n","      <th>1819</th>\n","      <td>Organic Strawberries</td>\n","      <td>Organic Cucumber</td>\n","      <td>0.001036</td>\n","      <td>0.105206</td>\n","      <td>9.210403</td>\n","    </tr>\n","    <tr>\n","      <th>1820</th>\n","      <td>Organic Strawberries</td>\n","      <td>Organic Raspberries</td>\n","      <td>0.001699</td>\n","      <td>0.130542</td>\n","      <td>11.428459</td>\n","    </tr>\n","    <tr>\n","      <th>1821</th>\n","      <td>Large Lemon</td>\n","      <td>Limes</td>\n","      <td>0.001079</td>\n","      <td>0.108719</td>\n","      <td>10.319158</td>\n","    </tr>\n","    <tr>\n","      <th>1822</th>\n","      <td>Large Lemon</td>\n","      <td>Organic Avocado</td>\n","      <td>0.001026</td>\n","      <td>0.105611</td>\n","      <td>6.216211</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1823 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6269628c-bb09-44f0-b7f4-5b81354bc038')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6269628c-bb09-44f0-b7f4-5b81354bc038 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6269628c-bb09-44f0-b7f4-5b81354bc038');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-69707589-7275-4e77-9d8e-525565fc1237\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-69707589-7275-4e77-9d8e-525565fc1237')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-69707589-7275-4e77-9d8e-525565fc1237 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["# Eliminar filas con \"None\" en la columna \"Consecuente\"\n","result_df = result_df.dropna(subset=['Consecuente'])"],"metadata":{"id":"nY-JaWo_NqMY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Dataframe final\n","result_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":860},"id":"NK8aatl1Nq2q","executionInfo":{"status":"ok","timestamp":1700884383960,"user_tz":360,"elapsed":10,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"e7735f42-42d0-4ac0-b174-2cabb7c7a96c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Antecedente             Consecuente   Soporte  Confianza  \\\n","2     100% Raw Coconut Water  Bag of Organic Bananas  0.002757   0.280130   \n","3     100% Raw Coconut Water                  Banana  0.001165   0.118350   \n","4     100% Raw Coconut Water    Organic Baby Spinach  0.001207   0.122693   \n","5     100% Raw Coconut Water    Organic Hass Avocado  0.001646   0.167210   \n","6     100% Raw Coconut Water     Organic Raspberries  0.001272   0.129207   \n","...                      ...                     ...       ...        ...   \n","1818    Organic Hass Avocado    Organic Strawberries  0.001197   0.125000   \n","1819    Organic Strawberries        Organic Cucumber  0.001036   0.105206   \n","1820    Organic Strawberries     Organic Raspberries  0.001699   0.130542   \n","1821             Large Lemon                   Limes  0.001079   0.108719   \n","1822             Large Lemon         Organic Avocado  0.001026   0.105611   \n","\n","           Lift  \n","2      2.410496  \n","3      0.843628  \n","4      1.639178  \n","5      3.023308  \n","6      3.142446  \n","...         ...  \n","1818   5.528533  \n","1819   9.210403  \n","1820  11.428459  \n","1821  10.319158  \n","1822   6.216211  \n","\n","[1821 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-0253a8e0-2c0d-46af-a7e3-7f3087cc9470\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Antecedente</th>\n","      <th>Consecuente</th>\n","      <th>Soporte</th>\n","      <th>Confianza</th>\n","      <th>Lift</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>100% Raw Coconut Water</td>\n","      <td>Bag of Organic Bananas</td>\n","      <td>0.002757</td>\n","      <td>0.280130</td>\n","      <td>2.410496</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>100% Raw Coconut Water</td>\n","      <td>Banana</td>\n","      <td>0.001165</td>\n","      <td>0.118350</td>\n","      <td>0.843628</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>100% Raw Coconut Water</td>\n","      <td>Organic Baby Spinach</td>\n","      <td>0.001207</td>\n","      <td>0.122693</td>\n","      <td>1.639178</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>100% Raw Coconut Water</td>\n","      <td>Organic Hass Avocado</td>\n","      <td>0.001646</td>\n","      <td>0.167210</td>\n","      <td>3.023308</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>100% Raw Coconut Water</td>\n","      <td>Organic Raspberries</td>\n","      <td>0.001272</td>\n","      <td>0.129207</td>\n","      <td>3.142446</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1818</th>\n","      <td>Organic Hass Avocado</td>\n","      <td>Organic Strawberries</td>\n","      <td>0.001197</td>\n","      <td>0.125000</td>\n","      <td>5.528533</td>\n","    </tr>\n","    <tr>\n","      <th>1819</th>\n","      <td>Organic Strawberries</td>\n","      <td>Organic Cucumber</td>\n","      <td>0.001036</td>\n","      <td>0.105206</td>\n","      <td>9.210403</td>\n","    </tr>\n","    <tr>\n","      <th>1820</th>\n","      <td>Organic Strawberries</td>\n","      <td>Organic Raspberries</td>\n","      <td>0.001699</td>\n","      <td>0.130542</td>\n","      <td>11.428459</td>\n","    </tr>\n","    <tr>\n","      <th>1821</th>\n","      <td>Large Lemon</td>\n","      <td>Limes</td>\n","      <td>0.001079</td>\n","      <td>0.108719</td>\n","      <td>10.319158</td>\n","    </tr>\n","    <tr>\n","      <th>1822</th>\n","      <td>Large Lemon</td>\n","      <td>Organic Avocado</td>\n","      <td>0.001026</td>\n","      <td>0.105611</td>\n","      <td>6.216211</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1821 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0253a8e0-2c0d-46af-a7e3-7f3087cc9470')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0253a8e0-2c0d-46af-a7e3-7f3087cc9470 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0253a8e0-2c0d-46af-a7e3-7f3087cc9470');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cc41f573-7bc7-4986-a49d-9f18bfdc45db\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cc41f573-7bc7-4986-a49d-9f18bfdc45db')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cc41f573-7bc7-4986-a49d-9f18bfdc45db button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":65}]},{"cell_type":"markdown","source":["Basandonos en el \"lift\" y a partir de las reglas de asociación podemos ver que:\n","\n"," - Si compramos **\"Strawberry Rhubarb Yoghurt\"** es **88.47 veces** probable que compremos **\"Blueberry Yoghurt\"**\n","\n"," - Si compramos **\"Non Fat Acai & Mixed Berries Yogurt\"** es **82.79 veces** probable que compremos **\"Icelandic Style Skyr Blueberry Non-fat Yogurt\"**\n","\n"," - Si compramos **\"Non Fat Raspberry Yogurt\"** es **81.35 veces** probable que compremos **\"Nonfat Icelandic Style Strawberry Yogurt\"**\n","\n"," - Si compramos **\"Icelandic Style Skyr Blueberry Non-fat Yogurt\"** es **79.12 veces** probable que compremos **\"Nonfat Icelandic Style Strawberry Yogurt\"**\n","\n"," - Si compramos **\"Kiwi Sandia Sparkling Water\"** es **76 veces** probable que compremos **\"Blackberry Cucumber Sparkling Water\"**"],"metadata":{"id":"6vg9apJucd1E"}}]}