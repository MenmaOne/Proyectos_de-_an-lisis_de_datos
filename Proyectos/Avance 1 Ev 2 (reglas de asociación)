{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOE81cercHRYNB2xzVpRPSD"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"rhWh8-A4IN7r","executionInfo":{"status":"ok","timestamp":1699759255358,"user_tz":360,"elapsed":1654,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}}},"outputs":[],"source":["#librerias\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["#cargar conjunto de datos aisles\n","df1 = pd.read_csv(\"aisles.csv\")\n","df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"kpTBfALjJWwE","executionInfo":{"status":"ok","timestamp":1699759277324,"user_tz":360,"elapsed":190,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"85b61a0f-bba5-46b7-bf93-03127e93c214"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     aisle_id                       aisle\n","0           1       prepared soups salads\n","1           2           specialty cheeses\n","2           3         energy granola bars\n","3           4               instant foods\n","4           5  marinades meat preparation\n","..        ...                         ...\n","129       130    hot cereal pancake mixes\n","130       131                   dry pasta\n","131       132                      beauty\n","132       133  muscles joints pain relief\n","133       134  specialty wines champagnes\n","\n","[134 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-5b75c440-c48c-4196-9c3f-e81b18dfd4d5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>aisle_id</th>\n","      <th>aisle</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>prepared soups salads</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>specialty cheeses</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>energy granola bars</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>instant foods</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>marinades meat preparation</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>129</th>\n","      <td>130</td>\n","      <td>hot cereal pancake mixes</td>\n","    </tr>\n","    <tr>\n","      <th>130</th>\n","      <td>131</td>\n","      <td>dry pasta</td>\n","    </tr>\n","    <tr>\n","      <th>131</th>\n","      <td>132</td>\n","      <td>beauty</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>133</td>\n","      <td>muscles joints pain relief</td>\n","    </tr>\n","    <tr>\n","      <th>133</th>\n","      <td>134</td>\n","      <td>specialty wines champagnes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>134 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b75c440-c48c-4196-9c3f-e81b18dfd4d5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5b75c440-c48c-4196-9c3f-e81b18dfd4d5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5b75c440-c48c-4196-9c3f-e81b18dfd4d5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c51d139b-edab-4573-a0a7-d597b2ff5556\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c51d139b-edab-4573-a0a7-d597b2ff5556')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c51d139b-edab-4573-a0a7-d597b2ff5556 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["#cargar conjunto de datos departments\n","df2 = pd.read_csv(\"departments.csv\")\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":707},"id":"MAe1fcOGJiiV","executionInfo":{"status":"ok","timestamp":1699759298874,"user_tz":360,"elapsed":181,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"737a48ea-72af-4ab9-9b43-6cda0069bfbb"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    department_id       department\n","0               1           frozen\n","1               2            other\n","2               3           bakery\n","3               4          produce\n","4               5          alcohol\n","5               6    international\n","6               7        beverages\n","7               8             pets\n","8               9  dry goods pasta\n","9              10             bulk\n","10             11    personal care\n","11             12     meat seafood\n","12             13           pantry\n","13             14        breakfast\n","14             15     canned goods\n","15             16       dairy eggs\n","16             17        household\n","17             18           babies\n","18             19           snacks\n","19             20             deli\n","20             21          missing"],"text/html":["\n","  <div id=\"df-8a4c9876-b375-45db-b2f6-af1068d9944e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>department_id</th>\n","      <th>department</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>frozen</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>other</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>bakery</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>produce</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>alcohol</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>international</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>beverages</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>pets</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>dry goods pasta</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>bulk</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11</td>\n","      <td>personal care</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12</td>\n","      <td>meat seafood</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>13</td>\n","      <td>pantry</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>14</td>\n","      <td>breakfast</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>15</td>\n","      <td>canned goods</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>16</td>\n","      <td>dairy eggs</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>17</td>\n","      <td>household</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>18</td>\n","      <td>babies</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>19</td>\n","      <td>snacks</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>20</td>\n","      <td>deli</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>21</td>\n","      <td>missing</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a4c9876-b375-45db-b2f6-af1068d9944e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8a4c9876-b375-45db-b2f6-af1068d9944e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8a4c9876-b375-45db-b2f6-af1068d9944e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-360baf7a-0a2e-49e5-ae3d-481a13d56e92\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-360baf7a-0a2e-49e5-ae3d-481a13d56e92')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-360baf7a-0a2e-49e5-ae3d-481a13d56e92 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#cargar conjunto de datos order_products__train\n","df3 = pd.read_csv(\"order_products__train.csv\")\n","df3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"SGtVCNU9JmHX","executionInfo":{"status":"ok","timestamp":1699759322491,"user_tz":360,"elapsed":579,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"f08b7053-c9bc-4c68-ab3e-68b8bf494005"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  product_id  add_to_cart_order  reordered\n","0               1       49302                  1          1\n","1               1       11109                  2          1\n","2               1       10246                  3          0\n","3               1       49683                  4          0\n","4               1       43633                  5          1\n","...           ...         ...                ...        ...\n","1384612   3421063       14233                  3          1\n","1384613   3421063       35548                  4          1\n","1384614   3421070       35951                  1          1\n","1384615   3421070       16953                  2          1\n","1384616   3421070        4724                  3          1\n","\n","[1384617 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-f713f5e4-e4ef-4fb2-90f7-bb896f1cf010\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>49302</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>11109</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>10246</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>49683</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>43633</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>3421063</td>\n","      <td>14233</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>3421063</td>\n","      <td>35548</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>3421070</td>\n","      <td>35951</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>3421070</td>\n","      <td>16953</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384616</th>\n","      <td>3421070</td>\n","      <td>4724</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1384617 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f713f5e4-e4ef-4fb2-90f7-bb896f1cf010')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f713f5e4-e4ef-4fb2-90f7-bb896f1cf010 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f713f5e4-e4ef-4fb2-90f7-bb896f1cf010');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2a24370c-34d5-4f0f-9589-0c43786f5952\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2a24370c-34d5-4f0f-9589-0c43786f5952')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2a24370c-34d5-4f0f-9589-0c43786f5952 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df3['product_id'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a-JWwFIMDOMK","executionInfo":{"status":"ok","timestamp":1699759323751,"user_tz":360,"elapsed":165,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"b36e2d90-e83c-469e-8d0f-9b72650d16d8"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["24852    18726\n","13176    15480\n","21137    10894\n","21903     9784\n","47626     8135\n","         ...  \n","42744        1\n","5871         1\n","47237        1\n","9305         1\n","38900        1\n","Name: product_id, Length: 39123, dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#cargar conjunto de datos orders\n","df4 = pd.read_csv(\"orders.csv\")\n","df4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"MgBduxmvKGI9","executionInfo":{"status":"ok","timestamp":1699759452685,"user_tz":360,"elapsed":2000,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"a824e329-1f91-4b35-e2cf-b8335f1c6132"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id eval_set  order_number  order_dow  \\\n","0         2539329        1    prior             1          2   \n","1         2398795        1    prior             2          3   \n","2          473747        1    prior             3          3   \n","3         2254736        1    prior             4          4   \n","4          431534        1    prior             5          4   \n","...           ...      ...      ...           ...        ...   \n","3421078   2266710   206209    prior            10          5   \n","3421079   1854736   206209    prior            11          4   \n","3421080    626363   206209    prior            12          1   \n","3421081   2977660   206209    prior            13          1   \n","3421082    272231   206209    train            14          6   \n","\n","         order_hour_of_day  days_since_prior_order  \n","0                        8                     NaN  \n","1                        7                    15.0  \n","2                       12                    21.0  \n","3                        7                    29.0  \n","4                       15                    28.0  \n","...                    ...                     ...  \n","3421078                 18                    29.0  \n","3421079                 10                    30.0  \n","3421080                 12                    18.0  \n","3421081                 12                     7.0  \n","3421082                 14                    30.0  \n","\n","[3421083 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-2850bd43-4231-4383-a177-cd23f4353c5a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2539329</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2398795</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>473747</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2254736</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>431534</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>15</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3421078</th>\n","      <td>2266710</td>\n","      <td>206209</td>\n","      <td>prior</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>18</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421079</th>\n","      <td>1854736</td>\n","      <td>206209</td>\n","      <td>prior</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421080</th>\n","      <td>626363</td>\n","      <td>206209</td>\n","      <td>prior</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421081</th>\n","      <td>2977660</td>\n","      <td>206209</td>\n","      <td>prior</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421082</th>\n","      <td>272231</td>\n","      <td>206209</td>\n","      <td>train</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3421083 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2850bd43-4231-4383-a177-cd23f4353c5a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2850bd43-4231-4383-a177-cd23f4353c5a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2850bd43-4231-4383-a177-cd23f4353c5a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0d477291-1d35-41cd-8181-469a5ed414be\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0d477291-1d35-41cd-8181-469a5ed414be')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0d477291-1d35-41cd-8181-469a5ed414be button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#Contando el valor de cada dia de reorden\n","df4['days_since_prior_order'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JmSAQqEAISLS","executionInfo":{"status":"ok","timestamp":1699759455274,"user_tz":360,"elapsed":148,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"b2606ed8-5a15-42e3-dee3-07f548a6dfd4"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["30.0    369323\n","7.0     320608\n","6.0     240013\n","4.0     221696\n","3.0     217005\n","5.0     214503\n","2.0     193206\n","8.0     181717\n","1.0     145247\n","9.0     118188\n","14.0    100230\n","10.0     95186\n","13.0     83214\n","11.0     80970\n","12.0     76146\n","0.0      67755\n","15.0     66579\n","16.0     46941\n","21.0     45470\n","17.0     39245\n","20.0     38527\n","18.0     35881\n","19.0     34384\n","22.0     32012\n","28.0     26777\n","23.0     23885\n","27.0     22013\n","24.0     20712\n","25.0     19234\n","29.0     19191\n","26.0     19016\n","Name: days_since_prior_order, dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#cargar conjunto de datos products\n","df5 = pd.read_csv(\"products.csv\")\n","df5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"gfxTfuHJqo4H","executionInfo":{"status":"ok","timestamp":1699759384923,"user_tz":360,"elapsed":160,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"cffac4bb-36f9-46d6-92b8-d4c83703d7be"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       product_id                                       product_name  \\\n","0               1                         Chocolate Sandwich Cookies   \n","1               2                                   All-Seasons Salt   \n","2               3               Robust Golden Unsweetened Oolong Tea   \n","3               4  Smart Ones Classic Favorites Mini Rigatoni Wit...   \n","4               5                          Green Chile Anytime Sauce   \n","...           ...                                                ...   \n","49683       49684          Vodka, Triple Distilled, Twist of Vanilla   \n","49684       49685                 En Croute Roast Hazelnut Cranberry   \n","49685       49686                                   Artisan Baguette   \n","49686       49687         Smartblend Healthy Metabolism Dry Cat Food   \n","49687       49688                             Fresh Foaming Cleanser   \n","\n","       aisle_id  department_id  \n","0            61             19  \n","1           104             13  \n","2            94              7  \n","3            38              1  \n","4             5             13  \n","...         ...            ...  \n","49683       124              5  \n","49684        42              1  \n","49685       112              3  \n","49686        41              8  \n","49687        73             11  \n","\n","[49688 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-a59a2e76-408d-4881-90f2-69e55a8fa494\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","      <th>aisle_id</th>\n","      <th>department_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Chocolate Sandwich Cookies</td>\n","      <td>61</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>All-Seasons Salt</td>\n","      <td>104</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Robust Golden Unsweetened Oolong Tea</td>\n","      <td>94</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Smart Ones Classic Favorites Mini Rigatoni Wit...</td>\n","      <td>38</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Green Chile Anytime Sauce</td>\n","      <td>5</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>49683</th>\n","      <td>49684</td>\n","      <td>Vodka, Triple Distilled, Twist of Vanilla</td>\n","      <td>124</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>49684</th>\n","      <td>49685</td>\n","      <td>En Croute Roast Hazelnut Cranberry</td>\n","      <td>42</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>49685</th>\n","      <td>49686</td>\n","      <td>Artisan Baguette</td>\n","      <td>112</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>49686</th>\n","      <td>49687</td>\n","      <td>Smartblend Healthy Metabolism Dry Cat Food</td>\n","      <td>41</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>49687</th>\n","      <td>49688</td>\n","      <td>Fresh Foaming Cleanser</td>\n","      <td>73</td>\n","      <td>11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>49688 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a59a2e76-408d-4881-90f2-69e55a8fa494')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a59a2e76-408d-4881-90f2-69e55a8fa494 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a59a2e76-408d-4881-90f2-69e55a8fa494');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9ff97a31-9446-4b37-9d59-5a0f63eedf9b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ff97a31-9446-4b37-9d59-5a0f63eedf9b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9ff97a31-9446-4b37-9d59-5a0f63eedf9b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["#Comprobando si hay \"order_id\" para ver si hay mas de un producto en la orden\n","df = pd.read_csv(\"order_products__train.csv\")\n","\n","duplicados = df[df.duplicated(subset=['order_id'], keep=False)]\n","\n","if not duplicados.empty:\n","    print(\"Registros duplicados encontrados:\")\n","    print(duplicados)\n","else:\n","    print(\"No hay registros duplicados para el mismo order_id.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rWg-tDBwrMdy","executionInfo":{"status":"ok","timestamp":1699759388095,"user_tz":360,"elapsed":726,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"2c7730e9-3ebd-41e7-9de7-880086b313cb"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Registros duplicados encontrados:\n","         order_id  product_id  add_to_cart_order  reordered\n","0               1       49302                  1          1\n","1               1       11109                  2          1\n","2               1       10246                  3          0\n","3               1       49683                  4          0\n","4               1       43633                  5          1\n","...           ...         ...                ...        ...\n","1384612   3421063       14233                  3          1\n","1384613   3421063       35548                  4          1\n","1384614   3421070       35951                  1          1\n","1384615   3421070       16953                  2          1\n","1384616   3421070        4724                  3          1\n","\n","[1377772 rows x 4 columns]\n"]}]},{"cell_type":"code","source":["#Juntando conjuntos de datos\n","merge_df = pd.merge(df3, df4[['order_id', 'user_id']], on = 'order_id', how = 'inner')\n","merge_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"W5UvJMpEBdxh","executionInfo":{"status":"ok","timestamp":1699759504787,"user_tz":360,"elapsed":1290,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"50af7b75-e254-436a-cd6f-7534f55d625a"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  product_id  add_to_cart_order  reordered  user_id\n","0               1       49302                  1          1   112108\n","1               1       11109                  2          1   112108\n","2               1       10246                  3          0   112108\n","3               1       49683                  4          0   112108\n","4               1       43633                  5          1   112108\n","...           ...         ...                ...        ...      ...\n","1384612   3421063       14233                  3          1   169679\n","1384613   3421063       35548                  4          1   169679\n","1384614   3421070       35951                  1          1   139822\n","1384615   3421070       16953                  2          1   139822\n","1384616   3421070        4724                  3          1   139822\n","\n","[1384617 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-c27dc3db-b320-4077-91cf-38fadbb85ba4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","      <th>user_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>49302</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>112108</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>11109</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>112108</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>10246</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>112108</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>49683</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>112108</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>43633</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>112108</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>3421063</td>\n","      <td>14233</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>169679</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>3421063</td>\n","      <td>35548</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>169679</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>3421070</td>\n","      <td>35951</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>139822</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>3421070</td>\n","      <td>16953</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>139822</td>\n","    </tr>\n","    <tr>\n","      <th>1384616</th>\n","      <td>3421070</td>\n","      <td>4724</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>139822</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1384617 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c27dc3db-b320-4077-91cf-38fadbb85ba4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c27dc3db-b320-4077-91cf-38fadbb85ba4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c27dc3db-b320-4077-91cf-38fadbb85ba4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6d1fab10-328d-457c-9d70-368fa9dd8b7d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6d1fab10-328d-457c-9d70-368fa9dd8b7d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6d1fab10-328d-457c-9d70-368fa9dd8b7d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["#Juntando conjuntos de datos\n","merge_df2 = pd.merge(merge_df, df5[['product_id', 'product_name']], on = 'product_id', how = 'inner')\n","merge_df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"7Vl6o3hCXD46","executionInfo":{"status":"ok","timestamp":1699759845429,"user_tz":360,"elapsed":408,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"2e7c373c-157e-4011-deea-e082c33400dd"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  product_id  add_to_cart_order  reordered  user_id  \\\n","0               1       49302                  1          1   112108   \n","1          816049       49302                  7          1    47901   \n","2         1242203       49302                  1          1     2993   \n","3         1383349       49302                 11          1    41425   \n","4         1787378       49302                  8          0   187205   \n","...           ...         ...                ...        ...      ...   \n","1384612   3420011        1528                 12          0   177077   \n","1384613   3420084       47935                 20          0     9808   \n","1384614   3420084        9491                 21          0     9808   \n","1384615   3420088       16380                 12          0    72444   \n","1384616   3420895       38900                  9          1    20949   \n","\n","                              product_name  \n","0                         Bulgarian Yogurt  \n","1                         Bulgarian Yogurt  \n","2                         Bulgarian Yogurt  \n","3                         Bulgarian Yogurt  \n","4                         Bulgarian Yogurt  \n","...                                    ...  \n","1384612                   Sprinkles Decors  \n","1384613   Classic Original Lip Balm SPF 12  \n","1384614             Goats Milk & Chai Soap  \n","1384615                   Stevia Sweetener  \n","1384616  Plain Golden Toasted Bread Crumbs  \n","\n","[1384617 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-ee1cef74-5d04-4adb-a2bf-6d458614e747\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","      <th>user_id</th>\n","      <th>product_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>49302</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>112108</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>816049</td>\n","      <td>49302</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>47901</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1242203</td>\n","      <td>49302</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2993</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1383349</td>\n","      <td>49302</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>41425</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1787378</td>\n","      <td>49302</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>187205</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>3420011</td>\n","      <td>1528</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>177077</td>\n","      <td>Sprinkles Decors</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>3420084</td>\n","      <td>47935</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>9808</td>\n","      <td>Classic Original Lip Balm SPF 12</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>3420084</td>\n","      <td>9491</td>\n","      <td>21</td>\n","      <td>0</td>\n","      <td>9808</td>\n","      <td>Goats Milk &amp; Chai Soap</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>3420088</td>\n","      <td>16380</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>72444</td>\n","      <td>Stevia Sweetener</td>\n","    </tr>\n","    <tr>\n","      <th>1384616</th>\n","      <td>3420895</td>\n","      <td>38900</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>20949</td>\n","      <td>Plain Golden Toasted Bread Crumbs</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1384617 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee1cef74-5d04-4adb-a2bf-6d458614e747')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ee1cef74-5d04-4adb-a2bf-6d458614e747 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ee1cef74-5d04-4adb-a2bf-6d458614e747');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-410282ba-cc81-4faf-bd3e-ce98fda9748d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-410282ba-cc81-4faf-bd3e-ce98fda9748d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-410282ba-cc81-4faf-bd3e-ce98fda9748d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["#Eliminando columnas que no son muy utiles\n","f_df = merge_df2.drop(['add_to_cart_order', 'reordered'], axis=1)"],"metadata":{"id":"gtdPHG0jXmb9","executionInfo":{"status":"ok","timestamp":1699759847469,"user_tz":360,"elapsed":160,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["#Data frme fianl para las reglas de asociasion\n","f_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Qk2t58WcYFtf","executionInfo":{"status":"ok","timestamp":1699759848319,"user_tz":360,"elapsed":178,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"b949e4f7-be01-4f42-b9a7-123841d7cb3a"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  product_id  user_id                       product_name\n","0               1       49302   112108                   Bulgarian Yogurt\n","1          816049       49302    47901                   Bulgarian Yogurt\n","2         1242203       49302     2993                   Bulgarian Yogurt\n","3         1383349       49302    41425                   Bulgarian Yogurt\n","4         1787378       49302   187205                   Bulgarian Yogurt\n","...           ...         ...      ...                                ...\n","1384612   3420011        1528   177077                   Sprinkles Decors\n","1384613   3420084       47935     9808   Classic Original Lip Balm SPF 12\n","1384614   3420084        9491     9808             Goats Milk & Chai Soap\n","1384615   3420088       16380    72444                   Stevia Sweetener\n","1384616   3420895       38900    20949  Plain Golden Toasted Bread Crumbs\n","\n","[1384617 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-3d772ffd-5984-472b-bc99-97b8b7291855\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>user_id</th>\n","      <th>product_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>49302</td>\n","      <td>112108</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>816049</td>\n","      <td>49302</td>\n","      <td>47901</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1242203</td>\n","      <td>49302</td>\n","      <td>2993</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1383349</td>\n","      <td>49302</td>\n","      <td>41425</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1787378</td>\n","      <td>49302</td>\n","      <td>187205</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>3420011</td>\n","      <td>1528</td>\n","      <td>177077</td>\n","      <td>Sprinkles Decors</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>3420084</td>\n","      <td>47935</td>\n","      <td>9808</td>\n","      <td>Classic Original Lip Balm SPF 12</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>3420084</td>\n","      <td>9491</td>\n","      <td>9808</td>\n","      <td>Goats Milk &amp; Chai Soap</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>3420088</td>\n","      <td>16380</td>\n","      <td>72444</td>\n","      <td>Stevia Sweetener</td>\n","    </tr>\n","    <tr>\n","      <th>1384616</th>\n","      <td>3420895</td>\n","      <td>38900</td>\n","      <td>20949</td>\n","      <td>Plain Golden Toasted Bread Crumbs</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1384617 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d772ffd-5984-472b-bc99-97b8b7291855')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3d772ffd-5984-472b-bc99-97b8b7291855 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3d772ffd-5984-472b-bc99-97b8b7291855');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5fad9c70-4503-40a8-88e4-8550b7c02623\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5fad9c70-4503-40a8-88e4-8550b7c02623')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5fad9c70-4503-40a8-88e4-8550b7c02623 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["#Contando cuantas veces aparece cada producto\n","f_df['product_name'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xQnZ8ONWZHLz","executionInfo":{"status":"ok","timestamp":1699759850394,"user_tz":360,"elapsed":430,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"fa77c557-7409-48c7-8b87-a1bfd4933c80"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Banana                                           18726\n","Bag of Organic Bananas                           15480\n","Organic Strawberries                             10894\n","Organic Baby Spinach                              9784\n","Large Lemon                                       8135\n","                                                 ...  \n","Red Raspberry Syrup                                  1\n","Organic Montebello Penne Rigate Italian Pasta        1\n","ULTRACLEAN™ Arctic Mint Mouth Wash                   1\n","Torrential Tropical Punch                            1\n","Plain Golden Toasted Bread Crumbs                    1\n","Name: product_name, Length: 39123, dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["#Contando cuantas veces aparece un usuario para ssaber cuntas ordenes hizo\n","f_df['user_id'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tLNFP1tGZsmt","executionInfo":{"status":"ok","timestamp":1699759851326,"user_tz":360,"elapsed":187,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"96091456-b175-4699-ad58-b5a8fc89cb6b"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["197541    80\n","149753    80\n","63458     77\n","189951    76\n","83993     76\n","          ..\n","146690     1\n","179314     1\n","10893      1\n","141718     1\n","189142     1\n","Name: user_id, Length: 131209, dtype: int64"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["#Estableciendo el user_id como indice\n","f_df.set_index('user_id', inplace = True)\n","f_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"uSGcMV3TZVyI","executionInfo":{"status":"ok","timestamp":1699759856490,"user_tz":360,"elapsed":198,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"db0cc90a-9843-4f0e-fe4c-a4789c0c171b"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  product_id                       product_name\n","user_id                                                         \n","112108          1       49302                   Bulgarian Yogurt\n","47901      816049       49302                   Bulgarian Yogurt\n","2993      1242203       49302                   Bulgarian Yogurt\n","41425     1383349       49302                   Bulgarian Yogurt\n","187205    1787378       49302                   Bulgarian Yogurt\n","...           ...         ...                                ...\n","177077    3420011        1528                   Sprinkles Decors\n","9808      3420084       47935   Classic Original Lip Balm SPF 12\n","9808      3420084        9491             Goats Milk & Chai Soap\n","72444     3420088       16380                   Stevia Sweetener\n","20949     3420895       38900  Plain Golden Toasted Bread Crumbs\n","\n","[1384617 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-54a709ca-2001-4b7a-82af-35279dd1833c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>112108</th>\n","      <td>1</td>\n","      <td>49302</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>47901</th>\n","      <td>816049</td>\n","      <td>49302</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>2993</th>\n","      <td>1242203</td>\n","      <td>49302</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>41425</th>\n","      <td>1383349</td>\n","      <td>49302</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>187205</th>\n","      <td>1787378</td>\n","      <td>49302</td>\n","      <td>Bulgarian Yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>177077</th>\n","      <td>3420011</td>\n","      <td>1528</td>\n","      <td>Sprinkles Decors</td>\n","    </tr>\n","    <tr>\n","      <th>9808</th>\n","      <td>3420084</td>\n","      <td>47935</td>\n","      <td>Classic Original Lip Balm SPF 12</td>\n","    </tr>\n","    <tr>\n","      <th>9808</th>\n","      <td>3420084</td>\n","      <td>9491</td>\n","      <td>Goats Milk &amp; Chai Soap</td>\n","    </tr>\n","    <tr>\n","      <th>72444</th>\n","      <td>3420088</td>\n","      <td>16380</td>\n","      <td>Stevia Sweetener</td>\n","    </tr>\n","    <tr>\n","      <th>20949</th>\n","      <td>3420895</td>\n","      <td>38900</td>\n","      <td>Plain Golden Toasted Bread Crumbs</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1384617 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54a709ca-2001-4b7a-82af-35279dd1833c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-54a709ca-2001-4b7a-82af-35279dd1833c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-54a709ca-2001-4b7a-82af-35279dd1833c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d94df4d2-c4e7-47b6-bbb7-629c5d38bf98\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d94df4d2-c4e7-47b6-bbb7-629c5d38bf98')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d94df4d2-c4e7-47b6-bbb7-629c5d38bf98 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["pip install apyori"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F4QbqR90Zn1v","executionInfo":{"status":"ok","timestamp":1699759868164,"user_tz":360,"elapsed":9310,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"6f70b584-1b38-497b-8d14-84ee6b32f7a2"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting apyori\n","  Downloading apyori-1.1.2.tar.gz (8.6 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Building wheels for collected packages: apyori\n","  Building wheel for apyori (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for apyori: filename=apyori-1.1.2-py3-none-any.whl size=5955 sha256=b10b31119712bc0127cc4ce8c6d6af6470e74dc55ccdcfc43f8e20ff9389c6a6\n","  Stored in directory: /root/.cache/pip/wheels/c4/1a/79/20f55c470a50bb3702a8cb7c94d8ada15573538c7f4baebe2d\n","Successfully built apyori\n","Installing collected packages: apyori\n","Successfully installed apyori-1.1.2\n"]}]},{"cell_type":"code","source":["from apyori import apriori"],"metadata":{"id":"Sq2NSlt3aHqu","executionInfo":{"status":"ok","timestamp":1699759978906,"user_tz":360,"elapsed":179,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["#Haciendo una lista de listas segun los productos que compro cada usuario\n","transacciones = f_df.groupby('user_id')['product_name'].apply(list).tolist()\n","transacciones"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vSOidM0Bask8","executionInfo":{"status":"ok","timestamp":1699760063936,"user_tz":360,"elapsed":3748,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"0f6d7878-92ec-4991-9d58-b3370e7bf70c"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[['Organic Half & Half',\n","  'Zero Calorie Cola',\n","  'Soda',\n","  'Organic Whole Milk',\n","  '0% Greek Strained Yogurt',\n","  'Aged White Cheddar Popcorn',\n","  'Milk Chocolate Almonds',\n","  'XL Pick-A-Size Paper Towel Rolls',\n","  'Pistachios',\n","  'Cinnamon Toast Crunch',\n","  'Organic String Cheese'],\n"," ['Shelled Pistachios',\n","  'Banana',\n","  'Granny Smith Apples',\n","  'Honeycrisp Apple',\n","  'Small Hass Avocado',\n","  'Mexican Casserole Bowl',\n","  'Bartlett Pears',\n","  'Organic Roasted Turkey Breast',\n","  'Birthday Cake Light Ice Cream',\n","  'Bubblegum Flavor Natural Chewing Gum',\n","  \"Organic D'Anjou Pears\",\n","  'Mint Chip',\n","  'Unsweetened Almondmilk',\n","  'Gluten Free Whole Grain Bread',\n","  'Pad Thai',\n","  'Vegetable Lasagna',\n","  'Kitchen Cheese Enchilada',\n","  'Pistachio Ice Cream',\n","  'Plantain Chips',\n","  'Gluten Free Mushroom Risotto Bowl',\n","  'Black Bean Vegetables Burrito',\n","  'Asian Pears',\n","  'Uncured Slow Cooked Ham',\n","  'Organic Cashew Carrot Ginger Soup',\n","  'Dark Chocolate Nuts & Sea Salt Bars',\n","  'Indian Paneer Tikka',\n","  'Organic Light In Sodium Butternut Squash Soup',\n","  'Chicken Caesar Salad',\n","  'Chipotle Beef & Pork Realstick',\n","  'Organic Hearty Split Pea & Uncured Ham Soup',\n","  'Organic All Day Fresh Deodorant Lavender'],\n"," ['Organic Baby Arugula',\n","  'Organic Grape Tomatoes',\n","  'Tamari Gluten Free Soy Sauce',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Sharp Cheddar Cheese',\n","  'Jalapeno Peppers',\n","  '100% Pure Eucalyptus Essential Oil',\n","  'Organic Raw Agave Nectar',\n","  'Organic Soba'],\n"," ['Honeycrisp Apple',\n","  'Vanilla Coffee Concentrate',\n","  '85% Lean Ground Beef',\n","  'Raspberry Lemonade',\n","  'Panama Peach Antioxidant Infusion',\n","  'Organic Dark Brown Sugar',\n","  'Antioxidant Infusions Ipanema Pomegranate Beverage',\n","  'Lactose Free Fat Free Milk',\n","  'Antioxidant Infusions Beverage Malawi Mango'],\n"," ['Organic Coconut Milk',\n","  'Fresh Cauliflower',\n","  'Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Shallot',\n","  'Organic Avocado',\n","  'Soft Taco Size White Flour Tortillas',\n","  'Poblano Pepper',\n","  'Vidalia Onions',\n","  'Organic SprouTofu Silken Tofu',\n","  'Organic Whole White Mushrooms',\n","  'Organic Leek',\n","  'Organic Green Onions',\n","  'Organic Chives',\n","  'Oyster Mushrooms',\n","  'Nutritional Yeast Seasoning',\n","  'Broccoli Rabe',\n","  'Solid White-No Salt Added Albacore Tuna'],\n"," ['Organic American Cheese Singles',\n","  'Honey Nut Cheerios',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Fat Free Strawberry Yogurt',\n","  'White English Muffins',\n","  'Organic Blackberries',\n","  'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry',\n","  'Goo Berry Pie Probugs Kefir',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Classic Original Hommus',\n","  'YoKids Strawberry Banana/Strawberry Yogurt',\n","  'Whipped Cream Cheese',\n","  'Cherry Pomegranate Greek Yogurt',\n","  'Caffeine Free Diet Cola All Natural Soda',\n","  'Organic Frosted Flakes Cereal',\n","  'Total 0% with Honey Nonfat Greek Strained Yogurt',\n","  'Cinnamon Raisin Bread',\n","  'Organic Soft Wheat Bread',\n","  'Raspberry Lime Sparkling Seltzer Water',\n","  'Spicy Hummus',\n","  'Organic Dried Granny Apple Chips',\n","  'Almond Non-Dairy Yogurt Made From Real Almonds Plain Low Fat'],\n"," ['Pork Chorizo',\n","  'German Barrel Sauerkraut',\n","  'Shoestring Fries',\n","  'Potato Hot Dog Buns'],\n"," ['Half & Half',\n","  'Whole Milk',\n","  'Lavender & Witch Hazel Alcohol-Free Toner',\n","  'Whole Wheat Pita Bread Loaves',\n","  'Fat Free Smooth & Creamy Plain Organic Yogurt'],\n"," ['Olive Oil Cooking Spray',\n","  'Collard Greens',\n","  'Bread, Country Buttermilk',\n","  'Coconut Oil Cooking Spray',\n","  'Mixed Vegetables',\n","  '93/7 Ground Beef',\n","  '80  Vodka Holiday Edition',\n","  'Sweet Hot Dog Buns',\n","  'Cinnamon Horns',\n","  'Fish Fry Seafood Breading Mix',\n","  'Seasoned Chicken Fry Batter Mix'],\n"," ['Strawberries',\n","  'Raspberries',\n","  'Light Spread Butter Substitute',\n","  'Grade A Extra Large Eggs',\n","  'Ultra Soft Bathroom Tissue Double Rolls',\n","  'Select-A-Size Paper Towels, White, 2 Huge Rolls = 5 Regular Rolls  Towels/Napkins'],\n"," ['Organic Strawberries',\n","  'Small Hass Avocado',\n","  '90% Lean Ground Beef',\n","  'Organic Red Onion',\n","  'Cannellini Beans',\n","  'Chocolate Coconut Milk Beverage',\n","  'Air Chilled Organic Boneless Skinless Chicken Breasts',\n","  'Zucchini Noodles',\n","  'Lime Italian Sparkling Mineral Water',\n","  'Mini Peppers',\n","  \"Doctor Formulated Probiotics Once Daily Women's 50 Billion Guaranteed Vegetarian Capsules\"],\n"," ['Sparkling Water Grapefruit',\n","  'Fridge Pack Cola',\n","  'Sugarfree Energy Drink',\n","  'Dry Roasted 100 Calorie Packs Almonds',\n","  'Zero Calories Berry Nutrient Enhanced Water',\n","  'Pepperidge Farm® Goldfish Xtra Cheddar Baked Snack Crackers'],\n"," ['Spinach',\n","  'Original Mountain Blueberry Low Fat Yogurt',\n","  'Original French Vanilla Yogurt',\n","  'Chicken Bouillon Cubes',\n","  'Natural Goodness 33% Less Sodium Chicken Broth',\n","  'Pineapple on the Bottom Greek Yogurt',\n","  'Low Fat Key Lime Blended Greek Yogurt',\n","  '3 Color Deli Coleslaw',\n","  'Recipe Secrets Onion Soup & Dip Mix',\n","  '3 Gallon Food Scrap Bag',\n","  'Extra Noodle Soup Mix',\n","  'Febreze Lavender Vanilla & Comfort Scent Sweeper Dry Pad Refills'],\n"," ['100% Juice, Variety Pack'],\n"," ['Organic Strawberries',\n","  'Pure Coconut Water',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Seedless Red Grapes',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Grape White/Green Seedless',\n","  'Red Raspberries',\n","  'Smartwater',\n","  'Yogurt, Lowfat, Strawberry',\n","  'Organic Raspberry Lowfat Yogurt',\n","  'Lowfat Blueberry Yogurt',\n","  'Total 2% Lowfat Greek Strained Yogurt with Peach',\n","  'Yogurt, Organic, Lowfat, Strawberry',\n","  'Organic Peach Lowfat Yogurt',\n","  'Lowfat Peach Yogurt',\n","  'Vanilla Bean Natural Lowfat Yogurt',\n","  'Forest Berry Natural Lowfat Yogurt'],\n"," ['Minis Candy',\n","  'Original Fresh Stack Crackers',\n","  'Caramel Cone Ice Cream',\n","  'Cran-Apple Juice Drink',\n","  'Pure Life Purified Water',\n","  'Oatmeal Crème Pies',\n","  'Original 0 Calorie Sweetener Packets 115 Count',\n","  'Original Flavor Bean Dip',\n","  'Eagle Brand Sweetened Condensed Milk',\n","  'Extra Soft Double Roll Bathroom Tissue',\n","  'Bacon Breakfast Bowl',\n","  'Bars Peanut Butter',\n","  'Regular Chips',\n","  'Glazed Lemon Pie',\n","  'Vanilla Caramel Coffee Creamer',\n","  'Pimento Cheese Spread',\n","  'Mini Oreo Go Pak'],\n"," ['Distilled Water'],\n"," ['Marinara Pasta Sauce',\n","  'Banana',\n","  'Organic Whole Milk',\n","  'Half & Half',\n","  'Low Fat Plain Yogurt'],\n"," ['Organic Baby Arugula',\n","  'Organic Zucchini',\n","  'Organic Roma Tomato',\n","  'Organic Thompson Seedless Raisins',\n","  'Organic Yellow Squash',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Sliced Baby Bella Mushrooms',\n","  'Organic AppleApple',\n","  'Vegetable Medley',\n","  'Organic Blueberry Fruit Spread',\n","  'Mango Peach Goat Milk Yogurt Baby Food',\n","  'Yogurt, Goat Milk, and Fruit, Banana & Natural Vanilla Bean with Pear, 2+'],\n"," ['Organic Hass Avocado',\n","  'Organic Seasoned Yukon Select Potatoes Hashed Browns',\n","  'Dairy Free Coconut Milk Yogurt Alternative',\n","  'Shredded Mild Cheddar Cheese',\n","  'Spinach',\n","  'Sustainably Soft Bath Tissue',\n","  'Half & Half',\n","  'Shredded Parmesan',\n","  'Organic Tomato Cluster',\n","  'Organic Russet Potato',\n","  'Original Coconut Milk Creamer',\n","  'Penne Rigate #41 Pasta',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Sugar, Organic',\n","  'Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips',\n","  'Coconut Milk Non Dairy Frozen Dessert No Sugar Added Mint Chip',\n","  'Classic Mild Cheddar Macaroni & Cheese',\n","  'Basil Dish Soap',\n","  'Moisturizing Yuzu Shower Gel'],\n"," ['Organic Garlic',\n","  'Mild Diced Green Chiles',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Michigan Organic Kale',\n","  'Red Peppers',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Black Beans',\n","  'Orange Bell Pepper',\n","  'Yellow Onions',\n","  'Smoked Apple Sage Sausages',\n","  'Tuscan Kale & Quinoa Salad',\n","  'Dried Sweetened Cranberries',\n","  'Mild Red Enchilada Sauce',\n","  \"S'mores Luna Bar\"],\n"," ['Organic Blueberries',\n","  'Curate Cherry Lime Sparkling Water',\n","  'Country Cheddar Bowl',\n","  'Organic White Chocolate Peanut Butter Cups',\n","  '100% Whole Wheat Hamburger Buns',\n","  'Original Chicken Patties',\n","  'Rainbow Candy'],\n"," ['Banana',\n","  'Strawberries',\n","  'Honeycrisp Apple',\n","  'Blueberries',\n","  'Spinach',\n","  'Seedless Red Grapes',\n","  'Deli Fresh Smoked Turkey Breast',\n","  'Golden Pineapple',\n","  'Real Mayonnaise',\n","  'Red Raspberries',\n","  'Traditional Favorites Tomato & Basil Pasta Sauce',\n","  '2% Reduced Fat Milk',\n","  'Original Sour Cream',\n","  'Green Seedless Grapes',\n","  'Crunch Berries Cereal',\n","  'Natural Sharp Cheddar Sliced Cheese',\n","  'Smoked Turkey Breast',\n","  'Cream Cheese Bar',\n","  'Chicken Flavor Top Ramen Noodles',\n","  'Strawberry Shortcake Ice Cream Bars',\n","  'Naturally Hickory Smoked Thick Cut Bacon',\n","  'Honey Barbecue Sauce',\n","  'Deli Select Ultra Thin Honey Ham',\n","  'Guacamole Singles',\n","  'Yellow Mustard',\n","  'Pepperoni Pizza Frozen Sandwiches',\n","  'Cinnabon Cinnamon Rolls With Icing',\n","  'Extra Soft Double Roll Bathroom Tissue',\n","  'Macaroni & Cheese Deluxe Four Cheese Sauce Dinner',\n","  'Fancy Shredded Sharp Cheddar Cheese',\n","  'Deluxe Beef Stroganoff Hamburger Helper',\n","  'Raspberry Cheesecake Gelato',\n","  'Fat Free Classic Ranch Dressing'],\n"," ['Southwest Chopped Salad Kit with Dressing',\n","  'Selects Turkey Hot Dogs',\n","  'Hot Dog Buns Enriched 8 Count',\n","  'Original Barbecue Sauce',\n","  'No MSG Cheddar Wurst Smoked Sausage with Wisconsin Cheese',\n","  'Detoxify & Energize with Ginger & Clay Pure Epsom Salt Soaking Solution'],\n"," ['Banana',\n","  'Red Potatoes',\n","  'Yellow Onions',\n","  'Rotini Pasta',\n","  'Krinkle Cut Salt & Fresh Ground Pepper Potato Chips',\n","  'Cajun Andouille Smoked Pork Sausage'],\n"," ['Eggo Homestyle Waffles',\n","  'Organic Chicken Strips',\n","  'Chicken Bouillon Cubes',\n","  'Sweet Orange Vanilla Honest Shampoo + Body Wash',\n","  'Indicator Contour Clean Soft Toothbrush',\n","  'Longwear Eye Makeup Remover'],\n"," ['Organic Hothouse Cucumbers',\n","  'Organic Zucchini',\n","  'Garlic',\n","  'Boneless Skinless Chicken Breasts',\n","  'Parmesan Couscous Mix',\n","  'Super Seed Crispy Crackers',\n","  'Diced Butternut Squash',\n","  'Organic Rainbow Chard Vegetable',\n","  'Organic Cameo Apple',\n","  'Red Plums',\n","  'Mild Korma Simmer Sauce',\n","  'Dairy Free Vanilla Coconut Milk',\n","  'Three Cheese Tortellini'],\n"," ['Organic Ketchup',\n","  'Scoops! Tortilla Chips',\n","  'Wild Blackberry Gelato',\n","  'Belgian Milk Chocolate Gelato',\n","  '100% Whole Wheat Medium Soft Taco Flour Tortillas',\n","  'MixUps Backyard Cookout Cat Treats'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Baby Spinach',\n","  'Organic  Whole Milk',\n","  'Natural Artesian Bottled Water',\n","  'Lacinato Kale Og'],\n"," ['Organic Blueberries',\n","  'Strawberries',\n","  'Sugar Snap Peas',\n","  'Zero Calorie Cola',\n","  'Pink Lady Apples',\n","  'Packaged Grape Tomatoes',\n","  'Creamy Almond Butter',\n","  'Raspberries',\n","  'Oranges',\n","  '49 Flavors Jelly Belly Jelly Beans',\n","  'Tortilla Chips'],\n"," ['Mocha Frappucino Chilled Coffee Drink',\n","  '100% Recycled White Unscented Bathroom Tissue',\n","  'Unsweetened Watermelon Water',\n","  'Chunky Beef with Vegetables & Brown Rice Dog Food',\n","  'Unsweet Peach Water',\n","  'Extra Large Grade A Eggs',\n","  'Peach',\n","  'Fresh Cut Golden Sweet No Salt Added Whole Kernel Corn',\n","  'Papaya',\n","  'Water, Unsweet, Crisp Apple',\n","  'Unsweetened Blackberry Water',\n","  'Half Tea & Half Lemonade',\n","  'Flavored Bread Crumbs'],\n"," ['Organic Seasoned Yukon Select Potatoes Hashed Browns',\n","  'Organic Avocado',\n","  'Oreo Chocolate Sandwich Cookies',\n","  'Grape White/Green Seedless',\n","  'Premium Original Saltine Crackers',\n","  'Flour Tortillas',\n","  'Imported Mineral Water',\n","  'Chocolate Peppermint Stick Bar',\n","  \"Pirate's Booty Aged White Cheddar Baked Rice and Corn Puffs\",\n","  'Organics Chocolate Milk with DHA',\n","  'Sliced Varzi Salami Meat',\n","  'Jumbo Brown Eggs',\n","  'Breakfast Hot & Spicy Sausage Patties'],\n"," ['Banana',\n","  'Large Lemon',\n","  'Organic Baby Spinach',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Blackberries',\n","  'Organic Baby Rainbow Carrots',\n","  'Organic Red Delicious Apple',\n","  'Boomchickapop Sea Salt Popcorn',\n","  'No Salt Added Gluten-Free Blue Chips Made with Organic Blue Corn'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Strawberries',\n","  'Half & Half',\n","  'Organic Original Hommus',\n","  'Unsalted Butter',\n","  'Toasted Coconut Almondmilk Blend',\n","  'Berry Medley',\n","  'Cane Sugar',\n","  'Organic Baby Spinach Salad',\n","  'Organic Spelt Pretzels',\n","  'Apple and Carrot Stage 2 Baby Food',\n","  'Yobaby Organic Plain Yogurt',\n","  'Fruit Spread, Deluxe, Strawberry',\n","  'Organic Unbleached All-Purpose Flour',\n","  'Spinach Peas & Pear Stage 2 Baby Food',\n","  'Hand Picked Pomegranate Seeds/Arils',\n","  'Stage 1 Just Sweet Peas With Mint Baby Food',\n","  'Gluten Free Oatmeal Cookie Granola Bars Granola Bars',\n","  'Multigrain Cereal',\n","  '85% Ground Beef Patties'],\n"," ['Organic Celery Hearts',\n","  'Organic Hothouse Cucumbers',\n","  'Banana',\n","  'Large Lemon',\n","  'Apple Honeycrisp Organic',\n","  'Organic Granny Smith Apple',\n","  'Pizza Sauce',\n","  'Organic Red Onion',\n","  'Organic Unsalted Butter',\n","  'Organic Baby Spring Mix',\n","  'Organic Brown Rice',\n","  'Organic Cripps Pink Apples',\n","  'Organic Jasmine Rice',\n","  'Chicken Drumsticks',\n","  'Organic Peach Lowfat Yogurt',\n","  'Pink Cripps Apple'],\n"," ['Bag of Organic Bananas',\n","  'Organic Coconut Milk',\n","  'Organic Strawberries',\n","  'Uncured Hickory Smoked Sunday Bacon',\n","  'Large Alfresco Eggs',\n","  'Strawberry Rhubarb Yoghurt',\n","  'Organic Frozen Mango Chunks',\n","  'Organic Milk',\n","  'Yoghurt Blueberry',\n","  'Mini Original Babybel Cheese',\n","  'Classic White Bread',\n","  'Organic Long Grain White Rice',\n","  'Mini Babybel White Cheddar Cheese',\n","  'Blueberry English Tea Scones'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Cucumber',\n","  'Organic Baby Spinach',\n","  'Organic Small Bunch Celery',\n","  'Spinach Pizza',\n","  'Red Seedless Grapes',\n","  'Organic Bosc Pear',\n","  'Pure Sparkling Water',\n","  'Macaroni Shells & White Cheddar Cheese',\n","  'Organic Apple Juice',\n","  'Organic Cripps Pink Apples',\n","  'Dried Mango',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  \"Newman O's Creme Filled Chocolate Cookies\",\n","  'Burrata alla Panna'],\n"," ['Sinfully Sweet Campari Tomatoes',\n","  'Feta Cheese Crumbles',\n","  'Seedless Red Grapes',\n","  'Organic California Style Sprouted Bread',\n","  'Dried Mango',\n","  'Almonds & Sea Salt in Dark Chocolate',\n","  'Organic After Dark Chocolate Frozen Nonfat Yogurt',\n","  'Organic Potatoes'],\n"," ['Bunched Cilantro',\n","  'Celery Hearts',\n","  'Cinnamon Sticks',\n","  'Grape-Nuts Cereal',\n","  'Greek Yogurt Style Honey Strawberry',\n","  'Marshmallow Creme',\n","  \"Baker's Pure Cane Ultrafine Sugar\"],\n"," ['Bag of Organic Bananas', 'Clementines', 'Soda'],\n"," ['Banana'],\n"," ['Organic Garlic',\n","  'Sea Salt Baked Potato Chips',\n","  'Bunny-Luv Fresh Organic Carrots',\n","  'Organic Reduced Fat Milk',\n","  'Authentic French Brioche',\n","  'Gogo Squeez Organic Apple Strawberry Applesauce on the Go',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Petit Suisse Fruit',\n","  'Lettuce Medley',\n","  'Organic Eggs Large',\n","  'Lemon Verbena Dish Soap',\n","  'Strawberry Preserves',\n","  'Apricot Preserves',\n","  'Organic Whole Kernel Sweet Corn No Salt Added',\n","  'Cinnamon',\n","  'Cookies, Chocolate Chip Walnut',\n","  'Apricot-Raspberry Preserves',\n","  'Lavender Multi-Surface Everyday Cleaner',\n","  'Bratwurst Sausage',\n","  'Hazelnut Bite Size Wafer Cookies',\n","  'Authentic French Chocolate Swirl Brioche',\n","  \"Spot's Stew Dry Cat Food Formula Chicken Recipe\",\n","  'Unsalted Beurre de Baratte AOP Butter',\n","  'Les Petites Fromage Garlic & Herb',\n","  'Organic Polenta'],\n"," ['Organic Reduced Fat Milk', 'Chicken Noodle Soup'],\n"," ['Original Instant Oatmeal',\n","  'Organic Spaghetti Pasta',\n","  'Organic Snipped Green Beans',\n","  'Organic Low Sodium Vegetable Broth',\n","  'Organic Braeburn Apple'],\n"," ['smartwater® Electrolyte Enhanced Water',\n","  'Everyday 2 Ply Premium Napkins',\n","  'All in 1 Powerball Fresh Scent Automatic Dishwasher Detergent'],\n"," ['Mandarin Oranges',\n","  'Dairy Free Unsweetened Coconut Milk',\n","  'Sparkling Water Beverage Black Cherry'],\n"," ['Bag of Organic Bananas',\n","  'Organic Strawberries',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Whole Milk',\n","  'Organic Baby Broccoli',\n","  'Organic Spring Mix Salad',\n","  'Organic Sliced White Mushrooms',\n","  'Low Fat 1% Milk',\n","  'California Sourdough Bread',\n","  'Organic Extra Large Grade AA Brown Eggs'],\n"," ['Bag of Organic Bananas',\n","  'Dairy Free Coconut Milk Yogurt Alternative',\n","  'French Vanilla Coconut Milk Creamer',\n","  'Wheat Gluten Free Waffles',\n","  'Organic Creamy Peanut Butter',\n","  'Medium Navel Orange',\n","  'Unsweetened Coconut Milk Beverage',\n","  'Dairy Free Coconut Milk Blueberry Yogurt Alternative',\n","  'Panda Puffs Peanut Butter Cereal',\n","  'Kale & Sea Salt Popcorn',\n","  'Wholeberry Blast Meal Bar'],\n"," ['Packaged Grape Tomatoes', 'Hass Avocado Variety', 'Seedless Watermelon'],\n"," ['Bag of Organic Bananas',\n","  'Organic Half & Half',\n","  'French Vanilla Creamer',\n","  'Pink Lady Apples',\n","  'Organic Simply Naked Pita Chips',\n","  'Trail Mix',\n","  'Peanut Chocolate Candies'],\n"," ['ZBar Organic Chocolate Brownie Energy Snack',\n","  'Organic Ezekiel 4:9 Sesame Bread',\n","  'Organic Harmony Blend Tri-Color'],\n"," ['Bag of Organic Bananas',\n","  'Organic Cilantro',\n","  'Organic Avocado',\n","  'Organic Red Onion',\n","  'Sea Salt Potato Chips',\n","  'Organic Broccoli',\n","  'Sea Salt & Vinegar Potato Chips',\n","  'Black Peppercorns',\n","  'Wild Wonders Gourmet Medley Tomatoes',\n","  'Freshly Squeezed Orange Juice',\n","  'French Green Beans',\n","  'Tortilla Chips, Mexican Kitchen Style, Salted'],\n"," ['Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Organic Yellow Onion',\n","  'Organic Zucchini',\n","  'Organic Lemon',\n","  'Organic Basil',\n","  'Organic Frozen Mango Chunks',\n","  'Organic Navel Orange',\n","  'Organic Diced Tomatoes',\n","  'Organic Bunch Beets',\n","  'Organic Red Delicious Apple',\n","  'Organic Yams',\n","  'Organic Celery',\n","  'Organic Yukon Gold Potato',\n","  'Organic Vegetable Broth',\n","  'Lacinato Kale Og',\n","  'Mellow White Miso'],\n"," ['Banana',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Bosc Pear',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Bread, Country Buttermilk',\n","  'Coconut Water, Pure Organic',\n","  'Eggo Blueberry Waffles Family Pack'],\n"," ['Organic Half & Half',\n","  'Kefir Cultured Milk Smoothie Plain',\n","  'Adult Grain-Free & Poultry-Free Dog Food'],\n"," ['Organic Unsweetened Almond Milk',\n","  'Organic Garlic',\n","  'Organic Carrot Bunch',\n","  'Organic Small Bunch Celery',\n","  'Organic Lentil Soup',\n","  'Organic Hot Salsa',\n","  'Unsweetened Soy Milk',\n","  'Almond Milk Blueberry Yogurt',\n","  'Organic Extra Firm Tofu',\n","  'Gold Potato',\n","  'Organic Fuji Red Apple Chips',\n","  'Organic Cannellini Beans',\n","  'Organic Soy Tempeh',\n","  'Almond Milk Strawberry Yogurt'],\n"," ['Organic Graham Crunch Cereal',\n","  \"Annie's Bunny Fruit Snacks Variety\",\n","  'Gluten Free Honey Almond Granola',\n","  'Sea Salt Soiree Intense Dark Chocolate Squares',\n","  'Organic Heritage Flakes Cereal'],\n"," ['Organic Hass Avocado',\n","  'Organic Whole String Cheese',\n","  'Organic Half & Half',\n","  'Mild Diced Green Chiles',\n","  'Organic Lemon',\n","  'Banana',\n","  'Organic Baby Spinach',\n","  'Organic Carrot Bunch',\n","  'Active Dry Yeast',\n","  'Organic Thompson Seedless Raisins',\n","  'Green Bell Pepper',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Organic Low Sodium Chicken Broth',\n","  'Sonoma Traditional Flour Tortillas 10 Count',\n","  'Total 2% All Natural Plain Greek Yogurt',\n","  'Natural Classic Pork Breakfast Sausage',\n","  'Shredded Mozzarella',\n","  'Organic Black Beans',\n","  'Organic Salted Butter',\n","  'Organic Milk',\n","  'Pure Cane Confectioners Powdered Sugar',\n","  'Margherita Pizza',\n","  'Organic Cream Cheese Bar',\n","  'Organic Whole Wheat Bread',\n","  'Kitchen Cheese Enchilada',\n","  'Mild Cheddar Cheese Sticks',\n","  'Thin & Light Tortilla Chips',\n","  'Gluten Free Original Granola',\n","  'Monterey Jack Cheese',\n","  'Cinnamon Raisin Bread',\n","  'Mild Green Chile Enchilada Sauce',\n","  'Sour Batard',\n","  'Organic Vanilla Extract',\n","  'Organic Large Grade AA Omega-3 Eggs'],\n"," ['Lemonade',\n","  'Organic Green Seedless Grapes',\n","  'Grapefruit Juice',\n","  'Yorkshire Gold Black Tea',\n","  'Organic Navel Oranges',\n","  'Ultra Assorted Fruit Antacid Tablets',\n","  'Chocolate Peanut Butter Crisp Energy Bar',\n","  'Green Tea, Organic'],\n"," ['Organic Yellow Onion',\n","  'Large Lemon',\n","  'Limes',\n","  'Coconut Almond Unsweetened Creamer Blend',\n","  'Organic Large Brown Eggs',\n","  'Organic Thompson Seedless Raisins',\n","  'Grated Parmesan',\n","  'Spaghetti',\n","  'Unsweetened Almondmilk',\n","  'All Purpose Crushed Tomatoes',\n","  'Roman Raspberry Sorbetto',\n","  'Mediterranean Mint Gelato',\n","  'Organic Crushed Fire Roasted Tomatoes',\n","  'Organic Flax Plus Multibran Flakes',\n","  'Frankfurters Vegetarian',\n","  'Semolina Flour',\n","  'Greek Extra Virgin Olive Oil',\n","  'Gochujang Fermented Sesame Chile Paste'],\n"," ['Organic Raspberries',\n","  'Organic Blueberries',\n","  'Organic Mini Sandwich Crackers Peanut Butter',\n","  'Organic Frozen Mango Chunks',\n","  'Organic Broccoli Florets',\n","  'Organic Short Grain Brown Rice',\n","  'Whole Wheat English Muffins',\n","  'Organic Fresh Squeezed Orange Juice',\n","  'Thin Crust Margherita Pizza with Fresh Mozzarella & Basil',\n","  'Chipotle Chicken Burrito',\n","  'Gel Aloe Vera 98%'],\n"," ['Keurig Espresso K Cups'],\n"," ['Bag of Organic Bananas',\n","  'Organic Whole String Cheese',\n","  'Organic Strawberries',\n","  'Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Natural Premium Coconut Water',\n","  'Roasted Turkey Breast',\n","  'Orange Bell Pepper',\n","  'Yellow Onions',\n","  'Romaine Lettuce',\n","  'Organic Uncured Sliced Black Forest Ham',\n","  'Bottled Water',\n","  'Sliced Portabella Mushrooms',\n","  'Sweet Italian Chicken Sausage'],\n"," ['Asparagus',\n","  'Bunched Cilantro',\n","  'I Heart Baby Kale',\n","  'Large Lemon',\n","  'Organic Baby Spinach',\n","  'Sugar Snap Peas',\n","  'Organic Small Bunch Celery',\n","  'Michigan Organic Kale',\n","  'Organic Medium Salsa',\n","  'Raspberries',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Sour Cream & Onion Potato Chips',\n","  'Rosemary & Olive Oil Quinoa Blend',\n","  'Icelandic Style Fat Free Plain Yogurt',\n","  'Butternut Squash Noodles',\n","  'Organic Gold Beet Bunch',\n","  'Organic Thousand Island Dressing'],\n"," ['Lowfat Milk'],\n"," ['Uncured Genoa Salami',\n","  'Smoked Turkey Breast Slices',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Green Tea With Ginseng and Honey',\n","  'Spicy Salmon Avocado Roll',\n","  'Vegan Pesto Pasta',\n","  'Soup, Golden Quinoa and Kale',\n","  'Organic Chopped BBQ Ranch Salad Kit',\n","  'Saag Paneer & Biryani Bento',\n","  'Aloo Gobi Chana Masala & Biryani Bento',\n","  'Masala Veggies Paneer'],\n"," ['Organic Lemonade',\n","  'Hass Avocados',\n","  'Pure & Natural Sour Cream',\n","  'Medium Picante Salsa'],\n"," ['Banana',\n","  'Strawberries',\n","  'Harvest Best in 100% Fruit Juice Mandarin Oranges',\n","  'Raspberries',\n","  'Plain Pre-Sliced Bagels',\n","  'Organic Blackberries',\n","  'Brownberry 100% 12 Grain Bread',\n","  'Original Potato Crisps',\n","  'Small Macintosh Apple',\n","  'Special K Red Berries Cereal',\n","  'Corn Blue Tortilla Chips',\n","  'Ultra Strong Bathroom Tissue',\n","  'Sliced Peaches In 100% Fruit Juice',\n","  'Caribou Blend Coffee K-Cups',\n","  'Signature Blend K-Cup Packs Coffee',\n","  'Dobie Cleaning Pad',\n","  'Coffee, Medium Roast, Original Blend, K-Cup Packs'],\n"," ['Organic Hass Avocado',\n","  'Organic Yellow Onion',\n","  'Organic Red Bell Pepper',\n","  'Shredded Mild Cheddar Cheese',\n","  'Organic Small Bunch Celery',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Unsalted Butter',\n","  'Organic Penne Rigate',\n","  'Original Dairy Free Coconut Milk'],\n"," ['Black Beans',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Small Hass Avocado',\n","  'Chicken Broth',\n","  'Sharp Cheddar Cheese',\n","  'Cauliflower',\n","  'Butternut Squash',\n","  '100% Whole Wheat Flour Tortillas',\n","  'Bag of Lemons',\n","  'Vegetarian Refried Beans',\n","  'California Heirloom Monviso Peeled Garlic',\n","  'Cracked Wheat Sourdough Loaf',\n","  \"Medium Thick'n Chunky Verde Salsa\",\n","  'Cello Tomatoes',\n","  'Vegetable Classics Lentil Soup',\n","  'Medium Suprema Salsa',\n","  'Scoopable Scented Clumping Cat Litter'],\n"," ['Organic Cucumber',\n","  'Organic Unsweetened Almond Milk',\n","  'Organic Strawberries',\n","  'Banana',\n","  'Broccoli Crown',\n","  'Organic Romaine Lettuce',\n","  'Organic Red Bell Pepper',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Organic Small Bunch Celery',\n","  'Oven Roasted Turkey Breast',\n","  'Organic Avocado',\n","  'Total 2% Lowfat Greek Strained Yogurt With Blueberry',\n","  'Cantaloupe',\n","  'Original Hummus',\n","  'Organic Red Onion',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Organic Riced Cauliflower',\n","  'Frozen Organic Wild Blueberries',\n","  'Greek Whole Milk Blended Blueberry Yogurt',\n","  'Total 2% Lowfat Greek Strained Yogurt with Peach',\n","  'Large Brown Eggs',\n","  'Cara Cara Navel Orange'],\n"," ['Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Uncured Genoa Salami',\n","  '100% Whole Wheat Bread',\n","  'Strawberries',\n","  'Green Bell Pepper',\n","  'Organic Extra Virgin Olive Oil',\n","  'Organic Fuji Apple',\n","  'Scoops! Tortilla Chips',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Organic Whipped Naturally Buttery Spread',\n","  'Basmati Ready Rice',\n","  'Original Club Crackers',\n","  'Mini Sweet Peppers',\n","  'Chicken & Apple Smoked Chicken Sausage',\n","  'Orange Juice 100% Juice',\n","  'Best Original Baked Beans',\n","  'Thick Medium Cheddar Slices',\n","  'Carb Balance Small Fajita Whole Wheat Tortillas',\n","  'Natural Extra Sharp Cheddar Cheese',\n","  'Reduced Fat 4 Cheese Mexican Shredded Cheese',\n","  'Tortillas, Whole Wheat, 96% Fat Free, Medium, Soft Taco',\n","  'Applewood Smoked Center Cut Uncured Bacon',\n","  'Honey Maid Cinnamon Grahams'],\n"," ['Vanilla Almond Breeze Almond Milk'],\n"," ['Red Plastic Cups', 'Orange 100% Juice'],\n"," ['Organic Cucumber',\n","  'Organic Grape Tomatoes',\n","  'Organic Yellow Onion',\n","  'Organic Strawberries',\n","  'Carrots',\n","  'Large Lemon',\n","  'Organic Red Bell Pepper',\n","  'Organic Ginger Root',\n","  'Hass Avocado',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Low Sodium Chicken Broth',\n","  'Yellow Bell Pepper',\n","  'Organic Short Grain Brown Rice',\n","  'Plus Cranberry Almond + Antioxidants with Macadamia Nuts Bar',\n","  'Fruit & Nut Bar Blueberry Vanilla & Cashew',\n","  'Tuna, Solid Pack Light',\n","  'Peeled Garlic',\n","  'Pomegranate Blueberry Pistachio Plus Antioxidants Fruit & Nut Bar',\n","  'Beverage Tab Wild Berry',\n","  'Strawberry Lemon Electrlyte Tab'],\n"," ['Organic Unsweetened Almond Milk',\n","  'Natural Chicken & Maple Breakfast Sausage Patty',\n","  'Organic Free Range Chicken Broth',\n","  'Organic Ketchup',\n","  'Natural Chicken & Sage Breakfast Sausage',\n","  'Organic Red Onion',\n","  'Brownie Crunch High Protein Bar',\n","  'Chocolate Peanut Butter Protein Bar',\n","  'Lean Protein & Fiber Bar Chocolate Almond Brownie',\n","  'Organic Guacamole',\n","  'Natural Chicken & Apple Breakfast Sausage Patty',\n","  'Chocolate Salted Caramel Protein Bar',\n","  'Mini Baguette'],\n"," ['Select-A-Size White Paper Towels',\n","  'Unscented 2-Ply Double Roll Bathroom Tissue',\n","  'Ultra Original Scent Dishwashing Liquid',\n","  'Ultra Apple Blossom Antibacterial Dish Liquid',\n","  \"Puffs Flamin' Hot Cheese Flavored Snacks\"],\n"," ['Original Bomb Pops Ice Pops',\n","  'Coke',\n","  \"Children's Pain and Fever Grape Splash Liquid\",\n","  'Early Result Pregnancy Test',\n","  'Rainbow Sherbet',\n","  'Gallon Size Value Pack Storage Bags',\n","  'Mini Swirls Birthday Party Ice Cream Cones',\n","  \"Berry Flavor Children's Ibuprofen\",\n","  'Infrared Digital Forehead & Ear Thermometer'],\n"," ['Bag of Organic Bananas',\n","  'Total 0% Nonfat Greek Yogurt',\n","  \"Organic D'Anjou Pears\",\n","  'Organic Gala Apples'],\n"," ['Organic Baby Carrots',\n","  'Apple Honeycrisp Organic',\n","  'Flax Plus Organic Pumpkin Flax Granola',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Organic Chicken & Apple Sausage',\n","  'Organic Good Seed Bread',\n","  'Mini Original Babybel Cheese',\n","  'Classic Peanut Butter',\n","  'Raspberry Preserves',\n","  'Uncured Slow Cooked Ham',\n","  'Real Guacamole',\n","  'Mixed Berry English Tea Scones',\n","  'Organic Spinach & Feta Dinner Sausage',\n","  'Strawberry Protein Shake',\n","  'Chicken Tikka Masala Samosas with Cilantro Chutney'],\n"," ['Nutri Grain Bars Multi Pack'],\n"," ['Grape White/Green Seedless',\n","  'Sweet Onion',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Organic Baby Spinach Salad',\n","  'Red Plums'],\n"," ['Organic Unsweetened Almond Milk',\n","  'Hass Avocados',\n","  'Sugar Snap Peas',\n","  'Organic Tortilla Chips',\n","  'Pure Cane Granulated White Sugar',\n","  'Organic Simply Naked Pita Chips',\n","  'Sweet Kale Salad Mix',\n","  'Naked Green Machine Boosted Juice Smoothie',\n","  'Organic Plain Yogurt',\n","  'Bean & Cheese Burrito',\n","  'Soy Sauce'],\n"," ['Red Peppers',\n","  'Golden Pineapple',\n","  'Dark Red Kidney Beans',\n","  'Grass Fed Ground Beef',\n","  'Thin Spaghetti Pasta',\n","  'Spring Mix',\n","  'Organic Marinara Pasta Sauce',\n","  'Eggplant Large',\n","  'Basmati Rice'],\n"," ['French Onion Dip',\n","  'Deluxe Plain Bagels',\n","  'Cut & Peeled Baby Carrots',\n","  'Original Popcorn',\n","  'Chicken Thighs',\n","  'Bistro Bowl Chicken Caesar Salad',\n","  'Organic Fat-Free Milk',\n","  'Extra Large Eggs',\n","  'Coke',\n","  'Sliced Sourdough Bread',\n","  'Red Onions, Fresh Diced',\n","  'Sliced Swiss Cheese',\n","  'Spiced Rum',\n","  'Gourmet Sesame Seed Restaurant Style Hamburger Buns',\n","  'Butter Toffee Peanuts',\n","  'Poppycock Cashew Lovers',\n","  'Ritz Crackers',\n","  'Sliced Mild Cheddar Cheese',\n","  'Fresh Scent Speed Stick Deodorant'],\n"," ['Organic Strawana Probugs Kefir',\n","  'Almond Milk Peach Yogurt',\n","  'Almond Milk Blueberry Yogurt',\n","  'Organic Green Lentils',\n","  'Organic YoKids Smoothie Strawberry Banana Lowfat Yogurt',\n","  'Organic Creamy Peanut Butter',\n","  'Blueberry Yoghurt',\n","  'Honey Yoghurt',\n","  'Liquid Teething Relief',\n","  'Organic Maple Teething Biscuits'],\n"," ['Uncured Genoa Salami',\n","  'Banana',\n","  'Large Lemon',\n","  'Organic Whole Milk',\n","  'Florida Orange Juice With Calcium & Vitamin D',\n","  'Organic Grade A Large Brown Eggs',\n","  'Lime Sparkling Water',\n","  'Kidz All Natural Baked Chicken Nuggets',\n","  'Honey Greek Yogurt'],\n"," ['Strawberries',\n","  'Organic Basil',\n","  'Grated Parmesan',\n","  'Frozen Broccoli Florets',\n","  'Organic Tomato Cluster',\n","  'Lemon Hummus',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Pita Chips, Simply Naked'],\n"," ['Organic Whole Milk',\n","  'Organic Baby Broccoli',\n","  'Half & Half',\n","  'Organic Plain Whole Milk Yogurt',\n","  'Crepes',\n","  'Roasted Giant Corn'],\n"," ['Organic Strawberries',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Bartlett Pears',\n","  'Lowfat 2% Milkfat Cottage Cheese',\n","  'Organic Gala Apples',\n","  'Unsalted Pure Irish Butter',\n","  'Original Crescent Rolls',\n","  'Grade A Large Brown Eggs',\n","  'Organic Green Seedless Grapes',\n","  'Extralean Ground Turkey Breast',\n","  'Vitamin D Organic Milk',\n","  'Grands Homestyle Butter Tastin Biscuit'],\n"," ['Unsalted Butter Quarters'],\n"," ['Organic Low Fat Milk',\n","  \"Crunchy Oats 'n Honey Granola Bars\",\n","  'Black Seedless Grapes'],\n"," ['Bag of Organic Bananas',\n","  'Large Alfresco Eggs',\n","  'Basil Pesto',\n","  'Shredded Mild Cheddar Cheese',\n","  'Organic Whole Milk',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Hint Of Sea Salt Almond Nut Thins',\n","  'Hummus, Hope, Original Recipe',\n","  'Red Raspberries',\n","  'Enlightened Organic Raw Kombucha',\n","  'Organic Creamy Peanut Butter',\n","  'Spicy Avocado Hummus',\n","  'Organic Bread with 21 Whole Grains',\n","  'Organic Chunky Vegetable Soup',\n","  'Sea Salt Flakes Original',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Apricots',\n","  'Organic Free Range Chicken with White & Wild Rice Soup',\n","  'Organic Tomato Basil Soup',\n","  'Vegan Raw Garlic Fluffy Spread',\n","  'Low Fat Cottage Cheese',\n","  'Organic Mighty Sticks',\n","  'Gluten Free Sea Salt & Cracked Black Pepper Rice Thin Crackers'],\n"," ['Marinara Sauce',\n","  'Authentic French Brioche',\n","  'Seedless Red Grapes',\n","  'Organic Vitality Snack Wild Raspberry',\n","  'Cold-pressed, Deliciously Hydrating Watermelon Water',\n","  'Dha Omega 3 Vitamin D Milk'],\n"," ['Plain Non-Fat Greek Yogurt',\n","  'Select-A-Size White Giant Roll Paper Towels',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Pure Coconut Water',\n","  'Marinara Sauce',\n","  'Organic Fancy Shredded Mozzarella Cheese',\n","  'Parsley, Italian (Flat), New England Grown',\n","  'Organic Cripps Pink Apples',\n","  'Organic Lactose Free 1% Lowfat Milk',\n","  'Bathroom Tissue Softness & Strength, Double Rolls',\n","  'Quart Storage Bags',\n","  'Baked Beans with Tomato Sauce',\n","  'Cold Pressed Fuji Apple Juice',\n","  'Dark Chocolate Sea Salt Granola Bites'],\n"," ['Chocolate Lowfat Milk',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Authentic French Brioche Rolls'],\n"," ['Prosciutto di San Daniele',\n","  'Organic Blackberries',\n","  'Organic Raspberry Lowfat Yogurt',\n","  'Sourdough Bread',\n","  'Lowfat Blueberry Yogurt',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Chocolate Chip Granola',\n","  'Organic Peach Lowfat Yogurt'],\n"," ['Organic Hothouse Cucumbers',\n","  'Plain Non-Fat Greek Yogurt',\n","  'Organic Strawberries',\n","  'Pure Almond Unsweetened Original Almond Milk',\n","  'Extra Virgin Olive Oil',\n","  'Blueberries',\n","  'Red Vine Tomato',\n","  'Romaine Hearts',\n","  'Green Onions',\n","  'Lime Slim Can',\n","  'Low Carb Whole Wheat Tortillas',\n","  'Expeller Pressed Coconut Oil Spray',\n","  'Smoked Andouille Chicken Sausage',\n","  'All Whites 100% Egg Whites',\n","  'Lower Sodium Oven Roasted Turkey Breast',\n","  'Jumbo Grade A Eggs',\n","  'Steam In Bag Broccoli & Cauliflower'],\n"," ['Organic Peeled Whole Baby Carrots',\n","  'Roasted Red Pepper Hummus',\n","  'Plain Almond Milk Yogurt',\n","  'Sensitive Toilet Paper',\n","  'Gluten Free Peanut Butter Dark Chocolate Chewy With a Crunch Granola Bars',\n","  'Pita Crisps Simply Naked',\n","  'Gala Apple',\n","  'Almonds & Sea Salt in Dark Chocolate',\n","  'Milk and Cookies Ice Cream',\n","  '60 Minute IPA',\n","  'Cherry Garcia Frozen Yogurt',\n","  'Peanut Butter Gluten Free Breakfast Bars',\n","  'Nutrisca Chicken And Chickpea Recipe Dog Food'],\n"," ['Organic Hass Avocado',\n","  'Organic Cucumber',\n","  'Curate Melon Pomelo Sparking Water',\n","  'Mache Rosettes French Salad Mix',\n","  'Kiwi Sandia Sparkling Water',\n","  'Organic Lightly Salted Butter',\n","  'Compostable Plates'],\n"," ['Gluten Free Sliced Mountain White Bread',\n","  'Frosted Chocolate Cup Cakes  with Creamy Filling'],\n"," ['Yogurt, Sheep Milk, Blackberry',\n","  'Organic Lactose Free 1% Lowfat Milk',\n","  'Sparkling Mineral Water'],\n"," ['Bag of Organic Bananas',\n","  'Organic Lactose Free Whole Milk',\n","  'Honey Bunny Grahams',\n","  'California Orange Juice',\n","  'Almondmilk Creamer, Vanilla',\n","  'Organic Vanilla Bean Ice Cream',\n","  'Organic Pitted Prunes',\n","  'Organic  Dried & Unsulfured Orchard Select Apricots'],\n"," ['Mild Salsa',\n","  'Red Seedless Grapes Bunch',\n","  'Vine Ripe Tomatoes',\n","  'Avocado',\n","  'Sparkling Lemon Water',\n","  'Orange Bell Pepper',\n","  'Skim Milk',\n","  'Extra Lean Ground Turkey Breast',\n","  '24/7 Performance Cat Litter',\n","  'Grade A Large Brown Eggs',\n","  'Natural Chunky Peanut Butter',\n","  '100% Oatnut Bread',\n","  'Shredded Carrots',\n","  '2% Reduced Fat Ultra-Filtered Chocolate Milk',\n","  'G2 Grape Sports Drink',\n","  'Provolone Cheese Slices',\n","  'G2 Low Calorie Lemon Lime Sports Drink',\n","  'Whole Mushrooms',\n","  'Select Vitamin D Milk',\n","  'Tricolor Penne'],\n"," ['Organic Hass Avocado',\n","  'Bunched Cilantro',\n","  'Organic Raspberries',\n","  'Organic Strawberries',\n","  'Shredded Mild Cheddar Cheese',\n","  'Organic Mixed Vegetables',\n","  'Organic Paprika',\n","  'Whole Organic Omega 3 Milk',\n","  'Organic Homestyle Mini Waffles',\n","  'Organic Tomato Cluster',\n","  'Organic California White Basmati Rice',\n","  'Organic Chicken Strips',\n","  'Slices Cheddar Cheese',\n","  'Naturals Chicken Nuggets',\n","  'Organic 7 Grain with Flax Bread',\n","  'Frozen Peaches',\n","  'Organic Reduced Fat Omega-3 Milk'],\n"," ['Organic Avocado',\n","  'Free & Gentle Fabric Softener Dryer Sheets',\n","  'Bean & Rice Chips Nacho',\n","  'Veggie Rice and Corn Puffs',\n","  'Turkey Burger Patties',\n","  'Mini Semisoft Gouda Cheeses',\n","  'Creamy Peanut Butter Dark Roasted',\n","  'Organic Italian Parsley',\n","  'Baby Healing Ointment'],\n"," ['Organic Baby Spinach',\n","  'Red Vine Tomato',\n","  'Sustainably Soft Bath Tissue',\n","  'Vanilla Almond Breeze',\n","  'Lemon Ginger Sparkling Probiotic Drink',\n","  'Everything Inside Bagels',\n","  'Organic Brown Rice And Wakame Noodles',\n","  'Organic Grapefruit Juice',\n","  'Dairy Free Cream Cheese Style Spread Chive & Onion',\n","  'Salad Dressing & Dip, Ranch Chia'],\n"," ['Reduced-fat Soft Cream Cheese',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Simple Favorites Chicken Enchilada Suiza',\n","  '100% Natural Diced Tomatoes',\n","  '100% Natural Tomato Sauce',\n","  'Dry Roasted Lightly Salted Peanuts',\n","  'Organic Pita',\n","  'Cheese Shredded Sharp Cheddar Reduced Fat 2%',\n","  'Marshmallow Creme',\n","  'Thin And Crispy Corn Tortilla Chips',\n","  'Olive Tapenade Hummus',\n","  'Triscuit Baked Whole Grain Wheat Rosemary & Olive Oil',\n","  'Go Fresh Cool Moisture Beauty Bar Soap',\n","  'Diced Green Peppers',\n","  'All Natural Classic Guacamole',\n","  'Oikos Triple Zero Greek Vanilla Yogurt Cups',\n","  'Reduced Fat Sliced Swiss Cheese',\n","  'Smart Ones Classic Favorites Mini Rigatoni With Vodka Cream Sauce'],\n"," ['Organic Baby Arugula',\n","  'Organic Baby Spinach',\n","  'Red Peppers',\n","  'Romaine Hearts',\n","  'Organic Broccoli Crowns',\n","  'Organic Mung-Bean Sprouts',\n","  'Organic Iceberg Lettuce',\n","  'Organic White Pita Bread',\n","  'Calcium Enriched 100% Lactose Free Fat Free Milk',\n","  'Organic Whole Wheat Pita',\n","  'Lentil Filled Bolani 2 Pack'],\n"," ['Banana',\n","  'Medium Scarlet Raspberries',\n","  'Sea Salt Caramel Gelato',\n","  'Selects Turkey Hot Dogs',\n","  'Roman Raspberry Sorbetto',\n","  'Mediterranean Mint Gelato',\n","  'Unsweetened Ice Tea',\n","  '4% Milkfat Small Curd Grade A Pasteurized Cottage Cheese',\n","  'Natural Fresh Goat Cheese',\n","  'Mozzarella Sticks',\n","  'Ultra Strong Charmin Ultra Strong Toilet Paper',\n","  'Mini Double Caramel Ice Cream Bars',\n","  \"Premium Breadsticks 'N Cheese Dip\"],\n"," ['Seedless Red Grapes',\n","  'Mint Chip',\n","  'Cran Raspberry Sparkling Water',\n","  'Soft Baked Double Chocolate Brownie Cookies',\n","  'Plain Breadsticks'],\n"," ['Premium Epsom Salt',\n","  'Natural Chicken & Sage Breakfast Sausage',\n","  'Good Belly Probiotics Juice Drink Blueberry Acai Flavor',\n","  'Moroccan Argan Oil + Argan Stem Cell Triple Moisture Conditioner',\n","  'Ice Cream Sandwiches Vanilla'],\n"," ['Clementines, Bag'],\n"," ['Banana',\n","  'Sparkling Water Grapefruit',\n","  'Organic Broccoli Florets',\n","  'Sliced Almonds',\n","  'Fancy Eggplant',\n","  'Chicken & Apple Smoked Chicken Sausage',\n","  'Spinach and Arugula Salad'],\n"," ['Sweet Potato Fries with Sea Salt'],\n"," ['Asparagus',\n","  'Celery Hearts',\n","  'Michigan Organic Kale',\n","  'Organic Ginger Root',\n","  'Total 2% All Natural Plain Greek Yogurt',\n","  'Organic Blackberries',\n","  'Organic Peeled Garlic'],\n"," ['Uncured Genoa Salami',\n","  'Shredded Mild Cheddar Cheese',\n","  'Boneless Skinless Chicken Breast',\n","  'Roma Tomato',\n","  'Total 2% Lowfat Greek Strained Yogurt With Blueberry',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Peanut Butter Cereal',\n","  'Organic Bunny Fruit Tropical Treat Fruit Snacks',\n","  'Body Clear Body Wash',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  'Half Baked® Ice Cream',\n","  'Honey Nut Chex Cereal',\n","  'Organic Baby Lettuces',\n","  'Chopped Tomatoes',\n","  'Original Sauce',\n","  'European Style Unsalted Butter',\n","  \"Fusion Power Men's Razor Blade Refills\",\n","  'De Mexico',\n","  'Hampshire 100% Natural Sour Cream',\n","  'Burrata alla Panna',\n","  'Vanilla, Chocolate, Strawberry Ice Cream',\n","  'Celery Root',\n","  'Foamy Sensitive Skin Shaving Cream',\n","  'Classic Original Scent Deodorant',\n","  'Skin Relief Body Wash Fragrance Free',\n","  '50% Less Sodium Chili Beans',\n","  'Grinder Black Peppercorn'],\n"," ['Strawberries',\n","  'Grapefruit Sparkling Water',\n","  'Marinara Sauce',\n","  'All Natural Marinara Sauce',\n","  'Corn Chips',\n","  'Organic SprouTofu Silken Tofu',\n","  'Organic Premium Raspberry Spread',\n","  'Organic Bunch Beets',\n","  'Thin & Light Tortilla Chips',\n","  'Organic Greek Whole Milk Blended Strawberry Yogurt',\n","  'California Sourdough Bread',\n","  'Organic Guava',\n","  'Bananas',\n","  'Unsweetened Soymilk',\n","  '6 OZ LA PANZANELLA CROSTINI ORIGINAL CRACKERS',\n","  'Mild Salsa Roja',\n","  'Kosher Salt',\n","  'Morning Oat Crunch',\n","  'Original Roasted Seaweed Snacks',\n","  'Medium Salsa Roja',\n","  'Pasture Raised Eggs',\n","  'Italian Batard',\n","  'Tumeric Golden Milk Elixir',\n","  'Organic Recipe Granola',\n","  'SprouTofu Medium Soft',\n","  'Organic Low Fat Minestrone Soup'],\n"," ['Chocolate Croissant'],\n"," ['100% Raw Coconut Water',\n","  'Pinot Grigio',\n","  'Veggie Loaf & Mashed Potatoes Entrée',\n","  'Dark Chocolate with Whole Hazelnuts',\n","  'Fresh Cut Cauliflower & Broccoli Steam in Bag',\n","  'Indian Paneer Tikka',\n","  'Lowfat Peach Kefir Probiotic Cultured Milk Smoothie',\n","  'Super Clump Unscented Cat Litter',\n","  'Shredded Turkey Fare Cat Food',\n","  'Pet High Traffic Area Foam Easy Clean Pro Refill Cleaner',\n","  'Platinum Power Clean™ Refreshing Rain™ Dishwashing Liquid'],\n"," ['Bag of Organic Bananas',\n","  'Organic Avocado',\n","  'Whole Organic Omega 3 Milk',\n","  'Italian Sparkling Mineral Water',\n","  'Organic Reduced Fat Omega-3 Milk'],\n"," ['Bag of Organic Bananas',\n","  'Original Cereal',\n","  'Unsweetened Almondmilk',\n","  'Organic Mango',\n","  'Chicken Flavor Top Ramen Noodles',\n","  'Whole Wheat Fresh Stack Crackers',\n","  'Organic SprouTofu Super Firm Tofu'],\n"," ['Bag of Organic Bananas',\n","  'Organic Lemonade',\n","  'Shredded Mexican Blend Cheese',\n","  'Organic Extra Virgin Olive Oil',\n","  'Chocolate Chip Cookies',\n","  'Organic Tortilla Chips',\n","  'Organic Salted Butter',\n","  'Cinnamon Toast Crunch'],\n"," ['Creamy Almond Butter',\n","  'Pretzel Crisps Original Deli Style Pretzel Crackers',\n","  'Organic Wheat-Free & Gluten-Free Original Crackers',\n","  'Sea Salt Caramel Gelato',\n","  'Organic Strawberry Ice Cream',\n","  'Sesame Whole Wheat Crackers',\n","  'Oatmeal Raisin Cookies'],\n"," ['Pink Lady Apples',\n","  'Red Seedless Grapes',\n","  'Green Seedless Grapes',\n","  'Non-Scratch Scrub Sponges',\n","  'Extra Fancy Unsalted Mixed Nuts',\n","  'Honey Bunches of Oats Roasted Oats'],\n"," ['Organic Garnet Sweet Potato (Yam)',\n","  'Asparagus',\n","  'Organic Garlic',\n","  'Carrots',\n","  'Strawberries',\n","  'Organic Baby Spinach',\n","  'Organic Whole Milk',\n","  'Organic Avocado',\n","  'Dubliner Wedge Pre Cut Cheese',\n","  'Total 2% Lowfat Greek Strained Yogurt With Blueberry',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Organic Granny Smith Apple',\n","  'Macaroni Shells & White Cheddar Cheese',\n","  'Organic Large Grade A Brown Eggs',\n","  'Organic Navel Orange',\n","  'Air Chilled Organic Boneless Skinless Chicken Breasts',\n","  'Organic Bunch Beets',\n","  'Orange Peel In Dark Chocolate Bar',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Basil',\n","  'Sweet Potato Tortilla Chips',\n","  'Kefir Cultured Strawberry Milk Drink',\n","  'Total 2% with Raspberry Pomegranate Lowfat Greek Strained Yogurt',\n","  'Organic Red Cherry Tomato',\n","  'Coconut Almond Creamer Blend',\n","  'Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips',\n","  'Raspberries Dark Chocolate Bar',\n","  '100% Carrot 100% Vegetable Juice',\n","  'Blackberry Yogurt',\n","  'Hummus Tahini',\n","  'Dark Chocolate Almond & Coconut Fruit & Nut Bar'],\n"," ['No Salt Added Black Beans', 'Organic Coconut Granola MacroBar'],\n"," ['Spring Water',\n","  'Organic Coconut Milk',\n","  'Organic Baby Carrots',\n","  'Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Walnut Halves & Pieces',\n","  'Organic  Unsweetened & Salt Free Sunflower Seed Butter',\n","  'Organic Cold-Milled Ground Flaxseed'],\n"," ['Organic Whole Grassmilk Milk',\n","  'Purity Farms Ghee Clarified Butter',\n","  'Panko Bread Crumbs'],\n"," ['Liquid Egg Whites'],\n"," ['Organic Strawberries',\n","  'Mild Salsa',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Butterhead (Boston, Butter, Bibb) Lettuce',\n","  'Muffins, Flax, Wild Blueberry',\n","  'Cantaloupe',\n","  'Almond Milk Peach Yogurt',\n","  'Organic Tomato Cluster',\n","  'Organic Tomato Basil Pasta Sauce',\n","  'Toasted Coconut Almondmilk Blend',\n","  'Organic Mung-Bean Sprouts',\n","  'Organic Ezekiel 4:9 Sesame Bread',\n","  'Shredded 3 Cheese Blend',\n","  'Spinach And Ricotta Ravioli',\n","  'Organic Marinara Pasta Sauce',\n","  'Almond Milk Strawberry Yogurt',\n","  'Mushroom And Ricotta Ravioli',\n","  'Thick Medium Cheddar Slices',\n","  'Light CocoWhip! Coconut Whipped Topping',\n","  'Sprouted Grain Bread Cinnamon Raisin',\n","  'Cinnamon Raisin Sprouted Whole Grain Cereal'],\n"," ['Organic Whole String Cheese',\n","  'Yellow Onions',\n","  'Root Beer',\n","  'Organic Whole Kernel Sweet Corn No Salt Added',\n","  'Brazilian Cheese Bread Original Cheddar and Parmesan',\n","  'Authentic French Brioche Hamburger Buns',\n","  'Potato Yukon Gold Organic',\n","  'Beef Tenderloin Steak'],\n"," ['Guacamole',\n","  'Organic Garlic',\n","  'Organic Red Onion',\n","  'Organic Extra Firm Tofu',\n","  'Garlic Hummus',\n","  'Jalapeno',\n","  'Fresh Medium Salsa',\n","  'Fresh Salsa'],\n"," ['Guacamole',\n","  'Organic Cilantro',\n","  'Organic Egg Whites',\n","  'Organic Iceberg Lettuce',\n","  'Jalapeno Pepper'],\n"," ['Banana',\n","  'Mojo Chocolate Almond Coconut Bar',\n","  'Cool Mint Chocolate',\n","  'Crunchy Peanut Butter Energy Bar',\n","  'Mojo Peanut Butter Bar',\n","  'Nut Butter Coconut Almond Butter',\n","  'Blueberry Crisp Energy Bar',\n","  'Chocolate Brownie Energy Bar',\n","  'Berry Pomegranate Chia Energy Bar'],\n"," ['Organic Strawberries',\n","  'Organic Baby Spinach',\n","  'Apple Honeycrisp Organic',\n","  'Red Vine Tomato',\n","  'Marinara Sauce',\n","  'Organic Kosher Dill Pickles',\n","  'Hass Avocado',\n","  'Raspberry Yoghurt',\n","  'Shredded Parmesan',\n","  'Organic Black Beans',\n","  'Organic Extra Firm Tofu',\n","  'Organic Navel Orange',\n","  'Organic Brown Rice',\n","  '2% Reduced Fat Milk',\n","  'Blueberry Yoghurt',\n","  'Sour Cream',\n","  'Farmstand Flaxbread Egg and Vegetarian Bacon Breakfast Sandwich',\n","  'Extra Sharp White Cheddar',\n","  'Organic Whole Peeled Baby Carrots',\n","  'California Veggie Burger',\n","  'Beyond Chicken Southwest Style Strips',\n","  'Asian Sauces, Gourmet, Thai Peanut'],\n"," ['Organic Cucumber',\n","  'Banana',\n","  'Large Lemon',\n","  'Organic Baby Spinach',\n","  'Blueberries',\n","  'Roma Tomato',\n","  'Pure Coconut Water',\n","  'Fresh Ginger Root',\n","  'Red Onion',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Blackberries',\n","  'Chicken Broth',\n","  'Jumbo Garlic',\n","  'Sweet Potato Yam',\n","  'Yellow Onions',\n","  'Condensed Cream of Chicken Soup',\n","  'Chicken Flavor Ramen Noodle Soup',\n","  'Condensed Cream of Mushroom Soup',\n","  'Kale Greens Bunch',\n","  'Hot & Spicy Noodle Bowl Soup',\n","  'Napa Cabbage',\n","  'Mixed Berries',\n","  'Spam Original Luncheon Meat',\n","  'Hot Chili Flavor Ramen Noodle Soup',\n","  'Ready to Eat Tuna Salad Original Deli Style',\n","  'Japanese Style Noodles & Chicken Flavored Sauce',\n","  'Pork Flavor Ramen Noodle Soup'],\n"," ['Coconut Water', 'Cage Free Large White Eggs', 'Pure Coconut Milk'],\n"," ['Black Beans No Salt Added',\n","  'Banana',\n","  'Mild Salsa',\n","  'Vine Ripe Tomatoes',\n","  'Organic Tortilla Chips',\n","  'Organic Tomato Sauce',\n","  'Crimini Delight Mushrooms',\n","  'Organic Green Leaf Lettuce',\n","  'Corn Chips',\n","  'White Corn Tortillas',\n","  'Sour Cream',\n","  'Hard Cooked Eggs',\n","  'Lite Balsamic Dressing',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Chopped Ginger',\n","  'Organic Salted Individually Wrapped Quarters Butter',\n","  '30% Less Sodium Taco Seasoning Mix',\n","  'Natural Goodness 33% Less Sodium Chicken Broth',\n","  'Freshly Grated Cheese, Parmesan',\n","  'Tartar Protection Whitening Toothpaste Cool Mint Paste',\n","  'Chili Powder',\n","  'Organic Kidney Beans Low Sodium',\n","  'Cole Slaw',\n","  'Chopped Garlic',\n","  'Kosher Dill Pickle Spears'],\n"," ['Organic Hass Avocado',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Coconut Milk',\n","  'Organic Lemon',\n","  'Strawberries',\n","  'Organic Baby Spinach',\n","  'Coconut Almond Unsweetened Creamer Blend',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Organic Small Bunch Celery',\n","  'Organic English Cucumber',\n","  'Organic Garbanzo Beans',\n","  'Organic Kiwi',\n","  'Sriracha Hot Sauce',\n","  'Organic Sesame Tahini',\n","  'Red Kidney Beans',\n","  'Sparkling Probiotic Drink Coconut',\n","  'Sparkling Tangerine Probiotic Drink',\n","  'Black Cherry, Naturally Flavored Zero Calorie Soda, Caffeine Free',\n","  'Chipotle Salsa',\n","  'Organic Vegetable Broth',\n","  'Bay Leaves, Turkish, Organic',\n","  'Organic Garlic Powder',\n","  'Sparkling Probiotic Drink Blueberry Cherry',\n","  'Organic Fire Roasted Corn',\n","  'Organic Delicata Squash',\n","  'Grain Meat Sausages Vegetarian Mexican Chipotle',\n","  'Organic Sriracha Hummus',\n","  'Vegan Apple Maple Breakfast Sausage',\n","  'Sparkling Probiotic Drink Mango Coconut',\n","  'Organic Decaf Blend Coffee',\n","  'Hemp & Greens Burger',\n","  'Sauerkraut Salad, Arame (Sea Vegetable) & Ginger',\n","  'Olive Oil, Extra Virgin, California',\n","  'Organic Raw Shredded Coconut',\n","  'Hickory Liquid Smoke',\n","  'Organic Ground Chipotle Chili'],\n"," ['Basil Pesto',\n","  'Green Machine Juice Smoothie',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Gemelli Pasta',\n","  'Smartwater',\n","  'Coconut Milk',\n","  'Authentic Red Curry Paste',\n","  'Butter with Canola Oil Spread',\n","  'Mini Naan',\n","  'Alpine Milk Chocolate',\n","  'Organic French Fingerling Potato',\n","  'Red Lentils',\n","  'Medium Square Containers & Lids',\n","  'White Wine and Balsamic Vinegar Flavored Beets'],\n"," ['Organic Celery Hearts',\n","  'Flat Parsley, Bunch',\n","  'Organic Carrot Bunch',\n","  'Watermelon Chunks',\n","  'Organic Lowfat Yogurt Banana Vanilla',\n","  'Organic Grade A Large Brown Eggs',\n","  'Organic White Onions',\n","  'Honeydew Chunks',\n","  'Organic Fresh Basil',\n","  'Organic Zucchini Spirals',\n","  'Yogurt, Lowfat, Strawberry',\n","  'Air Chilled Organic Boneless Skinless Chicken Breasts',\n","  'Organic Raspberry Lowfat Yogurt',\n","  'Lowfat Vanilla Yogurt',\n","  'Lowfat Blueberry Yogurt',\n","  'Lemon Verbena Hand Soap',\n","  'Red Plums',\n","  'Wild Wonders Gourmet Medley Tomatoes',\n","  'Organic Lowfat Black Cherry Yogurt',\n","  'Organic Peach Lowfat Yogurt',\n","  'Wheat and Gluten Free Snickerdoodle Cookies'],\n"," ['Beef Steak with Cranberry & Sriracha'],\n"," ['Water',\n","  'Chicken Tenders',\n","  'Blackberries',\n","  'Philadelphia Cream Cheese',\n","  'White Giant Paper Towel Rolls',\n","  'Curate Cherry Lime Sparkling Water',\n","  'Butter with Canola Oil Spread',\n","  'Chocolate Cereal',\n","  'Flip™ Low-Fat Almond Coco Loco Lowfat Greek Yogurt',\n","  'Sesame Roasted Seaweed Snacks',\n","  'Kiwi Sandia Sparkling Water',\n","  'Mango Yoghurt',\n","  'Bun Length Beef Franks',\n","  'Organic Gluten Free Quinoa Spaghetti',\n","  'Fresh Wrap Organic Cucumber',\n","  'Krave Cereal Chocolate',\n","  'Foldit 5 Grain Flax Flatbread',\n","  'Sweet Hot Dog Buns',\n","  'Pineapple on the Bottom Greek Yogurt',\n","  'Lite Thousand Island Salad Dressing',\n","  'Otria Greek Yogurt Veggie Dip Cucumber Dill Feta',\n","  'Orange Mango Super Drink',\n","  'Cheddar Baked Mini Snack Crackers'],\n"," ['Shredded Mild Cheddar Cheese',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Organic Mixed Vegetables',\n","  'Organic Small Curd Cottage Cheese',\n","  'Organic Plain Whole Milk Yogurt'],\n"," ['Whole Milk',\n","  'Lime Slim Can',\n","  'Complete™ ActionPacs™ Fresh Scent Dishwasher Detergent',\n","  'Lactose and Fat Free Milk',\n","  'Star Wars Italian Sweet Creme Creamer',\n","  'Original Coffee Creamer',\n","  'Caramel Macchiato Creamer'],\n"," ['Organic Baby Spinach',\n","  'Roasted Red Pepper Hummus With Chips',\n","  'Lemon Zest'],\n"," ['Russet Potato',\n","  'Organic Red On the Vine Tomato',\n","  'Organic Broccoli',\n","  'Unsalted Butter',\n","  'Organic Green Onions',\n","  'Macaroni Elbows',\n","  'Organic Half Tea & Half Lemonade',\n","  'Organic Finely Shredded Cheddar Cheese'],\n"," ['Banana',\n","  'Blueberries',\n","  'Cinnamon Cereal',\n","  'Tomato Ketchup',\n","  '1% Low Fat Milk',\n","  'Whole Grain Oat Cereal',\n","  'Fresh Cut Golden Sweet Whole Kernel Corn',\n","  'Frosted Flakes Cereal',\n","  'Grands! Flaky Layers Original Biscuits',\n","  'Red Onions, Fresh Diced',\n","  'Ready Pac Salad Santa Fe Caesar Bowls',\n","  '100% Real Mashed Potatoes',\n","  'Tai Pei Orange Chicken',\n","  'Lasagna With Meat Sauce'],\n"," ['Organic Baby Carrots',\n","  'Total 2% Lowfat Greek Strained Yogurt With Blueberry',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Lemon Italian Sparkling Mineral Water',\n","  'Organic Braeburn Apple',\n","  'Total 2% Lowfat Greek Strained Yogurt with Peach',\n","  'Lime Italian Sparkling Mineral Water',\n","  'Blackberry Yogurt',\n","  'Color Safe Laundry Whitener & Brightener'],\n"," ['Organic Yellow Onion',\n","  'Organic Red Bell Pepper',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Green Bell Pepper',\n","  'Organic Brussels Sprouts',\n","  'Yellow Bell Pepper',\n","  'Sea Salt & Pepper Popcorn',\n","  'Chopped Organic Garlic',\n","  'Smooth & Creamy Organic Lowfat French Vanilla Yogurt',\n","  'Sweet Potatoes',\n","  'Organic 100% Whole Wheat No. 4 Spaghetti',\n","  'Crunchy Peanut Butter Energy Bar',\n","  'White Cheddar Jalapeno Gourmet Popcorn',\n","  'Enriched Vanilla Rice Drink',\n","  'Chocolate Brownie Energy Bar',\n","  'Certified Gluten-Free Chipotle Hommus',\n","  'Organico Bello Spicy Marinara Pasta Sauce'],\n"," ['Organic Half & Half',\n","  'Super Greens Salad',\n","  'Organic Red Radish, Bunch',\n","  'Organic Bartlett Pear',\n","  'Boneless Skinless Chicken Breast',\n","  'Green Bell Pepper',\n","  'Organic  Whole Milk',\n","  \"Organic D'Anjou Pears\",\n","  'Organic Navel Orange',\n","  'Organic Golden Delicious Apple',\n","  'Organic Cameo Apple',\n","  'Organic Bread with 21 Whole Grains',\n","  'Yogurt, Strained Low-Fat, Coconut',\n","  'Plus Cranberry Almond + Antioxidants with Macadamia Nuts Bar',\n","  'Dark Chocolate Cinnamon Pecan Bar',\n","  'Fruit & Nut Delight Bar',\n","  'Organic Cultured Cream Cheese Spread',\n","  'Almond Cashew with Flax + Omega-3 Fruit & Nut Bar'],\n"," ['Banana',\n","  'Blackberry Cucumber Sparkling Water',\n","  'Honeycrisp Apple',\n","  'Birthday Cake Light Ice Cream',\n","  'Chicken & Maple Breakfast Sausage',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Boomchickapop Sea Salt Popcorn',\n","  'Ginger Ale',\n","  'Peanut Butter, Classic',\n","  'Choose A Sheet Big Rolls 1 Ply Vantage Paper Towels',\n","  'Extra Strength Pain Reliever and Fever Reducer Caplets for Adults',\n","  'Viva Big Roll White Paper Towels',\n","  'Lemon Twist Hummus'],\n"," ['Original Nooks & Crannies English Muffins',\n","  'Fat Free Milk',\n","  'Chunky Medium Salsa',\n","  'Traditional Refried Beans',\n","  'Old Fashioned Rolled Oats',\n","  'Naked Green Machine Boosted Juice Smoothie',\n","  'No Pulp Calcium & Vitamin D Pure Orange Juice',\n","  'Strawberry Squeeze Fruit Spread',\n","  'Eggo Homestyle Waffles',\n","  'Condensed Cream of Chicken Soup',\n","  'Light Very Cherry Yogurt',\n","  'Chicken Pot Pie',\n","  'Microwaveable 100% Beef Cheeseburgers',\n","  'Sausage, Egg, & Cheese Biscuit',\n","  'Chicken Taco Seasoning Mix',\n","  'Mexican Style Taco Shredded Cheese',\n","  '100% Orange Strawberry Banana Juice',\n","  'Biscuits for Dogs less than 20 lbs',\n","  '24/7 Performance Cat Litter',\n","  'Taco Seasoning Mix Original',\n","  'Zero Calorie Sweetener',\n","  'Farmhouse Hearty White Bread',\n","  'Hot Dog Buns',\n","  'Fresh Boneless Skinless Chicken Breasts',\n","  'Sugar Free Lemon Lime Gelatin Snacks',\n","  'Diet Lemon Lime Soda',\n","  'Original Chocolate Pudding Snacks',\n","  'Peach Iced Tea 6 Pitcher Drink Mix Packs',\n","  'Light Red Raspberry Yogurt',\n","  'Lunchables Turkey & American Cheese Cracker Stackers',\n","  'Chewy Granola Bars Variety Pack',\n","  'Eggo Thick & Fluffy Original Waffles',\n","  'Angel Hair Pasta With Herbs',\n","  'Oatmeal Squares Brown Sugar',\n","  'Original Lite Syrup',\n","  'Original Vegetable Oil Spread',\n","  'Light Harvest Peach Yogurt',\n","  'Small Soft and Fluffy Flour Tortillas',\n","  'Caesar Salad Kit',\n","  'Shredded Colby & Monterey Jack Cheeses',\n","  'Lunchables Turkey & American Cheese with Crackers',\n","  'Butter & Garlic Angel Hair Pasta',\n","  'Rich & Hearty Creamy Roasted Chicken Wild Rice Soup',\n","  'Shake N Bake Extra Crispy Seasoned Coating Mix',\n","  'Honey Nut Cheerios Medley Crunch Cereal',\n","  'Beef Franks 8 Count',\n","  'Low Sugar Strawberry Preserves',\n","  'Sliced Apples & Caramel with Peanuts',\n","  'Light Banana Cream Pie Fat Free Yogurt',\n","  'Parmesan Cheese Angel Hair Pasta Mix',\n","  'Garlic & Olive Oil Vermicelli',\n","  'Shells & White Cheddar Pasta',\n","  'Strawberry Banana',\n","  'Chili with Beans, Hot',\n","  'Light Orange Creme Fat Free Yogurt',\n","  'Egg & Cheese Breakfast Sandwich',\n","  'Fettuccine Alfredo Pasta'],\n"," ['Bunched Cilantro',\n","  'Organic Baby Spinach',\n","  'Roma Tomato',\n","  'Bartlett Pears',\n","  'Green Bell Pepper',\n","  'Pineapple Chunks',\n","  'Organic Tomato Sauce',\n","  'Sparkling Lemon Water',\n","  'White Onion',\n","  'Grilled Chicken Breast Strips',\n","  'Paneer'],\n"," ['0% Greek Strained Yogurt', 'Lindor Truffles'],\n"," ['Blueberries',\n","  'Electrolyte Enhanced Water',\n","  'Original Nooks & Crannies English Muffins',\n","  'Flour Tortilla',\n","  'American Singles'],\n"," ['Asparagus',\n","  'Organic Zucchini',\n","  'Fresh Cauliflower',\n","  'Organic Strawberries',\n","  'Large Lemon',\n","  'Honeycrisp Apple',\n","  'Organic Basil',\n","  'Small Hass Avocado',\n","  'Shallot',\n","  'Red Peppers',\n","  'Half & Half',\n","  'English Seedless Cucumber'],\n"," ['Bag of Organic Bananas',\n","  'Organic Half & Half',\n","  'Limes',\n","  'Fluoride-Free Antiplaque & Whitening Peppermint Toothpaste',\n","  'Organic Milk',\n","  'Organic Mung-Bean Sprouts',\n","  'Sparkling Mineral Water',\n","  'Cheddar Snack Crackers Cheddar Bunnies',\n","  'Organic Uncured Sliced Black Forest Ham',\n","  'Thin Rice Noodles',\n","  'New Orleans Iced Coffee'],\n"," ['Banana',\n","  'Organic Romaine Lettuce',\n","  'Organic Avocado',\n","  'Real Vegetable Chips Spiced Sweets'],\n"," ['Organic Whole String Cheese',\n","  'Organic Reduced Fat 2% Milk',\n","  'Grated Parmesan',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Organic Chicken Strips',\n","  'Rigatoni Pasta',\n","  'Organic AppleApple',\n","  'Whipped Cream Cheese',\n","  'California Sourdough Bread',\n","  \"World's Best Mac & Cheese\",\n","  'Natural Liquid Laundry Detergent - Blue Eucalyptus and Lavender',\n","  'Light and Lean Macaroni and Cheese',\n","  'Yerbamate Lemon Energy Shot'],\n"," ['Corn Maize Tortillas',\n","  'Shredded Sharp Cheddar Cheese',\n","  'Romaine Hearts',\n","  'Scoops! Tortilla Chips',\n","  'Iceberg Lettuce',\n","  'Rising Crust Supreme (Sausage, Pepperoni, Red Peppers, Green Peppers, Onions, Black Olives) Frozen Pizza',\n","  'Original Coconut Milk Creamer',\n","  'Unsweetened Iced Coffee',\n","  'Smoked Turkey Breast',\n","  'Multi Grain Sandwich Thins',\n","  'Deli Sliced Sharp Cheddar Cheese',\n","  'Blue Sparkle Fabric Softener Dryer Sheets',\n","  'Peppermint Sugar-Free Gum',\n","  'Italian Parsley',\n","  'Carb Balance Small Fajita Whole Wheat Tortillas',\n","  'Fat-Free Refried Beans',\n","  'White Wine Vinegar',\n","  'All Natural Gluten Free Dijon Mustard',\n","  'Hickory Smoke Real Bacon Bits',\n","  'Blue Sparkle Fresh Scent Liquid Fabric Softener',\n","  'Spicy Three Pepper Hummus'],\n"," ['Organic Dark Chocolate Peanut Butter Cups',\n","  \"Women's One Food-Based Multivitamin\",\n","  \"Men's One Tablets - 30 CT\"],\n"," ['Seedless Small Watermelon',\n","  'Whipped Cream Cheese',\n","  'Homestyle Some Pulp 100% Florida Orange Juice',\n","  'Rainier Cherries',\n","  'Uncured Slow Cooked Ham',\n","  'Cheddar Cheese Medium',\n","  'Quadratini Chocolate Cream Wafers'],\n"," ['Vanilla Almond Breeze Almond Milk',\n","  \"Kellogg's Special K Strawberry Fruit Crisps 100 Calorie\",\n","  'Garlic & Herbs Spreadable Cheese',\n","  'Colby-Jack Cheese Sticks',\n","  'Honey Greek Yogurt',\n","  'Organic Lemon Garlic Dressing',\n","  'Clementine Dish Soap',\n","  'Bread, Sliced, Extra Sourdough',\n","  '100% Juice Apple Juice, No Sugar Added',\n","  'DanActive Vanilla Probiotic Dairy Drink',\n","  'Cilantro Paste'],\n"," ['Roasted Turkey',\n","  'Natural Spring Water',\n","  'Russet Potato',\n","  'Peanut Butter Cereal',\n","  'Honey Dijon Potato Chips'],\n"," ['Extra Virgin Olive Oil',\n","  'Baking Powder',\n","  'Zero Calorie Free Sweetener',\n","  '100% Whole Grain White Whole Wheat Flour'],\n"," ['Red Seedless Grapes',\n","  'Raspberries',\n","  'Green Seedless Grapes',\n","  'Organic Granny Smith Apples'],\n"," ['Sweet Onion',\n","  'Cauliflower',\n","  'Green Onions',\n","  'Romaine Lettuce',\n","  'Zucchini Squash',\n","  'Diet Ginger Ale',\n","  'Bananas',\n","  '90 Calorie Chocolate Fudge Brownies',\n","  'Strawberry Streusel Bars',\n","  'Fat-Free Refried Beans',\n","  'Layered Salted Caramel & Dark Chocolate Chewy Bars',\n","  'Unsweetened Lemonade',\n","  'Grape Unsweetened Soft Drink Mix',\n","  'Cherry Caffeine Free Unsweetened Soft Drink Mix',\n","  'Orange Unsweetened Soft Drink Mix',\n","  'Blue Raspberry Lemonade Unsweetened Soft Drink Mix',\n","  'Strawberry Cheesecake Bar',\n","  '90 Calorie Chocolate Chewy Bars',\n","  'Black Cherry Unsweetened Soft Drink Mix',\n","  'Pink Lemonade Unsweetened Soft Drink Mix',\n","  'Tropical Punch Unsweetened Soft Drink Mix',\n","  'Pearls Fresh Mozzarella Cheese',\n","  'Strawberry Unsweetened Soft Drink Mix',\n","  'Strawberry Lemonade Unsweetened Soft Drink Mix',\n","  'Watermelon Unsweetened Drink Mix',\n","  'Unsweet Lemon Lime Drink Mix',\n","  'Cherry Limeade Unsweetened Soft Drink Mix',\n","  'Peach Mango Unsweetened Soft Drink Mix',\n","  'Green Apple Unsweetened Soft Drink Mix',\n","  'Bonus Bag Restaurant Style Tortilla Chips'],\n"," ['Fat Free Milk',\n","  'Reddi Wip Fat Free Whip Cream',\n","  'White Italian Bread',\n","  'Cookies, Vanilla'],\n"," ['Organic Half & Half',\n","  'Bunched Cilantro',\n","  'Banana',\n","  'Organic Avocado',\n","  'Watermelon Chunks',\n","  'Organic Reduced Fat Milk',\n","  'Tomato Paste',\n","  'Organic Mixed Vegetables',\n","  'Organic Romaine',\n","  'Original Hummus',\n","  'Organic Tomato Sauce',\n","  'Organic Mountain Forest Amber Honey',\n","  'Jalapeno Peppers',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Green Peas No Salt Added',\n","  'Mango Chunks',\n","  'Mild Cheddar Cheese Sticks',\n","  'Peanut Butter Creamy With Salt',\n","  'Organic Lowfat Mango Kefir',\n","  'Total 2% Lowfat Greek Strained Yogurt with Peach',\n","  'Kiwi Sandia Sparkling Water',\n","  'Organic Crushed Fire Roasted Tomatoes',\n","  'Cornbread',\n","  'Classic Fajita Skillet Sauce with Chipotle and Lime'],\n"," ['Italian Dry Salame',\n","  'French Onion Dip',\n","  'Scoops! Tortilla Chips',\n","  '2% Reduced Fat Milk',\n","  'Original Crescent Rolls',\n","  'Crackers',\n","  'Original Potato Chips',\n","  'Coke',\n","  'Purified Water',\n","  'Grilled Chicken Taquitos',\n","  'Tater Tots',\n","  'Smoked Sausage',\n","  'Chunky Mild Salsa',\n","  'Light',\n","  'Cashews, Halves and Pieces'],\n"," ['Strawberries',\n","  'Seedless Cucumbers',\n","  'Mozzarella String Cheese',\n","  'Bunny-Luv Organic Carrots',\n","  'Rainbow Bell Peppers',\n","  'Green Seedless Grapes',\n","  'Organic Fuji Apples'],\n"," ['Sparkling Water, Bottles'],\n"," ['Original Popcorn',\n","  'Kids Soft and Chewy Candy',\n","  \"Annie's Bunny Fruit Snacks Variety\",\n","  'Cheddar Extra Sharp Made with 2% Milk Cheese Sticks',\n","  'Lightly Salted Rice Cakes',\n","  'Dark Chocolate Pretzels with Sea Salt',\n","  'Original Baked Snack Crackers',\n","  'Unscented Multi-Pack Plastic Tampons'],\n"," ['Bag of Organic Bananas',\n","  'Organic Blueberries',\n","  'Organic Strawberries',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Banana',\n","  'Raspberries',\n","  'Raspberry on the Bottom Nonfat Greek Yogurt',\n","  'Organic Low Fat Cottage Cheese',\n","  '100% Whole Wheat Pre-Sliced Sandwich Thins',\n","  '100% Whole Wheat Pre-Sliced Bagels'],\n"," ['Half & Half'],\n"," ['Bag of Organic Bananas',\n","  'Organic Grape Tomatoes',\n","  'Organic Strawberries',\n","  'Organic Whole Milk with DHA Omega-3',\n","  '2% Reduced Fat Organic Milk',\n","  'Organic Avocado',\n","  'Honey Nut Cheerios',\n","  \"Organic D'Anjou Pears\",\n","  'Organic Gala Apples',\n","  'Original Semisoft Cheese',\n","  'Organic AppleApple'],\n"," ['Free & Clear Unscented Refill Value Packs Baby Wipes',\n","  'Cookies, Chocolate Chip Walnut',\n","  'Half Baked® Ice Cream',\n","  'Americone Dream® Ice Cream',\n","  'Salted Almond Milk Chocolate Bar',\n","  'Alkalized Water',\n","  'Patchouli Incense Sticks With Natural Essential Oils'],\n"," ['Strawberries',\n","  'Red Seedless Grapes',\n","  'Raspberries',\n","  'White Distilled Vinegar',\n","  'Frozen Blueberries',\n","  'Sliced Peaches'],\n"," ['Organic Half & Half',\n","  'Organic Unsweetened Almond Milk',\n","  'Organic Coconut Milk',\n","  'Apple Honeycrisp Organic',\n","  'Penne Rigate #41 Pasta',\n","  'Organic Garbanzo Beans No Salt Added',\n","  'Thin Spaghetti No 11',\n","  'Bucatini, No. 15',\n","  'Gotu Kola Stem Cell + 1% CGF Day Cream',\n","  'Organic Promise Autumn Wheat Cereal',\n","  'Blue Eucalyptus & Lavender Natural Laundry Detergent',\n","  'Classic Granola',\n","  'French Lavender Hand Soap'],\n"," ['Organic Strawberries',\n","  'Banana',\n","  'Original Multigrain Spoonfuls Cereal',\n","  'Organic Distilled White Vinegar',\n","  'Go Lean Cereal',\n","  'Lemon Eucalyptus Essential Oil',\n","  '100% Pure Lavender Oil'],\n"," ['2nd Foods Organic  Pear and Spinach Baby Food',\n","  'Organic 2nd Foods Apples, Blueberries & Spinach Baby Food'],\n"," ['Strawberries',\n","  'Blueberries',\n","  'Organic Whole Milk',\n","  'Raspberries',\n","  'Medium Navel Orange',\n","  'Bananas, Raspberries & Oats Organic Baby Food',\n","  'Apples, Kale & Avocados Organic Baby Food',\n","  'Apples, Guavas & Beets Organic Baby Food',\n","  'Apples, Pumpkin & Carrots Organic Baby Food',\n","  'Baby Food Pears Squash',\n","  'Italian Bread'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Whole String Cheese',\n","  'Organic Strawberries',\n","  'Organic Carrot Bunch',\n","  'Natural Premium Coconut Water',\n","  'Raisin Bran Cereal',\n","  'Organic Red On the Vine Tomato',\n","  'Organic Vanilla Almond Milk',\n","  'Low Fat Vanilla Yogurt',\n","  \"Newman O's Creme Filled Chocolate Cookies\"],\n"," ['Bag of Jumbo Yellow Onions'],\n"," ['Organic Hass Avocado',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Yellow Onion',\n","  'Organic Coconut Milk',\n","  'Organic Baby Carrots',\n","  'Organic Baby Spinach',\n","  'Cultured Pasture Butter',\n","  'Organic Unsweetened Vanilla Almond Milk',\n","  'Frozen Organic Wild Blueberries',\n","  'Tortillas, Brown Rice',\n","  'Gluten Free Brown Rice Bread',\n","  'Organic Light In Sodium Traditional Refried Beans',\n","  'Simply Strawberry Coconut Milk Minis Frozen Dessert',\n","  'Vegetable Broth Low Sodium',\n","  'Kale Krunch The Original Quite Cheezy',\n","  \"Women's Gummy Vitamins\",\n","  'Warrior Blend Vanilla Dietary Supplement'],\n"," ['Organic Italian Parsley Bunch',\n","  'Organic Zucchini',\n","  'Organic Lemon',\n","  'Organic Peeled Garlic',\n","  'PlusShot Blueberry Acai Probiotic Juice Drink',\n","  'Sandwich Resealable Bags'],\n"," ['Organic Strawberries',\n","  'Carrots',\n","  'Honeycrisp Apple',\n","  'Watermelon Chunks',\n","  'Pineapple Chunks',\n","  'Original Hummus',\n","  '100% Raw Coconut Water',\n","  'Organic Bell Pepper',\n","  'Organic Small Curd Cottage Cheese',\n","  'Organic Navel Orange',\n","  'Dried Mango',\n","  'Sparkling Natural Spring Water',\n","  'Pretzel \\\\\"Shells\\\\\"',\n","  'Cold-pressed, Deliciously Hydrating Watermelon Water'],\n"," ['Organic Hot House Tomato',\n","  'Tomato Ketchup',\n","  'Happy Baby Spinach, Mango, and Pear Baby Food',\n","  'Baby Food Meals',\n","  'Gluten Free Whole Grain Hamburger Buns 4 Count',\n","  'Authentic French Brioche Hamburger Buns',\n","  'Bananas, Raspberries & Oats Organic Baby Food',\n","  'Stage 1 Apples Sweet Potatoes Pumpkin & Blueberries Organic Pureed Baby Food',\n","  'Wholesome Breakfast Blueberry Banana',\n","  'White Apple Cauliflower & Leek Organic Baby Food',\n","  'Stage 1 Apples & Strawberries Organic Pureed Baby Food',\n","  'Just Mangos Organic Baby Food',\n","  'Toddler Cheddar & Leeks Multigrain Wheels Organic Snack'],\n"," ['Diet Cranberry Fruit Juice',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Classic Hummus',\n","  'Hearty Grains 100% Whole Wheat English Muffins',\n","  'Golden Brown Pure Cane Sugar',\n","  'Zero Go-Go Mixed Berry Vitamin Water',\n","  'Smok Cured Turkey Bacon',\n","  'Kitchen Cheese Enchilada',\n","  'Fridge Pack Cola',\n","  'Microwaveable 100% Beef Cheeseburgers',\n","  'Organic Acai Berry Smoothie Packs',\n","  'Real Bacon Bits',\n","  'Vitaminwater Zero Focus Kiwi-Strawberry',\n","  'Garlic Parmesan Deli Style Pretzel Crisps',\n","  'Vegetarian Vegetable Condensed Soup',\n","  'Triple Soothing Action Mentho Lyptus Cough Drops Bonus Bag',\n","  'Entertainment Cracker Collection',\n","  'Condensed Soup, Bean with Bacon'],\n"," ['Organic Hass Avocado',\n","  'Veganic Sprouted Brown Rice Cacao Crisps',\n","  'Toasted Coconut Almondmilk Blend',\n","  'Coconut Almond Minis Frozen Dessert Bars',\n","  'Original Coconut Milk Beverage',\n","  'Gelatin Free Snacks Natural Orange Gels',\n","  'Organic Gluten Free Crispy Brown Rice Cereal',\n","  'Passion Fruit',\n","  'Erewhon Organic 100% Whole Grain Honey Rice Twice Cereal',\n","  'Minis Coconut Milk Non Dairy Frozen Dessert Fudge Bars',\n","  'Brown Rice Crisps',\n","  'Minis, Coconut Milk, Non-Dairy Frozen Dessert, no sugar added Vanilla Bar',\n","  'Dark Chocolate Frozen Dessert bars',\n","  'Peach Mango Gels Vegan',\n","  'Chamomile Lemon Tea Bags'],\n"," ['Chocolate Protein Soy & Dairy Protein Shake',\n","  'Whole Jersey Milk Low Pasteurized',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Cocoa Bunnies Whole Grain Cereal',\n","  'Organic Nonfat Milk',\n","  'Organic Icelandic, Whole Milk, Vanilla Yogurt'],\n"," ['Organic Baby Carrots',\n","  'Mandarin Oranges',\n","  'Pitted Dates',\n","  'Pure Sparkling Water',\n","  'Organic Gala Apples',\n","  'Unsalted Pure Irish Butter',\n","  'Frozen Organic Wild Blueberries',\n","  'Milk Chocolate Sea Salt Caramels',\n","  'Chicago Mix Popcorn',\n","  'Gluten Free Multigrain Bread',\n","  'Windy City Crunch Salad'],\n"," ['Organic Strawberries', 'Hass Avocados', 'Raspberries', 'Mozzarella Cheese'],\n"," ['Organic Coconut Milk',\n","  'Michigan Organic Kale',\n","  'Roma Tomato',\n","  'Organic Ginger Root',\n","  'Diced Tomatoes',\n","  'Organic Heavy Whipping Cream',\n","  'Ground Cumin',\n","  'Cayenne Pepper',\n","  'Organic Russet Potato',\n","  'Yellow Onions',\n","  'Organic Red Lentils',\n","  'Fennel Seed',\n","  'Ground White Pepper',\n","  'Passata Biodynamic Tomato Puree'],\n"," ['Natural Vanilla Ice Cream',\n","  'Whipped Light Cream, Original',\n","  'Complete ActionPacs Lemon Burst Dishwasher Detergent',\n","  'Classic Vanilla Coffee Creamer'],\n"," ['Organic Cucumber',\n","  'Organic Yellow Onion',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Garbanzo Beans',\n","  'Organic Tomato Cluster',\n","  'Free & Clear Unscented Baby Wipes'],\n"," ['Champagne'],\n"," ['Everything Bagel',\n","  'Fresh Ginger Root',\n","  'Seedless Red Grapes',\n","  'Celery',\n","  'Grapefruit, Bag',\n","  'Ataulfo Mango',\n","  'Chicken Thighs',\n","  'Large Grade AA Cage Free Eggs',\n","  'White Sliced Mushrooms',\n","  'Pasilla Pepper',\n","  'Lager Beer',\n","  'Crushed Chili',\n","  'Whole Japones Chile Bag'],\n"," ['Chicken & Apple Smoked Chicken Sausage',\n","  'Ice Cream Bars',\n","  'Double Cheese Baked Snack Mix'],\n"," ['Banana',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Flaky Biscuits',\n","  'Raspberries',\n","  'Medium Cheddar Cheese Block',\n","  'Organic Great Northern Beans',\n","  'Organic Multigrain Waffles',\n","  'Ripe Large Pitted Olives',\n","  'Organic Pancake Syrup'],\n"," ['Organic Hass Avocado',\n","  'Organic Garlic',\n","  'Organic Lemon',\n","  'Organic Red Bell Pepper',\n","  'Ancient Grain Original Granola',\n","  'Pickling Cucumber',\n","  'Coconut Yogurt',\n","  'Mesclun Salad'],\n"," ['Total 0% Nonfat Greek Yogurt',\n","  'Lime Sparkling Water',\n","  'Total 2% All Natural Plain Greek Yogurt',\n","  'Vanilla Almond Fit Granola',\n","  'Cane Sugar',\n","  'Healthy Grains Fiber Cinnamon Oat Clusters',\n","  'Organic String Cheese',\n","  'Ancient Grain Granola Cranberry Pecan',\n","  'Ancient Grain Original Granola',\n","  'Pumpkin Fig Ancient Grain Granola',\n","  'Gluten Free Foods Granola'],\n"," ['Banana',\n","  'Cheese Pizza Snacks',\n","  'No Pulp Calcium & Vitamin D Pure Orange Juice',\n","  'Grade A Large White Eggs',\n","  'Broccoli Pot Pie With Cheddar Cheese Sauce',\n","  'Cheese Tamale Verde'],\n"," ['Organic Hass Avocado',\n","  'Organic Baby Arugula',\n","  'Organic Yellow Onion',\n","  'Fresh Cauliflower',\n","  'Organic Small Bunch Celery',\n","  'Creamy Deluxe Shells & Real Aged Cheddar Sauce',\n","  'Blue Cheese Crumbles',\n","  'Organic Stevia',\n","  'Spirals with Butter & Parmesan Mac & Cheese Macaroni & Cheese Natural'],\n"," ['Premium Grapefruit Large',\n","  'Extra Fancy Unsalted Mixed Nuts',\n","  'Crunchy Rice Rollers'],\n"," ['Whole Wheat Bread',\n","  'Organic Roasted Turkey Breast',\n","  'Grated Parmesan',\n","  'Organic Ezekiel 49 Bread Cinnamon Raisin',\n","  'Organic Uncured Sliced Black Forest Ham',\n","  'Organic Blueberry Waffles',\n","  'Organic Classic Saltine Crackers',\n","  'YoKids Blueberry & Strawberry/Vanilla Yogurt',\n","  'Saltine Crackers',\n","  'Limonata Sparkling Lemon Beverage',\n","  'Organic Hibiscus Herbal Tea Bags'],\n"," ['2% Reduced Fat Organic Milk',\n","  'Creamy Peanut Butter',\n","  'SmartBlend Chicken & Rice Formula Adult Dry Dog Food'],\n"," ['Organic Garlic',\n","  'Multi Grain Cheerios Cereal',\n","  'Hass Avocado',\n","  'Honey Nut Cheerios',\n","  'Soft Taco Size Flour Tortillas 10 Count',\n","  'Purity Farms Ghee Clarified Butter',\n","  'Organic SprouTofu Silken Tofu',\n","  'Green Seedless Grapes',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Organic Yams',\n","  'Gluten Free Plain Tortilla',\n","  'Organic Pitted Green Olives',\n","  'Organic Tomato Paste, No Salt Added',\n","  'Organic Apple Sauce',\n","  'Almond Milk Strawberry Yogurt',\n","  'Gluten Free Flour',\n","  'Apple Cinnamon Cheerios Cereal',\n","  'Apple Apricot Sauce',\n","  'Organic White Corn & Wheat Tortillas',\n","  'Natural California Raisins Mini Snack Boxes',\n","  'Organic Mash ups Tropical Squeezable Fruit',\n","  'Muffin Mix, Almond Flour, Banana',\n","  'All-Purpose Gluten Free Baking Mix'],\n"," ['Natural Artisan Water',\n","  'Cool Mint® Antiseptic Adult Mouthwash',\n","  'Deodorant',\n","  'Ibuprofen Liqui-Gels Capsules',\n","  'Fusion Razor Cartridges'],\n"," ['Organic Whole String Cheese',\n","  'Organic Ketchup',\n","  'Rotini Pasta',\n","  'Premium Organic Strawberry Spread',\n","  'Coconut Bliss Frozen Dessert, Dark Chocolate',\n","  \"Organic Cookies 'n Cream Ice Cream\"],\n"," ['Vanilla Unsweetened Almond Milk',\n","  'Classic Hummus',\n","  'Sparkling Water Grapefruit',\n","  'Hass Avocado',\n","  'Fat Free Milk',\n","  'Organic Extra Firm Tofu',\n","  'Chick Peas',\n","  'Reduced Fat Original Baked Snack Crackers',\n","  'Strawberry on the Bottom Nonfat Greek Yogurt',\n","  'Sliced White Mushrooms',\n","  'Cran Raspberry Sparkling Water',\n","  'Original Popcorn',\n","  'Fresh Cut Golden Sweet Whole Kernel Corn',\n","  'Mozzarella String Cheese Sticks, Light Low-Moisture Part Skim',\n","  'Natural Raw Almonds',\n","  'Spring Waterfall Scent Automatic Toilet Bowl Cleaner',\n","  'Tuna, Solid Pack Light',\n","  'Icelandic Style Fat Free Plain Yogurt',\n","  'Pomegranate',\n","  'Organic Asparagus',\n","  'Organic Tropical Fruit Blend',\n","  'Pomegranate on the Bottom Non-Fat Greek Yogurt',\n","  'Lemon Blended Non-Fat Greek Yogurt',\n","  'Medium Salsa Verde',\n","  'Instant Oatmeal Weight Control Variety',\n","  'Yogurt, Drinkable, Wild Blueberry'],\n"," ['Organic Zucchini',\n","  'I Heart Baby Kale',\n","  'Broccoli Crown',\n","  'Organic Baby Spinach',\n","  'Organic Red Bell Pepper',\n","  'Organic Roma Tomato',\n","  'Sparkling Water Grapefruit',\n","  'Organic Red Onion',\n","  'Organic Extra Firm Tofu',\n","  'Organic Large Grade A Brown Eggs',\n","  'Organic White Corn & Wheat Tortillas',\n","  'Original Hemp Burgers'],\n"," ['Organic Hass Avocado',\n","  'Organic Cucumber',\n","  'Organic Raspberries',\n","  'Organic Whole Strawberries',\n","  'Organic Raw Kombucha Gingerade',\n","  'Premium Epsom Salt',\n","  'Sparkling Water',\n","  'Organic Mini Sandwich Crackers Cheddar Cheese',\n","  '100% Raw Coconut Water',\n","  'Romaine Hearts',\n","  'Lemon Verbena Dish Soap',\n","  'Organic Chicken Strips',\n","  'Organic Rooibos Tea',\n","  'Organic Garbanzo Beans No Salt Added',\n","  'Organic Orange Bell Pepper',\n","  'Sprouted Whole Wheat Bread',\n","  'Chicken Noodle Soup',\n","  'Lemon Natural Dishwasher Detergent Gel',\n","  'Organic Aged Earl Grey Tea',\n","  'Naturally Smoked Oysters in Pure Olive Oil',\n","  'Black Elderberry Syrup'],\n"," ['Multi Grain Waffles',\n","  'Italian Salad Blend',\n","  'Cheese Ravioli with Sauce Bowls',\n","  'On the Go Lemon Iced Tea Drink Mix',\n","  'Cheesy Rice & Broccoli Steamers',\n","  'Steamers Antioxidant Vegetable Blend',\n","  'Steamers Roasted Red Potatoes & Green Beans',\n","  'Oat Fit Maple & Brown Sugar Instant Oatmeal'],\n"," ['Organic Hass Avocado',\n","  'Organic Butterhead (Boston, Butter, Bibb) Lettuce',\n","  'Organic Whole Milk',\n","  'Organic Sour Cream',\n","  'Organic Heavy Whipping Cream',\n","  'Parsley, Italian (Flat), New England Grown',\n","  'Organic Extra Large Brown Eggs',\n","  'Dill Weed'],\n"," ['Natural Spring Water', 'Small Curd Lowfat 2% Milkfat Cottage Cheese'],\n"," ['Sparkling Water Grapefruit',\n","  'Lime Sparkling Water',\n","  'Peach Pear Flavored Sparkling Water'],\n"," ['Romaine Lettuce',\n","  'Pita Pocket Bread',\n","  'Falafel',\n","  'Olde Venice Italian Dressing'],\n"," ['Roma Tomato',\n","  'Romaine Lettuce',\n","  'Turkey',\n","  'Organic Alfalfa Sprouts',\n","  'Bread, Jewish Rye',\n","  'Mild Cheddar Shredded Natural Cheddar Cheese Traditional Cut'],\n"," ['Flat Parsley, Bunch',\n","  'Organic Garlic',\n","  'Honeycrisp Apple',\n","  'Organic Whole Milk',\n","  'Organic Avocado',\n","  'Whole Milk Plain Yogurt',\n","  'Grape White/Green Seedless',\n","  'Organic Broccoli',\n","  'Organic Frozen Peas',\n","  'Organic Unsalted Butter',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Thin Spaghetti No 11',\n","  'Organic Sea Salt Roasted Seaweed Snacks',\n","  'Organic Apple Chicken Sausage',\n","  'Mediterranean Mint Gelato',\n","  'Sesame Whole Wheat Crackers',\n","  'Wild Blend Rice',\n","  'Fire Roasted Crushed Tomatoes',\n","  'Milk and Cookies Ice Cream'],\n"," ['Cucumber Kirby',\n","  'Marinara Pasta Sauce',\n","  'Roma Tomato',\n","  'Organic Whole Milk',\n","  'Organic Avocado',\n","  'Fresh Ginger Root',\n","  'Organic Original Hommus',\n","  '1% Lowfat Milk',\n","  'Sweet Potatoes',\n","  'A+ Cinnamon Sweet Potato Pancakes',\n","  'Organic Extra Firm Cubed Tofu'],\n"," ['Sparkling Water Grapefruit',\n","  '100% Raw Coconut Water',\n","  'Free & Clear Unscented Baby Wipes',\n","  'Toasted Coconut Almondmilk Blend',\n","  'Dark with 70% Cacao Content Organic Chocolate Bar',\n","  'Tulsi Holy Basil Sweet Rose Infusion Bags 18 Count',\n","  '2-Ply 100% Recycled White Facial Tissues',\n","  'Golden Milk Supplement',\n","  'Lavender Hand Sanitizer Wipes',\n","  'Ghee',\n","  'Sourdough Whole Grain Crispbread',\n","  'Ethiopia Limu Gale Kemise Medium Roast Coffee'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Pure Irish Butter',\n","  'Large Lemon',\n","  'Organic Baby Spinach',\n","  'Creamy Almond Butter',\n","  'Organic Milk',\n","  'Macaroni & Cheese',\n","  'Yellow Onions',\n","  'Grated Parmesan Cheese',\n","  'Parmesan Garlic Pita Chips',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Organic Cannellini Beans',\n","  'Organic Multigrain Waffles',\n","  'Organic Frosted Flakes Cereal',\n","  'Original Recipe Rice Pudding',\n","  'Ice Cream Sandwiches Vanilla'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Roma Tomato',\n","  'Organic Small Bunch Celery',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Organic Honey Sweet Whole Wheat Bread',\n","  'Pineapple Chunks',\n","  'Four Cheese Pasta Sauce',\n","  'Organic Navel Orange',\n","  'Whole Chia Seeds',\n","  'Organic Mango Chunks',\n","  'Crunchy Peanut Butter Energy Bar',\n","  'Chocolate Chip',\n","  'Instant Oatmeal Variety Pack',\n","  'Blueberry Crisp Energy Bar',\n","  'Goat Cheese and Roasted Tomato Mezzelune Pasta',\n","  'Goji Berries, Certified Organic'],\n"," ['Large Lemon',\n","  'Organic Broccoli Crowns',\n","  'Organic Plain Whole Milk Yogurt',\n","  'Organic Dill'],\n"," ['Bag of Organic Bananas',\n","  'Organic Baby Arugula',\n","  'Garlic',\n","  'Organic Whole Milk',\n","  'Boneless Skinless Chicken Breasts',\n","  'Meyer Lemons',\n","  'Crushed Tomatoes',\n","  'Organic Blackberries',\n","  'Organic Creamy Peanut Butter',\n","  'Yoghurt Blueberry',\n","  'Mini Original Babybel Cheese',\n","  'Natural Anticavity Silly Strawberry Fluoride Toothpaste for Children',\n","  'Cheese Square Crackers',\n","  '80% Lean Ground Beef',\n","  'Sourdough Loaf',\n","  'Organic White Basmati Rice',\n","  'Organic Capellini',\n","  'Organic Hazelnut Spread',\n","  'Corn Starch',\n","  'Italian Blend Shredded Cheese',\n","  'Cream Soda'],\n"," ['Tomato Paste'],\n"," ['Clementines, Bag',\n","  '2% Reduced Fat Organic Milk',\n","  'Flaky Biscuits',\n","  'Buttermilk Biscuits',\n","  'Organic Avocado',\n","  'Sparkling Water Grapefruit',\n","  'Authentic French Brioche',\n","  'White Onion',\n","  'Organic Whole White Mushrooms',\n","  'Organic White Cheddar Popcorn',\n","  'Tomato Sauce With Basil'],\n"," ['Light Cream'],\n"," ['Chocolate Chip Cookies',\n","  'Red Delicious Apple',\n","  'Gluten Free Brown Rice Bread',\n","  'Organic Crunchy Peanut Butter',\n","  'Ginger Cookie',\n","  'Green Bananas',\n","  'Organic Breakfast Blend Coffee'],\n"," ['Roasted Turkey',\n","  'Organic Granny Smith Apple',\n","  'Vanilla Almond Fit Granola',\n","  'Organic Macaroni Shells & Real Aged Cheddar',\n","  'Organic Lowfat French Vanilla Yogurt',\n","  'Pesto Tortellini  Bowls',\n","  'Original Cheddar CheeseSticks'],\n"," ['Gala Apples',\n","  'Paper Towels',\n","  'Sparkling Natural Spring Water',\n","  'Ice Bag',\n","  'Original Clean-Up Cleaner with Bleach Original',\n","  'Shower Tub & Tile Cleaner with Oxy Clean'],\n"," ['Zero Calorie Cola', 'Organic Simply Naked Pita Chips'],\n"," ['Bunched Cilantro',\n","  'Organic Strawberries',\n","  'Organic 2% Reduced Fat Milk',\n","  'Limes',\n","  'Oven Roasted Turkey Breast',\n","  'Cantaloupe',\n","  'Sparkling Natural Mineral Water',\n","  'Serrano Chile Peppers',\n","  'Organic Tomato Cluster',\n","  \"Organic D'Anjou Pears\",\n","  'Sweet Potato Yam',\n","  'Unscented Liquid Laundry Detergent',\n","  'Original Black Bean with Sea Salt Bean Chips',\n","  '100% Natural Tomato Sauce',\n","  'Mini Original Babybel Cheese',\n","  'Deluxe Plain Bagels',\n","  'Nonfat Probiotic Drinks',\n","  'Avocado Oil',\n","  'Organic Zucchini Squash',\n","  'Organic Bread with 21 Whole Grains',\n","  'Country Stand Juice, Medium Pulp',\n","  'Grade A Large Brown Eggs',\n","  'Extra Long Grain Enriched Rice',\n","  '3 lb Clementines',\n","  'Bits Cheese Cracker Sandwiches',\n","  'Beef Franks',\n","  'Ultra  April Fresh Scent Liquid Fabric Softener',\n","  'Tomatillo',\n","  'Limone Flavored Potato Chips',\n","  'Chicken Noodle Condensed Soup',\n","  'Double Stuf Chocolate Sandwich Cookies Family Size',\n","  'Original Chocolate Chip Cookies',\n","  '100% Juice Apple Juice, No Sugar Added',\n","  \"Cookies 'n Cream with Oreo Cookie Pieces Lowfat Yogurt\",\n","  'Natural Butter Flavor Lite Maple Syrup',\n","  'Crema Mexicana',\n","  'Organic Whole Carrots',\n","  '& Go! Hazelnut Spread + Pretzel Sticks',\n","  'European Style Salted Butter Sticks',\n","  'Xtra Cheddar + Pretzel Baked Snack Crackers',\n","  'Unstopables Lush',\n","  'Roasted Chicken'],\n"," ['Orange Juice',\n","  'Vegetable Fried Rice',\n","  'Ezekiel 4:9 Bread Organic Sprouted Whole Grain',\n","  'Peppered Deli Slices',\n","  'Smoked Apple Sage Sausages',\n","  'Apricot Preserves',\n","  'The Ultimate Beefless Burger',\n","  'Pineapple Coconut Water',\n","  'Vanilla Non Dairy Frozen Dessert Minis',\n","  '9 Inch Plates',\n","  'Peanut Butter',\n","  'Home Style Beefless Tips',\n","  'Original Vegenaise Better Than Mayo'],\n"," ['Plain Greek Yogurt',\n","  'Natural Provolone Cheese Slices',\n","  'Traditional Italian-Style Wedding Soup',\n","  'Baby Kale Mix',\n","  '13 Gallon Drawstring Tall Kitchen Bags'],\n"," ['Natural Spring Water', 'Versatile Stain Remover', 'Allergy Tablets'],\n"," ['Cinnamon Rolls with Icing'],\n"," ['Guacamole', 'Jalapeno Hummus', 'Chicken Tortilla Soup', 'Chipotle Salsa'],\n"," ['Organic Bakery Hamburger Buns Wheat - 8 CT',\n","  'Ground Turkey Breast',\n","  'Boneless Skinless Chicken Breasts',\n","  'Sparkling Natural Mineral Water',\n","  'Sparkling Orange Juice & Prickly Pear Beverage',\n","  'Arancita Rossa',\n","  'Organic 1% Low Fat Milk',\n","  'Macaroni & Cheese',\n","  'Total 0% Nonfat Plain Greek Yogurt',\n","  'Chocolate Milk 1% Milkfat',\n","  'Diced Red Onions',\n","  'Organic Green Butter Lettuce'],\n"," ['Fresh Dill',\n","  'Banana',\n","  'Green Beans',\n","  'Natural Vanilla Ice Cream',\n","  'Jalapeno Peppers'],\n"," ['Organic Black Beans',\n","  'Traditional Refried Beans',\n","  'Leaf Spinach',\n","  'Sparkling Mineral Water',\n","  'Steak Strips'],\n"," ['I Heart Baby Kale',\n","  'Organic Large Brown Eggs',\n","  'Fluoride-Free Antiplaque & Whitening Peppermint Toothpaste',\n","  'Organic Tomato Cluster',\n","  'Sweet Onion',\n","  'Organic Broccoli',\n","  'Zero Calorie Orange Soda',\n","  'Pure Lemon Juice',\n","  'Jalapeno Nacho Slices, Mild'],\n"," ['Limes',\n","  'Cola',\n","  'Cola Soft Drink',\n","  'Slim Can Pink Grapefruit Natural Mineral Water',\n","  'Low-Fat Strawberry Banana on the Bottom Greek Yogurt',\n","  'Simply 100® Blueberry Blended Non-Fat Greek Yogurt'],\n"," ['Bag of Organic Bananas',\n","  'Spring Water',\n","  'Organic Cucumber',\n","  'Organic Blueberries',\n","  'Organic Yellow Onion',\n","  'Organic Zucchini',\n","  'Large Lemon',\n","  'Organic Carrot Bunch',\n","  'Limes',\n","  'Organic Whole Milk',\n","  'Globe Eggplant',\n","  'Angel Hair Pasta',\n","  'Organic Grade A Large Brown Eggs',\n","  'Organic Bosc Pear',\n","  'Lowfat Milk',\n","  'Organic Sunday Bacon',\n","  'Organic Old Fashioned Rolled Oats',\n","  'Organic Whole Wheat Bread',\n","  'Italian Sparkling Mineral Water',\n","  'Rigatoni Pasta',\n","  'Organic Butternut Squash',\n","  'Organic Plain Whole Milk Yogurt',\n","  'Organic Diced Tomatoes',\n","  'Organic Golden Delicious Apple',\n","  'Simply White Natural Clean Mint Fluoride Toothpaste',\n","  'Lettuce Red Butter Organic',\n","  '3 lb Clementines',\n","  'Peach-Pear Sparkling Water',\n","  'GOLEAN Crunch! Cereal',\n","  'Sweet Orange Vanilla Honest Shampoo + Body Wash',\n","  'No Sugar Added Muesli Cereal',\n","  'Organic Chamomile with Lavender Herbal Tea Bags',\n","  'Dishmate Lavender DIsh Liquid',\n","  'Barolo Salami',\n","  \"Gluten Free Vegan Not-Chick'n Natural Bouillon Cubes\",\n","  'Organic & Fair Trade Certified Earl Grey Tea Bags'],\n"," ['Bag of Organic Bananas',\n","  'Organic Baby Spinach',\n","  'Organic Avocado',\n","  'Unsweetened Vanilla Almond Milk',\n","  'Organic Navel Orange',\n","  'Gluten Free Whole Grain Bread',\n","  'Organic Creamy Peanut Butter',\n","  'Organic Golden Round Crackers',\n","  'Grassmilk 2% Reduced Fat Milk',\n","  'YoKids Blueberry & Strawberry/Vanilla Yogurt'],\n"," ['Organic Bartlett Pear',\n","  'Organic Butterhead (Boston, Butter, Bibb) Lettuce',\n","  'Bartlett Pears',\n","  'Blackberries',\n","  'Cantaloupe',\n","  'Organic Red Onion',\n","  'Organic Broccoli',\n","  'Heavy Whipping Cream',\n","  'Red Grapefruit',\n","  'Blood Oranges',\n","  'Organic Whipped Naturally Buttery Spread',\n","  'Key Lime Pie Gelato',\n","  'Whole Wheat English Muffins',\n","  'Small Macintosh Apple',\n","  'Low Fat, Small Curd 1% Milkfat No Salt Added Cottage Cheese',\n","  'Raspberry Chocolate Chip Gelato',\n","  'Hearty Crispbread',\n","  'Purple Cauliflower'],\n"," ['Cola Soft Drink'],\n"," ['Bag of Organic Bananas',\n","  'Sparkling Water Grapefruit',\n","  'Original English Muffins',\n","  'Organic Kiwi',\n","  'Lavender Hand Soap',\n","  'The Original Multi Grain Bread',\n","  'GOLEAN Crunch! Cereal',\n","  'Daily Moisturizing Lotion'],\n"," ['Organic Whole Milk',\n","  'Raspberry Lemonade',\n","  'Organic Yukon Select Fries',\n","  'Organic Strawberry Lemonade',\n","  'Garlic Bread',\n","  'Zero Calorie Half Green Tea & Half Lemonade'],\n"," ['Cucumber Kirby',\n","  'Organic Grape Tomatoes',\n","  'Organic Garlic',\n","  'Organic Lemon',\n","  'Organic Baby Spinach',\n","  'Organic Small Bunch Celery',\n","  'Organic Avocado',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Fat Free Milk',\n","  'Corn Tortillas',\n","  'Organic Romaine Hearts',\n","  'Organic Medium Salsa',\n","  'Monterey Jack Cheese',\n","  'Organic Vegetable Broth',\n","  'Organic Gluten Free Fusilli',\n","  'Gluten-Free Supergrain Pasta Elbows'],\n"," ['Premium Unsweetened Iced Tea', 'Wastebasket Liners'],\n"," ['Cucumber Kirby',\n","  'Organic Whole String Cheese',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Banana',\n","  'Strawberries',\n","  'Large Lemon',\n","  'Organic Turkey Bacon',\n","  'Shredded Parmesan',\n","  'Organic Bell Pepper',\n","  'Organic Chicken & Apple Sausage',\n","  'Reduced Fat Milk 100% Lactose Free',\n","  'Orange Bell Pepper',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Organic Bread with 21 Whole Grains',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Feta Crumbles Cheese'],\n"," ['Organic Strawberries',\n","  'Banana',\n","  'Shallot',\n","  'Sparkling Water Grapefruit',\n","  'Boneless Skinless Chicken Breasts',\n","  'Feta Cheese Crumbles',\n","  'Wild Arugula Salad'],\n"," ['Organic Garlic',\n","  'Organic Lemonade',\n","  'Green Bell Pepper',\n","  '90% Lean Ground Beef',\n","  'White Onion',\n","  'Pure Premium Orange Juice Lots Of Pulp Calcium + Vitamin D',\n","  'Direct Trade El Diablo Dark Roast Whole Bean Coffee'],\n"," ['Organic Stringles Mozzarella String Cheese',\n","  'Baby Spinach',\n","  'Banana',\n","  'Large Lemon',\n","  'Organic Carrot Bunch',\n","  'Organic Avocado',\n","  'Organic Reduced Fat 2% Milk',\n","  'Watermelon Chunks',\n","  'Honeycrisp Apples',\n","  'Organic Red Onion',\n","  'Original Pure Creamy Almond Milk',\n","  'All Natural Chicken Drumsticks',\n","  'Wild Sockeye Salmon',\n","  'Grade A Goat Milk',\n","  'Pasture Raised Eggs',\n","  'Cashew Cookie'],\n"," ['Granny Smith Apples',\n","  'Frozen Broccoli Florets',\n","  'Organic Fire Roasted Corn',\n","  'Organic Basmati Rice',\n","  'Cut Okra',\n","  'Farmhouse Mac & Cheese',\n","  'Curry Tiger Burrito',\n","  'Pomegranate Italian Soda'],\n"," ['Bag of Organic Bananas',\n","  'Organic Baby Arugula',\n","  'Strawberries',\n","  'Red Vine Tomato',\n","  'Lactose Free 2% Reduced Fat Milk',\n","  'Emmentaler Swiss Slices',\n","  'Ginger Ale',\n","  'Coconut Almond Minis Frozen Dessert Bars',\n","  'Hickory Smoked Turkey Breast',\n","  'Minis, Coconut Milk, Non-Dairy Frozen Dessert, no sugar added Vanilla Bar'],\n"," ['Organic Celery Hearts',\n","  'Bag of Organic Bananas',\n","  'Little Yums Spinach, Apple, and Kale Teething Wafers',\n","  'Little Yums Pumpkin and Banana Teething Wafers'],\n"," ['Bag of Organic Bananas',\n","  'Organic Grape Tomatoes',\n","  'Honeycrisp Apple',\n","  'Organic Baby Spinach',\n","  'Bartlett Pears',\n","  'Organic Spring Mix',\n","  'Whole Milk',\n","  'Dry Rubbed Thick Sliced Pork Bacon',\n","  'Berry Medley',\n","  'Coffee Ice Cream',\n","  'Jalapeno Potato Chips',\n","  'Mediterranean Mint Gelato',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Grassfed Whole Milk Plain Yogurt',\n","  'Peppered Turkey Jerky',\n","  'Avocado Oil Himalayan Salt Chips'],\n"," ['CleanCare 1-Ply Double Rolls Toilet Paper',\n","  'Chicken Taquitos',\n","  'Fresh Ground Turkey',\n","  'Eggo Cinnamon Toast Waffles',\n","  'Stuffed Peppers',\n","  'Chunky Salsa Medium',\n","  'Reclosable Sandwich Bags'],\n"," ['Roasted Seaweed Snacks',\n","  'Unsweetened Watermelon Water',\n","  'Dark Chocolate Nuts & Sea Salt Bars',\n","  'Water, Unsweet, Crisp Apple',\n","  'Unsweetened Blackberry Water'],\n"," ['Organic Hot Salsa',\n","  'Soft Taco Size White Flour Tortillas',\n","  'Mexican Finely Shredded Cheese',\n","  'Organic Unsweetened Black Tea'],\n"," ['Bag of Organic Bananas',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Baby Spinach',\n","  'Organic Roma Tomato',\n","  'Organic Red Potato',\n","  'No Salt Added Black Beans',\n","  'Original Hummus',\n","  'Multi-Grain Sea Salt Crackers',\n","  'Seven Grain Crispy Tenders',\n","  'Organic Broccoli Crowns',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Total Greek Strained Yogurt',\n","  'Cream On Top Vanilla Organic Yogurt',\n","  'Classic Mild Cheddar Macaroni & Cheese'],\n"," ['Clementines', 'Trail Mix', 'Dried Mangos', 'Reduced Fat 2% Milk'],\n"," ['Extra Virgin Olive Oil',\n","  'Grapefruit Sparkling Water',\n","  'Dry Mouth Oral Rinse',\n","  'Calm Chamomile Herbal Tea',\n","  'Ultra Moisture Beauty Bars',\n","  'Pink Grapefruit Foaming Scrub'],\n"," ['Organic Zucchini',\n","  'Banana',\n","  'Garlic',\n","  'Small Hass Avocado',\n","  'Red Vine Tomato',\n","  'Organic Whole Milk',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Romaine',\n","  'Whole Milk Ricotta Cheese',\n","  'Yellow Onions',\n","  'California Black Bread',\n","  'Spicy Red Radish Kimchi'],\n"," ['Mineral Water', 'Beef Dinner Franks'],\n"," ['Bag of Organic Bananas',\n","  'Organic Garlic',\n","  'Organic Yellow Onion',\n","  'Organic Small Bunch Celery',\n","  'Water',\n","  'Ground Buffalo',\n","  'Distilled Water',\n","  'French Loaf',\n","  'English Breakfast'],\n"," ['Organic Biologique Limes',\n","  'Broccoli Crown',\n","  'Honeycrisp Apple',\n","  'Organic Baby Spinach',\n","  'Organic Roma Tomato',\n","  'Organic Whole Milk',\n","  'Bartlett Pears',\n","  'Organic Russet Potato',\n","  'Jalapeno Peppers',\n","  'Premium Pure Cane Granulated Sugar',\n","  'Green Seedless Grapes',\n","  'Strawberry Fruit Spread',\n","  'Plain Whole Milk Yogurt'],\n"," ['Sustainably Soft Bath Tissue',\n","  'Watermelon Chunks',\n","  'Sparkling Water Grapefruit',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Organic Turkey Burgers',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Cedarwood Body Wash',\n","  'Organic Smoked Chicken Breast',\n","  'Pouf Bath Sponge'],\n"," ['Disinfecting Wipes, Lemon',\n","  '100% Recycled White Paper Towels',\n","  'Peach Yoghurt',\n","  'Key Lime Yoghurt',\n","  'Healthy Grains Oats & Honey Clusters with Toasted Coconut Gluten Free',\n","  'Intense Dark Chocolate with Sea Salt & Roasted Almonds',\n","  'Unscented Bathroom Tissue',\n","  'Cajun Andouille Smoked Pork Sausage',\n","  'Lemon Seltzer',\n","  'Ultra Apple Blossom Antibacterial Dish Liquid',\n","  'Abundant Apricot Fruit Strip',\n","  'Coconut Almond Protein Chewy Bars',\n","  'Small Trash Bags',\n","  'Sweet & Spicy Turkey'],\n"," ['Real Mayonnaise',\n","  'Asparation/Broccolini/Baby Broccoli',\n","  'Heavy Whipping Cream',\n","  '2% Reduced Fat Milk',\n","  'Shredded Parmesan Cheese',\n","  'Unsalted Chicken Stock',\n","  'Cinnamon Chex',\n","  'Natural Bliss Cinnamon Cream Coffee Creamer',\n","  'Unsweetened Green Tea',\n","  'Caramel Flavored Ice Cream Sauce',\n","  'Gelato Indulgences Chocolate Caramel'],\n"," ['Organic Celery Hearts',\n","  'Bag of Organic Bananas',\n","  'Asparagus',\n","  'Organic Raw Kombucha Gingerade',\n","  'Organic Garlic',\n","  'Organic Yellow Onion',\n","  'Organic Zucchini',\n","  'Pure Irish Butter',\n","  'Organic Carrot Bunch',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Heavy Whipping Cream',\n","  'Mountain Spring Water',\n","  'Margherita Pizza',\n","  'Original Enriched Rice Drink',\n","  'Organic White Mushrooms',\n","  'Strawberry Licorice Twist'],\n"," ['Organic Blueberries', 'Chocolate Chip Cookies', 'Trail Mix', 'Pistachios'],\n"," ['Large Alfresco Eggs',\n","  'Large Lemon',\n","  'Organic Baby Spinach',\n","  'Limes',\n","  'Organic Avocado',\n","  'Organic Stoneground Flakes Cocoa Clusters Cereal',\n","  'Organic Strawberry Lemonade Fruit Juice Drink',\n","  'Organic Cinnamon Crunch Cereal',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  \"Organic Honey Nut O's Cereal\",\n","  'Organic Old Fashioned Rolled Oats',\n","  'Grain Free Chicken Formula Cat Food',\n","  'Organic Reduced Fat 2% Cottage Cheese',\n","  'Sweet Greens and Lemon Vegetable and Fruit Juice Blend',\n","  'Organic Green Lemonade'],\n"," ['Organic Garnet Sweet Potato (Yam)',\n","  'Organic Baby Arugula',\n","  'Organic Raspberries',\n","  'Organic Strawberries',\n","  'Clementines, Bag',\n","  'Banana',\n","  'Large Lemon',\n","  'Organic Baby Carrots',\n","  'Michigan Organic Kale',\n","  'Bartlett Pears',\n","  'Green Bell Pepper',\n","  'Organic Roasted Turkey Breast',\n","  'Blackberries',\n","  'Creamy Almond Butter',\n","  'Yellow Bell Pepper',\n","  'Total 0% Greek Yogurt',\n","  'Organic Jalapeno Pepper',\n","  'Organic Eggs Large',\n","  'Yellow Onions',\n","  'Slices Cheddar Cheese',\n","  'Beyond Beef Beefy Crumble',\n","  'Organic Green Onions',\n","  'Firm Tofu',\n","  'Organic Baby Spinach Salad',\n","  'Soy Free Buttery Spread',\n","  'Organic Brown Rice Cake Salt-Free',\n","  'Medium Salsa',\n","  'Organic Soft Wheat Bread',\n","  'Hand Picked Pomegranate Seeds/Arils',\n","  'Beyond Chicken Grilled Strips'],\n"," ['Bag of Organic Bananas',\n","  'Organic Raw Kombucha Gingerade',\n","  'Shredded Mild Cheddar Cheese',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Avocado',\n","  'Organic Grade A Large Brown Eggs',\n","  'Lime Sparkling Water',\n","  'Classic Almond Butter',\n","  'Cold Brew Coffee Nitro Can',\n","  'Gluten Free Cheddar Macaroni & Cheese Rice Pasta',\n","  'Barista Blend Pure Almond Milk',\n","  'Organi Cheddar Cheese Mild sliced',\n","  'Coconut Water, Pure Organic',\n","  'Slider Storage Quart Bags',\n","  'Double Zipper Gallon Storage Bags',\n","  'Gluten Free Multigrain Baked Crackers',\n","  'Coconut Water & Pineapple Fruit',\n","  'Organic & Raw Grape Kombucha',\n","  'Honey Roasted Almonds',\n","  'Honey Almond Butter W/ Pretzels'],\n"," ['Organic Cucumber',\n","  'Banana',\n","  'Celery Hearts',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Honey Nut Cheerios',\n","  'Vitamin D Organic Whole Milk',\n","  'Organic Romaine Hearts',\n","  'Cheddar Bunnies Snack Crackers',\n","  'Organic Super Fruit Punch Juice Drink',\n","  'Unsalted Butter',\n","  'Gluten Free Sliced Mountain White Bread',\n","  'Organic Pumpkin',\n","  'Organic Blackberries',\n","  'Mandarin Clementine  Bag',\n","  'Sweet Corn On The Cob',\n","  'Apple Sauce',\n","  '100% Whole Wheat',\n","  'Lightly Salted Rice Cakes',\n","  '100% Lactose Free 1% Lowfat Milk'],\n"," ['Organic Raspberries',\n","  'Guacamole',\n","  'Pizza Poppers, Three Cheese',\n","  'Original Semisoft Cheese',\n","  'Organic White Cheddar Popcorn',\n","  'Carrot Cake Slice',\n","  'Acorn Squash'],\n"," ['Organic Cucumber',\n","  'Carrots',\n","  'Green Beans',\n","  'Garlic',\n","  'Total 2% Lowfat Greek Strained Yogurt With Blueberry',\n","  'Sweet Onions',\n","  'Organic Brown Rice',\n","  'Organic Romaine Leaf',\n","  'Broccoli Florets',\n","  'Organic Southwestern Burrito',\n","  'Solid White Albacore Tuna In Spring Water',\n","  '100% Natural Spring Water',\n","  'Miso Soup',\n","  'Lavender Dish Soap',\n","  'Cara Cara Navel Orange'],\n"," ['Banana',\n","  'Organic Cilantro',\n","  'Small Hass Avocado',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Red Vine Tomato',\n","  'Unsweetened Almondmilk',\n","  'Organic Whole Wheat Tortillas'],\n"," ['Diet Cola',\n","  'Iceberg Lettuce',\n","  'Sweet Peas',\n","  'Honey Ham',\n","  'Light Multi-Grain English Muffins',\n","  'Iodized Salt',\n","  'Deli Sliced Sharp Cheddar Cheese',\n","  'Classic Yellow Mustard',\n","  'Chicken Drumsticks',\n","  'Milk Chocolate Nuggets',\n","  'Red Onions',\n","  'Liquid Water Enhancer Orange Tangerine',\n","  'Hard Candy Original Flavors Candy'],\n"," ['Pure Irish Butter',\n","  'Organic Extra Firm Tofu',\n","  'Lemon Hummus',\n","  'Organic Soy Tempeh',\n","  'Garlic Hummus',\n","  'Real Vegetable Chips Spiced Sweets'],\n"," ['Cucumber Kirby',\n","  'Fat Free Milk',\n","  'Golden Sweet Potato',\n","  'Fresh Cut Baby Carrots',\n","  'Popped Sea Salt Wheat Thins'],\n"," ['Organic Blueberries',\n","  'Organic Baby Spinach',\n","  'Pink Lady Apples',\n","  'Cereal',\n","  'Organic Blackberries',\n","  'Organic Fresh Mozzarella'],\n"," ['Bag of Organic Bananas',\n","  'Hass Avocados',\n","  'Alpine Spring Water',\n","  'Organic Wheat-Free & Gluten-Free Original Crackers',\n","  'Prunes & Oatmeal',\n","  'Pepper Greens',\n","  'Vegetable Turkey Dinner Stage 2',\n","  'Organic Stage 1 First Sweet Potatoes',\n","  'Organic Stage 1 First Peas Baby Food',\n","  'Fresh Ciliegine Mozzarella Cheese',\n","  'Organic Stage 2 Chicken Brown Rice Baby Food',\n","  'Apples & Blueberries Stage 2 Baby Food',\n","  'First Carrots Baby Food',\n","  'Stage 1 First Apples'],\n"," ['Bag of Organic Bananas',\n","  'Organic Unsweetened Almond Milk',\n","  'Organic Garlic',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Strawberries',\n","  'Organic Red Bell Pepper',\n","  'Organic Carrot Bunch',\n","  'Organic Avocado',\n","  'Walnut Halves & Pieces',\n","  'Organic Medium Salsa',\n","  'Italian Extra Virgin Olive Oil',\n","  'Organic Broccoli',\n","  'Organic Frozen Peas',\n","  'Ezekiel 4:9 Bread Organic Sprouted Whole Grain',\n","  'Organic Chives',\n","  'Sprouted Sunflower Seeds',\n","  'Original Soy Milk',\n","  'Dairy-Free Chive Cream Cheese',\n","  'Almond Milk Ricotta',\n","  'Organic Crushed Red Pepper',\n","  'Mellow White Miso',\n","  'Parmesan Cheese Shreds',\n","  'Organic Silken Tofu',\n","  'Low Sodium Refried Black Beans',\n","  'Organic Traditional 9\\\\\" Pie Shells 2 ct',\n","  'Vegan Apple Maple Breakfast Sausage',\n","  'Cheese Alternative Shreds, Mozzarella',\n","  'Organic Cashew Nondairy Blueberry Yogurt',\n","  'Organic Nondairy Strawberry Cashew Yogurt',\n","  'Organic Vegan Sundried Tomato Nut Cheese',\n","  'Provolone Style Slices',\n","  'Vegan Butter',\n","  'Bacon Seitan',\n","  'Ezekial 4:9 Organic Sprouted Blueberry Waffles'],\n"," ['Bag of Organic Bananas',\n","  'Clementines',\n","  'Old Fashioned Oatmeal',\n","  'Fresh Asparagus',\n","  'Non Fat Greek Yogurt'],\n"," ['Icelandic Style Skyr Blueberry Non-fat Yogurt',\n","  'Nonfat Icelandic Style Strawberry Yogurt',\n","  'Yellow Nectarines',\n","  'Broccoli Carrots Sugar Snap Peas & Water Chestnuts',\n","  'Half Tea & Half Lemonade'],\n"," ['Banana',\n","  'Organic 2% Reduced Fat Milk',\n","  'Diet Cola',\n","  'Red Delicious Apple',\n","  'Fat Free French Vanilla Creamer'],\n"," ['Russet Potato',\n","  'Sharp Cheddar Cheese',\n","  'Strawberry on the Bottom Nonfat Greek Yogurt',\n","  'Baked Snack Crackers Original',\n","  'Boneless Skinless Chicken Breast Fillets',\n","  'Thin Spaghetti Pasta',\n","  'Chocolate Ice Cream',\n","  'Reduced Fat 2% Milk',\n","  'Shredded Parmesan Cheese',\n","  'Premium Italian Bread',\n","  'Bathroom Tissue Softness & Strength, Double Rolls',\n","  'Family Size Cookie Pack',\n","  'Simple Favorites Chicken Fettuccini Frozen Entree',\n","  'Old World Style Organic Traditional Pasta Sauce',\n","  'Medium Roast Original Blend Ground Coffee',\n","  'Salted Caramel Core Ice Cream',\n","  'Tater Tots',\n","  'Cucumber and Green Tea Body Wash',\n","  'Classic Tender Beef Feast Cat Food',\n","  'Deluxe Beef Stroganoff Hamburger Helper',\n","  'Grilled white meat chicken in an apple reduction with cranberries, French cut green beans & carrots and whole wheat orzo pasta. Apple Cranberry Chicken',\n","  'Gravy Lovers Chicken Feast Can Cat Food'],\n"," ['Organic Blueberries', 'Organic Strawberries'],\n"," ['Strawberries',\n","  'Creamy Peanut Butter',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Seedless Red Grapes',\n","  'Ranch Dressing',\n","  'Baby Carrots',\n","  'Original Syrup',\n","  'Tomato Ketchup',\n","  'Reduced Fat Milk 100% Lactose Free',\n","  'Fridge Pack Cola',\n","  'Celery',\n","  'Fresh Romaine Lettuce head',\n","  'Taco Seasoning Mix Original',\n","  'Classic Wheat Bread',\n","  'Jet Puffed Miniature Marshmallows',\n","  'Broccoli Bunch',\n","  \"Crunchy Oats N' Honey Granola Bars\",\n","  'Seedless Watermelon',\n","  'Light Sour Cream',\n","  'Royal Gala Apples',\n","  'Boneless & Skinless Chicken Breast',\n","  'Original Wheat Thins Crackers',\n","  'Whole Grain Oatmeal Bread',\n","  'Nacho Cheese Taco Shells',\n","  'Original Golden Grahams',\n","  'Original Steak & Chop Marinade',\n","  'Milk Chocolate Chips Baking Pieces',\n","  'Cheddar Cheese Finely Shredded',\n","  'Onion Soup & Dip Mix'],\n"," ['Large Alfresco Eggs',\n","  'Brazilian Cheese Bread Original Cheddar and Parmesan',\n","  'Organic Blueberry Waffles',\n","  'Cold-pressed, Deliciously Hydrating Watermelon Water'],\n"," ['Roma Tomato',\n","  'Cage Free Grade AA Large White Eggs',\n","  'Organic Fat Free Milk',\n","  'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale',\n","  'Organic Fiber & Protein Pear Blueberry & Spinach Baby Food',\n","  'Happy Baby Spinach, Mango, and Pear Baby Food',\n","  'Apples + Strawberries Organic Nibbly Fingers',\n","  'Organic Smoked Turkey Breast',\n","  'Pesto Tortellini  Bowls',\n","  'Pears, Kale & Spinach Organic Baby Food',\n","  'Pure Foods Sea Salt Iodized',\n","  'Low Fat Cottage Cheese',\n","  'Vegan Apple Maple Breakfast Sausage'],\n"," ['Organic Granny Smith Apple'],\n"," ['Cherubs Heavenly Salad Tomatoes',\n","  'Hardwood SmokedCenter Cut Original Bacon',\n","  'Sriracha Hot Chili Sauce',\n","  'Cola Soft Drink',\n","  'Original Potato Chips',\n","  'Ultra Soft Bathroom Tissue Double Rolls',\n","  'Donettes Frosted Mini Donuts'],\n"," ['Linguine Pasta',\n","  'Mini 8\\\\\" Italian Pizza Crusts',\n","  'Pure Cane Confectioners Powdered Sugar',\n","  'Nacho Cheese Tortilla Chips',\n","  'Baked Snack Crackers Original',\n","  'Chicken Flavor Ramen Noodle Soup',\n","  'Made with Extra Virgin Olive Oil Pesto sauce with Basil',\n","  'Strawberry Candy Twists',\n","  'Eggo Pancakes Minis',\n","  'Diet Root Beer',\n","  'Club & Cheddar Sandwich Crackers'],\n"," ['Black Plum',\n","  'Strawberries',\n","  'Golden Pineapple',\n","  'Polska Kielbasa Sausage',\n","  'Suddenly Salad Classic Pasta Kit Classic',\n","  'Mixed Vegetables',\n","  'Pineapple Strawberry Sparkling Water',\n","  'Ultra Concentrated Original Scent Dishwashing Liquid',\n","  'Light Creamy Swiss Flavor Spreadable Cheese Wedges',\n","  'Multi-Seed Rosemary + Olive Oil Crackers',\n","  'Roasted Vegetable Multi-Grain Crackers',\n","  'Stir Fry Mix',\n","  'Crunchy Granola Raisin Bran'],\n"," ['Organic Cucumber',\n","  'Organic Yellow Onion',\n","  'Large Lemon',\n","  'Large Grapefruit',\n","  'Organic Cherry Tomatoes',\n","  'Organic Dill',\n","  'Black Seedless Grapes',\n","  'Organic Peeled Garlic'],\n"," ['White Multifold Towels'],\n"," ['Organic Brussels Sprouts'],\n"," ['Bag of Organic Bananas',\n","  'Asparagus',\n","  'Organic Zucchini',\n","  'Large Alfresco Eggs',\n","  'Large Lemon',\n","  'Honeycrisp Apple',\n","  'Organic Baby Spinach',\n","  'Limes',\n","  'Small Hass Avocado',\n","  'Celery Sticks',\n","  'Baby Arugula',\n","  'Globe Eggplant',\n","  'Original Hummus',\n","  'Red Raspberries',\n","  'Sweet Onion',\n","  'Organic Lightly Salted Brown Rice Cakes',\n","  'Gluten Free Millet-Chia Bread',\n","  'Organic Broccoli Crowns',\n","  'Italian Sparkling Mineral Water',\n","  'Organic Red Lentils',\n","  'Shiitake Mushroom',\n","  'Organic Five Spice Tofu Nuggets',\n","  'Organic Fresh Carrot Chips',\n","  'Acorn Squash',\n","  'Culinary Coconut Milk',\n","  'Organic SprouTofu Extra Firm Tofu',\n","  'Organic Gluten Free Chia Plus with Quinoa & Amaranth Waffles',\n","  'Organic Farro',\n","  'Country Peach Passion Herbal Tea',\n","  'Organic Original Tofu Veggie Burger',\n","  'Spicy Yuba Noodles',\n","  'Organic Raspberry Ginger'],\n"," ['Organic Raspberries',\n","  'Basil Pesto',\n","  'Roasted Turkey Breast',\n","  'Half & Half',\n","  'Organic Genoa Salami',\n","  'Dubliner Wedge Pre Cut Cheese',\n","  'Crispy Seasoned Potato Puffs with Roasted Garlic & Cracked Pepper',\n","  'Pineapple Chunks',\n","  'Organic Tomato Sauce',\n","  '100% Raw Coconut Water',\n","  'Tzatziki',\n","  'Pretzel Crisps Original Deli Style Pretzel Crackers',\n","  'Organic Raw Sharp Cheddar Cheese',\n","  'Dark Chocolate Peanut Butter Cups',\n","  'Organic Dark Chocolate Salted Almond Butter Cups',\n","  'Organic Sea Salt Roasted Seaweed Snacks',\n","  'Fajita-Style Grilled Chicken Breast Strips',\n","  'Organic Bagged Mini Dark Peanut Butter',\n","  'Organic Soft Wheat Bread',\n","  'Apple Cinnamon Instant Oatmeal',\n","  'Organic Yogurt Original Plain',\n","  'Indian Healing Clay',\n","  'Organic Tomato Ketchup',\n","  'Unsweetened Whole Milk Blueberry Greek Yogurt',\n","  'Pierogi & Onion',\n","  'Peanut Butter Candy Coated Nuts',\n","  'Vanilla Bite Size Wafer Cookies',\n","  'Porcini Mushroom Tortellini'],\n"," ['Asparagus',\n","  'Organic Hothouse Cucumbers',\n","  'Organic Zucchini',\n","  'Banana',\n","  'Organic Basil',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Organic Baby Broccoli',\n","  'Organic Avocado',\n","  'Marinara Sauce',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Cream Cheese Spread',\n","  'Pizza 4 Cheese',\n","  'Organic Low Sodium Chicken Broth',\n","  'Organic Snack Mix Bunnies Snack Mix, Organic',\n","  'Organic Old Fashioned Rolled Oats',\n","  'Organic Low Fat Chocolate Milk',\n","  'Organic Orzo',\n","  'Organic Edamame',\n","  'Organic Sugar Snap Peas',\n","  'Organic Medjool Dates',\n","  'Frozen Organic Strawberries',\n","  'Organic Orange Bell Pepper',\n","  'Frosted Toaster Pastries, Cherry Pomegran',\n","  'Organic Frosted Maple Brown Sugar Toaster Pastries',\n","  'Buckwheat Soba Pasta',\n","  'Mache Blend',\n","  'Lowfat Vanilla Milk',\n","  'Organic Gluten Free Maple Buckwheat Flakes',\n","  'Organic Apricot',\n","  'Dry Roasted Lightly Salted Edamame',\n","  'Organic Buckwheat Flour'],\n"," ['Organic Cucumber',\n","  'Fresh Cauliflower',\n","  'Organic Medium Brown Eggs',\n","  'Organic Cilantro',\n","  'Organic Small Bunch Celery',\n","  'Michigan Organic Kale',\n","  'Red Peppers',\n","  'Fresh Ginger Root',\n","  'Organic Granny Smith Apple',\n","  'Organic Spinach Bunch',\n","  'Organic Lactose Free 1% Lowfat Milk',\n","  'Original Classic Organic Rice Drink'],\n"," ['Frozen Whole Strawberries'],\n"," ['Bag of Organic Bananas',\n","  'Organic Grape Tomatoes',\n","  'Organic Hot Salsa',\n","  'Organic Romaine',\n","  'Sweet Onions',\n","  'White Sandwich Bread',\n","  'Grovestand Lots of Pulp Orange Juice',\n","  'Blue Eucalyptus & Lavender Natural Laundry Detergent'],\n"," ['Banana',\n","  'Organic Baby Broccoli',\n","  'Organic Spring Mix Salad',\n","  'Organic Avocado',\n","  'Organic Red Onion',\n","  'Organic Fuji Apple',\n","  'Chicken & Maple Breakfast Sausage',\n","  'Sliced Mushrooms',\n","  'Smoked Turkey Breast Slices',\n","  'Berry Medley',\n","  'Crunchy Peanut Butter',\n","  'Go Lean Cereal',\n","  'Organic Roasted Red Pepper & Tomato Soup',\n","  'Balsamic Vinaigrette',\n","  'Teriyaki Veggie Burgers'],\n"," ['Cucumber Kirby',\n","  'Bag of Organic Bananas',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Carrots',\n","  'Strawberries',\n","  'Organic Baby Spinach',\n","  'Limes',\n","  'Red Vine Tomato',\n","  'Organic Whole Milk',\n","  'Whole Wheat Bread',\n","  'ZBar Organic Chocolate Brownie Energy Snack',\n","  'Kids Organic Chocolate Chip ZBars',\n","  'Angel Hair Pasta',\n","  'Organic Granny Smith Apple',\n","  'Organic Extra Firm Tofu',\n","  'Sharp Cheddar Cheese',\n","  'White Corn',\n","  'Organic Russet Potato',\n","  'Organic Gala Apples',\n","  'Organic Kiwi',\n","  'Mild Pico De Gallo Bean and Rice Chips',\n","  'Organic Plain Kefir',\n","  'Iced Oatmeal Cookie Kid Z Bar',\n","  'Skillet Refried Red Beans Sautéed With Onion & Tomatillo',\n","  'Organic Blueberry Waffles',\n","  'Uncured Slow Cooked Ham',\n","  'Rosemary Olive Oil Bread',\n","  'Red Chard Greens Bunch'],\n"," ['Organic Strawberries',\n","  'Cream Top Smooth & Creamy Vanilla Yogurt',\n","  'Limes',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Banana',\n","  'Organic Fuji Apple',\n","  'Gluten Free Pretzel Twists',\n","  'Organic Dark Chocolate Peanut Butter Cups',\n","  'Gluten Free Whole Grain Bread',\n","  'Organic Golden Delicious Apple',\n","  'Panda Puffs Peanut Butter Cereal',\n","  'Original Gluten Free Spring Rolls',\n","  'Shoestring Fries',\n","  'EnviroKidz Gluten Free & Wheat Free Gorilla Munch Corn Puff Cereal',\n","  'Cream Top Strawberry on the Bottom Yogurt',\n","  'Hand Soap Lavender & Coconut',\n","  'Gluten Free Panko Breadcrumbs',\n","  'Pimento Martini Olives',\n","  'Flat Toothpicks',\n","  'Ziti & Meatballs',\n","  'Organic Maple Creamline Yogurt'],\n"," ['Organic Whole String Cheese',\n","  'Natural Chicken & Sage Breakfast Sausage',\n","  'Organic Whole Milk',\n","  'Grated Parmesan',\n","  'Sliced Black Olives',\n","  'Organic AppleApple',\n","  'Organic Apple Banana GoGo Squeez'],\n"," ['Organic Raspberries',\n","  'Banana',\n","  'Large Alfresco Eggs',\n","  'Strawberries',\n","  'Chocolate Chip Cookies',\n","  'Sparkling Natural Mineral Water',\n","  'Fusilli No. 34',\n","  'Almond Breeze Original Almond Milk',\n","  'Mandarin Clementine',\n","  'Vegan Oatmeal Chocolate Chip Cookies',\n","  'Muffins, Mini, Flax, Chocolate Brownie',\n","  'Vegan Garlic & Roasted Veggie Ravioli',\n","  'Meyer Lemon Miracle Tart',\n","  'Sunday Pot Roast Slow Cook Sauce'],\n"," ['Goodness Grapeness Organic Juice Drink',\n","  'Red Onion',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale',\n","  'Smartfood White Cheddar Cheese Popcorn',\n","  'Half And Half Cream',\n","  'Yellow Onions',\n","  'Kefir Cultured Strawberry Milk Drink',\n","  'Butter with Canola Oil Spread',\n","  'Organic Iced Green Tea',\n","  'Dark Chocolate Goji & Raspberry Flavors',\n","  'Cheese, Crumbles, Amish Blue',\n","  \"Coffee, Medium Roast, Dunkin' Decaf, Decaf, K-Cup Packs\",\n","  'Country Honey Whole Wheat Bread',\n","  'Coolers Pink Lemonade Pouches',\n","  'Natural Rotisserie Chicken'],\n"," ['Bag of Organic Bananas',\n","  'Organic Whole String Cheese',\n","  'Organic Strawberries',\n","  'Carrots',\n","  'Organic English Cucumber',\n","  'Oven Roasted Turkey',\n","  'Original Hummus',\n","  'Sparkling Lemon Water',\n","  'Organic Lightly Salted Brown Rice Cakes',\n","  'Organic Kiwi',\n","  'Organic Creamy Peanut Butter',\n","  'Colby Cheese Sticks',\n","  'Made With Organic Beans & Rice Burrito Non-Dairy',\n","  'Original Pure Creamy Almond Milk',\n","  'Grated Reggiano Parmigiano'],\n"," ['Bunched Cilantro',\n","  'Organic Garlic',\n","  'Organic Zucchini',\n","  'Banana',\n","  'Limes',\n","  'Organic Avocado',\n","  'Organic Granny Smith Apple',\n","  'Mild Italian Chicken Sausage',\n","  'Green Onions',\n","  'Crushed Red Pepper'],\n"," ['Organic Strawberries',\n","  'Blackberries',\n","  '100% Juice',\n","  'Cheez-It Baked Snack Crackers'],\n"," ['Banana'],\n"," ['Organic Strawberries',\n","  'Banana',\n","  'Sparkling Water Grapefruit',\n","  'Organic Fuji Apple',\n","  'Chicken & Maple Breakfast Sausage',\n","  \"Organic D'Anjou Pears\",\n","  'Unsalted Butter',\n","  'Organic Strawberry Fruit Spread',\n","  'Mini Chocolate Croissant',\n","  'Organic Strawberry Lemonade',\n","  'Appley Ever After Organic Juice Drink',\n","  'Apricot Fruit Spread'],\n"," ['Organic Yellow Onion',\n","  'Banana',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Organic Carrot Bunch',\n","  'Limes',\n","  'Michigan Organic Kale',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Ground Allspice',\n","  'Organic Thyme',\n","  'Organic Green Beans',\n","  'Organic Low Sodium Chicken Cooking Stock',\n","  'Organic Red Potatoes',\n","  'Garnet Sweet Potato (Yam)',\n","  'Orange Bell Pepper',\n","  'Organic Navel Orange',\n","  'Blueberry Muffin Bar',\n","  'Lemon Fruit & Nut Food Bar',\n","  'Coconut Cream Pie',\n","  'Greek Salad'],\n"," ['Bunched Cilantro',\n","  'Limes',\n","  'Original No Pulp Pure 100% Florida Orange Juice',\n","  'Ground Ginger'],\n"," ['Organic Hass Avocado',\n","  'Organic Baby Arugula',\n","  'Organic Raw Kombucha Gingerade',\n","  'Large Lemon',\n","  'Sharp Cheddar Cheese',\n","  'Strawberry Preserves',\n","  'Brazilian Cheese Bread Original Cheddar and Parmesan',\n","  'Cheese, Sharp Cheddar'],\n"," ['Alpine Spring Water',\n","  'Total 2% All Natural Plain Greek Yogurt',\n","  'House Blend Deep Roast Ground Coffee',\n","  \"Major Dickason's Blend Ground Coffee Dark Roast\",\n","  'French Roast Ground Coffee',\n","  'Pull-Ups Training Pants Learning Designs 3T-4T 32-40 Lbs',\n","  'Aerosol'],\n"," ['Organic Strawberries',\n","  'Organic Greek Whole Milk Blended Vanilla Bean Yogurt',\n","  'Raspberries'],\n"," ['Hass Avocados',\n","  'Organic Baby Carrots',\n","  'Pineapple Chunks',\n","  'Organic Raisins',\n","  'Frozen Organic Blueberries',\n","  'Organic Fuji Apples',\n","  'Oranges'],\n"," ['Bag of Organic Bananas',\n","  'Chocolate Protein Soy & Dairy Protein Shake',\n","  'Vanilla Protein Protein Shake',\n","  'Organic Cinnamon Harvest Cereal',\n","  '7 Whole Grain Nuggets Cereal'],\n"," ['Hass Avocados',\n","  'Limes',\n","  'Michigan Organic Kale',\n","  'Large Grapefruit',\n","  'Boneless Skinless Chicken Breasts',\n","  'Feta Cheese Crumbles',\n","  'Organic Red Onion',\n","  'Organic Red Cabbage',\n","  'Gluten Free Mini Pretzels',\n","  'Almond Breeze Almond & Coconut Milk Blend',\n","  'Ginger Root Beer, Naturally Flavored Zero Calorie Soda, Caffeine Free',\n","  'Organic Kale Pesto Hummus',\n","  'Organic Thai Coconut Curry Hummus',\n","  'Almond Mozzarella Style Cheese Alternative'],\n"," ['Organic Blueberries',\n","  'Raw Shrimp',\n","  'Raspberries',\n","  'Chicken Tortilla Soup',\n","  \"Hot'n Spicy Chicken Wings\"],\n"," ['All Natural Berry Blast 100% Juice Smoothie',\n","  'Complete™ ActionPacs™ Fresh Scent Dishwasher Detergent',\n","  'Red Machine Juice Smoothie'],\n"," ['Pinto Beans No Salt Added',\n","  'Fat Free Skim Milk',\n","  'Organic Avocado',\n","  'No Salt Added Black Beans',\n","  'Grated Parmesan',\n","  'Organic No Salt Added Diced Tomatoes',\n","  'Organic Red Onion',\n","  'Organic Low Sodium Chicken Broth',\n","  'Roasted Red Pepper Hummus',\n","  'Organic Extra Firm Tofu',\n","  'Organic Short Grain Brown Rice',\n","  'Vanilla Almond Breeze',\n","  'Soft Potato Bread',\n","  'Cajun Street Seasoning'],\n"," ['Hass Avocado Bag', 'Original Vanilla Nutrition Shake', 'Anejo Tequila'],\n"," ['All Natural Marinara Pasta Sauce',\n","  'Nacho Cheese Tortilla Chips',\n","  'Steamfresh Super Sweet Corn',\n","  'Singles Pepperoni French Bread Pizzas',\n","  '2% Reduced Fat DHA Omega-3 Reduced Fat Milk',\n","  'Fridge Pack Cola',\n","  'Breaded Mozzarella Sticks',\n","  'Turkey & Cheddar Cracker Stackers',\n","  'Sweet & Salty Nut Peanut Granola Bars',\n","  'Big Chewy Chocolate Chip Granola',\n","  'Sweet & Salty Nut Cashews Granola',\n","  'Beef Franks',\n","  'Colby-Jack Cheese Sticks',\n","  \"Pirate's Booty Aged White Cheddar Baked Rice and Corn Puffs\",\n","  'Lunchables Chicken Dunks',\n","  \"Kellogg's Pop-Tarts Frosted Strawberry Pastries\",\n","  'Grape Nutrient Enhanced Water Beverage Mix',\n","  'Oreo  Ice Cream Sandwiches',\n","  \"Kellogg's Pop-Tarts Frosted S'mores Pastries\",\n","  'Pop-Tarts Frosted Cookies & Creme Toaster Pastries',\n","  'Ham & American Funpack Lunchable',\n","  'Mini Nilla Wafers',\n","  \"Pralines 'n Cream Ice Cream\",\n","  'Mega Pack Everyday Plates',\n","  'Chips With Sea Salt',\n","  'Gain Original Tall Ktchen Bags',\n","  'Star Wars Macaroni and Cheese',\n","  'Spongebob Squarepants Go Gurt Strawberry & Cotton Candy Low Fat Yogurt Value Pack',\n","  'Mega Stuffed Cookies',\n","  'Deep Dish Minis Pepperoni Pizza',\n","  'Deluxe Honey Roasted Whole Cashews',\n","  'Refreshing Remover Cleansing Towelettes',\n","  'Outlast Invisible Solid, Clear Gel, Completely Clear Deodorant',\n","  'Pure Life Splash Wild Berry Flavored Water'],\n"," ['Dry Roasted Almonds'],\n"," ['Organic Cucumber',\n","  'Organic Strawberries',\n","  'Banana',\n","  'Taco Seasoning',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Granny Smith Apple',\n","  'Organic Dark Chocolate Peanut Butter Cups',\n","  'Yellow Onions',\n","  'Sliced Black Olives',\n","  'Intense Dark Chocolate with Sea Salt & Roasted Almonds',\n","  'Almonds & Sea Salt in Dark Chocolate',\n","  'Dairy Free Vanilla Coconut Milk',\n","  'Medium Cheddar'],\n"," ['Organic Yellow Onion',\n","  'Pure Irish Butter',\n","  'Michigan Organic Kale',\n","  'Organic Baby Broccoli',\n","  'Organic Green Cabbage',\n","  'Brussels Sprouts',\n","  'Organic Rice Vinegar',\n","  '100% Pure Sesame Seed Oil',\n","  'Ground Pork',\n","  'Organic Fennel Seed'],\n"," [\"Organic D'Anjou Pears\",\n","  'Organic Gala Apples',\n","  'Gala Apples',\n","  'Organic Milk Reduced Fat, 2% Milkfat',\n","  'Hazelnut Bromstad Design Liquid Coffee Creamer',\n","  'Fat Free French Vanilla Creamer',\n","  'Fuyu Persimmon'],\n"," ['100% Whole Wheat Bread',\n","  'Large Lemon',\n","  'Creamy Peanut Butter',\n","  'Hass Avocado',\n","  'Sparkling Lemon Water',\n","  'Iceberg Lettuce',\n","  'Green Onions',\n","  'Organic Low Fat Chocolate Milk',\n","  'Organic Diced Tomatoes',\n","  'Reduced Fat Feta Cheese',\n","  'Pitted Kalamata Olives',\n","  'Roasted Salted Almonds',\n","  'Low Fat 1% Milk',\n","  'Dutch Yellow Pee Wee',\n","  'Sauce for Lettuce Wrap'],\n"," ['Boomchickapop Sweet & Salty Kettle Corn'],\n"," ['Frozen Organic Blueberries'],\n"," ['Organic Hass Avocado',\n","  'Organic Raspberries',\n","  'Organic Whole Grassmilk Milk',\n","  'Organic Strawberries',\n","  'Organic Baby Spinach',\n","  'Organic Turkey Bacon',\n","  'Alpine Spring Water',\n","  'Organic Granny Smith Apple',\n","  'Corn Tortillas',\n","  'Organic Good Seed Bread',\n","  'Organic Whole Grain Wheat English Muffins',\n","  'Natural Artesian Bottled Water',\n","  'Organic Unrefined-Unfiltered Extra Virgin Olive Oil'],\n"," ['Black Beans',\n","  'Baby Arugula',\n","  'Red Onion',\n","  'Real Mayonnaise',\n","  'Iceberg Lettuce',\n","  'Whole Milk',\n","  'Philadelphia Original Cream Cheese',\n","  'Fig Preserves',\n","  'White Horseradish',\n","  'Organic Gold Beets',\n","  'Potatoes Sweet',\n","  'Honey Ham & Oven Roasted Turkey Breast Deli Thin-Sliced Variety Pack Lunch Meat',\n","  'Original Tomato Juice',\n","  'Deli Fresh Smoked Ham, 97% Fat Free, Gluten Free'],\n"," ['Organic Strawberries',\n","  'Carrots',\n","  'Limes',\n","  'Organic Mint',\n","  'Organic Red Onion',\n","  'Organic Spaghetti Squash',\n","  'Loose White Button Mushrooms'],\n"," ['Organic Sage', 'Organic Thyme', 'Ndimaini', 'Country Loaf'],\n"," ['Organic Blueberries Clamshell',\n","  'Tall Kitchen Bag With Febreze Odor Shield',\n","  'Raspberries',\n","  'Organic Blackberries',\n","  'Pretzel Slider Buns'],\n"," ['Red Kidney Beans', 'Fruit Punch'],\n"," ['Bag of Organic Bananas',\n","  'Organic Coconut Milk',\n","  'Limes',\n","  'Roasted Turkey Breast',\n","  'Organic Rolled Oats',\n","  'Whole Almonds',\n","  'Organic Italian Herb Pasta Sauce',\n","  'Macaroni Shells & White Cheddar Cheese',\n","  'Unsweetened Almondmilk',\n","  'Collard Greens',\n","  'All Natural Powder Cleanser',\n","  'Organic Crushed Fire Roasted Tomatoes'],\n"," ['Aluminum Foil',\n","  'Organic Extra Virgin Olive Oil',\n","  'Tall Kitchen Bag With Febreze Odor Shield'],\n"," ['Dubliner Wedge Pre Cut Cheese',\n","  'Organic Large Grade A Brown Eggs',\n","  'Diet Ginger Ale',\n","  'Corn Pops Cereal',\n","  'Sliced Kalamata Greek Olives',\n","  'Soft Ripened Cheese Log Brie',\n","  'Wine Infused Salame Cheese and Crackers Small Plates'],\n"," ['Orange Juice', 'Miracle Whip Light Dressing', 'Honey Turkey'],\n"," ['Organic Strawberries',\n","  'Large Lemon',\n","  'Limes',\n","  'Small Hass Avocado',\n","  'Large Grapefruit',\n","  'Oven Roasted Turkey Breast',\n","  'Marinara Sauce',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Whole Grain Cheddar Baked Goldfish Crackers',\n","  'Hummus, Hope, Original Recipe',\n","  'Organic Red Onion',\n","  'Unsweetened Cashew Milk',\n","  'Blood Oranges',\n","  'Gluten-Free Chicken Nuggets',\n","  'Grain Free Chicken Formula Cat Food',\n","  'Sea Salt & Vinegar Potato Chips',\n","  '1% Low Fat Milk',\n","  'Organic Baby Food Banana Beet & Blueberry',\n","  'Organic Dijon Mustard',\n","  'Chicken & Apple Breakfast Sausage',\n","  'Organic Yokids Lemonade/Blueberry Variety Pack Yogurt Squeezers Tubes',\n","  'Red Grapes',\n","  'Whole White Mushrooms',\n","  'Veggie-Style Mini Corn Dogs',\n","  'Organic Summer Strawberry Bunny Fruit Snacks',\n","  'Grain Free Turkey Canned Cat Food',\n","  'Milk and Cookies Ice Cream',\n","  'Raw Chocolate Cacao Nibs',\n","  'Honey Low Fat Grahams',\n","  'Mini Italian Eggplant',\n","  'Red Beans & Rice New Orleans Recipe',\n","  'Brownie Crunch Bar Dark Chocolate',\n","  'Organic Corn'],\n"," ['Natural Spring Water',\n","  'Organic Banana',\n","  'Mandarin Oranges',\n","  'Green Bell Pepper',\n","  'Organic Fuji Apple',\n","  'Yellow Bell Pepper',\n","  'Organic Broccoli',\n","  'Orange Bell Pepper',\n","  'Firm Tofu',\n","  'Organic Royal Rainbow Quinoa',\n","  'Quick Cooking Steel Cut Oats'],\n"," ['Bag of Organic Bananas',\n","  'Organic Grape Tomatoes',\n","  'Organic Whole Strawberries',\n","  'Organic Strawberries',\n","  'Organic Baby Broccoli',\n","  'Parchment Paper',\n","  'Organic Blackberries',\n","  'Organic Large Green Asparagus',\n","  'Organic Rainbow Chard Vegetable',\n","  'Frozen Organic Wild Blueberries',\n","  'Organic Beef Bone Broth'],\n"," ['Bag of Organic Bananas',\n","  'Organic Unsweetened Almond Milk',\n","  'Organic Strawberries',\n","  'Sustainably Soft Bath Tissue',\n","  'Organic Broccoli Florets',\n","  'Raisin Bran Cereal',\n","  'Organic Shells & White Cheddar Macaroni and Cheese',\n","  'Organic Gala Apples',\n","  'Organic Navel Orange',\n","  'Organic Old Fashioned Rolled Oats',\n","  'Organic Spaghetti Pasta',\n","  'Organic Snipped Green Beans',\n","  'Organic Mango Chunks',\n","  'Organic California Sushi Rice',\n","  'Coarse Pink Salt',\n","  'Herbal Expec Herbal Expectorant Natural Cherry'],\n"," ['Organic Peeled Whole Baby Carrots',\n","  'Organic Red Potato',\n","  'Organic Asparagus Spears',\n","  'Cashew Milk Salted Caramel Cluster Non-Dairy Frozen Dessert',\n","  'Certified Organic Brown Gravy Seasoning Mix',\n","  'Cherry Vanilla Granola'],\n"," ['Organic Baby Arugula',\n","  'Organic Grape Tomatoes',\n","  'Large Alfresco Eggs',\n","  'Organic Romaine',\n","  'Sparkling Natural Mineral Water',\n","  'Organic Cauliflower',\n","  'Tulips 10 Stem',\n","  'Cashew Milk Snickerdoodle Non-Dairy Frozen Dessert',\n","  'Organic Vanilla Lightly Sweetened Almond Milk',\n","  '18-in-1 Hemp Pure-Castile Soap Lavender',\n","  'Coconut Lemon 3-in-1 Hand Face Body Lotion',\n","  'Gluten Free Sugar Cones'],\n"," ['Organic Whole String Cheese',\n","  'Sparkling Water Grapefruit',\n","  'Lime Sparkling Water',\n","  'Organic Gala Apples',\n","  'Lemongrass Citrus Scent Disinfecting Wipes',\n","  '2-Ply 100% Recycled White Facial Tissues'],\n"," ['Zero Calorie Cola'],\n"," ['0% Greek Strained Yogurt'],\n"," ['Cucumber Kirby',\n","  'Organic Raspberries',\n","  'Banana',\n","  'Strawberries',\n","  'Organic Basil',\n","  'Organic Mint',\n","  'Everything Bagels',\n","  'Pure Sparkling Water',\n","  'Vanilla Almond Fit Granola',\n","  'Sparkling Lemon Water',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Plain Bagelettes',\n","  'Sesame Bagels',\n","  'Organic Sprouted Wheat Bagels'],\n"," ['Organic Strawberries', 'Blue Machine Boosted 100% Juice Smoothie'],\n"," ['Butternut Squash',\n","  'Grade AA Large White Eggs',\n","  'Turkey Bacon',\n","  'Honey Wheat Bread',\n","  'Special K Red Berries Cereal',\n","  'New Orleans Style Original Red Beans and Rice Mix',\n","  'Smart Ones Chicken Fettucini',\n","  'Smart Ones Ravioli Florentine',\n","  'Original Buttery Spread',\n","  'Organic Caesar Complete Salad Kit',\n","  'Turkey Bologna',\n","  'Ready to Eat Tuna Salad Original Deli Style',\n","  'Smart Ones Slow Roasted Turkey Breast',\n","  'Lactose Free Milk',\n","  'Orange Sesame Chicken Flavorful Asian Inspirations'],\n"," ['Banana',\n","  'Apple Honeycrisp Organic',\n","  'Organic Whole Milk',\n","  'Organic Avocado',\n","  'Chicken & Maple Breakfast Sausage',\n","  'Tzatziki',\n","  'Seriously Sharp Cheddar Cheese',\n","  'Pita Chips Simply Naked',\n","  'Boneless Skinless Chicken Thighs',\n","  'Fat Free Vanilla Yogurt',\n","  'Instant, Irish Oatmeal, Maple & Brown Sugar',\n","  'All Natural Red Tomato Mild Salsa Mexican with Green Chile & Cilantro'],\n"," ['100% Whole Wheat Bread',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Goodness Grapeness Organic Juice Drink',\n","  'Organic Ginger Root',\n","  'Orange Juice',\n","  'Gluten Free Blueberry Waffles',\n","  'Organic Super Fruit Punch Juice Drink',\n","  'Organic Iceberg Lettuce',\n","  'Lemon Verbena Hand Soap',\n","  'Organic Eggplant'],\n"," ['Organic Simply Naked Pita Chips',\n","  'Roasted Pine Nut Hummus',\n","  'Organic Variety Pack',\n","  \"L'Orange Sparkling Natural Mineral Water\"],\n"," ['Organic Lemon',\n","  'Banana',\n","  'Uncured Hickory Smoked Sunday Bacon',\n","  'Red Vine Tomato',\n","  'Spinach Pizza',\n","  'Organic Reduced Fat Milk',\n","  'Organic Chocolate Chip Chewy Granola Bars',\n","  'Uncured Black Forest Ham',\n","  'Smoked Turkey Breast Slices',\n","  'Grass Fed Ground Beef',\n","  'Salted Sweet Cream Butter',\n","  'Chorizo Seitan',\n","  'Almond Breeze Chocolate Almond Milk',\n","  'Arborio White Rice',\n","  'Littleneck Clams'],\n"," ['Organic Grape Tomatoes',\n","  'Fat Free Milk',\n","  'Whole Hearts of Palm',\n","  'Gluten Free Everything Baked Cracker',\n","  'Sparkling Probiotic Drink Strawberry Acai Coconut',\n","  'Deluxe Thick Apricot Fruit Spread',\n","  'Gluten Free Crunchy Vanilla Cereal',\n","  'Crackers, Puffed, Lightly Salted Corn'],\n"," ['Pineapple Coconut Water',\n","  'Large Grade AA Cage Free Eggs',\n","  'Coconut Water with Peach & Mango',\n","  'Enriched Vanilla Rice Drink',\n","  'Teriyaki Beef Jerky',\n","  'Original Rice Drink',\n","  'Zico Natural Pure Premium Coconut Water'],\n"," ['Chunky Peanut Butter',\n","  'with Crispy Almonds Cereal',\n","  'Movie Theater Butter Microwave Popcorn'],\n"," ['Bag of Organic Bananas',\n","  'Organic Strawberries',\n","  'Unsweetened Vanilla Almond Breeze'],\n"," ['Organic Grape Tomatoes',\n","  'Citrus Mandarins Organic',\n","  'Large Lemon',\n","  'Organic Baby Carrots',\n","  'Limes',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Roasted Turkey Breast',\n","  'Organic Avocado',\n","  'Cantaloupe',\n","  'Organic Romaine',\n","  'Red Raspberries',\n","  'Organic 21 Grain Thin Sliced Bread',\n","  'Medium Navel Orange',\n","  'Organic Radicchio Castelfranco',\n","  'Organic Dijon Mustard',\n","  'Single Serve Crispy Wheat Crackers',\n","  'French Beans',\n","  'Dill',\n","  'Organic Fennel Seed'],\n"," ['Half & Half',\n","  'Fat Free Milk',\n","  'Wavy Original Potato Chips',\n","  'Sour Cream',\n","  'Caesar Salad Kit',\n","  'Decadent Classic Yellow Cake Mix',\n","  'Mandarin Orange Sparkling Natural Spring Water',\n","  'Creamy Chocolate Frosting',\n","  'Toasted Coconut Almonds'],\n"," ['Organic Zucchini',\n","  'Clementines, Bag',\n","  'Banana',\n","  'Strawberries',\n","  'Green Beans',\n","  'Large Lemon',\n","  'Granny Smith Apples',\n","  'Blueberries',\n","  'Limes',\n","  'Red Onion',\n","  'Cinnamon Swirl Raisin Bread',\n","  'Parmesan Cheese',\n","  'Orange Bell Pepper',\n","  'Yellow Onions',\n","  'Gala Apples',\n","  '50/50 Spring Mix & Baby Spinach',\n","  'Mild Italian Sausage',\n","  'Original Citrus Sparkling Flavored Soda',\n","  'Penne Pasta',\n","  'Homemade Vanilla Ice Cream',\n","  'Sweet Grape Tomatoes',\n","  'Multigrain Baguette'],\n"," ['Vanilla Almond Milk Yogurt',\n","  'Red Raspberries',\n","  'Avocado Roll',\n","  'Made With Organic Beans & Rice Burrito Non-Dairy',\n","  'Tofu Scramble Pocket Sandwich'],\n"," ['Organic Whole Milk', 'Goat Milk', 'Mint', 'Organic Blackberries'],\n"," ['Uncured Genoa Salami',\n","  'Vanilla Yoghurt',\n","  'Red Raspberries',\n","  'Distilled Water',\n","  'Peanut Butter Creamy With Salt',\n","  'Classic White Bread',\n","  'Cherry Vanilla Creme Soda',\n","  'Raspberry Fruit Spread'],\n"," ['Organic Lacinato (Dinosaur) Kale',\n","  'Organic Reduced Fat 2% Milk',\n","  'Organic Low Fat Plain Yogurt',\n","  'Coconut Bliss Frozen Dessert, Dark Chocolate',\n","  'Himalania Fine Pink Salt'],\n"," ['Red Delicious Apples',\n","  'Pears',\n","  'Sweet & Salty Nut Granola Bars Peanut',\n","  'Whole Grain Cheddar Baked Snack Crackers'],\n"," ['Bag of Organic Bananas',\n","  'Coconut Almond Unsweetened Creamer Blend',\n","  'Gluten Free SpongeBob Spinach Littles',\n","  'Original Veggie Straws',\n","  'Berry Medley',\n","  'Coconut Almond Creamer Blend'],\n"," ['Organic Light in Sodium Lentil Vegetable Soup',\n","  'Organic Creamy Butternut Squash Soup'],\n"," ['Trail Mix'],\n"," ['Organic Ketchup',\n","  'Green Beans',\n","  'Garlic',\n","  'Lemon Ginger Tea Bags',\n","  'Herbal Tea, Organic, Turmeric Ginger, Caffeine-Free, Bags',\n","  'Non Fat Acai & Mixed Berries Yogurt',\n","  'Potato Chips Sea Salt & Vinegar',\n","  'Yogurt, Organic Icelandic, Nonfat, Vanilla',\n","  'Mini Whole Wheat Croccantini',\n","  'Organic Icelandic, Nonfat, Blueberry Yogurt'],\n"," ['Bag of Organic Bananas',\n","  'Marinara Pasta Sauce',\n","  'Garden Vegetable Salad Roll',\n","  'Tomatillo Salsa',\n","  'Cherry Pie Fruit & Nut Bar',\n","  'Blueberry Muffin Bar',\n","  'Organic Sprouted English Muffin',\n","  'Organic Cake Mix Vanilla',\n","  'Freshly Squeezed Orange Juice',\n","  'Organic Chocolate Cake Mix',\n","  'Milk Free Better Than Sour Cream',\n","  'Chocolate Cake Mix',\n","  'Vanilla Cake Mix'],\n"," ['Natural Alpine Spring Water', 'Draft Sake'],\n"," ['Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Apple Honeycrisp Organic',\n","  'Organic Classic Marinara Pasta Sauce',\n","  'Organic Roasted Turkey Breast',\n","  'Organic Granny Smith Apple',\n","  'Sparkling Grapefruit',\n","  'Honest Face, Hand, & Baby Wipes',\n","  'Monterey Jack Cheese',\n","  'Organic Vanilla Whole Milk Yogurt',\n","  'Organic 90% Ground Beef',\n","  'Crescent Rolls',\n","  'Broccoli & Apple Stage 2 Baby Food',\n","  'Free & Clear Bleach',\n","  'Free & Clear Laundry Detergent, 3x Concentrated, HE'],\n"," ['Natural Spring Water',\n","  'Organic Strawberries',\n","  'Chocolate Protein Soy & Dairy Protein Shake',\n","  'Vanilla Almond Breeze',\n","  'Organic Summer Strawberry Bunny Fruit Snacks',\n","  'Natural Flavor Butter Popcorn'],\n"," ['Organic Grape Tomatoes',\n","  'Aluminum Foil',\n","  'Strawberries',\n","  'Honey Wheat Enriched Bread',\n","  'Large Pineapple Chunks',\n","  'Organic Blackberries',\n","  'Strawberry Preserves',\n","  '2% Reduced Fat Milk',\n","  'Sweet Cream Salted Butter',\n","  'Strawberry Flavored Organic Z Fruit Rope',\n","  'Bunched Carrots',\n","  'Crunchy Sunflower Seed Bites Sea Salt',\n","  'House Blend Medium Keurig Brewed K-Cups Ground Coffee',\n","  'Chocolate Brownie Kid Z Bar',\n","  'Organic English Seedless Cucumber',\n","  'Original Crispy Apple Chips',\n","  'Chicken Quesadillas',\n","  'Kaedama Ramen Noodles',\n","  'Pork Egg Roll',\n","  'Just Fruit Salad'],\n"," ['Bag of Organic Bananas',\n","  'Organic Baby Carrots',\n","  'Organic Carrot Bunch',\n","  'Organic Reduced Fat Milk',\n","  'Sparkling Water Grapefruit',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Organic Broccoli Crowns',\n","  'Organic Homestyle Waffles',\n","  'Mango Chunks',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  \"Spicy Chik'n Veggie Protein Patties\",\n","  'Total 2% Lowfat Greek Strained Yogurt with Peach',\n","  'GOLEAN Crunch! Cereal',\n","  'French Roast Whole Bean Coffee',\n","  'Fresh Ciliegine Mozzarella Cheese'],\n"," ['100% Whole Wheat Bread',\n","  'Garlic',\n","  'Organic Bunny Fruit Snacks Berry Patch',\n","  'Green Bell Pepper',\n","  'Perrier Lime',\n","  'Hot Salsa',\n","  'Gluten Free Pretzel Twists',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Crunchy Organic Dark Roasted Peanut Butter',\n","  'Mashed Sweet Potatoes',\n","  'Protein Caramel Nut Chewy Bars',\n","  \"Spoon Size Wheat 'n Bran Shredded Wheat Cereal\",\n","  'Chopped Walnuts',\n","  'Mini 8\\\\\" Italian Pizza Crusts',\n","  'Organic Fancy Shredded Mozzarella Cheese',\n","  'Flame Grilled Chicken Breast Strips',\n","  'Mild Banana Pepper Rings',\n","  'Organic Half Spring Mix',\n","  'Original Pepperoni',\n","  'Dairy Free Unsweetened Coconut Milk',\n","  'Dark Espresso Roast Whole Bean Coffee',\n","  'Cheese Plate Spanish'],\n"," ['Bag of Organic Bananas',\n","  'Organic Garlic',\n","  'Organic Baby Carrots',\n","  'Distilled Water',\n","  'Squash & Sweet Peas Stage 2',\n","  'Baby Food Stage 2 Pumpkin Banana',\n","  'Organic Banana Blueberry Baby Food Puree',\n","  'Ciabatta Bread'],\n"," ['Movie Theater Butter',\n","  'Curate Cherry Lime Sparkling Water',\n","  'Hot Sauce',\n","  'Cran-Raspberry Flavored Sparkling Water',\n","  'Diet Coke',\n","  'Craveables Pepperoni Pizza',\n","  'Coldwater High Efficiency Liquid Laundry Detergent',\n","  'Craveables Supreme Pizza',\n","  'Caesar Salad Kit',\n","  'Green Pepper Sauce',\n","  'Hot Calabrese Salame with Natural Gouda Cheese & Toasted Rounds Small Plates',\n","  'The Original Whole Bean Coffee'],\n"," ['Unsweetened Original Almond Breeze Almond Milk',\n","  'Lemon Sparkling Water',\n","  \"Crunchy Oats N' Honey Granola Bars\",\n","  'Peanut Butter Whole Grain Clusters',\n","  'Clean Care Mega Rolls Toilet Paper',\n","  'White Beauty Bar',\n","  'Chocolate Chip Bar',\n","  'Colagate Total Whitening Toothpaste'],\n"," ['Ground Turkey Breast',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Mixed Vegetables',\n","  'Organic Heavy Whipping Cream',\n","  'Original No Pulp Pure 100% Florida Orange Juice',\n","  'Grilled Chicken Breast Strips',\n","  'Organic Oat Non-Dairy Original Beverage',\n","  'Organic Flax Plus Multibran Flakes',\n","  'Orange Strawberry Banana Juice',\n","  'California White Jasmine Rice',\n","  '100% Spring Water'],\n"," ['Unsweetened Original Almond Breeze Almond Milk',\n","  '100% Pineapple Juice',\n","  '100% Whole Wheat',\n","  '90 Calorie Chocolate Fudge Brownies',\n","  'White Rice',\n","  'Premium Wild Pink Salmon',\n","  'Fat Free Crumbled Feta',\n","  'Rich Milk Chocolate Complete Nutritional Drink',\n","  'WOW Chocolate Chip Cookies',\n","  'Lemon Lift Black Tea'],\n"," ['Bag of Organic Bananas',\n","  'Organic Whole String Cheese',\n","  'Organic Raspberries',\n","  'Honeycrisp Apple',\n","  'Seedless Red Grapes',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Organic Navel Orange',\n","  'Splits\\\\\" Pretzels Original',\n","  'Butter Crisps Wafer Cookies'],\n"," ['Bag of Organic Bananas',\n","  'Whole Milk Plain Yogurt',\n","  'Mixed Berries Whole Milk Icelandic Style Skyr Yogurt',\n","  'Strawberry Rhubarb Yogurt',\n","  'Whole Milk',\n","  'Vanilla Skyr Style Yogurt',\n","  'Strained Whole-Milk Yogurt Blueberry'],\n"," ['Organic Half & Half',\n","  'Organic Strawberries',\n","  'Banana',\n","  'Large Alfresco Eggs',\n","  'Organic Avocado',\n","  '90% Lean Ground Beef',\n","  'Cauliflower',\n","  'Ancient Grain Original Granola',\n","  'Thin And Crispy Corn Tortilla Chips',\n","  'Organic Cheddar Snack Mix',\n","  'Rolled Oats',\n","  'Medium Guajillo Roasted Garlic & Tomatillo Salsa'],\n"," ['Organic Raspberries',\n","  'Pure Irish Butter',\n","  'Small Hass Avocado',\n","  'Whole Milk',\n","  'Hazelnut Meal/Flour Finely Ground'],\n"," ['Blood Orange Italian Soda'],\n"," ['Wastebasket Liners', 'Epsom Salt'],\n"," ['Granny Smith Apples',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Extra Cheesy Cheddar Bunnies Crackers',\n","  'Total 2% with Strawberry Lowfat Greek Strained Yogurt',\n","  'Original Hummus',\n","  'Krinkle Cut Classic Barbecue Potato Chips',\n","  'Unsweetened Almondmilk',\n","  'Salt & Pepper Krinkle Chips',\n","  'Total 0% Raspberry Yogurt',\n","  'Monterey Jack Cheese',\n","  'Cookies, Chocolate Chip Walnut',\n","  'Boomchickapop Sea Salt Popcorn',\n","  'Sour Cream & Onion Potato Chips',\n","  'Organic Bagged Mini Dark Peanut Butter',\n","  'Cinnamon Raisin Bread',\n","  'Pineapple Yogurt 2%',\n","  'Crunchy Sunflower Seed Bites Sea Salt',\n","  'Blackberry Yogurt',\n","  'Classic Granola',\n","  'Olive Tortilla Chips',\n","  'Sweet & Salty Kettlecorn',\n","  'Organic Apple Rings'],\n"," ['Coke Classic',\n","  'Roasted & Salted Pistachios',\n","  'Double Stuf Oreo Sandwich Cookies',\n","  'Mixed Fruit Fruit Snacks',\n","  'Cola Soda',\n","  'Classic Mix Variety',\n","  'Flip™ Low-Fat Almond Coco Loco Lowfat Greek Yogurt',\n","  'Unsalted Peanuts',\n","  'Original Cream Cheese',\n","  'Minis Mix Variety Bag',\n","  'Frosted Chocolate Cup Cakes  with Creamy Filling',\n","  'Original Chocolate Chip Cookies',\n","  'Lower Sugar Maple & Brown Sugar Instant Oatmeal',\n","  'Flip Chocolate Haze Craze Low-Fat Greek Yogurt',\n","  'Flip Peanut Butter Dream Greek Yogurt',\n","  'Carmel Peanut Perfectio',\n","  'Flip Coffee Break Bliss Greek Yogurt',\n","  'Island Fruits Fruit Snacks',\n","  'Assorted Chocolate Miniatures Chocolate Candy Bars',\n","  'Chocolate Chip Mini Muffins',\n","  'Chewy Chocolate Chip Cookies',\n","  'Basic Select-A-Size Paper Towels'],\n"," ['Banana',\n","  'Everything Bagels',\n","  'Classic Mix Variety',\n","  'Half And Half Ultra Pasteurized',\n","  'Vitaminwater Zero Variety Pack',\n","  'Rice Krispies Treats Original Crispy Marshmallow Squares',\n","  'Chocolate Wafers Candy Bar',\n","  'Original Sparkling Mountain Spring Water'],\n"," ['Organic Garlic',\n","  'Organic Yellow Onion',\n","  'Banana',\n","  'Organic Red Radish, Bunch',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  'Organic Red Cherry Tomato',\n","  'Crunchy Peanut Butter Energy Bar',\n","  'Pacific Northwest Wild Albacore Tuna'],\n"," ['Bag of Organic Bananas',\n","  '0% Greek Strained Yogurt',\n","  'Vanilla Milk Chocolate Almond Ice Cream Bars Multi-Pack'],\n"," ['Bag of Organic Bananas',\n","  'Apple Honeycrisp Organic',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Pure Lemon Juice',\n","  'Refillable Primordial Himalayan Sea Salt Grinder',\n","  'Brussels Sprouts Stalks'],\n"," ['Pure Clover Honey', 'Cookie Tray'],\n"," ['Cage Free Brown Eggs-Large, Grade A',\n","  'Diet Dr.Pepper Soda Pack',\n","  'Unscented 1000 Sheets Per Roll Bathroom Tissue',\n","  'Paper Towels Choose-A-Sheet, Mega Rolls, One-Ply',\n","  'Deli Fresh Rotisserie Seasoned Chicken Breast',\n","  'Black Cherry',\n","  'Breakfast Blend Medium Keurig Brewed K-Cups Ground Coffee',\n","  'Sweeper Open Window Fresh Scent Wet Mopping Cloths Refill',\n","  'Good News! Plus Disposable Razors',\n","  'Beef Feast in Roasted Beef Flavor Gravy Cat Food',\n","  'Extended Moisture Body Lotion'],\n"," ['Organic Mini Sandwich Crackers Peanut Butter',\n","  'Sustainably Soft Bath Tissue',\n","  'Organic Kosher Dill Pickles',\n","  'Baking Soda',\n","  'Organic Blackberry Sorbet Bars',\n","  'Organic Kids Clearly Grape',\n","  'Organic Maple & Onion Baked Beans',\n","  'Sweet Rival Sesame Butter + Dates Macrobar'],\n"," ['Drinking Water',\n","  'Honey Wheat Bread',\n","  'Unscented Bathroom Tissue',\n","  'Margarine Quarters',\n","  'Orange Ocean Juice Drink'],\n"," ['Bag of Organic Bananas',\n","  'Prosciutto, Americano',\n","  'Organic Cucumber',\n","  'Strawberries',\n","  'Sinfully Sweet Campari Tomatoes',\n","  'Organic Avocado',\n","  'Ground Turkey Breast',\n","  'Organic Granny Smith Apple'],\n"," ['2% Reduced Fat Organic Milk',\n","  'Trop50 No Pulp Orange Juice w/ Calcium + Vitamin D, 50% Less Sugar & Calories',\n","  'Clasico Nacho Chipotle Tortilla Chips',\n","  'Lemon Sparkling Natural Spring Water',\n","  'Pumpkin Pie Gelato'],\n"," ['Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Organic Strawberries',\n","  'Organic White Onions',\n","  'Organic Large Grade A Brown Eggs',\n","  'Multigrain Sandwich Bread'],\n"," ['Bag of Organic Bananas',\n","  'Organic Garlic',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Romaine Lettuce',\n","  'Organic Thyme',\n","  'Organic Reduced Fat 2% Milk',\n","  'Half & Half',\n","  'Sharp Cheddar Cheese',\n","  'Organic Dill',\n","  'Natural Chicken & Apple Breakfast Sausage Patty',\n","  'Organic Grape Juice',\n","  'Organic Stone Ground Mustard'],\n"," ['Organic Garnet Sweet Potato (Yam)',\n","  'Organic Garlic',\n","  'Large Lemon',\n","  'Honeycrisp Apple',\n","  'Organic Carrot Bunch',\n","  'Organic Small Bunch Celery',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Fresh Ginger Root',\n","  'Organic Leek',\n","  'Organic Spinach Bunch',\n","  'Organic Free Range Low Sodium Chicken Broth',\n","  'Original Caffeine Free Tulsi Tea',\n","  '4X Ultra Concentrated Natural Laundry Detergent, Geranium Blossoms & Vanilla',\n","  'Whole Cloves'],\n"," ['Marinara Pasta Sauce',\n","  'Banana',\n","  'Dha Omega 3 Reduced Fat 2% Milk',\n","  'Organic Thompson Seedless Raisins',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Mixed Berries Whole Milk Icelandic Style Skyr Yogurt',\n","  'Organic Honey Sweet Whole Wheat Bread',\n","  'Cantaloupe',\n","  'Organic Small Curd Cottage Cheese',\n","  'Skim Milk',\n","  'Gluten Free SpongeBob Spinach Littles',\n","  'Italian Sparkling Mineral Water',\n","  'Organic Medjool Dates',\n","  'Chocolate Sorbet',\n","  'Original 7 Grain Crackers',\n","  'Organic Cold-Pressed Orange Juice',\n","  'Classic Yellow Mustard',\n","  'Flax Plus Raisin Bran Cereal',\n","  'Organic Just Strawberries And Banana'],\n"," ['Asparagus',\n","  'Organic Hothouse Cucumbers',\n","  'Uncured Genoa Salami',\n","  'Organic Cilantro',\n","  'Honeycrisp Apple',\n","  'Organic Baby Spinach',\n","  'Limes',\n","  'Ginger, Pickled Sushi',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Organic Large Brown Eggs',\n","  'Organic White Onions',\n","  'Pure Sparkling Water',\n","  'Organic Broccoli',\n","  'Uncured Black Forest Ham',\n","  'Organic Jalapeno Pepper',\n","  'Kumato Tomatoes',\n","  'Dried Mango',\n","  'Chicken Breast Kabob'],\n"," ['Organic Yellow Onion',\n","  'Reduced Fat Milk 2%',\n","  'Sparkling Natural Mineral Water'],\n"," ['Organic Large Brown Eggs',\n","  'Cantaloupe',\n","  'Organic Italian Salad',\n","  'Organic Whole Milk Washington Black Cherry Yogurt',\n","  'Butter Masala Mild Indian Simmer Sauce'],\n"," ['Pineapple Apple Mint Organic Cold Pressed Juicd',\n","  'Water',\n","  'Sparkling Natural Mineral Water',\n","  'Slices Cheddar Cheese',\n","  'Lime Ginger Lemon Agave',\n","  'Cappuccino Swirl Non Dairy Frozen Dessert',\n","  'Almond Butter',\n","  'Original Sauce',\n","  'Light and Lean Quinoa Black Beans with Butternut Squash and Chard',\n","  'Maple Glazed Pecan & Sea Salt Bar',\n","  'Gluten and Dairy Free Rice Macaroni and Cheeze',\n","  'Marcona Almonds',\n","  'Water, Natural Spring',\n","  'Indian Cuisine Bengal Lentils',\n","  'Wasabi Crunchy Chickpeas',\n","  'Chicken Flavored Bone 4 Inch Dog Chew',\n","  'Jodhpur Lentils',\n","  'Eucalyptus Harvest Aromatherapy Mist',\n","  'Sleep Aid, Calms Forte, Tablets'],\n"," ['ZBar Organic Chocolate Brownie Energy Snack',\n","  'Cauliflower Crumbles Chopped Cauliflower',\n","  'Kids Strawberry Yogurt Tubes',\n","  'Kids Detangling Spray Double Dutch Apple',\n","  'Deep Dish Four-Cheese Pizza Singles'],\n"," ['Broccoli Crown',\n","  'Red Vine Tomato',\n","  'Red Peppers',\n","  'Ice Cream Chocolate Mocha Chip',\n","  'Original Wheat Thins',\n","  'Unsweetened Almondmilk',\n","  'Orange Bell Pepper',\n","  'Snow Peas',\n","  'Sliced White Mushrooms',\n","  'Cola Soft Drink',\n","  'Coffee Ice Cream',\n","  'Organic Diced Tomatoes Fire Roasted with Medium Green Chilies',\n","  'Lemon-Lime 12 Pack Soda',\n","  'Lightly Salted Rice Cakes',\n","  'Frosted Mini-Wheats Original Cereal',\n","  'Guacamole Dip',\n","  'Reduced Fat Sour Cream',\n","  'Fully Cooked Original Bacon',\n","  'Belgian Chocolate Chocolate Ice Cream'],\n"," ['Red Peppers',\n","  'Boneless And Skinless Chicken Breast',\n","  'Organic Green Leaf Lettuce',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Orange Bell Pepper',\n","  'Strawberry on the Bottom Nonfat Greek Yogurt',\n","  'Salted Butter Half Sticks',\n","  'Eggo Nutri-Grain Blueberry Waffles',\n","  'Organic Mung-Bean Sprouts',\n","  'Oats & Chocolate Chewy Bars',\n","  'Triscuit Original Baked Whole Grain Wheat Crackers',\n","  'Original Medium Picante Sauce',\n","  '90 Calorie Chocolate Caramel & Pretzel Chewy Bars',\n","  'Spreadable Butter with Canola Oil',\n","  'Breast Tenders',\n","  'ProteinPLUS Multigrain Angel Hair Pasta',\n","  'White Sliced Mushrooms',\n","  'Krispy Original Saltine Crackers',\n","  '37% Less Sodium Soy Sauce',\n","  'Low Fat Key Lime Blended Greek Yogurt',\n","  'Spaghetti Protein Plus Pasta',\n","  'Napkins, 1-Ply',\n","  'Pizzeria-Style Crust Supreme Speciale Pizza',\n","  'Grape Fruit Ice Bars',\n","  'Whole Grain Baked Snack Crackers',\n","  'Gourmet Naturals Classic Butter & Sea Salt Microwave Popcorn',\n","  'Classic White Lunch Plate',\n","  'Chlorine Free Bleach',\n","  'Asian Toasted Sesame Dressing & Marinade',\n","  'Classico Pure Olive Oil',\n","  'Wonton Strips',\n","  'Herb Seasoned Restaurant Style Croutons'],\n"," ['Bag of Organic Bananas',\n","  'Organic Baby Arugula',\n","  'Organic Unsweetened Almond Milk',\n","  'Fresh Cauliflower',\n","  'Organic Lemon',\n","  'Organic Baby Carrots',\n","  'Organic Cilantro',\n","  'Organic Small Bunch Celery',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Bartlett Pear',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'English Seedless Cucumber',\n","  'Ezekiel 4:9 Bread Organic Sprouted Whole Grain',\n","  'Super Seed Crispy Crackers',\n","  'Organic Strawberry Fruit Spread',\n","  'Organic Baby Spinach Salad',\n","  'Gluten Free Brown Rice Bread',\n","  'Plantain Chips',\n","  'Hommus Classic Original'],\n"," ['Organic Garnet Sweet Potato (Yam)',\n","  'Asparagus',\n","  'Organic Raspberries',\n","  'Organic Blueberries',\n","  'Organic Garlic',\n","  'Organic Yellow Onion',\n","  'Organic Zucchini',\n","  'Celery Hearts',\n","  'Organic Avocado',\n","  'Boneless Skinless Chicken Breasts',\n","  'Ground Cumin',\n","  'Organic Red Onion',\n","  'English Seedless Cucumber',\n","  'Romaine Lettuce',\n","  '85% Lean Ground Beef',\n","  'Orange Peel In Dark Chocolate Bar',\n","  'Organic Snipped Green Beans',\n","  'Organic Tahini',\n","  'Beef Loin New York Strip Steak',\n","  'Chicken Base, Organic',\n","  'Oatmeal Raisin Cookies',\n","  'Cookies, Chocolate Chip Oatmeal'],\n"," ['Soda', 'Organic Low Fat Milk', 'Smartwater'],\n"," [\"Crunchy Oats 'n Honey Granola Bars\"],\n"," ['Organic Broccoli',\n","  'Avocado Oil',\n","  'Organic Crimini Mushrooms',\n","  'Hass Avocado Variety'],\n"," ['Organic Hass Avocado',\n","  'Organic Baby Arugula',\n","  'Carrots',\n","  'Reduced Fat Chocolate Milk',\n","  'Organic Russet Potato',\n","  'Organic Lowfat 1% Milk',\n","  'Organic Low Fat Vanila Milk',\n","  'Organic Unsweetened Vanilla Coconut Non-Dairy Beverage',\n","  'Organic Purple Kale'],\n"," ['Bag of Organic Bananas',\n","  'Spring Water',\n","  'Clementines',\n","  'Popcorn',\n","  'Apples'],\n"," ['Organic Raspberries',\n","  'Organic Strawberries',\n","  'Large Alfresco Eggs',\n","  'Organic Tomato Basil Pasta Sauce',\n","  'Organic Red Grapes',\n","  'Raw Mild Cheddar Cheese',\n","  'Organic Stewed Tomatoes',\n","  'Black Berry Hibiscus Beverage',\n","  'Organic Chunky Tomato Bisque Soup',\n","  'Raw Manuka Honey Hi Active 15 Plus'],\n"," ['Bag of Organic Bananas',\n","  'Organic Yellow Onion',\n","  'Limes',\n","  'Red Vine Tomato',\n","  'Red Peppers',\n","  'Watermelon Chunks',\n","  'Organic Honey Sweet Whole Wheat Bread',\n","  'Shredded Parmesan',\n","  'Organic Tortilla Chips',\n","  'Cheerios Cereal',\n","  'Organic Bell Pepper',\n","  'Organic Milk',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Organic Broccoli Crowns',\n","  'Sliced Black Olives',\n","  'Tortilla Chips, Clasico, Jalapeno Lime',\n","  'Dijon Honey Mustard Dressing',\n","  'Original Enriched Rice Drink',\n","  'Organic Orange Bell Pepper',\n","  'Original Real Vegetable Chips',\n","  'Sharp Cheddar Thick Slices Cheese',\n","  'Might 4 essential nutrition blend spinach, cherry, oats, black beans',\n","  'Stage 1 Just Butternut Squash Baby Food',\n","  'Organic High Fiber Oat Bran Hot Cereal'],\n"," ['Organic Grape Tomatoes',\n","  'Banana',\n","  'Large Lemon',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Michigan Organic Kale',\n","  'Berry Medley',\n","  'Organic Spinach Bunch',\n","  'Grilled Chicken Breast Strips',\n","  'Crunchy Almond Butter',\n","  'Cilantro Lime Chicken Burrito',\n","  'Power Grains Waffles 6 ct',\n","  '3 lb Clementines',\n","  'Defense Up Cold Pressed Fruit Smoothie',\n","  'Organic Greens And Kale',\n","  'Indian Mattar Paneer'],\n"," ['Chopped Walnuts',\n","  'Plantain Chips',\n","  'Cherry Pie Fruit & Nut Bar',\n","  'Apple Pie Fruit & Nut Food Bar',\n","  'Lemon Fruit & Nut Food Bar',\n","  'Whipped Cream Cheese',\n","  'Bosc Pears',\n","  'Black Tea Pyramids',\n","  'Whole Wheat Flour Tortilla',\n","  'Breadstick'],\n"," ['Distilled Water'],\n"," ['Queso Fresco',\n","  'Vanilla Unsweetened Almond Milk',\n","  'Light Semisoft Cheese',\n","  'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale',\n","  'Cauliflower',\n","  'Tangerine',\n","  'Sliced Almonds',\n","  'Plain Unsalted Rice Cakes',\n","  'Low Carb Whole Wheat Tortillas',\n","  'Whole Natural Value Pack Almonds',\n","  'French Onion Soup',\n","  'Chilpotle Peppers in Adobo Sauce',\n","  'All-Natural Chunky Salsa Medium',\n","  \"Goat's Milk Cheese\",\n","  'Farro Perlato',\n","  'Maximum Strength Tablets Acid Reducer',\n","  '98% Fat Free Condensed Soup Cream Of Celery',\n","  'Fresh Cut Sliced Beets'],\n"," ['Cultured Low Fat Buttermilk',\n","  'Sweet Onion',\n","  'Original Soy Milk',\n","  'Carnation Original Malted Milk'],\n"," ['Uncured Genoa Salami',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Large Lemon',\n","  'Organic Basil',\n","  'Roasted Red Pepper Hummus',\n","  'Sparkling Lemon Water',\n","  'Disinfecting Wipes, Lemon',\n","  'Pita Chips Simply Naked',\n","  'Doubleshot Espresso & Cream Premium Coffee Drink',\n","  'Bocconcini Bite Sized Fresh Mozzarella',\n","  'Triscuit Baked Whole Grain Wheat Rosemary & Olive Oil',\n","  'Triple Creme Brie',\n","  'Glacier Freeze'],\n"," ['Organic Grape Tomatoes',\n","  'Bartlett Pears',\n","  'Half & Half',\n","  'Organic Fuji Apple',\n","  'Bar, Toffee & Almonds in Milk Chocolate'],\n"," ['Organic Baby Carrots', 'Organic Animal Crackers'],\n"," ['Organic Whole String Cheese',\n","  'Uncured Genoa Salami',\n","  'Organic Zucchini',\n","  'Large Lemon',\n","  'Organic Baby Spinach',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Large Brown Eggs',\n","  'Organic Baby Broccoli',\n","  'Organic Banana',\n","  'Organic Avocado',\n","  'Whole Milk Plain Yogurt',\n","  'Seedless Red Grapes',\n","  'Organic Cinnamon Crunch Cereal',\n","  \"Organic D'Anjou Pears\",\n","  'Organic Unsalted Butter',\n","  'Yellow Grape Tomatoes',\n","  'Organic Plain Kefir',\n","  \"Annie's Bunny Fruit Snacks Variety\",\n","  'Vanilla Non Dairy Frozen Dessert Minis',\n","  'Organic Muenster Cheese Slices',\n","  'Organic Air Chilled Whole Chicken',\n","  'Organic Promise Strawberry Fields Cereal',\n","  'Organic Chai Tea Bags',\n","  'Muesli',\n","  'Gluten Free Quick Cooking Oats',\n","  'Fruit Spread, Organic, Strawberry'],\n"," ['Organic Whole Milk',\n","  'Organic Red Potato',\n","  'Organic Plain Greek Whole Milk Yogurt',\n","  'Fresh Ginger Root',\n","  'Super Natural Organic Whole Milk',\n","  'Grass milk Raw Cheddar Cheese'],\n"," ['Organic Romaine Hearts',\n","  'Cinnamon Swirl Raisin Bread',\n","  'Select-A-Size White Paper Towels',\n","  'Tomato Basil Marinara Sauce',\n","  'Sweet Rolls',\n","  'Chocolate Protein Soy & Dairy Protein Shake',\n","  'Vanilla With Caramel Low Fat Ice Cream Cone',\n","  'ForceFlex Drawstring Tall Kitchen Bags',\n","  'Presliced Everything Bagels',\n","  'Mashed Potatoes',\n","  'Organic Uncured Sliced Black Forest Ham',\n","  'Eggo Cinnamon Toast Waffles',\n","  'Orange Juice 100% Juice',\n","  'Milk, Reduced Fat, 2% Milkfat',\n","  'Penne Pasta',\n","  'Large Grade AA Cage Free Eggs',\n","  'All American Salad',\n","  'Carrot Sticks',\n","  'Ultra Strong Mega Bathroom Tissue Rolls',\n","  'Light Champagne Dressing',\n","  'British Style Bangers',\n","  'San Francisco Potato Salad',\n","  'Cinnamon Rolls',\n","  'Gallon Zipper Storage Bags'],\n"," ['Vanilla Unsweetened Almond Milk',\n","  'Organic Banana',\n","  'Light in Sodium Black Bean Vegetable Enchilada Entree',\n","  'Hint Of Sea Salt Almond Nut Thins',\n","  'Creamy Almond Butter',\n","  'Organic Grade A Large Brown Eggs',\n","  'Poblano Pepper',\n","  'Organic Jalapeno Pepper',\n","  'Orange Bell Pepper',\n","  'Frozen Organic Wild Blueberries',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Whole Milk Greek Plain',\n","  'Frozen Peaches',\n","  'Organic Jalapeno Cilantro Hummus',\n","  'Ice Cream Sandwiches Vanilla',\n","  'Habanero Pepper',\n","  'Baby Portabella Mushrooms',\n","  'Blood Orange Juice',\n","  'Seriously Sharp Cheddar Cheese Cracker Cut Slices,'],\n"," ['Organic Fat-Free Milk', 'Aquarium Series Liquid Hand Soap Refill'],\n"," ['Uncured Genoa Salami',\n","  'Garlic',\n","  'Organic Thyme',\n","  'Half & Half',\n","  'Medium Navel Orange',\n","  'Challah Bread',\n","  'Paprika',\n","  'Black Tea Pyramids',\n","  'Snacks Mango'],\n"," ['Seedless Cucumbers', 'Raspberries'],\n"," ['Organic Raw Unfiltered Apple Cider Vinegar',\n","  'Natural Spring Water',\n","  'Lunchables Pepperoni Pizza',\n","  'Bathroom Tissue Softness & Strength, Double Rolls',\n","  'No Pulp Orange Juice',\n","  'Wild Cherry Cola',\n","  'Lunchable Extra Cheesy Pizza',\n","  'Go Big Strawberry/Mixed Berry Low Fat Yogurt',\n","  'Caribou Blend Coffee K-Cups',\n","  'Grilled Salmon Feast in Gravy Cat Food',\n","  'Ice Cubes',\n","  'Clover Honey, US Grade A',\n","  'Grilled Salmon & Shrimp Feast in Gravy Cat Food',\n","  'Special K Strawberry Protein Shake',\n","  'Chocolate Almond Milk',\n","  'Odor Shield Scented Scoopable Cat Litter',\n","  'Grilled Seafood Feast in Gravy Cat Food',\n","  'NOTICeables French Lavender & Riviera Nights Scented Oil Refill',\n","  'Delightful 100% Whole Wheat Bread',\n","  'Mightly Absorbent Premium Paper Towels'],\n"," ['Banana',\n","  'Organic Roma Tomato',\n","  'Organic Baby Kale',\n","  'ALMONDBREEZE UNSWEETENED',\n","  'Dijon Honey Mustard Dressing',\n","  'Balsamic Vinegar of Modena',\n","  'Classic Ranch Yogurt Dressing',\n","  'Dairy-Free Cheddar Style Shreds',\n","  'Ancient Grain Blueberry Hemp Granola',\n","  'Breakfast Scramble Wrap',\n","  'Organic Sweetened Cranberries',\n","  'Gluten Free Omega Flax & Fiber Bread',\n","  \"Builder's Chocolate Peanut Butter Bar\"],\n"," ['Pineapple Chunks', 'Sweet Kale Salad Mix', 'Frozen Whole Strawberries'],\n"," ['Pineapple Chunks',\n","  'Aged White Cheddar Popcorn',\n","  'Organic Chicken Stock',\n","  'Organic Variety Pack'],\n"," ['Uncured Hickory Smoked Sunday Bacon',\n","  'Non Dairy Chunky Monkey',\n","  'Milk, Organic, Vitamin D',\n","  'Vanilla Bean Light Ice Cream',\n","  'Organic Whole Milk Washington Black Cherry Yogurt',\n","  'Organic Mango Yogurt',\n","  'Organic Grassmilk Yogurt Wild Blueberry',\n","  'Brown Extra Large Grade AA Eggs',\n","  'Sea Salt Caramel Ice Cream',\n","  'Organic Vanilla Grassmilk Yogurt',\n","  '100% Grass-Fed No-Grain Strawberry Yogurt'],\n"," ['Organic Green Beans', 'Fully Husked & Trimmed Super Sweet Corn'],\n"," ['Almonds', 'Crushed Red Pepper', 'Shredded Mozzarella Cheese', 'Pistachios'],\n"," ['Organic Yellow Onion',\n","  'Organic Baby Spinach',\n","  'Shredded Sharp Cheddar Cheese',\n","  'Grade A Extra Large Eggs',\n","  'Classic Bacon',\n","  'Sliced Almonds',\n","  'Shredded Parmesan Cheese',\n","  'Ground Beef',\n","  'Flaked Coconut Unsweetened',\n","  'Smoked Andouille Chicken Sausage',\n","  'Pecan Halves'],\n"," ['USDA AA Extra Large Eggs', 'Premium Lots of Pulp Orange Juice'],\n"," ['Chopped Onions',\n","  'Wild Chanterelle Mushroom Ravioli',\n","  'Strawberry Flavored Organic Z Fruit Rope',\n","  'Shortbread Cookies',\n","  'Ricotta And Spinach Tondi',\n","  'Pearl Couscous Natural',\n","  'Fresh Rocket Pesto Sauce'],\n"," ['Organic Lemon',\n","  'Organic Mayonnaise',\n","  'Trilogy Kombucha Drink',\n","  'Gluten Free 7 Grain Bread',\n","  'Reserve Cheddar Cheese'],\n"," ['Cucumber Kirby',\n","  'Organic Whole String Cheese',\n","  'Baby Spinach',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Blueberries',\n","  'Michigan Organic Kale',\n","  'Organic Avocado',\n","  'Organic Thompson Seedless Raisins',\n","  'Whole Milk Ricotta Cheese',\n","  'Grape White/Green Seedless',\n","  'Total 0% Greek Yogurt',\n","  'Organic Wheat-Free & Gluten-Free Original Crackers',\n","  'Mung Bean Sprouts',\n","  'Salted Tub of Butter',\n","  'Bing Cherries',\n","  'Coconut Milk Non Dairy Frozen Dessert Chocolate Peanut Butter Swirl',\n","  'Organic Vanilla Extract',\n","  'Coconut Milk Non Dairy Frozen Dessert No Sugar Added Mint Chip',\n","  'Dairy Free Gluten Free Cookie Dough Coconut Milk Frozen Dessert',\n","  'No Stir Creamy Coconut Almond Butter'],\n"," ['Banana',\n","  'Hass Avocados',\n","  'Broccoli Crown',\n","  'Honeycrisp Apple',\n","  'Organic Small Bunch Celery',\n","  'Red Peppers',\n","  'Organic Thompson Seedless Raisins',\n","  'Organic Kosher Dill Pickles',\n","  'Original Hummus',\n","  'Brussels Sprouts',\n","  'Kale Greens',\n","  'Orange Bell Pepper',\n","  'YoBaby Peach Pear Yogurt',\n","  'Happy Baby Spinach, Mango, and Pear Baby Food',\n","  'Mild Cheddar Cheese Sticks',\n","  'Baby Food Stage 2 Blueberry Pear & Purple Carrot',\n","  'Apple and Carrot Stage 2 Baby Food',\n","  'Whipped Cream Cheese',\n","  'Apples, Kale & Avocados Organic Baby Food',\n","  'Stage 2 Sweet Potato Corn & Apple Baby Food',\n","  'Spinach Peas & Pear Stage 2 Baby Food',\n","  'Stage 2 Spinach, Apple & Kale',\n","  'Matzo Ball Mix',\n","  'Egg Matzos',\n","  'Bite-Size Honey Gold Potatoes',\n","  'White Wine and Balsamic Vinegar Flavored Beets',\n","  'Bread & Butter Pickle Chips',\n","  'Eat Your Colors Purples Puree Baby Food',\n","  'Organic Whole Grain Red Quinoa',\n","  'Mild Major Grey Chutney'],\n"," ['Organic Grape Tomatoes',\n","  'Carrots',\n","  'Organic Roma Tomato',\n","  'Green Bell Pepper',\n","  'Organic Green Beans',\n","  'Organic Medium Salsa',\n","  'Organic Crushed Red Pepper',\n","  'Heat & Eat Organic Bowl Brown Rice',\n","  'Dill Weed',\n","  'Thai Peanut Sauce',\n","  'Organic Grated Ginger'],\n"," ['Organic Zucchini',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Hass Avocado',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Pita Chips, Simply Naked, Party Size',\n","  'Roasted Red Pepper Hummus',\n","  'Mineral Water',\n","  'Fridge and Freezer Baking Soda Pack',\n","  'Key Lime Yoghurt',\n","  'Original Restaurant Style Tortilla Chips',\n","  'Flip™ Low-Fat Key Lime Crumble Greek Yogurt',\n","  'Multigrain Pita Chips',\n","  'Sugarfree',\n","  'Hearty Thick Cut Bacon',\n","  'Hummus Roasted Pepper',\n","  'Ice Pops Sugar Free, Orange, Cherry, Grape',\n","  'Blue Sparkle Fabric Softener Dryer Sheets',\n","  'Infusions Ultra Downy® Infusions™ Lavender Serenity™ Liquid Fabric Conditioner 41 FL Oz Fabric Enhancers',\n","  'Flip Peanut Butter Dream Greek Yogurt'],\n"," ['Original Hawaiian Sweet Rolls',\n","  'Fresh Mozzarella All-Natural Sliced Cheese',\n","  'Pineapple Spears',\n","  'Rainbow Bell Peppers',\n","  'Organic Crimini Mushrooms',\n","  'De Mexico Bottle'],\n"," ['Favorites Alfredo Pasta with Chicken & Broccoli',\n","  'Chicken with Peanut Sauce',\n","  'Roasted white meat chicken, whole wheat noodles, green beans & carrots in a creamy chili peanut sauce. Thai-Style Noodles With Chicken',\n","  'Chicken with Almonds',\n","  'Sesame Stir Fry with Chicken',\n","  'Light & Fit Nonfat Peach Yogurt',\n","  'Natural Whole Grain Instant Brown Rice',\n","  'Marketplace Chicken Pecan',\n","  'Glazed Chicken',\n","  'Roasted Turkey and Vegetables',\n","  'Tender white meat chicken in a red chile lime sauce with a medley of roasted corn, peppers, and rice Chile Lime Chicken',\n","  'Marketplace Pomegranate Chicken',\n","  'Nonfat Light & Fit Blueberry Yogurt'],\n"," ['Organic Hass Avocado',\n","  'Organic Cucumber',\n","  'Organic Raspberries',\n","  'Black Plum',\n","  'Cinnamon Brown Sugar Breakfast Biscuits',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Fat Free Milk',\n","  'Organic Blue Corn Chips',\n","  'Organic Green Leaf Lettuce',\n","  'Peach on the Bottom Nonfat Greek Yogurt',\n","  'Pomegranate Arils',\n","  'ALMONDBREEZE UNSWEETENED',\n","  'Non-Fat Greek Yogurt With Strawberries on the Bottom',\n","  'Tomatoes Sauce',\n","  'Mexican Style Taco Shredded Cheese',\n","  'Non-Fat Blueberry on the Bottom Greek Yogurt',\n","  'Flour Tortilla',\n","  'Low-Fat Mango on the Bottom Greek Yogurt',\n","  '4% Milkfat Cottage Cheese Small Curd 22 OZ',\n","  'Soft Baked Banana Bread',\n","  'Microwavable Mac & Cheese',\n","  'Chocolate Almond Butter Soft-Baked Cookies',\n","  'Jumbo Shells Pasta',\n","  'Fully Cooked Original Bacon',\n","  'Bamba Peanut Snack',\n","  'Soft-Baked Ripe Strawberry Cereal Bars',\n","  'Mixed Berry BelVita Bites',\n","  'Family Size Popcorn Shrimp'],\n"," ['Organic Lemon',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Half & Half',\n","  'Whole Almonds',\n","  'Milk, Organic, Vitamin D',\n","  'Unsweetened Premium Iced Tea'],\n"," ['Total 0% Nonfat Greek Yogurt',\n","  'Olive Oil Cooking Spray',\n","  'Strawberry on the Bottom Nonfat Greek Yogurt',\n","  'Organic Green Onions',\n","  'Organic 1% Milk',\n","  'Sliced White Mushrooms',\n","  'Organics Spinach',\n","  'Grade A Large White Eggs',\n","  'Raspberry Sorbet',\n","  \"Kellogg's Chocolatey Peanut Butter Granola Bars\",\n","  'Reddi Wip Fat Free Whip Cream',\n","  'Chocolate Malt Mix'],\n"," ['Packaged Grape Tomatoes',\n","  'Organic Tortilla Chips',\n","  'Red Bell Peppers',\n","  'Original Beef Jerky'],\n"," ['Bag of Organic Bananas',\n","  'Uncured Genoa Salami',\n","  'Organic Whole Milk with DHA Omega-3',\n","  'Organic Red Bell Pepper',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Original Hommus',\n","  'Shredded Parmesan',\n","  'Honey Bunny Grahams',\n","  'Organic Honey Graham Crackers',\n","  'Organic Bell Pepper',\n","  'Organic Tomato Basil Pasta Sauce',\n","  'Orange Bell Pepper',\n","  'Rosemary Ham',\n","  'Organic Skim Milk with DHA Omega-3',\n","  'Soft Pretzel Mini Buns',\n","  '100% Raw Coconut Water With Fair Trade Coffee',\n","  'Alfredo Pasta Sauce',\n","  'Ricotta And Spinach Tondi',\n","  'Mild Thin Sliced Cheddar Cheese'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Garlic',\n","  'Organic Yellow Onion',\n","  'Organic Lemon',\n","  'Organic Chili Powder Blend',\n","  'Organic Cilantro',\n","  'Organic Red Bell Pepper',\n","  'Oven Roasted Turkey',\n","  'Organic Paprika',\n","  'Organic Tomato Sauce',\n","  'Organic Bell Pepper',\n","  'Organic Black Beans',\n","  'Unsweetened Almondmilk',\n","  '100% Apple Juice',\n","  'Blood Oranges',\n","  'Outrageous B & B Pickles',\n","  'Orange Peel In Dark Chocolate Bar',\n","  'Sriracha Chili Sauce',\n","  'Crushed Tomatoes With Basil',\n","  'Organic Dijon Mustard',\n","  'Organic Lime',\n","  'Sprouted Multi-Grain Bread',\n","  'Wild Chanterelle Mushroom Ravioli',\n","  'Lacinato Kale Og',\n","  'Sesame Whole Wheat Crackers',\n","  'Original Puffins Cereal',\n","  'Organic Shredded Parmesan',\n","  'Organic Strawberries & Wild Strawberries Fruit Spread',\n","  'Diced Hot Green Chiles',\n","  'Cold Brew Coffee Mocha',\n","  'Pale Ale & Honey Spice Mustard',\n","  'EnviroKidz Chocolate Choco Chimps',\n","  'Organic Shiitake & Vegetable Potstickers',\n","  'Lemon Pepper'],\n"," ['Tiny Twists Pretzels',\n","  'Lite Raspberry Walnut Vinaigrette Dressing',\n","  'Original Classic Sausage Pizza'],\n"," ['Organic Italian Parsley Bunch',\n","  'Large Lemon',\n","  'Shredded Parmesan',\n","  'Unsalted Butter',\n","  'Heavy Whipping Cream',\n","  'Honey Mustard and Onion Pretzels Pieces',\n","  'Organic Powdered Sugar',\n","  'Turbinado Sugar'],\n"," ['2% Reduced Fat Milk',\n","  'Cranberry Juice Cocktail',\n","  'Teriyaki Beef Jerky',\n","  'Jalapeno Beef Jerky'],\n"," ['Organic Carrot Bunch',\n","  'Green Bell Pepper',\n","  'Russet Potatoes',\n","  'Brown Fertile Jumbo Grade AA Eggs'],\n"," ['Electrolyte Enhanced Water'],\n"," ['Organic Hass Avocado',\n","  'Organic Cucumber',\n","  'Organic Zucchini',\n","  'Organic Baby Spinach',\n","  'Organic Basil',\n","  'Roma Tomato',\n","  'Veggie Chips',\n","  'Organic Cinnamon Harvest Cereal',\n","  'White Hot Dog Rolls',\n","  'Jalapeno',\n","  'Jumbo Veggie Protein Smart Dogs Links'],\n"," ['Organic Baby Spinach',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Red Peppers',\n","  'Organic Avocado',\n","  'Organic Red Onion',\n","  'Pure Sparkling Water',\n","  'Fresh Mozzarella Ball',\n","  'Ezekiel 4:9 Bread Organic Sprouted Whole Grain',\n","  'Total 0% Raspberry Yogurt',\n","  'Organic Lowfat Milk',\n","  'Organic Campari Cocktail Tomatoes',\n","  'Fresh Basil',\n","  'Gluten-Free Red Hot Blues Made with Organic Blue  Corn Tortilla Chips',\n","  'Spicy Black Bean & Kale Organic Soup'],\n"," ['Organic Raspberries',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Tomato Cluster'],\n"," ['Hazelnut Spread with Cocoa',\n","  'Chocolate Sandwich Cookies',\n","  'Orange & Lemon Flavor Variety Pack Sparkling Fruit Beverage',\n","  'Extra Strength Energy Shot'],\n"," ['Banana',\n","  'Red Onion',\n","  'Slices Cheddar Cheese',\n","  'Original Chocolate Pudding Snacks',\n","  'Sweet Red Grape Tomatoes',\n","  'Plain Whole Milk Yogurt',\n","  \"Chick'n Nuggets\",\n","  'Fruit & Nutty Almonds Raisins Cranberries Pecans Granola',\n","  'Buffalo Wings'],\n"," ['0% Greek Strained Yogurt', 'Parmesan Crisps', 'Cooked Shrimp'],\n"," ['Baby Cucumbers',\n","  'Scoops! Tortilla Chips',\n","  'Beef & Bean Burritos',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  'Zero Calorie Sweetener',\n","  'Gluten Free Dark Chocolate Chunk Chewy with a Crunch Granola Bars',\n","  'Natural Medium Cheddar Cheese',\n","  'Bag Of Organic Lemons',\n","  'Maple Pumpkin Seeds with Sea Salt Chewy with a Crunch Granola Bars',\n","  'Cheese Cracker Sandwiches'],\n"," ['Bag of Organic Bananas',\n","  'Organic Garlic',\n","  'Organic Italian Parsley Bunch',\n","  'I Heart Baby Kale',\n","  'Organic Strawberries',\n","  'Apple Honeycrisp Organic',\n","  'Organic Large Brown Eggs',\n","  'Organic Bell Pepper',\n","  'Blood Oranges',\n","  'Organic Shredded Mild Cheddar',\n","  'Organic Orange Juice',\n","  'Organic Freeze Dried Strawberries',\n","  'Organic Green Seedless Grapes',\n","  'Organic Orange Bell Pepper',\n","  '100% Pomegranate Juice',\n","  'Organic Coconut Yogurt',\n","  'Organic Creamy Tomato Basil Soup',\n","  'Organic Popcorn',\n","  'Made Good Chocolate Chip Granola Bars',\n","  'Organic Dried Mango'],\n"," ['Lowfat 2% Milkfat Cottage Cheese',\n","  '2% Reduced Fat Milk',\n","  'Presliced Everything Bagels',\n","  'Whole Frozen Strawberries',\n","  'Spicy Jalapeno Cream Cheese Spread'],\n"," ['Celery Hearts',\n","  'Packaged Grape Tomatoes',\n","  'Brussels Sprouts',\n","  'Grilled Chicken Strips',\n","  'Organic Virgin Coconut Oil'],\n"," ['Spring Water', 'Soda', 'Apples'],\n"," ['Bag of Organic Bananas',\n","  'Organic Garlic',\n","  'Organic Yellow Onion',\n","  'Fresh Cauliflower',\n","  'Hass Avocados',\n","  'Organic Baby Spinach',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Apple Honeycrisp Organic',\n","  'Michigan Organic Kale',\n","  'Bartlett Pears',\n","  'Almond Nut & Rice Cracker Snacks',\n","  'Organic Red Onion',\n","  'Organic Low Sodium Chicken Broth',\n","  'Yellow Bell Pepper',\n","  'Sweet Onion',\n","  'Orange Bell Pepper',\n","  'Organic Sweet Relish',\n","  'Peanut Butter Creamy With Salt',\n","  'Organic Dijon Mustard',\n","  'Cinnamon Raisin Bread'],\n"," ['Strawberry Candy Twists',\n","  'Free & Clear Natural Dishwasher Detergent',\n","  'Stage 1 Newborn Hypoallergenic Liquid Detergent'],\n"," ['Organic Garlic',\n","  'Large Lemon',\n","  'Yukon Gold Potatoes 5lb Bag',\n","  'Fresh Whole Chicken',\n","  'Raspberries',\n","  'Organic Rainbow Carrots',\n","  'Salted Tub of Butter',\n","  'Crescent Rolls',\n","  'Truffle Mousse',\n","  'Organic Poultry Blend'],\n"," ['Bag of Organic Bananas',\n","  'Spring Water',\n","  'Organic Unsweetened Almond Milk',\n","  'Russet Potato',\n","  'Limes',\n","  'Small Hass Avocado',\n","  'Organic Broccoli Florets',\n","  'Bean & Cheese Burrito',\n","  'Grass Fed Ground Beef',\n","  'Soft Potato Bread',\n","  'Wild Skipjack Light Tuna',\n","  'Mushroom And Ricotta Ravioli',\n","  'Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips',\n","  'English Breakfast Tea Bags',\n","  'Semi-Sweet Mini Chocolate Chips',\n","  'Red Chile Enchilada Sauce'],\n"," ['Natural Spring Water',\n","  'Large Pitted California Ripe Olives',\n","  'Ultra Soft Facial Tissues',\n","  'Goldfish Cheddar Baked Snack Crackers Multi Packs',\n","  'Sea Minerals Foaming Hand Wash',\n","  'Zero Vitamin Water',\n","  'Original Baked Snack Crackers',\n","  'Zero Calories Berry Nutrient Enhanced Water',\n","  'Go-Gurt Strawberry Splash and Cool Cotton Candy Tubes',\n","  'Plus Lotion Boxed Tissues',\n","  'Ultra Strong Toilet Paper',\n","  'Large Pitted Black Olives'],\n"," ['Lactose Free Cream Cheese', 'Three Cheese Mini Pizza Bagels Frozen Snacks'],\n"," ['Organic Low Sodium Chicken Broth',\n","  'Mint Chocolate Chip',\n","  'Organic Baby Spring Mix',\n","  'Unsalted Butter',\n","  'Whole Milk',\n","  'Organic Whole Wheat Bread',\n","  'Chocolate Sea Salt',\n","  'Cold-Brew Black Coffee'],\n"," ['Bunched Cilantro',\n","  'Limes',\n","  'Michigan Organic Kale',\n","  'Organic Ginger Root',\n","  'Organic Avocado',\n","  'Half & Half',\n","  'Reduced Fat Milk',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Crunchy Almond Butter'],\n"," ['Cruisers Diapers Jumbo Pack - Size 6'],\n"," ['Clementines', 'Strawberries', 'Raspberries'],\n"," ['Organic Zucchini',\n","  'Banana',\n","  'Honeycrisp Apple',\n","  'Small Hass Avocado',\n","  'Michigan Organic Kale',\n","  'Red Potatoes',\n","  'Butternut Squash',\n","  'Blood Oranges',\n","  'Honey Vanilla Chamomile Caffeine-Free Herbal Tea',\n","  'Garlic Hummus',\n","  'Vanilla 0% Milkfat Yogurt',\n","  'Organic Carrots',\n","  'Whole Milk Plain Greek Yogurt',\n","  'Sliced Beets No Salt Added'],\n"," ['Premium Unsweetened Iced Tea',\n","  'With Raspberry Lemonade',\n","  'Orange Soda',\n","  'Miniatures Assortment Party Bag',\n","  'Cabernet Sauvignon Wine',\n","  'Strawberry Soda'],\n"," ['Bag of Organic Bananas',\n","  'Organic Blueberries',\n","  'Organic Yellow Onion',\n","  'Green Beans',\n","  'Large Lemon',\n","  'Apple Honeycrisp Organic',\n","  'Organic Whole Milk',\n","  'Organic Graham Crunch Cereal',\n","  'Grated Parmesan',\n","  'Parsley, Italian (Flat), New England Grown',\n","  'Organic Dill',\n","  'Organic YoKids Very Berry Smoothies',\n","  'Organic Cheddar Bunnies',\n","  'Sliced Baby Bella Mushrooms',\n","  'YoBaby Blueberry Apple Yogurt',\n","  'Apple and Carrot Stage 2 Baby Food',\n","  'Organic Light Agave Nectar',\n","  'Broccoli & Apple Stage 2 Baby Food',\n","  'Organic Mountain Forest Honey Light Amber',\n","  'Organic Gluten Free Elbow Pasta',\n","  'Spinach Peas & Pear Stage 2 Baby Food',\n","  'Organic Cream of Mushroom Condensed Soup',\n","  'Annie Peely Fruit 4.5 Z',\n","  'Organic Pizza Snack Mix Crackers',\n","  'Herbs Chives'],\n"," ['Organic Chicken & Mozzarella Ravioli'],\n"," ['Organic Cherry Tomatoes',\n","  'Original Hummus',\n","  'Organic Extra Firm Tofu',\n","  'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry',\n","  'Fresh Ricotta',\n","  'Four Fruits 100% Fruit Spread',\n","  'Sourdough Whole Grain Crispbread'],\n"," ['Strawberries',\n","  'Large Lemon',\n","  'Organic Baby Spinach',\n","  'Seedless Red Grapes',\n","  'Chopped Spinach',\n","  'Baby Brussels Sprouts',\n","  'Trilogy Kombucha Drink',\n","  'Synergy Organic & Raw Cosmic Cranberry',\n","  'Chicken Breast Cutlets',\n","  'Organic Rainbow Chard Blend'],\n"," ['Diet Coke',\n","  'Diet Tonic Water',\n","  'Puerto Rican Rum',\n","  'Brown Ale',\n","  'Family Size Peanut Butter Cracker Sandwiches',\n","  'Chablis'],\n"," ['Organic Half & Half',\n","  'Fat Free Skim Milk',\n","  'Almonds',\n","  'French Vanilla Creamer',\n","  'Original Hot Sauce',\n","  'Original Almondmilk',\n","  'Moisturizing Lotion',\n","  'Pistachios',\n","  'Cheez-It Baked Snack Crackers',\n","  'Balsamic Vinegar'],\n"," ['Tomato Paste',\n","  'Organic Plain Kefir',\n","  'Thin Spaghetti Pasta',\n","  'Original Sparkling Seltzer Water',\n","  \"Grab 'N Go® Cups & Lids 12 Ounce\"],\n"," ['Green Peas',\n","  'Banana',\n","  'Organic Whipped Naturally Buttery Spread',\n","  'Fudgsicle No Sugar Added',\n","  'Diet Coke',\n","  'Gluten Free Extra Crispy Fast Food French Fried Potatoes',\n","  'Sesame Seeded Sandwich Rolls',\n","  'Strawberry Jam',\n","  'Plain Bagel',\n","  'Chocolate, Butterfinger, Butterfinger Fudge Frozen Dairy Dessert Cones',\n","  'Coldstone Sweet Cream'],\n"," ['Organic Strawberries',\n","  'Roasted Garlic Hummus',\n","  'Original Veggie Straws',\n","  'Thin Whole Wheat Sandwich Buns',\n","  'Raspberry Preserves'],\n"," ['Blueberries',\n","  'Vitamin D Added Evaporated Milk',\n","  'Organic Whipping Cream',\n","  'White Paper Towels',\n","  'All Natural Virgin Lemonade',\n","  'La Lechera Sweetened Condensed Milk, Fat Free',\n","  'Extra Creamy Whipped Cream',\n","  'Ibuprofen 200 Mg'],\n"," ['Organic Strawberries',\n","  'Organic Cilantro',\n","  'White Corn',\n","  'Ultra Fine Mist Aerosol Hairspray',\n","  'Penne Pasta',\n","  'Farfalle Pasta',\n","  'Tater Tots',\n","  'Hot (101305, 101352) Italian Sausage',\n","  'Country Style Baked Beans',\n","  'Thin Mint Crisp Oreos',\n","  \"Bourbon and Brown Sugar Grillin' Beans\"],\n"," ['Organic Raspberries',\n","  'Organic Blackberries',\n","  \"Newman O's Creme Filled Mint Chocolate Cookies\",\n","  'Orange Juice 100% Juice',\n","  'Milk, Reduced Fat, 2% Milkfat',\n","  'Unsweetened Chocolate Baking Bar',\n","  '1.5% Milkfat Grade A Pasteurized Lowfat Cottage Cheese'],\n"," ['Mustard, Sweet Hot'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Basil',\n","  'Avocado Roll',\n","  'Corn Chips',\n","  'Asian Pears'],\n"," ['Super Greens Salad',\n","  'Large Lemon',\n","  'Organic Cilantro',\n","  'Limes',\n","  'Red Peppers',\n","  'Green Bell Pepper',\n","  'English Seedless Cucumber',\n","  'Organic Extra Firm Tofu',\n","  'Unsweetened Cashew Milk',\n","  'Red Cabbage',\n","  'Snow Peas',\n","  'Gala Apples',\n","  'Mellow White Miso',\n","  'Flourless  Sprouted Whole Grain 7-Sprouted Grains English Muffins',\n","  'Super Green Juice Blend Smoothie',\n","  'Lite Cheese Presliced Bonus Pack',\n","  'Cherry Vanilla Granola',\n","  'Protein Power Greens Smoothie',\n","  'Instant Rice Vermicelli Noodles'],\n"," ['Zero Calorie Cola',\n","  'Soda',\n","  'Sparkling Water',\n","  'Vegetable Oil',\n","  'Original Dried Cranberries',\n","  'Chocolate Powder'],\n"," ['Organic Hass Avocado',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Garlic',\n","  'Green Beans',\n","  'Organic Cilantro',\n","  'Honeycrisp Apple',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Red Potato',\n","  'Organic Low Sodium Chicken Broth',\n","  'Chocolate Chip Cookies',\n","  'Organic Tomato Sauce',\n","  'Organic Jalapeno Pepper',\n","  'Purity Farms Ghee Clarified Butter',\n","  'Whole Milk',\n","  'Colby Cheese Sticks',\n","  '80% Lean Ground Beef',\n","  'Shredded Hash Browns'],\n"," ['Anti Viral Upright Facial Tissue', 'Invisible Solid Unscented Deodorant'],\n"," ['Organic Baby Spinach',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Seedless Red Grapes',\n","  'Milk, Vitamin D',\n","  'Raisin Bran Cereal',\n","  'Organic Romaine',\n","  'Organic Mango Slices',\n","  'Organic Honey Graham Crackers',\n","  'Organic Tomato Cluster',\n","  'Veganic Sprouted Brown Rice Cacao Crisps',\n","  'Uncured Black Forest Ham',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Italian Pasta Sauce Basilico Tomato, Basil & Garlic',\n","  'Emmentaler Swiss Slices',\n","  'Organic Bread with 21 Whole Grains',\n","  'Fig Newmans Fruit Filled Cookies',\n","  'Spinach And Ricotta Ravioli',\n","  'Organic Mango Chunks',\n","  'Organic Chicken & Mozzarella Ravioli'],\n"," ['Bag of Organic Bananas',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Nectarines',\n","  'Oatmeal Raisin Walnut Energy Bar'],\n"," ['Bag of Organic Bananas',\n","  'Organic Whole String Cheese',\n","  'Organic Baby Arugula',\n","  'Organic Garlic',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Baby Carrots',\n","  'Organic English Cucumber',\n","  'Red Peppers',\n","  'Hass Avocado',\n","  'Limeade',\n","  'Strawberry Ice Cream',\n","  'Organic Strawana Probugs Kefir',\n","  'Gogo Squeez Organic Apple Strawberry Applesauce on the Go',\n","  'Dubliner Wedge Pre Cut Cheese',\n","  'Grated Parmesan',\n","  'Cheese Puffs Original',\n","  'Orange Juice',\n","  'Spaghetti',\n","  'Sea Salt Pita Chips',\n","  'Soup, Traditional, with Tofu',\n","  'Almond Nut & Rice Cracker Snacks',\n","  'Hummus, Hope, Original Recipe',\n","  'Extra Cheesy Cheddar Bunnies Crackers',\n","  'Tomato Kumato',\n","  'Feta Cheese Crumbles',\n","  'Marinated Cabecou',\n","  'Villagio Marzano Heavenly Tomatoes',\n","  'Cucumber & Garlic  Tzatziki',\n","  'Organic Smoked Paprika',\n","  'Organic Paprika',\n","  'Organic Cayenne Pepper',\n","  'Seedless Red Grapes',\n","  'Meyer Lemon',\n","  'Crispy Seasoned Potato Puffs with Roasted Garlic & Cracked Pepper',\n","  'Vegetable Fried Rice',\n","  'Medium Cheddar Cheese'],\n"," ['Organic Strawberries',\n","  'Large Alfresco Eggs',\n","  'Organic  Whole Milk',\n","  'Natural Classic Pork Breakfast Sausage',\n","  'Organic Gala Apples',\n","  'Organic Naturally Brewed Soy Sauce'],\n"," ['Organic Hass Avocado',\n","  'Organic Raspberries',\n","  'I Heart Baby Kale',\n","  'Roma Tomato',\n","  'Organic Banana',\n","  'Organic Red Onion',\n","  'White Corn',\n","  'Organic Blackberries',\n","  'Emmentaler Swiss Slices',\n","  'Turkey Pastrami',\n","  'Organic Uncured Sliced Black Forest Ham',\n","  'Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips',\n","  'Mild El Nino Salsa',\n","  'Chocolate Peanut Butter Non Dairy Frozen Dessert'],\n"," ['Organic Grape Tomatoes',\n","  'Uncured Genoa Salami',\n","  'Organic Strawberries',\n","  'Organic Shredded Carrots',\n","  'Seedless Red Grapes',\n","  'Organic Good Seed Bread',\n","  'Organic Navel Orange',\n","  'Organic Italian Salad',\n","  'Grilled Chicken Breast Strips',\n","  'Organic Shredded Mild Cheddar',\n","  'Organic Bagged Kale Salad Mix',\n","  'Organic Ranch Dressing',\n","  'Organic Smoked Chicken Breast'],\n"," ['Bag of Organic Bananas',\n","  'Organic Raw Unfiltered Apple Cider Vinegar',\n","  'Granny Smith Apples',\n","  'Organic Carrot Bunch',\n","  'Red Onion',\n","  'Organic Tomato Sauce',\n","  'Unsweetened Almondmilk',\n","  '100% Recycled 2 Ply Jumbo Paper Towel Roll',\n","  'Multigrain Tortilla Chips',\n","  'Smartwater',\n","  'Total 0% Nonfat Plain Greek Yogurt',\n","  'Crunchy Almond Butter',\n","  'Organic Celery',\n","  'Organic Crushed Fire Roasted Tomatoes',\n","  'Total 0% Cherry Nonfat Yogurt',\n","  'Mild Fire Roasted Diced Green Chiles',\n","  'Organic Whole Fryer Chicken'],\n"," ['Banana',\n","  'Limes',\n","  'Half & Half',\n","  'Squeeze Pouch Sour Cream',\n","  'Raw Probiotic Drink Gut Shot Smoked Jalapeno'],\n"," ['Old Vine Zinfandel Wine', 'Rioja'],\n"," ['Organic Cilantro',\n","  'Rosemary Hand Soap',\n","  'Organic Romaine',\n","  'Salted Tub of Butter',\n","  'Low Sodium Bacon',\n","  'Cut Hearts Of Palm',\n","  'Wild Berry Smoothie',\n","  'Low Sodium Refried Black Beans'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Whole String Cheese',\n","  'Organic Hot House Tomato',\n","  'Organic Strawberries',\n","  'Organic Baby Carrots',\n","  'Half & Half',\n","  'Original Hummus',\n","  'Organic Frozen Peas',\n","  'Low Fat Plain Yogurt',\n","  'Vanilla Pure Almond Milk',\n","  'Cinnamon Raisin Bread',\n","  \"World's Best Mac & Cheese\",\n","  'Edamame In Pod',\n","  'Organic Macaroni & Cheese'],\n"," ['Zero Calorie Cola',\n","  'Sparkling Natural Mineral Water',\n","  'Organic Coconut Water',\n","  'Natural Artesian Water',\n","  'Glass Cleaner'],\n"," ['Alpine Spring Water', 'Passionfruit Sparkling Water'],\n"," ['Blueberries',\n","  'Raspberries',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Brut Cuvee Sparkling Champagne',\n","  'Pink Moscato Champagne, Sparkling, California',\n","  'Champagne Flute'],\n"," ['Organic Garnet Sweet Potato (Yam)',\n","  'Asparagus',\n","  'Organic Cucumber',\n","  'Organic Strawberries',\n","  'Banana',\n","  'Pure Irish Butter',\n","  'Large Lemon',\n","  'Cheese Pizza Snacks',\n","  'Blueberries',\n","  'Organic Red Bell Pepper',\n","  'Michigan Organic Kale',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Thin Stackers Organic Red Rice & Quinoa Puffed Grain Cakes',\n","  'Lime Sparkling Water',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Unsalted Pure Irish Butter',\n","  'Organic Great Northern Beans',\n","  'Organic California Style Sprouted Bread',\n","  '1 Liter',\n","  'Aged White Cheddar Baked Rice & Corn Puffs Gluten Free Lunch Packs',\n","  'Pretzel Sticks, Gluten Free',\n","  'Organic Beans & Rice Cheddar Cheese Burrito',\n","  'Peanut Butter Dark Chocolate + Protein Bar',\n","  'Organic Vegetable Broth',\n","  'Organic Gala Apples, Bag',\n","  'Italian Pasta Salad',\n","  'Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips'],\n"," ['Asparagus',\n","  'Large Lemon',\n","  'Roasted Turkey Breast',\n","  'Unsalted Pure Irish Butter',\n","  'Gluten-Free Chicken Nuggets',\n","  'Reduced Fat 2% Lactose-Free Milk',\n","  'Natural Gluten-Free Beef Corn Dogs'],\n"," ['Cucumber Kirby',\n","  'Banana',\n","  'Organic Large Brown Eggs',\n","  'Michigan Organic Kale',\n","  'Roma Tomato',\n","  'Large Grapefruit',\n","  'Strawberry Rhubarb Yoghurt',\n","  'Organic Avocado',\n","  'Cantaloupe',\n","  'Organic Low Sodium Chicken Broth',\n","  'Lime Sparkling Water',\n","  'Salted Butter',\n","  'Lemon Hummus',\n","  'Italian Sparkling Mineral Water',\n","  'Sour Cream',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Organic Flax Plus Multibran Flakes',\n","  'Organic White Corn & Wheat Tortillas',\n","  'PlusShot Strawberry Probiotic Juice Drink',\n","  'Hickory Smoked Turkey Breast'],\n"," ['Chicken Apple Sausage',\n","  'Creamy Peanut Butter',\n","  'Roasted Pine Nut Hummus',\n","  'Organic Egg Whites',\n","  'Coconut Water',\n","  'Hass Avocado Variety',\n","  'Kiwi'],\n"," ['Bag of Organic Bananas',\n","  'Cage Free Extra Large Grade AA Eggs',\n","  'Organic Seasoned Yukon Select Potatoes Hashed Browns',\n","  'Organic Lemon',\n","  'Organic Basil',\n","  'Ground Turkey Breast',\n","  'Sea Salt Pita Chips',\n","  'Cucumber & Garlic  Tzatziki',\n","  'Tomato Sauce',\n","  'Original Hummus',\n","  'Organic White Onions',\n","  'Organic Black Beans',\n","  'Organic Gala Apples',\n","  'Sliced Black Olives',\n","  'Organic Diced Tomatoes',\n","  'Sourdough Bread',\n","  'Canned Aranciata Orange',\n","  'Garlic & Fine Herbs Gournay Cheese'],\n"," ['Organic Half & Half',\n","  'Organic Cilantro',\n","  'Green Bell Pepper',\n","  'Pure Vegetable Oil',\n","  'Red Onion',\n","  'Serrano Chile Peppers',\n","  'Organic Fancy Shredded Mozzarella Cheese',\n","  'Thick & Crispy Tortilla Chips',\n","  'Orange Bell Pepper',\n","  'Cream Top Smooth & Creamy Maple Yogurt',\n","  'Lavender Hand Soap',\n","  'White Corn Tortillas',\n","  'Rice Krispies Cereal',\n","  'Salted Sweet Cream Butter',\n","  'Lemonade',\n","  'Non Fat Black Cherry on the Bottom Greek Yogurt',\n","  'Mini Seedless Watermelon Pack',\n","  'Kefir Cultured Strawberry Milk Drink',\n","  'Original Low Fat Orange Cream Yogurt',\n","  'Lavender Dish Soap',\n","  'Vegetarian Refried Beans',\n","  'Beefsteak Tomato',\n","  'All Natural Whole Strawberries',\n","  'Spanish Rice Rice Mix',\n","  'Unsweetened Premium Iced Tea',\n","  'Salsa Casera Mild',\n","  'Mesquite with Lime Juice Marinade',\n","  'Raw Wild Natural Honey'],\n"," ['Bag of Organic Bananas',\n","  'Clementines, Bag',\n","  'Hass Avocados',\n","  'Organic Roma Tomato',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Whole Milk',\n","  'Whole Wheat Bread',\n","  'Organic Garbanzo Beans',\n","  'Organic Red Onion',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Organic Broccoli Crowns',\n","  'Organic Bunch Beets',\n","  'Red Kidney Beans',\n","  'Classic White Bread',\n","  'Organic Yellow Zucchini',\n","  'Black Seedless Grapes',\n","  'Organic Coconut Yogurt',\n","  'Organic Mango Yogurt',\n","  'Mango Yoghurt',\n","  'Cream Top Apricot Mango Fruit on the Bottom Yogurt',\n","  'Organic Darjeeling Tea Bags'],\n"," ['Bag of Organic Bananas',\n","  'Hass Avocados',\n","  'Organic Apple Juice',\n","  'Apple Sauce Pouches'],\n"," ['Organic Hass Avocado',\n","  'Organic Raspberries',\n","  'Organic Tomato Cluster',\n","  'Jalapeno Peppers'],\n"," ['Carrots',\n","  'Banana',\n","  'Sugar Snap Peas',\n","  'Red Vine Tomato',\n","  'Organic Bosc Pear',\n","  'Organic Extra Large Brown Omega 3 Eggs',\n","  'Olive Hummus',\n","  'Gluten Free Peanut Butter Dark Chocolate Chewy With a Crunch Granola Bars',\n","  'Original Classic Organic Rice Drink',\n","  'Gluten and Dairy Free Rice Macaroni and Cheeze',\n","  'Indian Mattar Tofu',\n","  'Harvest Casserole Bowls',\n","  'Brown Rice & Vegetables Bowl',\n","  'Soft Baked Chocolate Chip Cookies Gluten Free'],\n"," ['Bag of Organic Bananas',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Small Bunch Celery',\n","  'Organic Broccoli',\n","  'Organic 55% Semi Sweet dark Chocolate Chips',\n","  'Vanilla ... Ahhh Frozen Coconut Dessert',\n","  'Organic Cashew Butter'],\n"," ['Fresh Cauliflower',\n","  'Banana',\n","  'Heavy Whipping Cream',\n","  'Presliced Everything Bagels',\n","  'Organic Yams',\n","  'Organic Gluten Free Non-Dairy Beans & Rice Burrito',\n","  'Honey Vanilla Chamomile Caffeine-Free Herbal Tea',\n","  'Brown Rice Pasta Spirals',\n","  'Large Grade AA Organic Eggs',\n","  'Fresh Ground Turkey',\n","  'Mini Peeled Carrots',\n","  'Dark Chocolate Almond Milk',\n","  'Organic Ginger Cookie Caramel Coconut Bliss Non-dairy Frozen Dessert'],\n"," ['Organic Half & Half',\n","  'Organic Cucumber',\n","  'Original Apple 100% Juice',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Original Orange Juice',\n","  'Baby Spring Mix',\n","  'Original Seltzer Water',\n","  'Cashews Halves & Pieces',\n","  'Reduced Sugar Craisins'],\n"," ['Organic Fat Free Milk',\n","  'Organic Mini Sandwich Crackers Cheddar Cheese',\n","  'Plain Greek Yogurt',\n","  'Organic Chicken & Apple Sausage',\n","  'Original Multigrain Spoonfuls Cereal',\n","  'French Roast Ground Coffee',\n","  'Organic Uncured Sliced Black Forest Ham',\n","  'Organic Flax Plus Multibran Flakes',\n","  'Old Fashioned Whole Wheat Bread',\n","  'Gluten Free Rice Crust Spinach Pizza',\n","  'Gluten Free & Dairy Free Thai Red Curry With Organic Jasmin Rice & Vegetables',\n","  'Sweet Orange Vanilla Honest Shampoo + Body Wash',\n","  'Butternut Squash Tamales With Cheese',\n","  'Compostable Coffee Filters'],\n"," ['Organic Yellow Onion',\n","  'Organic Lemonade',\n","  '100% Whole Wheat Bread',\n","  'Banana',\n","  'Organic Red Bell Pepper',\n","  'Orange Sparkling Water',\n","  'Organic Bunny Fruit Snacks Berry Patch',\n","  'Oven Roasted Turkey Breast',\n","  'Sparkling Water Grapefruit',\n","  'Peanut Butter Ice Cream Cup',\n","  'Free & Clear Unscented Baby Wipes',\n","  'Organic Brown Rice',\n","  '100% Recycled Paper Towels',\n","  'Salt & Pepper Krinkle Chips',\n","  'Cut Tulips (Choose Color)',\n","  'Organic Apple Chicken Sausage',\n","  'Peanut Butter Whole Grain Clusters',\n","  'Cold-Brew Black Coffee'],\n"," ['Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Organic Raw Kombucha Gingerade',\n","  'XL Emerald White Seedless Grapes',\n","  'Organic Strawberries',\n","  'Organic Cilantro',\n","  'Mild Salsa',\n","  'Limes',\n","  'Small Hass Avocado',\n","  'Pineapple Apple Mint Organic Cold Pressed Juicd',\n","  'Michigan Organic Kale',\n","  'Organic Mint',\n","  'Red Vine Tomato',\n","  'Water',\n","  'Organic Ginger Root',\n","  'Orange Juice',\n","  'Organic Romaine',\n","  'Organic Granny Smith Apple',\n","  'Organic Tortilla Chips',\n","  '100% Raw Coconut Water',\n","  'Traditional Refried Beans',\n","  'Sparkling Lemon Water',\n","  'Organic Good Seed Bread',\n","  'Avocado Roll',\n","  'Corn Chips',\n","  'Organic Jalapeno Pepper',\n","  'Organic Dark Chocolate Peanut Butter Cups',\n","  'Organic Navel Orange',\n","  'Blood Oranges',\n","  'Synergy Organic & Raw Cosmic Cranberry',\n","  'Sea Salt & Vinegar Potato Chips',\n","  'Organic Whipped Naturally Buttery Spread',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Organic Medjool Dates',\n","  'Corn Tortilla Chips',\n","  '6 OZ LA PANZANELLA CROSTINI ORIGINAL CRACKERS',\n","  'Ancient Grain Original Granola',\n","  'Almond Milk Strawberry Yogurt',\n","  'Watermelon Agave Frozen Pops',\n","  'Cold-pressed, Deliciously Hydrating Watermelon Water',\n","  'Midnight Moon',\n","  'Uncooked Medium Flour Tortillas',\n","  'Organic Pineapple Chunks',\n","  'Organic Vegetarian Mild Refried Beans With Green Chiles',\n","  'Limonata Sparkling Lemon Beverage',\n","  'Premium Ice Cubes',\n","  'Fermented Mango Probiotic Soy Drink',\n","  'Organic Salted Pistachio',\n","  'Strawberry Peach Still Artesian Water',\n","  'Chamomile'],\n"," ['Organic Hass Avocado',\n","  'Large Lemon',\n","  'Italian Sausage',\n","  'Organic Spring Mix',\n","  'Reduced Fat Milk 100% Lactose Free',\n","  'Sliced Soppressata Salame',\n","  'Light Organic Agave Nectar'],\n"," ['Soda', 'Lemon-Lime Soda', 'Ginger Ale'],\n"," ['Bag of Organic Bananas',\n","  'Pure Irish Butter',\n","  'Organic Baby Spinach',\n","  'Cinnamon Rolls with Icing',\n","  'Bartlett Pears',\n","  'Red Peppers',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Organic Fuji Apple',\n","  'Golden Grahams Cereal',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Fruit Gushers Fruit Flavored Snacks Variety Pack',\n","  'Bean, Rice and Cheddar Burrito',\n","  'Lacinato Kale Og',\n","  'Apple Cinnamon Cheerios Cereal',\n","  'No Sugar Added Apple Sauce',\n","  'Shredded Beef Burrito',\n","  'Chicken Bean and Rice Burrito',\n","  'Organic Blue Agave',\n","  'Thin Mint Crisp Oreos',\n","  'Garlic & Chive Hummus',\n","  'Chicken Breast Grilled Strips',\n","  'Frozen Unsweetened Whole Strawberries',\n","  'Vanilla Yogurt Rasins',\n","  'Frozen Organic Peach Slices'],\n"," ['Multi Grain Waffles',\n","  'Select-A-Size White Giant Roll Paper Towels',\n","  'Sparkling Water Grapefruit',\n","  'Roasted Garlic Hummus',\n","  'Strawberry Preserves',\n","  'Everything Deli Style Pretzel Crisps Crackers',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Ultra Built Strong Paper Bowls',\n","  '8.5\\\\\" Microwavable Cut Resistant Plates'],\n"," ['Banana',\n","  'Crinkle Cut French Fries',\n","  'Ice Cream Sandwiches Vanilla',\n","  '100% Whole Wheat Hot Dog Buns',\n","  'Uncured Beef Hot Dogs'],\n"," ['Bunny-Luv Organic Carrots'],\n"," ['Sugar Snap Peas',\n","  'Brussels Sprouts',\n","  'Asparation/Broccolini/Baby Broccoli',\n","  'Kale Greens',\n","  'Toasted Coconut Almondmilk Blend',\n","  'Organic Whole White Mushrooms',\n","  '100% Whole Wheat English Muffin 6 Ct',\n","  'Raisins',\n","  'Sweet Red Grape Tomatoes',\n","  'Organic Farro',\n","  'Red Lentils',\n","  '37% Less Sodium Soy Sauce',\n","  'Bag Pink Lady Apples',\n","  'Chicken Stock'],\n"," ['Organic Blueberries',\n","  'Banana',\n","  'Strawberries',\n","  'Navel Oranges',\n","  'Spinach',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Mango Chunks',\n","  'Zero Strawberry Lemon',\n","  'Chicken Thighs',\n","  'Diet Ginger Ale',\n","  'Golden Delicious Apple',\n","  'Milano Dark Chocolate Cookies',\n","  'Diet Soda',\n","  'Original Puffins Cereal',\n","  'Vitamin Water Zero Rise Orange',\n","  '2 % Reduced Fat  Milk',\n","  'Baby Kale Mix',\n","  'Original Chocolate Chip Cookies',\n","  'Pop-Tarts Frosted Strawberry Toaster Pastries',\n","  'Mozzarella Light Low Moisture Part Skim String Cheese',\n","  'Body Wash Pink Grapefruit Body Clear®',\n","  'Orange Mango Sparkling Water Beverage'],\n"," ['Organic Garnet Sweet Potato (Yam)',\n","  'Organic Whole Strawberries',\n","  'Red Peppers',\n","  'Sustainably Soft Bath Tissue',\n","  'Spanish Rice Pilaf Mix',\n","  'Red Potatoes',\n","  'Berry Medley',\n","  'Organic Whole Grain Granola',\n","  'Morning Oat Crunch',\n","  'Sliced Brown Portabello Mushrooms'],\n"," ['Whole Milk',\n","  'Plastic Cup Squared Base - 30 CT',\n","  'Dark Chocolate Double Chocolate Nantucket',\n","  'Frosted Chocolate Fudge Pop-Tarts'],\n"," ['Electrolyte Enhanced Water',\n","  'Shredded Parmesan',\n","  'Traditional Basil Pesto Sauce',\n","  'Crushed Red Pepper',\n","  'Organic Popcorn'],\n"," ['Organic Whole Cashews',\n","  'Organic  Dried & Unsulfured Orchard Select Apricots',\n","  'Organic Tree Ripened Plums',\n","  'Apple Green Cups'],\n"," ['Organic 2% Reduced Fat Milk',\n","  'Strawberries',\n","  'Organic Avocado',\n","  'Plain Bagels',\n","  'Boneless And Skinless Chicken Breast',\n","  'Sweet Butter Salad',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Gluten Free Pizza Three Cheese',\n","  'Sea Salt Garden Veggie Straws',\n","  'Classic Soda',\n","  'Selects Turkey Hot Dogs',\n","  'Hearts Of Romaine',\n","  'Creamy Deluxe Shells & Real Aged Cheddar Sauce',\n","  'Cinnamon French Toaster Sticks',\n","  'G Series Perform Lemon Lime Sports Drink',\n","  'Reduced Fat Medium Cheddar Cheese',\n","  'Reduced Fat 4 Cheese Mexican Shredded Cheese',\n","  'Glacier Freeze',\n","  'Whipped Butter',\n","  'Natural Choice Deli Oven Roasted Turkey',\n","  'Small Curd Low Fat Cottage Cheese',\n","  'Cheese Stuffed Crust Supreme'],\n"," ['Hass Avocados', 'Pineapple Spears'],\n"," ['Large Lemon', 'Grape White/Green Seedless'],\n"," ['Organic Unsweetened Vanilla Almond Milk',\n","  'Gluten Free Pizza Three Cheese',\n","  'Gluten Free Uncured Frozen Pepperoni Pizza',\n","  'Mint Chip Ice Cream',\n","  'Triple Caramel Chunk Ice Cream'],\n"," ['Bag of Organic Bananas',\n","  'Organic Blueberries',\n","  'Clementines',\n","  'Pineapple Chunks',\n","  'Organic Salted Butter',\n","  'Bean & Cheese Burrito',\n","  'Organic Crimini Mushrooms',\n","  'Organic Sweet Cherries',\n","  'Organic Animal Crackers'],\n"," ['Organic Cucumber',\n","  'Organic Bartlett Pear',\n","  'Organic Avocado',\n","  'Uncured, No Sugar, Hickory Smoked Bacon',\n","  'Tommy/Kent/Keitt/Haden Mango',\n","  'Beef Jalapeno Sea Salt Bone Broth',\n","  'Sweet Potatoes',\n","  'Wild Wonders Gourmet Medley Tomatoes',\n","  'Gut Shot Classic',\n","  'Naturally Smoked Oysters in Pure Olive Oil',\n","  'Sardines With Lemon Packed In Olive Oil'],\n"," ['0% Fat Free Organic Milk',\n","  'Craveables Pepperoni Pizza',\n","  'Craveables Four Cheese Pizza',\n","  '2nd Foods - Beef & Beef Gravy',\n","  'Original Beef Flavor Dog Snacks'],\n"," ['Organic Whole String Cheese',\n","  'Organic Bell Pepper',\n","  'Organic Russet Potato',\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Organic Green Seedless Grapes',\n","  'Organic Orange Bell Pepper'],\n"," ['Organic Baby Arugula',\n","  'Organic Italian Parsley Bunch',\n","  'Fresh Cauliflower',\n","  'Sinfully Sweet Campari Tomatoes',\n","  'Organic Avocado'],\n"," ['Bag of Organic Bananas',\n","  'Asparagus',\n","  'Organic Grape Tomatoes',\n","  'Organic Zucchini',\n","  'Organic Strawberries',\n","  'Carrots',\n","  'Extra Virgin Olive Oil',\n","  'Sparkling Water',\n","  'Organic English Cucumber',\n","  'Globe Eggplant',\n","  'Organic Fat Free Milk',\n","  'Cucumber & Garlic  Tzatziki',\n","  'Total 2% Lowfat Greek Strained Yogurt With Blueberry',\n","  'Cantaloupe',\n","  'Original Hummus',\n","  'Organic Red Onion',\n","  'Red Potatoes',\n","  'Mozzarella Cheese',\n","  'Seven Grain Crispy Tenders',\n","  'Organic Brown Rice',\n","  'Organic Baby Kale Mix',\n","  'Rigatoni Pasta',\n","  'Collard Greens',\n","  'Kumato Tomatoes',\n","  'Whole Wheat Tandoori Naan',\n","  'Organic Jasmine Rice',\n","  'Potato Yukon Gold Organic',\n","  'Multi Grain Crispbread',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Organic Orange Bell Pepper',\n","  'Peanut Butter Whole Grain Clusters',\n","  'Homemade Corn Chips',\n","  'Uncured Diced Pancetta',\n","  'Strained Tomatoes',\n","  'Vegetable Bouillon',\n","  'Organic Creamy Tomato Soup',\n","  \"Teriyaki Chick'n Strips\",\n","  'Artichoke Burgers French Herb',\n","  'Pesto Alla Genovese Basil',\n","  'Coconut Fruit Bars',\n","  'Fresh Fussilli',\n","  'Bucatini Pasta',\n","  'Tuna Fillets in Olive Oil',\n","  'Grated Reggiano Parmigiano'],\n"," ['Organic Yellow Onion',\n","  'Large Lemon',\n","  'Organic Baby Spinach',\n","  'Eggs, Cheese & Turkey Sausage Breakfast Burrito',\n","  'Organic Grade A Large Brown Eggs',\n","  'Frozen Broccoli Florets',\n","  'Organic Italian Salad',\n","  'Berry Medley',\n","  'Organic Diced Tomatoes',\n","  'Garlic Powder',\n","  'Gluten Free Chocolate Chip Cookies',\n","  'Cran Raspberry Sparkling Water',\n","  'Organic Brown Rice Cake Salt-Free',\n","  'Original Rotisserie Chicken',\n","  'Garlic & Parmesan Plentils',\n","  'Pitted Kalamata Olives',\n","  'Chicken Apple Sausage Egg White Breakfast Burrito',\n","  'Organic Chopped Garlic',\n","  'Fancy Whole Artichoke Hearts',\n","  'Peanut Butter Chocolate Chip Macrobar',\n","  'Organic Coconut Granola MacroBar',\n","  'Macrobar Cherries N Berries'],\n"," ['100% Whole Wheat Bread',\n","  'Organic Baby Spinach',\n","  'Roma Tomato',\n","  'Organic Chicken Thighs',\n","  'Vegan Buttery Sticks',\n","  'Cultured Coconut Water Probiotic Beverage'],\n"," ['Organic Bunny Fruit Snacks Berry Patch',\n","  'Pizza Poppers Uncured Pepperoni',\n","  'Coconut Cream Pie',\n","  'Cheddar Puffs'],\n"," ['Guacamole',\n","  'Banana',\n","  'Strawberries',\n","  'Organic Baby Carrots',\n","  'Granny Smith Apples',\n","  'Celery Sticks',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Organic American Cheese Singles',\n","  'Gluten-Free Chicken Nuggets',\n","  'Reduced Fat 2% Chocolate Milk',\n","  'Chocolate Chip',\n","  'Bean & Rice Chips sea salt',\n","  'Premium Apple Cider'],\n"," ['Organic Half & Half', 'Organic Avocado', 'Sliced White Mushrooms'],\n"," ['Banana',\n","  'Organic Carrot Bunch',\n","  'Small Hass Avocado',\n","  'Organic Whole Milk',\n","  'Seedless Red Grapes',\n","  'Organic 85% Cacao Dark Chocolate Bar',\n","  'Plantain Chips',\n","  'Goji Berries, Sun-Dried',\n","  'Organic Coconut Yogurt',\n","  'Organic Sweetened Cranberries',\n","  'California White Jasmine Rice',\n","  'Dark Chocolate Frozen Dessert bars',\n","  'Organic Elderberry Tonic'],\n"," ['Organic Raspberries',\n","  '100% Whole Wheat Bread',\n","  'Organic Strawberries',\n","  'Banana',\n","  'Uncured Hickory Smoked Sunday Bacon',\n","  'Large Lemon',\n","  'Small Hass Avocado',\n","  'Natural Premium Coconut Water',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Honey Nut Cheerios',\n","  'Vanilla Skyr Nonfat Yogurt',\n","  'Icelandic Style Skyr Blueberry Non-fat Yogurt',\n","  'Organic Fuji Apple',\n","  'Organic Chicken & Apple Sausage',\n","  'Organic 1% Low Fat Milk',\n","  'Strawberry Preserves',\n","  'Tulips 10 Stem',\n","  'Sprouted Grain Low Sodium Bread',\n","  'Ataulfo Mango',\n","  'Yogurt, Strained Low-Fat, Coconut',\n","  'Non Fat Raspberry Yogurt',\n","  'Smoked Salmon',\n","  'Ancient Grain Original Granola',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Organic Raisin Bran Cereal',\n","  'Organic Large Grade AA Omega-3 Eggs',\n","  'Organic White Corn & Wheat Tortillas',\n","  'Crunch Granola Bar Chocolate Chip',\n","  'Fresh Fussilli',\n","  'Peanut Butter Gluten Free Breakfast Bars',\n","  'Pesto Sauce',\n","  'Tuna Fillets in Spring Water'],\n"," ['Whips Creamy Whipped Peanut Butter',\n","  'Twinkies',\n","  'Large Enriched Bread',\n","  'Special K Chocolatey Delight Cereal',\n","  'Swaddlers Diapers Super Pack, Size 3'],\n"," ['Bag of Organic Bananas',\n","  'Lemon-Lime Soda',\n","  'Country White Bread',\n","  'Original Enriched Parboiled Long Grain Rice',\n","  'Select-A-Size Paper Towels, White, 2 Huge Rolls = 5 Regular Rolls  Towels/Napkins',\n","  'Apple Apricot Sauce'],\n"," ['Strawberries',\n","  'Russet Potato',\n","  'Boneless Skinless Chicken Breasts',\n","  'Brussels Sprouts',\n","  'Cold Brew Coffee',\n","  'Crackers Cheddar Bunnies Snack Packs',\n","  'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt',\n","  'Mini Original Babybel Cheese',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  'Organic Apples Pommes'],\n"," ['Bag of Organic Bananas',\n","  'Limes',\n","  'Organic Bartlett Pear',\n","  'Organic Avocado',\n","  'No Salt Added Black Beans',\n","  'Honeycrisp Apples',\n","  'Corn Tortillas',\n","  'Barbecue Potato Chips',\n","  'Brown Fertile Large Grade AA Eggs',\n","  'Kombucha Gingerade',\n","  'Roasted Tomato Salsa',\n","  'Homemade Corn Chips',\n","  'Ice',\n","  'Organic Chicken Breast In Water'],\n"," ['Sparkling Water Grapefruit'],\n"," ['100% Carrot Juice',\n","  'Premium Grapefruit Large',\n","  'Margarine',\n","  'House Blend Instant Coffee'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Blueberries',\n","  'Organic Garlic',\n","  'Organic Baby Spinach',\n","  'Organic Lentil Soup',\n","  'Shredded Parmesan',\n","  'Organic Premium Tomato Paste',\n","  'Four Cheese Thin Crust Pizza',\n","  'Raspberries',\n","  'Goat Cheese Crumbles',\n","  'Thin Crust Pepperoni Pizza',\n","  'Organic Low Fat Vegetable Barley Soup',\n","  'All Purpose Crushed Tomatoes',\n","  'Organic 100% Whole Wheat No. 4 Spaghetti',\n","  'Organic Beans & Rice Cheddar Cheese Burrito',\n","  'Cafe Latte Pure Lightly Sweetened Iced Coffee With Almond Milk',\n","  'Organic Lentil Vegetable Soup',\n","  'Tomato Purée',\n","  'Total 2% Lowfat Greek Yogurt with Honey'],\n"," ['100% Whole Wheat Bread',\n","  'Large Lemon',\n","  'Premium Calcium & Vitamin D No Pulp Orange Juice',\n","  'Sweet Tea W/Real Sugar Iced Tea',\n","  'Hot Wasabi Peas',\n","  'Natural Extra Sharp Cheddar Cheese'],\n"," ['Spaghetti Pasta',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Flour Tortillas Soft Taco',\n","  'Red Seedless Grapes',\n","  'Smartfood White Cheddar Cheese Popcorn',\n","  'Lowfat 2% Milkfat Cottage Cheese',\n","  'Chick Peas',\n","  'Eggo Homestyle Waffles',\n","  'Fresh Whole Garlic',\n","  'Bread, Country Buttermilk',\n","  'Organic Pitted Green Olives',\n","  'Traditional 98% Fat Free',\n","  'Calcium Pulp Free Orange Juice',\n","  'Extra Long Grain Enriched Rice',\n","  'Milk, Reduced Fat, 2% Milkfat',\n","  'Sliced Sourdough Bread',\n","  'Vegetarian Refried Beans',\n","  'Thick Medium Cheddar Slices',\n","  'Activia Vanilla Low Fat Yogurt',\n","  'Organic Medium Chili',\n","  'Deli-Sliced Tamed Jalapeno Peppers',\n","  'Grands! Southern Homestyle Buttermilk Biscuits',\n","  'V-Fusion Energy Peach Mango Vegetable Fruit Juice',\n","  'Buttermilk Complete Pancake Mix',\n","  'Mini Pancakes',\n","  'Kosher Dill Pickle Spears',\n","  'Cinnamon Toast Crunch Crispy Sweetened Whole Wheat & Rice Cereal',\n","  'Homestyle Mashed Potatoes'],\n"," ['Organic Unsweetened Almond Milk',\n","  'Organic Romaine Lettuce',\n","  'Red Vine Tomato',\n","  'Red Peppers',\n","  'Organic Avocado',\n","  'Raisin Bran Cereal',\n","  'Organic No Salt Added Diced Tomatoes',\n","  'English Seedless Cucumber',\n","  'Beyond Beef Fiesty Crumble',\n","  'White Onion',\n","  'Thin Crust Pepperoni Pizza',\n","  'Made With Organic Beans & Rice Burrito Non-Dairy',\n","  'Dark Chocolate With Sea Salt & Almonds',\n","  'Dark Red Kidney Beans No Salt Added',\n","  'Not Beef Bouillon Cubes'],\n"," ['Chocolate Chip Cookies'],\n"," ['Organic Greek Whole Milk Blended Vanilla Bean Yogurt',\n","  'Cold-Pressed Organic Grapefruit',\n","  'Organic Plain Whole Milk Yogurt',\n","  'Organic Tellicherry Black Peppercorns',\n","  'Organic Orange Fruit Juice',\n","  'Peppermint Caffeine Free Herbal Tea Bags',\n","  'Porcini Mushroom Tortellini',\n","  'Organic Recipe Granola'],\n"," ['Organic Broccoli Florets',\n","  'Whole Milk Ricotta Cheese',\n","  'Organic Baby Kale',\n","  'Frozen Organic Wild Blueberries',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Organic Berry Blend',\n","  'Organic 85% Ground Beef',\n","  'Organic Boneless Skinless Chicken Breast',\n","  'Ultimate Flora RTS Daily Probiotic 15 Billion'],\n"," ['Lemon-Lime Soda',\n","  'Adult Chicken & Rice Dry Dog Food',\n","  '24/7 Performance Cat Litter',\n","  'Original Restaurant Style Tortilla Chips'],\n"," ['Natural Artisan Water',\n","  'Organic Bunny Fruit Snacks Berry Patch',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Chocolate Lowfat Milk',\n","  'Organic AppleApple',\n","  'Crackers Bunny Graham Friends Snack Packs'],\n"," ['2% Reduced Fat DHA Omega-3 Reduced Fat Milk',\n","  'Pop-Tarts Frosted Brown Sugar Cinnamon Pastries'],\n"," ['Cage Free Grade A Large Brown Eggs',\n","  'Mild Italian Chicken Sausage',\n","  'Original Rotisserie Chicken',\n","  'Original Pure Creamy Almond Milk',\n","  'Organic Fettuccine',\n","  'Organic Summer Strawberry Bunny Fruit Snacks',\n","  'Sesame Crispbread',\n","  'Organic Sensitivity Infant Formula with Iron'],\n"," ['Cage Free Large White Eggs', 'Green Tea With Ginseng and Honey'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Cilantro',\n","  'Organic Sour Cream',\n","  'Organic Tomato Cluster',\n","  'Red Raspberries',\n","  'Organic Milk',\n","  'Yo Baby Organic Vanilla Yogurt',\n","  'Liquid Vitamin C Orange Flavor',\n","  \"Organic Mother's Milk Herbal Tea\",\n","  'Sambucus Immune Bio-Certified Elderberry Natural Syrup',\n","  'Organic Acai Berry 100% Juice',\n","  'Organic Sambucus for Kids Standardized Elderberry'],\n"," ['Black Beans',\n","  'Clementines',\n","  'Limes',\n","  'Clover Honey',\n","  'White Onion',\n","  'Poblano Pepper',\n","  'Blood Oranges',\n","  'Red Leaf Lettuce',\n","  'Squeeze Tomato Ketchup',\n","  'Honey Bunches of Oats Honey Roasted Cereal',\n","  'Low-Fat Mango on the Bottom Greek Yogurt',\n","  'Natural Fresh Goat Cheese',\n","  'Total Advanced Whitening Toothpaste',\n","  'Medium Black Bean Salsa',\n","  'Original Sweetened Dried Cranberries',\n","  'Virgin Avocado Oil'],\n"," ['Distilled Water'],\n"," ['Vitamin D Whole Milk',\n","  'Organic Half Spring Mix',\n","  'Premium Original Saltine Crackers',\n","  'Original Apple 100% Juice',\n","  'Regular',\n","  '100% White Grape Juice',\n","  'Bag of Organic Lemons',\n","  'Grade A Large Brown Eggs',\n","  'Freshly Shredded Parmesan Cheese',\n","  'Grapes',\n","  'Double Noodle Classic Recipe Condensed Soup',\n","  'Natural Fresh Goat Cheese',\n","  'Roasted & Salted Shelled Pistachios',\n","  'Star Wars Healthy Kids Pasta Condensed Soup',\n","  'Glazed Buttermilk Doughnuts'],\n"," ['Seedless Cucumbers',\n","  'Organic Mixed Vegetables',\n","  'Sweet Kale Salad Mix',\n","  'Frozen Whole Strawberries',\n","  'Original Almondmilk'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Baby Broccoli',\n","  'Half & Half',\n","  'Organic Gala Apples, Bag',\n","  'Organic Extra Large Omega 3 Grade AA Eggs',\n","  'Cold Brew Coffee Double Espresso with Almond Milk',\n","  'Organic Cultured Cream Cheese Spread',\n","  'Organic Bunny-Luv Fresh Carrots',\n","  'Red Onions',\n","  'Dairy Free Soymilk Neapolitan Non-Dairy Frozen Dessert',\n","  'Umbrian Lentils'],\n"," ['Organic Blueberries',\n","  'Organic Ketchup',\n","  'Plain Bagels',\n","  'Solid White Albacore Tuna'],\n"," ['Banana',\n","  'Original Recipe Tapioca Pudding',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Organic Bread with 21 Whole Grains',\n","  '1% Lowfat Milk'],\n"," ['Pure Irish Butter',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Cherrios Honey Nut',\n","  'Ultra Dawn Ultra Dishwashing Liquid Antibacterial Orange 21.6 Oz Dish Care',\n","  'Cereal',\n","  'Pizzeria Style Classic Crust Pepperoni Pizza',\n","  'Original Scent HE Laundry Detergent',\n","  'Vanilla Almond Breeze',\n","  'Classic White Bread',\n","  'Chocolate Fudge Brownie Ice Cream',\n","  'Mandarin Orange Chicken',\n","  'Clean Care Mega Rolls Toilet Paper',\n","  'Wieners',\n","  'One Ply Choose A Size Big Roll Paper Towel Rolls',\n","  'Chicken Wings Family Pack',\n","  'Canned Meat 25% Less Sodium',\n","  'Mini Double Caramel Ice Cream Bars',\n","  'Original 120 count Fabric Enhancers Dryer Sheets',\n","  'Party Size Cheese Flavored Snack Puffs',\n","  'Almond Ice Cream Bars',\n","  'Clean Linen Concentrated Bleach',\n","  'Orange Tangerine Liquid Water Enhancer',\n","  'Force Flex Tall Kitchen Drawstring Bags'],\n"," ['Bag of Organic Bananas',\n","  'Hass Avocados',\n","  'Organic Cilantro',\n","  'Limes',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Whole Milk',\n","  'Organic Ginger Root',\n","  'Gluten Free Pretzel Sticks',\n","  'Lemon Grass',\n","  'Organic Chicken Drumsticks',\n","  'Original Non-Dairy Beverage'],\n"," ['Ultra Plush 3 ply Toilet Paper 12 Double Rolls', 'Sourdough Deli Bread'],\n"," ['Uncured Hickory Smoked Sunday Bacon',\n","  'Natural Shredded Mexican Style Four Cheese',\n","  'Skim Milk',\n","  'Manzanilla Pimiento Stuffed Olives',\n","  'Finely Shredded Mild Cheddar Cheese',\n","  'Ginger Ale Soda',\n","  'Medium Pitted California Ripe Olives',\n","  \"L'elegance Toothpicks\"],\n"," ['Bunched Cilantro',\n","  'Banana',\n","  'Basil Pesto',\n","  'Diced Tomatoes',\n","  'Lime Sparkling Water',\n","  'Petite Diced Tomatoes',\n","  'All Purpose Flour',\n","  'Organic Large Grade A Brown Eggs',\n","  'Yellow Onions',\n","  'Grated Parmesan Cheese',\n","  'Light Vanilla Almond Milk',\n","  'Elbow Macaroni Pasta',\n","  'Simply 100 Crunch Strawberry Chocolate Truffle Non-Fat Greek Yogurt',\n","  'Ditalini Pasta'],\n"," ['Distilled Water',\n","  'Classic Soda',\n","  'Unsweetened Organic Soy Milk',\n","  'Honey Nut Crunch Cereal',\n","  'Onions, Minced'],\n"," ['Organic Strawberries',\n","  'Boneless Skinless Chicken Breasts',\n","  'Red Onion',\n","  'Flank Steak',\n","  'Balsamic Vinaigrette'],\n"," ['15 Grain Whole Grain Bread'],\n"," ['Spring Water',\n","  'Clementines',\n","  'Hass Avocados',\n","  'Organic Baby Spinach',\n","  'Roasted Pine Nut Hummus',\n","  'Rainbow Bell Peppers',\n","  'Frozen Organic Blueberries',\n","  'Marcona Almonds'],\n"," ['Boneless Skinless Chicken Breast',\n","  'Italian Dry Salame',\n","  'Fresh Mozzarella Cheese',\n","  'Classic Soda',\n","  'Ginger Ale',\n","  'Extra Long Grain Enriched Rice',\n","  'Tomato Yellow Cherry',\n","  'Sugarfree',\n","  'Rising Crust Pepperoni Pizza',\n","  'Fettuccine Alfredo',\n","  'Swedish Meatballs',\n","  'Freshly made pasta in a Real Cheddar cheese sauce Macaroni & Cheese',\n","  'Fettuccine Alfredo with Chicken & Broccoli',\n","  'Lemon Fresh Concentrated Bleach',\n","  'Sour Patch Kids Ice Pops'],\n"," ['Lime Sparkling Water',\n","  'Ginger Beer',\n","  'Vantage Choose-A-Size Regular Roll Towels'],\n"," ['Organic Garlic',\n","  'Limes',\n","  'Organic Sliced White Mushrooms',\n","  'Organic Sunday Bacon',\n","  'Authentic Red Curry Paste',\n","  'Vegetarian Roll'],\n"," ['Strawberries',\n","  'Broccoli Crown',\n","  'Organic Strawana Probugs Kefir',\n","  'Iced Coffee Lightly Sweet',\n","  'Ranch Veggie Dip',\n","  'Cherubs Tomatoes',\n","  '4% Milkfat Small Curd Cottage Cheese with Chives',\n","  'Strawberry Cream Cheese Spread'],\n"," ['Fat Free Milk',\n","  'Coke Zero',\n","  'Sweet Garden Peas',\n","  'Fanta Zero Sugar Free Orange Soda Fridge Pack',\n","  'White Italian Bread',\n","  'Hearty Rye Bread'],\n"," ['Water',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Garbanzo Beans',\n","  'Organic White Onions',\n","  'Organic Gala Apples',\n","  'Simply Stock Organic Vegetable Unsalted Stock',\n","  'Uncured Bacon + Cranberry Bison Bar',\n","  'Sprouted Green Lentils',\n","  'Organic Seaweed Snack, Raw'],\n"," ['Cherubs Heavenly Salad Tomatoes',\n","  'Organic Strawberries',\n","  'Organic Baby Carrots',\n","  'Broccoli Crown',\n","  'Red Raspberries',\n","  'Wheat Gluten Free Waffles',\n","  'Medium Navel Orange',\n","  'Vanilla Coconut Milk Yogurt'],\n"," ['Blueberries',\n","  'Goldfish Cheddar Baked Snack Crackers',\n","  'Fresh CA Grown Eggs',\n","  \"Organic D'Anjou Pears\",\n","  'Unsweetened Vanilla Almond Milk',\n","  'Baked Soft Pretzels',\n","  'Mandarins Bag',\n","  'Apple Juice',\n","  'Organic Apples Pommes',\n","  'Green Tea',\n","  'California Diced Peaches Packed in Water No Sugar Added',\n","  '100% Lactose Free 1% Lowfat Milk',\n","  'Corn Pops Family Size Cereal',\n","  'String Cheese, Mozzarella'],\n"," ['French Vanilla Creamer',\n","  'Seedless Red Grapes',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  '2% Reduced Fat Milk',\n","  'Ground Beef',\n","  'Vanilla Coke Zero',\n","  'Clean Breeze® Brise Pure® Liquid Laundry Detergent'],\n"," ['Organic Red Bell Pepper',\n","  'Organic Reduced Fat 2% Milk',\n","  'Mozzarella Cheese',\n","  'Plain Mini Bagels',\n","  'Margherita Pizza',\n","  'Cavatappi No. 87 Macaroni',\n","  'Organic Basmati Rice',\n","  'Unsweetened Watermelon Water',\n","  'Diced Onions',\n","  'Penne Lisce',\n","  'Crunchy Baked Corn Sticks'],\n"," ['Organic Raspberries',\n","  'Plain Greek Yogurt',\n","  'Trilogy Kombucha Drink',\n","  'Carrot',\n","  'Papaya',\n","  'Dragon Fruit',\n","  'Organic Garden Blend Sprouts'],\n"," ['Chunky Peanut Butter'],\n"," ['Organic Baby Arugula',\n","  'Organic Cucumber',\n","  'Uncured Genoa Salami',\n","  'Organic Yellow Onion',\n","  'Organic Strawberries',\n","  'Banana',\n","  'Organic Shredded Carrots',\n","  'Organic Basil',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Small Hass Avocado',\n","  'Plain Bagels',\n","  'Organic Granny Smith Apple',\n","  'Organic Bell Pepper',\n","  \"Organic D'Anjou Pears\",\n","  'Organic Large Brown Grade AA Cage Free Eggs',\n","  'Organic 1% Low Fat Milk',\n","  'Tommy/Kent/Keitt/Haden Mango',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Organic Sea Salt Potato Chips',\n","  'Cut Hearts Of Palm',\n","  'Organic Green Seedless Grapes',\n","  'Organic Orange Bell Pepper',\n","  'Organic Cookies & Cream Ice Cream',\n","  'Organic Broccoli Slaw',\n","  'Tofu Miso Ramen'],\n"," ['Organic Italian Parsley Bunch',\n","  'Broccoli Crown',\n","  'Organic Cherry Tomatoes',\n","  'Marinara Sauce',\n","  'Organic Mixed Vegetables',\n","  'Baby Seedless Cucumbers',\n","  'Organic Black Beans',\n","  'Organic Greek Nonfat Yogurt With Mixed Berries',\n","  'Organic Rainbow Carrots',\n","  'Roasted Garlic Hummus',\n","  'Medium Cheddar Cheese Block',\n","  'Yellow Onions',\n","  'Organic Greek Lowfat Yogurt With Cherries',\n","  'Organic Greek Lowfat Yogurt With Blueberries',\n","  'Green Onions',\n","  'Romaine Lettuce',\n","  'Whole Wheat English Muffins',\n","  'Organic Nonfat Greek Yogurt With Peaches',\n","  'Bay Leaves',\n","  'Organic Milk Chocolate Peanut Butter Cups',\n","  'Garlic & Fine Herbs Gournay Cheese',\n","  'Beef Short Ribs',\n","  'Low Fat Cottage Cheese',\n","  'Medium Grain Rice',\n","  'Spectacular Ginger Beer'],\n"," ['Organic Grape Tomatoes',\n","  'Organic Hothouse Cucumbers',\n","  'Organic Yellow Peaches',\n","  'Strawberries',\n","  'Small Hass Avocado',\n","  'Apple Honeycrisp Organic',\n","  'Organic Whole Cashews',\n","  'Organic Rolled Oats',\n","  'Walnut Halves & Pieces',\n","  'Smoked Turkey Breast Slices',\n","  'Organic Baby Rainbow Carrots',\n","  'Heavy Whipping Cream',\n","  'Organic Diced Tomatoes',\n","  'Traditional Plain Greek Yogurt',\n","  'Light Brown Sugar',\n","  'Olive Hummus',\n","  'Organic Jumbo Grade A Pastured Eggs',\n","  'Chocolate Milk Frozen Pops',\n","  'Zucchini Noodles',\n","  'Take & Bake Multigrain Loaf'],\n"," ['Banana',\n","  'Hass Avocados',\n","  'Strawberries',\n","  'Organic Blackberries',\n","  'Skim Milk',\n","  'Organics Spinach',\n","  'Grape Chia Kombucha',\n","  'Total 0% Peach Yogurt'],\n"," ['Large Lemon',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Tomato Ketchup',\n","  'Organic Kiwi',\n","  'Natural Artesian Water',\n","  'Boneless Chicken Breast',\n","  'Organic Capellini',\n","  'Skin Trip Coconut Soap Bar'],\n"," ['Baby Arugula',\n","  'Cage Free Brown Eggs-Large, Grade A',\n","  'Sea Salt Grinder',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  'Hardwood Smoked Bacon',\n","  'Quart Sized  Easy Open Freezer Bags',\n","  'Diet Coke',\n","  'Pasta Sauce, Original, Traditional',\n","  'Zebra Cakes',\n","  'Whole Grain Thin Spaghetti Pasta'],\n"," ['Asparagus',\n","  'Organic Strawberries',\n","  'Banana',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Lactose Free Whole Milk',\n","  'Marinara Sauce',\n","  'Sparkling Water Grapefruit',\n","  'Mixed Berries Whole Milk Icelandic Style Skyr Yogurt',\n","  'Organic Honey Sweet Whole Wheat Bread',\n","  'Creamy Almond Butter',\n","  'Organic Extra Virgin Olive Oil',\n","  'Orange Calcium & Vitamin D Pulp Free',\n","  'Organic Tortilla Chips',\n","  'Organic Whipping Cream',\n","  'Organic Coconut Covered in Dark Chocolate Candy Bar',\n","  'Mango',\n","  'Red Raspberries',\n","  'Organic Black Beans',\n","  'Romaine Hearts',\n","  'Organic Cheese Frozen Pizza',\n","  'Tzatziki',\n","  'House Blend Deep Roast Ground Coffee',\n","  'Corn Chips',\n","  'Organic Brown Rice',\n","  'Macaroni & Cheese',\n","  'Boneless & Skinless Wild Alaskan Sockeye Salmon',\n","  'Organic Penne Rigate',\n","  'Organic Orzo',\n","  'Organic Diced Tomatoes',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Made With Organic Beans & Rice Burrito Non-Dairy',\n","  '2-Ply Right Size 100% Recycled Paper Towels',\n","  'Organic Refried Black Beans',\n","  'Tall Kitchen Drawstring Bags',\n","  'Organic Promise Autumn Wheat Cereal',\n","  'Organic Ice Cream Vanilla Bean',\n","  'Organic Sparkling Lemonade Beverage',\n","  'Organic Capellini',\n","  'Laundry Detergent Free & Clear',\n","  'Organic Fuel High Protein Chocolate Shake',\n","  'Mango Sriracha Hummus',\n","  'Pluot'],\n"," ['Natural Spring Water',\n","  'Organic Zucchini',\n","  'Organic Roasted Red Pepper & Tomato Bisque',\n","  'Gluten Free Rice Crust Spinach Pizza',\n","  'Organic Creamy Tomato Soup',\n","  'Pizza, Rice Crust, Cheese',\n","  'Coconut Oil Kettle Cooked Potato Chips Sea Salt'],\n"," ['Multiple Cat Clumping Formula Cat Litter'],\n"," ['Unsalted Butter',\n","  'Original Baked Whole Grain Wheat Crackers',\n","  'Original Citrus Sparkling Flavored Soda',\n","  'Oven Baked Cheddar & Sour Cream Potato Crisps',\n","  'Nuggets Milk Chocolate With Almond'],\n"," ['Clotted Cream, English Luxury'],\n"," ['Garlic', 'Sour Cream'],\n"," ['Flax Plus Organic Pumpkin Flax Granola',\n","  'Nonfat Icelandic Style Strawberry Yogurt',\n","  'Strained Non Fat Orange & Ginger Yogurt',\n","  'Organic Pineapple Chunks',\n","  'Heritage Flakes Cereal'],\n"," ['Half Baked® Ice Cream',\n","  'Original Pure Creamy Almond Milk',\n","  'Organic Strawberry Chia Lowfat 2% Cottage Cheese',\n","  'Organic Cottage Cheese Classic',\n","  'Milk and Cookies Ice Cream'],\n"," ['Taboule Salad'],\n"," ['Soda',\n","  'Corn Tortillas',\n","  'Sparkling Natural Mineral Water',\n","  'Organic Simply Naked Pita Chips',\n","  'Orange & Lemon Flavor Variety Pack Sparkling Fruit Beverage',\n","  '8\\\\\" Flour Tortillas De Harina'],\n"," ['Organic Reduced Fat 2% Milk',\n","  'Healthy Grains Oats & Honey Clusters with Toasted Coconut Gluten Free',\n","  'Gluten Free Chocolate Chip Cookies',\n","  'Heart to Heart Honey Toasted Oat Cereal',\n","  'Boomchickapop Sweet & Salty Kettle Corn',\n","  'Bananas',\n","  'Dark Chocolate Pumpkin Seed Bark',\n","  'Organic Summer Strawberry Bunny Fruit Snacks',\n","  'Cereal, Panda Puffs, Peanut Butter',\n","  'Original Baked Cheese Puffs',\n","  'Organic Multi Grain Squares Cereal',\n","  'Organic  Dried & Unsulfured Orchard Select Apricots',\n","  'Santa Cruz OG Blackberry Pom Fruit Spread',\n","  'Cereal, Superfood, Cacao Crunch'],\n"," ['Organic Coconut Milk',\n","  'Dairy Free Coconut Milk Yogurt Alternative',\n","  'Organic Baby Spinach',\n","  'Michigan Organic Kale',\n","  'Organic Extra Firm Tofu',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Dairy Free Coconut Milk Passionate Mango Yogurt Alternative',\n","  'Vanilla Almond Breeze',\n","  'Dairy Free Coconut Milk Vanilla Yogurt Alternative',\n","  'Purified Water'],\n"," ['Spring Water',\n","  'Organic Cucumber',\n","  'Organic Roma Tomato',\n","  'Organic Sour Cream',\n","  'No Salt Added Black Beans',\n","  'Organic Granny Smith Apple',\n","  'Icelandic Style Skyr Blueberry Non-fat Yogurt',\n","  'Brussels Sprouts',\n","  'Organic Rainbow Carrots',\n","  'Organic Iceberg Lettuce',\n","  'Organic California Style Sprouted Bread',\n","  \"S'mores Chocolate Ice Cream\",\n","  'French Vanilla Half+Half',\n","  'Pico De Gallo',\n","  'Strained Non-Fat Strawberry Icelandic Style Skyr Yogurt',\n","  'Organic Sliced Mozzarella'],\n"," ['Lemon-Lime Soda', 'Cola'],\n"," ['Natural Creamy Peanut Butter',\n","  'Original Chili Seasoning Mix',\n","  'All Purpose Crushed Tomatoes',\n","  'Raspberry Lemonade',\n","  'Grade A Large White Eggs',\n","  'Flip™ Low-Fat Key Lime Crumble Greek Yogurt',\n","  'Black Bean Vegetables Burrito',\n","  '100% Whole Wheat Cinnamon with Raisins',\n","  'Milano Double Chocolate Cookies',\n","  'Raspberry Lime Seltzer',\n","  \"Kellogg's Pop-Tarts Frosted Strawberry Pastries\",\n","  'Selects Smoked Uncured Bacon',\n","  'Dairy Free Vegetable Pot Pie',\n","  'Organic Beans And Cheese Burrito',\n","  'Crunchy Maple Brown Sugar Granola Bars'],\n"," ['Large Lemon',\n","  'Natural Vanilla Ice Cream',\n","  'Organic Whole Milk',\n","  '100% Pure Pumpkin',\n","  'Organic Ground Ginger',\n","  'Sparkling Water Berry',\n","  'Unsalted Butter',\n","  'Premium Pure Cane Granulated Sugar',\n","  'Sea Salt Caramel Gelato',\n","  'Aged White Wine Vinegar',\n","  'Americone Dream® Ice Cream',\n","  'Milk and Cookies Ice Cream',\n","  'Organic Ground Cloves'],\n"," ['Organic Blueberries', '100% Recycled Paper Towels', 'Lavender Hand Soap'],\n"," ['Banana',\n","  'Blackberry Cucumber Sparkling Water',\n","  'Honeydew Melon',\n","  'Curate Melon Pomelo Sparking Water',\n","  'Blood Oranges',\n","  'Smartwater',\n","  'Lowfat Vanilla Yogurt',\n","  'Organic Red Delicious Apple',\n","  'Vanilla Almond Breeze',\n","  'Chocolate Sea Salt',\n","  'Coconut  Chocolate Bar',\n","  'Boneless Chicken Breast',\n","  'Power Grains Waffles 6 ct',\n","  'Kiwi Sandia Sparkling Water',\n","  'Organic Frosted Wildberry Acai Toaster Pastries',\n","  'Organic Frosted Maple Brown Sugar Toaster Pastries',\n","  'Organic 1% Milkfat Lowfat Chocolate Milk'],\n"," ['Cucumber Kirby',\n","  'Garbanzo Beans',\n","  '100% Whole Wheat Bread',\n","  'Strawberries',\n","  'Garlic',\n","  'Granny Smith Apples',\n","  'Roma Tomato',\n","  'Pure Coconut Water',\n","  'Organic Avocado',\n","  'Original Style Yoghurt Plain',\n","  'Red Onion',\n","  'Pure & Natural Sour Cream',\n","  'Coke Classic',\n","  'Yukon Gold Potatoes',\n","  'Green Onions',\n","  'Romaine Lettuce',\n","  'Classic Mix Variety',\n","  'Dairy Milk Fine Chocolate Candy Bar',\n","  'Homestyle Some Pulp Orange Juice',\n","  'Real Guacamole',\n","  'English Toffee Crunch Ice Cream Bars',\n","  'Organic Blackberry Sorbet Bars',\n","  'Top Ramen Oriental Flavor',\n","  'Tater Treats Seasoned Shredded Potatoes',\n","  'Pure Cane Sugar Cubes'],\n"," ['Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Organic Raw Kombucha Gingerade',\n","  'Original Hummus',\n","  'All One Hemp Peppermint Castile Soap Bar',\n","  'Corn Chips',\n","  'Organic Dark Chocolate Peanut Butter Cups',\n","  'Italian Sparkling Mineral Water',\n","  'Organic 85% Cacao Dark Chocolate Bar',\n","  'Shredded Hash Browns',\n","  'Cheddar Cheese Burrito',\n","  'Rice Puffs Cereal',\n","  'Juice, Pineapple Coconut'],\n"," ['Organic Hass Avocado',\n","  'Organic Biologique Limes',\n","  'Organic Yellow Onion',\n","  'Organic Zucchini',\n","  'Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Michigan Organic Kale',\n","  'Organic Reduced Fat Milk',\n","  'Globe Eggplant',\n","  'Shredded Parmesan',\n","  'White Corn',\n","  'Organic Ground Turkey',\n","  'Organic Fresh Basil',\n","  'Organic Cannellini Beans'],\n"," ['Original High Efficiency Liquid Laundry Detergent',\n","  'Clean Care Big Roll Toilet Paper',\n","  'Action Pacs, Fresh Scent with Dawn',\n","  'Giant Roll Paper Towels'],\n"," ['Organic Cilantro', 'Rustic Baguette', 'Himalayan Salted Ghee'],\n"," ['Roma Tomato',\n","  'Organic Reduced Fat 2% Milk',\n","  'Eggo Homestyle Waffles',\n","  'Yellow Onions',\n","  'Natural Deli Style Sliced Swiss Cheese',\n","  'Sour Cream',\n","  'Hardwood Smoked Bacon',\n","  'Original Potato Chips',\n","  'Original Medium Picante Sauce',\n","  'Bunched Carrots',\n","  '4 Cheese Mexican Fine Cut Shredded Cheese',\n","  'Big California Sourdough Bread',\n","  'Garlic Bread With Mozzarella',\n","  'Vanilla, Chocolate, Strawberry Ice Cream',\n","  'Vanilla Bean 1% Milk Fat Yogurt'],\n"," ['Light Semisoft Cheese', 'Red Plastic Cups', 'Variety Diet Tea'],\n"," ['Banana',\n","  'Large Grapefruit',\n","  'Natural Jif Creamy Peanut Butter Spread',\n","  'Freshly Shredded Parmesan Cheese',\n","  'Pure Water',\n","  'Chicken Curry Salad',\n","  'European Style Unsalted Butter',\n","  'Freshly Shaved Parmesan Cheese',\n","  'Avocado Oil Canyon Cut Kettle Cooked Potato Chips Sea Salt',\n","  'Ultra-Purified Water',\n","  'Kettle Chips, Avocado Oil, Sea Salt',\n","  'Pecorino Romano Cheese'],\n"," ['Bag of Organic Bananas',\n","  'Asparagus',\n","  'Organic Cucumber',\n","  'Organic Raspberries',\n","  'Black Beans No Salt Added',\n","  '100% Whole Wheat Bread',\n","  'Organic Strawberries',\n","  'Carrots',\n","  'Organic Cilantro',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Greek Whole Milk Blended Vanilla Bean Yogurt',\n","  'Pure Coconut Water',\n","  'Serrano Chile Peppers',\n","  'Organic White Onions',\n","  'Cultured Low Fat Buttermilk',\n","  'Soft Taco Size White Flour Tortillas',\n","  'Organic Chocolate Chip Chewy Granola Bars',\n","  'Canola Oil',\n","  'Frozen Organic Wild Blueberries',\n","  'Organic Sea Salt Potato Chips',\n","  'Pita Chips Simply Naked',\n","  'Organic Yukon Gold Potato',\n","  'Organic Vegetable Broth',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Organic Original Hummus',\n","  'Tomatillo',\n","  'Roasted Red Pepper Hommus',\n","  'Uncured Beef Hot Dogs',\n","  'Tortilla Chips, Mexican Kitchen Style, Salted',\n","  'Gluten Free Organic Peanut Butter & Chocolate Cereal',\n","  'EnviroKidz Chocolate Choco Chimps',\n","  'Just Once Prenatal One Multivitamin'],\n"," ['Organic Thyme',\n","  'Organic Baby Spring Mix',\n","  '100% Recycled Paper Towels',\n","  'Old Style Whole Grain Dijon Mustard',\n","  'Panko Breadcrumbs Original'],\n"," ['Canola Oil'],\n"," ['Bunched Cilantro',\n","  'Organic Yellow Onion',\n","  'Carrots',\n","  'Large Lemon',\n","  'Limes',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Mandarin Oranges',\n","  'Organic Avocado',\n","  'Organic Broccoli Florets',\n","  'Organic Spring Mix',\n","  'Organic Red Onion',\n","  'Mint',\n","  'Dark Chocolate Covered Banana',\n","  'Original Rotisserie Chicken',\n","  'Krinkle Cut Salt & Fresh Ground Pepper Potato Chips',\n","  'Jalapeno Potato Chips',\n","  'Bok Choy',\n","  'Organic Gluten Free Sea Salt by the Seashore Multigrain Tortilla Chips',\n","  'Sriracha Mayonnaise',\n","  'Avocado Oil Himalayan Salt Chips',\n","  'Spinach Mountain Bread'],\n"," ['Seedless Small Watermelon'],\n"," ['Bag of Organic Bananas',\n","  'Organic Grape Tomatoes',\n","  'Organic Garlic',\n","  'Organic Yellow Onion',\n","  'Organic Free Range Chicken Broth',\n","  'Organic Strawberries',\n","  'Large Alfresco Eggs',\n","  'Organic Red Bell Pepper',\n","  'Red Vine Tomato',\n","  'ZBar Organic Chocolate Brownie Energy Snack',\n","  'Organic Romaine',\n","  'Organic Black Beans',\n","  'Organic Kiwi',\n","  'Lowfat Small Curd Cottage Cheese',\n","  'Reduced Fat 2% Chocolate Milk',\n","  'Dark Red Kidney Beans No Salt Added',\n","  'Annie Peely Fruit 4.5 Z',\n","  'Bite Size Cheddar Crackers'],\n"," ['Tzatziki', 'Crazy Feta Dip', 'Smoked Mozzarella Cheese'],\n"," ['Whole Milk',\n","  'White Giant Paper Towel Rolls',\n","  'Original Orange Juice',\n","  'Quart Sized  Easy Open Freezer Bags',\n","  'Mint Glide Floss Picks',\n","  '100% Natural Sweetener Zero Calorie Packets',\n","  'Ultra Healing Lotion'],\n"," ['Zero Calorie Cola', 'Sweet & Salty Nut Granola Bars Peanut'],\n"," ['100% Whole Wheat Bread',\n","  'Goldfish Cheddar Baked Snack Crackers',\n","  'Lowfat 2% Milkfat Cottage Cheese',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Super Seed Crispy Crackers',\n","  'Eggo Buttermilk Waffles',\n","  'Aged White Cheddar Baked Rice And Corn Puffs',\n","  'Original Chocolate Pudding Snacks',\n","  'Family Size Macaroni & Cheese',\n","  \"Chicken Noodle O's Condensed Soup\",\n","  '1% Milk',\n","  'Cran Raspberry Juice Drink',\n","  'Organic White Rice Bowl'],\n"," ['Organic Hass Avocado',\n","  'Organic Grape Tomatoes',\n","  'Organic Hothouse Cucumbers',\n","  'Organic Strawberries',\n","  'Organic Yellow Peaches',\n","  'Large Alfresco Eggs',\n","  'Organic Baby Carrots',\n","  'Sugar Snap Peas',\n","  'Organic Small Bunch Celery',\n","  'Organic Broccoli',\n","  'Organic Blackberries',\n","  'Organic Kiwi',\n","  'Fresh Mozzarella Snacking Cheese',\n","  'Snack Pack Mini Classic',\n","  'Frosted berry Strawberry Toaster Pastries',\n","  'Minneola Tangelo',\n","  'Blueberry Figgies & Jammies'],\n"," ['Large Alfresco Eggs',\n","  'Organic Thyme',\n","  'Medium Cheddar Cheese Block',\n","  'Potted Basil',\n","  'Organic Chicken Bone Broth',\n","  'Colby Jack Cheese'],\n"," ['Organic Romaine Lettuce',\n","  'Natural Premium Coconut Water',\n","  '70% Dark Chocolate Salted Almond Bar',\n","  'Organic Plain Greek Whole Milk Yogurt',\n","  'Organic Wheat-Free & Gluten-Free Original Crackers',\n","  'Vanilla Bean Ice Cream',\n","  'Imported Mineral Water',\n","  'Organic Red Cherry Tomato',\n","  'Ricotta Salata Cheese',\n","  'Gotta Have Vanilla Organic Frozen Nonfat Yogurt',\n","  'Original Thin Rye Crispbread'],\n"," ['Bag of Organic Bananas',\n","  'Organic Strawberries',\n","  'Dairy Free Coconut Milk Yogurt Alternative',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Bartlett Pear',\n","  'Red Peppers',\n","  'Bunny-Luv Fresh Organic Carrots',\n","  'Honeydew Melon',\n","  'Serrano Chile Peppers',\n","  'Organic Frozen Peas',\n","  'Dairy Free Coconut Milk Passionate Mango Yogurt Alternative',\n","  \"UDI'S GLUTEN FREE WHOLE GRAIN BREAD\",\n","  'Organic 85% Cacao Dark Chocolate Bar',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Organic Sea Salt Roasted Seaweed Snacks',\n","  'Pineapple',\n","  'Organic Green Seedless Grapes',\n","  'Classic Whipped Cream',\n","  'Simply Strawberry Coconut Milk Minis Frozen Dessert',\n","  'Plain Organic Grassmilk Yogurt Cup',\n","  'Gluten Free Multigrain Bread',\n","  'Apricot Mango Juice',\n","  'Blueberry Pint',\n","  'Soft Baked Chocolate Chip Cookies Gluten Free',\n","  'Soft Baked Double Chocolate Brownie Cookies',\n","  'Dark Chocolate Chia Bar',\n","  'Teriyaki Veggie Burgers',\n","  'Organic Flax Plus Multibran Flakes Cereal',\n","  'Juice Beverage, Black Currant'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Whole Cashews',\n","  'Sparkling Water Grapefruit',\n","  '100% Recycled Paper Towels',\n","  'Organic Apple Slices',\n","  'Dark with 70% Cacao Content Organic Chocolate Bar',\n","  '100% Recycled Bath Tissue Rolls',\n","  'Organic Sea Salt Roasted Seaweed Snacks',\n","  'Yogurt, Strained Low-Fat, Coconut',\n","  'Pumpkin & Spice Yogurt'],\n"," ['Fresh Asparagus'],\n"," ['Creamy Peanut Butter',\n","  'Whipped Cream Cheese Spread',\n","  'GoGurt Strawberry and Blueberry Tubes',\n","  'Jet-Puffed Marshmallows',\n","  'Squeeze Real Mayonnaise',\n","  'Honey Low Fat Grahams',\n","  'Milk Chocolate Candy Bar'],\n"," ['Bag of Organic Bananas',\n","  'Asparagus',\n","  'Black Beans',\n","  'Organic Garlic',\n","  'Water',\n","  'Baked Rice and Corn Puffs, Aged White Cheddar',\n","  'Plain Greek Yogurt',\n","  'Chick Peas',\n","  'Unsweetened Almondmilk',\n","  'Sea Salt & Vinegar Potato Chips',\n","  'Peanut Butter Cookie',\n","  'Organic Vanilla Almond Milk',\n","  'Classic Green Tea',\n","  'Peanut Butter Dark Chocolate + Protein Bar',\n","  'Vanilla Pure Almond Milk',\n","  'Cheese Tamale Verde',\n","  \"Grandma's Hummus\",\n","  'Twice Baked Potatoes',\n","  'Pico De Gallo',\n","  'Yellow Bell Peppers',\n","  'Caramel Nut Brownie',\n","  'Natural Whole Grain Instant Brown Rice',\n","  'Unsweetened Organic Ginger Oasis Tea',\n","  'Original Sambucus Elderberry Syrup',\n","  '3-in-1 Laundry Detergent Pods, Lavender with Vanilla scent'],\n"," ['Banana', 'Organic Spring Mix Salad'],\n"," ['Spring Water',\n","  '100% Carrot Juice',\n","  'Organic Cut Green Beans',\n","  '1% Lowfat Milk',\n","  'Organic Unsalted Diced Tomatoes',\n","  'Organic  Sweet & Salty Peanut Pretzel Granola Bars',\n","  'Bathroom Cleaner Natural Tub + Tile Cleaner'],\n"," ['Organic Baby Arugula',\n","  'Baby Swiss Slices Cheese',\n","  'Hass Avocados',\n","  'Organic Baby Carrots',\n","  'Organic Red Radish, Bunch',\n","  'Prosciutto',\n","  'Organic Cheese Frozen Pizza',\n","  'Organic Greek Lowfat Yogurt With Strawberries',\n","  'Crackers Cheddar Bunnies Snack Packs',\n","  'Gluten Free Millet-Chia Bread',\n","  'Organic Greek Lowfat Yogurt With Blueberries',\n","  'Organic Creamy Peanut Butter',\n","  'Strawberry Preserves',\n","  'Salted Tub of Butter',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Mini Original Babybel Cheese',\n","  'Goo Berry Pie Probugs Kefir',\n","  'Whole Wheat English Muffins',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Organic Sunflower Seed Spread',\n","  'Chocolate Peppermint Stick Bar',\n","  'Extra Sharp White Cheddar',\n","  'Whole Nutrition Bar Chocolate Cupcake',\n","  'Sliced Varzi Salami Meat',\n","  'Naked Sponges - 2 CT',\n","  'Unsweetened Vanilla Coconut Milk Beverage',\n","  'Gluten Free Vanilla Granola',\n","  'Mandarin Orange Sparkling Natural Spring Water',\n","  'Natural Milk Chocolate Bar'],\n"," ['Butter',\n","  'Organic Mini Sandwich Crackers Cheddar Cheese',\n","  'Sonoma Traditional Flour Tortillas 10 Count',\n","  'Organic Broccoli Crowns',\n","  'Cage Free Large White Eggs',\n","  'Tempt Unsweetened Vanilla Hemp Milk',\n","  'Chicharrones Fried Pork Rinds',\n","  'Baba Ghanoush',\n","  'Lemon Ricotta Ravioli In Lemon Pasta',\n","  'Baking Soda Toothpowder, Dazzling Mint'],\n"," ['Bolthouse Baby Carrots',\n","  'Original Salt-Free Seasoning Blend',\n","  'Colorful Coarse Ground Blend Seasoned Pepper'],\n"," ['Non Fat Greek Yogurt'],\n"," ['Banana',\n","  'Quick Cooking Rolled Oats Irish Oatmeal',\n","  'Maple Almond Butter',\n","  'Raw Chocolate Cacao Nibs',\n","  'Organic Extra Virgin Coconut Oil',\n","  'Unsalted Tops Saltine Crackers',\n","  'Hazelnut Instant Coffee Beverage'],\n"," ['100% Whole Wheat Bread',\n","  'Banana',\n","  'Broccoli Crown',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Organic Super Fruit Punch Juice Drink',\n","  'Skim Milk',\n","  'Sesame Street Organic Mini Blueberry Pancakes',\n","  'Cran Raspberry Sparkling Water',\n","  'Ground Black Pepper',\n","  'Organic Vanilla Bean Ice Cream',\n","  'Soft Pretzel Mini Buns',\n","  'Organic Muenster Cheese Slices',\n","  'Uncured Slow Cooked Ham',\n","  'Appley Ever After Organic Juice Drink',\n","  'Lean & Fit Chicken Apple Sausage Egg White & Cheddar on Multi Grain Flatbread Breakfast Sandwich',\n","  'Chocolate Chip Bunny Grahams Whole Grain Graham Snacks Bunny Grahams',\n","  'Alive! Multi-Vitamin Cherry, Grape & Orange Gummies for Children',\n","  'Organic Salted Caramel Ice Cream Juliette Sandwiches'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Asparagus',\n","  'Organic Zucchini',\n","  'Organic Lemon',\n","  'Organic Cilantro',\n","  'Curate Melon Pomelo Sparking Water',\n","  'Organic Riced Cauliflower',\n","  'New Mexico Taco Skillet Sauce For Chicken',\n","  'All Natural Red Tomato Mild Salsa Mexican with Green Chile & Cilantro'],\n"," ['Organic Cucumber',\n","  'Organic Raspberries',\n","  'Organic Whole Grassmilk Milk',\n","  'Organic Italian Parsley Bunch',\n","  'Large Alfresco Eggs',\n","  'Organic Cilantro',\n","  'Organic Roma Tomato',\n","  'Organic Small Bunch Celery',\n","  'Roasted Turkey Breast',\n","  'Vanilla Skyr Nonfat Yogurt',\n","  'Organic Granny Smith Apple',\n","  'Icelandic Style Skyr Blueberry Non-fat Yogurt',\n","  'Red Potatoes',\n","  'Organic Blackberries',\n","  'Double Fiber Bread',\n","  'Chocolate Chip Cookie Dough Ice Cream',\n","  'Penne Rigate #41 Pasta',\n","  'Nonfat Icelandic Style Strawberry Yogurt',\n","  'Non Fat Acai & Mixed Berries Yogurt',\n","  'Wild Berry Smoothie',\n","  'Dark Chocolate Cinnamon Pecan Bar',\n","  'Grassmilk 2% Reduced Fat Milk',\n","  'Tomatillo',\n","  'Almond Breeze Unsweetened Almond Coconut Milk Blend',\n","  'Coconut Almond Chocolate',\n","  'Fire Roasted Crushed Tomatoes',\n","  'Classic Mild Cheddar Macaroni & Cheese',\n","  'Organic Freeze Dried Bananas and Strawberries',\n","  'Crepes',\n","  'Organic 5 Grain Elbows & White Cheddar Macaroni and Cheese',\n","  'Wild Mushroom & Herb Couscous Mix',\n","  'Organic Fuel, High Protein Milk Shake, Vanilla',\n","  'Oatmeal Raisin Walnut Energy Bar',\n","  'Simply Naked Bagel Chips'],\n"," ['Broccoli Florettes'],\n"," ['Bag of Organic Bananas',\n","  'Organic Whole Strawberries',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Organic Turkey Bacon',\n","  'Seedless Red Grapes',\n","  'Original Hummus',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Organic Lightly Salted Brown Rice Cakes',\n","  'Organic Baby Kale Mix',\n","  'Organic Gluten Free Buckwheat Wildberry Waffles',\n","  'Gluten Free Pretzel Sticks',\n","  'Organic Short Grain Brown Rice',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Organic Sugar Snap Peas',\n","  'Gluten Free Cinnamon Raisin Bread',\n","  'Lactose Free Low Fat Vanilla Yogurt',\n","  'Gluten Free Omega Flax & Fiber Bread',\n","  'EnviroKidz Gluten Free & Wheat Free Gorilla Munch Corn Puff Cereal',\n","  'Gluten Free Vanilla Granola',\n","  'Orange Blossom Honey',\n","  'Vegan Carob Chips'],\n"," ['Organic Half & Half'],\n"," ['Organic Hass Avocado',\n","  'Organic Reduced Fat Milk',\n","  'Sonoma Traditional Flour Tortillas 10 Count',\n","  'Sicilian Pistachio'],\n"," ['Mild Italian Chicken Sausage',\n","  'Organic Sugar Snap Peas',\n","  'Whole Wheat Sourdough'],\n"," ['Organic Garnet Sweet Potato (Yam)',\n","  'Organic Zucchini',\n","  'Organic Baby Spinach',\n","  'White Sliced Mushrooms',\n","  'Microwave in Bag Green Beans',\n","  'Yellow Zucchini'],\n"," ['Plain Non-Fat Greek Yogurt',\n","  'Banana',\n","  'Organic Super Fruit Punch Juice Drink',\n","  'Greek Toasted Coconut Vanilla Non Fat Yogurt',\n","  'Mild Cheddar Cheese Sticks',\n","  'Peanut Powder',\n","  'Broccoli Bunch',\n","  'Natural Sharp Cheddar Cheese',\n","  'Coarse Kosher Salt',\n","  'Medleys Assorted Fruit Fruit Flavored Snacks',\n","  'Sparkling Raspberry Lemonade Water Beverage',\n","  'Turkey Store Lean Ground Turkey',\n","  'Sparkling Water Beverage Lime',\n","  'Diet Cherry Coke',\n","  'Light & Fit Strawberry Non Fat Greek Yogurt',\n","  'Original Strawberry/Harvest Peach Variety Pack Low Fat Yogurt'],\n"," ['Bag of Organic Bananas',\n","  'Organic Yellow Onion',\n","  'Hass Avocados',\n","  'Organic Baby Spinach',\n","  'Organic Original Almond Milk',\n","  'Maple Quinoa Cluster With Chia Seeds',\n","  'Dairy-Free Chive Cream Cheese',\n","  'Applewood Smoked Turkey Breast',\n","  'Organic Original Acai Berry + Guarana Smoothie Packs'],\n"," ['Hass Avocados',\n","  'Raisin Bran',\n","  'Organic Medium Salsa',\n","  '100% Natural Crunchy Peanut Butter'],\n"," ['Banana',\n","  'Shredded Mild Cheddar Cheese',\n","  'Organic Small Bunch Celery',\n","  'Taco Seasoning',\n","  'Green Bell Pepper',\n","  'Spaghetti',\n","  'Organic Mini Sandwich Crackers Cheddar Cheese',\n","  'Frozen Broccoli Florets',\n","  'Honey Wheat Enriched Bread',\n","  'Smoked Turkey Breast Slices',\n","  'Yellow Onions',\n","  '2% Reduced Fat Milk',\n","  'Bag',\n","  'Microwavable Mac & Cheese'],\n"," ['Enchilada Black Bean Vegetable',\n","  'Peanut Butter Chocolate Chip Fruit & Nut Food Bar',\n","  'Organic Bunny Fruit Tropical Treat Fruit Snacks',\n","  'Gluten Free Tofu Scramble Breakfast Wrap',\n","  'Organic Gluten Free Non-Dairy Beans & Rice Burrito',\n","  'Sesame Blues Corn Tortilla Chips',\n","  'Dairy-Free Cheddar Style Shreds',\n","  'Organic SprouTofu Extra Firm Tofu',\n","  'Gluten and Dairy Free Rice Macaroni and Cheeze',\n","  'Cocoa & Vanilla Bunny Cookies Gluten Free Bunny Cookies Gluten Free'],\n"," ['Oreo Chocolate Sandwich Cookies',\n","  'Cream Cheese',\n","  'Applewood Smoked Center Cut Uncured Bacon',\n","  'Mini',\n","  'Red Decorating Icing',\n","  'Royal Blue Decorating Icing'],\n"," ['Spring Water',\n","  'Organic Raw Kombucha Gingerade',\n","  'Plain Bagels',\n","  'Trilogy Kombucha Drink',\n","  'Original Roasted Seaweed Snacks',\n","  'Maca Cold Brew Coffee Super Herb Elixir',\n","  'Organic & Raw Grape Kombucha',\n","  'Organic Bittersweet Chocolate Ice Cream',\n","  'Oregon Peppermint Cacao-Nectar Bar',\n","  'Organic Superfood Oat Based Espresso Maca Mulberry Cereal',\n","  'Classic Cosmic Cranberry Kombucha',\n","  'Superfood Bar Maca Maple Organic'],\n"," ['Lime Ginger Lemon Agave',\n","  'Lemonade',\n","  'Small Macintosh Apple',\n","  'Pico De Gallo',\n","  'Naturally Aged Cheddar Cheese Block Hot Habanero'],\n"," ['Banana',\n","  'Large Lemon',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Roma Tomato',\n","  'Fresh Ginger Root',\n","  'Sparkling Water Grapefruit',\n","  'Icelandic Style Skyr Blueberry Non-fat Yogurt',\n","  'Red Mango',\n","  'Orange Bell Pepper',\n","  'Dill Pickle Spears',\n","  'Non Fat Acai & Mixed Berries Yogurt',\n","  'Sliced Water Chestnuts',\n","  'Coconut Flavored Sparkling Water',\n","  'Bunched Carrots',\n","  'Organic Premium Quinoa',\n","  'Tahini'],\n"," ['Organic Garnet Sweet Potato (Yam)',\n","  'Organic Cucumber',\n","  'Organic Grape Tomatoes',\n","  'White Onion',\n","  'Roasted Garlic Hummus',\n","  'Cheddar Cheese Nut Thins Cracker Snacks',\n","  'Potato Chips Sweet Potato'],\n"," ['Water',\n","  'Milk, Vitamin D',\n","  \"Major Dickason's Blend Whole Bean Coffee\",\n","  'Organic Large Grade AA Brown Eggs',\n","  'Organic Plain Whole Milk Yogurt',\n","  \"Jacob's Wonderbar Dark Roast\",\n","  'Simply Organic Garlic Salt',\n","  'Ruby Red Grapefruit Juice',\n","  'Organic Traditional Plain Kefir',\n","  'Bread, Natural Fitness'],\n"," ['Natural Spring Water',\n","  'Lotion With Aloe & E Upright Facial Tissue',\n","  'White Giant Paper Towel Rolls',\n","  'Honey Bunches of Oats Honey Roasted with Almonds Cereal',\n","  'Organic Lowfat French Vanilla Yogurt',\n","  'Fresh Care Flushable Cleansing Cloths Refills',\n","  'Cocoa Puffs Cereal',\n","  'Special K Vanilla Almond Cereal',\n","  'Hazelnut Light Roast K-Cup Packs',\n","  'Lowfat 1% Milkfat Lactose Free Milk'],\n"," ['Orange Juice',\n","  'Vitamin D Added Evaporated Milk',\n","  'Bun Klasic Kaiser 8 Count'],\n"," ['Organic Lemon',\n","  'Strawberries',\n","  'French Vanilla Coconut Milk Creamer',\n","  'Mocha Almond Fudge Minis Almond Milk Frozen Dessert',\n","  'Pure Granulated Cane Sugar',\n","  'Light Brown Sugar',\n","  'Farmstand Flaxbread Egg and Vegetarian Bacon Breakfast Sandwich',\n","  'Cinnamon Raisin Bread',\n","  'Yogurt Honey Peanut Energy Bar',\n","  'Original Sugar Free Coconut Milk'],\n"," ['Organic Yellow Peaches',\n","  'Organic Banana',\n","  'Cantaloupe',\n","  'Honeydew Melon',\n","  'Medium Navel Orange',\n","  'Organic Orange Juice'],\n"," ['Spring Water',\n","  'Organic Free Range Chicken Broth',\n","  'Shredded Parmesan',\n","  'Organic Sliced White Mushrooms',\n","  'Organic Russet Potato',\n","  'Heavy Whipping Cream',\n","  'Phish Food® Ice Cream'],\n"," ['Feta Cheese Crumbles',\n","  'Tzatziki',\n","  'Almond Meal/Flour',\n","  'Organic High Fiber Coconut Flour',\n","  'Authentic French Brioche Hamburger Buns'],\n"," ['Organic Raw Unfiltered Apple Cider Vinegar',\n","  'Uncured Genoa Salami',\n","  'Natural Chicken & Sage Breakfast Sausage',\n","  'Original Nooks & Crannies English Muffins',\n","  'Creamy Peanut Butter',\n","  'Baked Rice and Corn Puffs, Aged White Cheddar',\n","  'Eggo Blueberry Waffles',\n","  'Sliced Onion Bagels',\n","  'Green Jalapeno Pepper Sauce',\n","  'Sweet Belgian Style Waffles Cinnamon Swirl',\n","  '100% All Pomegranate Juice'],\n"," ['Organic Lemon Cayenne Sparkling Probiotic Drink',\n","  'Honeysuckle Hand Soap',\n","  'Dark Chocolate Cherry Chia Bar'],\n"," ['Banana',\n","  'Light Mozzarella String Cheese',\n","  'Sparkling Water Grapefruit',\n","  'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale',\n","  'Asparation/Broccolini/Baby Broccoli',\n","  'Organic Mushroom & Olive Pizza',\n","  'Pesto Pizza',\n","  'Fresh Ground Turkey',\n","  '7 Sprouted Grains Bread',\n","  'Direct Trade House Blend Medium Roast Ground Coffee',\n","  'Mexican Mix Granola',\n","  'Olive Tapenade Hummus',\n","  'Triscuit Baked Whole Grain Wheat Rosemary & Olive Oil',\n","  'Daily Moisturizing Lotion',\n","  'Dark Chocolate Nuts & Sea Salt Bars'],\n"," ['Bag of Organic Bananas',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Whipping Cream',\n","  'Frozen Organic Wild Blueberries',\n","  'Quick Cooking Rolled Oats Irish Oatmeal',\n","  'Organic Sliced Peaches',\n","  'Original Pure Creamy Almond Milk',\n","  'Boneless Beef Chuck Roast',\n","  'Organic Fettuccine',\n","  'Original Black Tea Brew Kombucha'],\n"," ['Banana',\n","  'Medium Cheddar Cheese Block',\n","  'Blueberry Whole Milk Yogurt Pouch',\n","  'Premium Pure Cane Granulated Sugar',\n","  'Organic Whole Milk Strawberry Beet Berry Yogurt Pouch',\n","  'Fennel Seed',\n","  'Microwavable Single Serving Mac & Cheese'],\n"," ['Organic Blueberries',\n","  'Chicken & Maple Breakfast Sausage',\n","  'Buttermilk Pancakes 8 Count',\n","  'Frozen Organic Wild Blueberries',\n","  'Mini Blueberry Muffins',\n","  'All Natural French Toast Sticks',\n","  'Organic Pancake Syrup'],\n"," ['Whole Bean French Roast Dark Roast Blend Extra Bold Coffee'],\n"," ['Natural Spring Water', 'Organic 2% Milk'],\n"," ['Clementines', 'Strawberries', 'Organic Baby Spinach'],\n"," ['Organic Basil',\n","  'Corn Chips',\n","  'Macaroni & Cheese',\n","  'Sea Salt Caramel Gelato',\n","  'Curate Cherry Lime Sparkling Water',\n","  'Roasted Mushroom Pizza',\n","  'Fresh Roasted Tomate & Chile Asado Medium Salsa',\n","  'Organic Pita Bread',\n","  'Moroccan Mint Green Tea',\n","  'Curate Pomme Baya-Apple Berry Sparkling Water',\n","  'Unsweetened Watermelon Water',\n","  'Fresh Ciliegine Mozzarella Cheese',\n","  'Mango Grapefruit Water',\n","  'Water, Unsweet, Crisp Apple',\n","  'Unsweetened Pomegranate Essence Water',\n","  'Organic Up Beat Coffee Brew',\n","  'Hummus, Roasted Garlic'],\n"," ['Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Organic Whole Strawberries',\n","  'Organic Roasted Turkey Breast',\n","  'Organic Broccoli',\n","  'Organic Creamy Peanut Butter',\n","  'Organic Penne Rigate',\n","  'Mild Pico De Gallo Bean and Rice Chips',\n","  'Crispy Wheat, Crackers',\n","  'Mild Cheddar Cheese Sticks',\n","  'Organic Australian Style Vanilla Lowfat Yogurt',\n","  'Original Sauce',\n","  'Lavender Dryer Sheets',\n","  'Bean & Rice Chips Nacho',\n","  'Aloe Vera Juice',\n","  'Roasted Red Pepper & Basil Quinoa and Brown Rice',\n","  'Organic Ice Cream Chocolate Chocolate Chip',\n","  'Organic Sauce'],\n"," ['Peppermint Patties Candy', 'Candy', 'Minis Candy Bars', 'Chewy Caramels'],\n"," ['Natural Chicken & Sage Breakfast Sausage',\n","  'Large Lemon',\n","  'Limes',\n","  'Vine Ripe Tomatoes',\n","  'Premium Original Saltine Crackers',\n","  'Thick & Crispy Tortilla Chips',\n","  'Olive Oil & Sel Gris Sourdough Flatbread',\n","  'Philadelphia Original Cream Cheese',\n","  'Organic Milk Reduced Fat, 2% Milkfat',\n","  'Salt & Pepper Krinkle Chips',\n","  'Cookies, Chocolate Chip Walnut',\n","  'Brie',\n","  'Extra Crisp English Muffins',\n","  'Some Pulp Orange Juice',\n","  'Mild Salsa Roja',\n","  'Ice Cream, Super Premium, Mint Chocolate Chip',\n","  'Ultra Strong Toilet Paper Double Rolls Bathroom Tissue',\n","  'Cinnamon Raisin Swirl Pre-Sliced Bagels',\n","  'Post Selects Great Grains Cereal Raisins, Dates and Pecans',\n","  'Cranberry Juice Cocktail',\n","  'One Ply Choose A Size Big Roll Paper Towel Rolls',\n","  'Movie Theater Butter Pop Corn',\n","  'Jalapeno Stuffed Olives',\n","  'Reserve Cheddar Cheese'],\n"," [\"Crispy Chick'n Sliders\",\n","  'Fridge Pack Cola',\n","  'Caesar Supreme Salad Kit',\n","  'Peanut Butter Soft Baked Oatmeal Squares',\n","  'Cheese Danish Twist',\n","  'Chocolate Cheerios Cereal',\n","  'Ready to Bake Sugar Cookie Dough',\n","  'Indoor Cat Food'],\n"," ['Electrolyte Enhanced Water',\n","  'Chopped Onions',\n","  'Italian Sausage Pizza',\n","  'Garlic Hummus',\n","  'Mushroom And Ricotta Ravioli',\n","  'Roasted Salted Peanuts',\n","  'Loose White Button Mushrooms',\n","  'Tomato Goat Cheese & Herbs Pizza',\n","  'Lemonade From Concentrate',\n","  'Sliced Pancetta Americana'],\n"," ['Banana',\n","  'Organic Baby Carrots',\n","  'Broccoli Crown',\n","  'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale',\n","  'Organic Fuji Apple',\n","  'European Cucumber',\n","  'Roasted Garlic Hummus',\n","  'Green Onions',\n","  'Shredded Low-Moisture Part-Skim Mozzarella Cheese',\n","  'Sour Cream & Onion Potato Chips',\n","  'Whole Grain Brown Ready Rice',\n","  'Garden Spinach Herb 6 Ct Wraps',\n","  'Grated Parmesan Romano Cheese'],\n"," ['Honey Nut Cheerios',\n","  'Limeade',\n","  'Original Diced Tomatoes & Green Chilies',\n","  'Original Velveeta Cheese',\n","  '85% Lean Ground Turkey',\n","  'Fragrance Free Baby Wipes',\n","  'Applewood Smoked Bacon Mashed',\n","  'Prepare And Serve Mashed Potatoes'],\n"," ['Banana',\n","  'Strawberries',\n","  'Organic Whole Milk',\n","  'Oven Roasted Turkey Breast',\n","  'Orange Juice',\n","  'Vanilla Skyr Nonfat Yogurt',\n","  'Organic Navel Orange',\n","  'Organic Old Fashioned Rolled Oats',\n","  'Black Tea Variety Pack',\n","  'Crispy Wheat, Crackers',\n","  'Yotoddler Organic Pear Spinach Mango Yogurt',\n","  'Organic Green Seedless Grapes',\n","  'Organic Muenster Cheese Slices',\n","  'Cheese, Thin Sliced Muenster',\n","  'Almonds & Sea Salt in Dark Chocolate'],\n"," ['Organic Cucumber',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Small Bunch Celery',\n","  'Michigan Organic Kale',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Broccoli',\n","  'Original Semisoft Cheese',\n","  'Mint Chocolate Chip Ice Cream',\n","  'Dark Chocolate Almond & Coconut Fruit & Nut Bar'],\n"," ['100% Whole Wheat Bread',\n","  'Classic Stir-fry Sauce',\n","  'Classic Hummus',\n","  'Sparkling Water Grapefruit',\n","  'Tortillas, Corn, Organic',\n","  'Organic Grade A Large Brown Eggs',\n","  'Sauvignon Blanc',\n","  'All Natural Marinara Sauce',\n","  'Original Fresh Stack Crackers',\n","  'Sweet Rolls',\n","  'Strawberry Preserves',\n","  'Penne Rigate #41 Pasta',\n","  'EF California White Basmati Eco-Farmed 2 lb Rice',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Pepperidge Farm Colors Cheddar Baked Snack Crackers',\n","  'Free and Gentle High Efficiency Liquid Laundry Detergent',\n","  'Lavender Multi-Surface Everyday Cleaner',\n","  'Eggo Pancakes Minis',\n","  'Uncooked Medium Flour Tortillas',\n","  \"Quick'n Easy Combos Vegetable Stir Fry\",\n","  'Sliced Sesame Bagels',\n","  'Ultra Free & Clear Dishwashing Liquid'],\n"," ['Petite Diced Tomatoes',\n","  'Lotion With Aloe & E Upright Facial Tissue',\n","  'Bathroom Tissue, Unscented, Double Rolls, 3-Ply',\n","  'Quart Storage Bags',\n","  'Thick Spaghetti Pasta'],\n"," ['Roma Tomato',\n","  'Original Style Yoghurt Plain',\n","  'Original Whole Fat Lactose Free Milk',\n","  'Honey Bunches of Oats Honey Roasted with Almonds Cereal',\n","  'Extra Whitening Toothpaste',\n","  'Cocoa Puffs Cereal',\n","  'Ibuprofen Tablets',\n","  'Fudge Brownie Mix',\n","  'Butter Top White Bread',\n","  'Spring Water Antibacterial Liquid Hand Soap with Moisturizer',\n","  'Low Fat 2% Evaporated Milk'],\n"," ['Banana',\n","  'Organic Baby Carrots',\n","  'Air Chilled Breaded Chicken Breast Nuggets',\n","  'Uncured Beef Hot Dog',\n","  'Sea Salt & Vinegar Potato Chips',\n","  'Lemon Fruit & Nut Food Bar',\n","  'Acai Berry Chia Bar',\n","  'Flax Plus Raisin Bran Cereal',\n","  'Greek 0% Fat Strawberry on the Bottom Yogurt',\n","  'Organic Pink Lady (Cripps) Apple',\n","  'Large Croissants',\n","  'Protein & Fiber Madagascar Vanilla, Almonds & Pecans Hot Oatmeal',\n","  \"Unprocessed Miller's Wheat Bran\",\n","  'Oat Bran Gluten Free'],\n"," ['Banana', 'Organic 2% Reduced Fat Milk', 'Original Semisoft Cheese'],\n"," ['Uncrustables Peanut Butter & Grape Jelly Sandwich'],\n"," ['Bag of Organic Bananas',\n","  'Organic Half & Half',\n","  'Super Greens Salad',\n","  'XL Emerald White Seedless Grapes',\n","  'Large Alfresco Eggs',\n","  'Broccoli Crown',\n","  'Organic Red Bell Pepper',\n","  'Organic English Cucumber',\n","  'Bunny-Luv Fresh Organic Carrots',\n","  'Cucumber & Garlic  Tzatziki',\n","  'Corn Tortillas',\n","  'Goat Milk',\n","  'Organic Bell Pepper',\n","  'Sharp Cheddar Cheese',\n","  'Macaroni & Cheese',\n","  'Organic Egg Whites',\n","  'Organic Penne Rigate',\n","  '2% Reduced Fat DHA Omega-3 Reduced Fat Milk',\n","  'Organic Hass Avocado Bag',\n","  'Original Flax Milk Dairy Free Protein+',\n","  'Classic Chicken Salad',\n","  'French Vanilla Soy Creamer'],\n"," ['Naked Green Machine Boosted Juice Smoothie',\n","  'Organic Blue Agave',\n","  'Ocean Mist Scent 3-in-1 Laundry Detergent PODS'],\n"," ['Blueberries',\n","  'Dark Sweet Cherries',\n","  'Lean Ground Turky',\n","  'All Whites 100% Egg Whites'],\n"," ['Banana',\n","  'Dha Omega 3 Reduced Fat 2% Milk',\n","  'Apple Frank Organic Beef',\n","  'Organic Italian Salad',\n","  'Organic Vitality Snack Chia Squeeze Blackberry Bliss',\n","  'VitaTops Deep Chocolate Muffin Tops'],\n"," ['Organic Blueberries',\n","  'Banana',\n","  'Organic Whole Milk',\n","  'Oven Roasted Turkey Breast',\n","  'Organic Avocado',\n","  'Sparkling Water Grapefruit',\n","  'Provolone',\n","  'Mild Sliced Cheddar Cheese',\n","  \"Organic D'Anjou Pears\",\n","  'Organic Gala Apples',\n","  'Unsalted Butter',\n","  'Organic Blackberries',\n","  'Naturals Savory Turkey Breakfast Sausage',\n","  'Sourdough Bread',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Green Tea With Ginseng and Honey',\n","  \"Chik'n Nuggets\",\n","  \"Baby's Super Daily Liquid Vitamin D Drops\",\n","  'Chocolate Caramel Protein Snack Bar',\n","  'Vitamin D3 400 Iu Sunny Gummies'],\n"," ['Coconut Water',\n","  'Milk Chocolate Almonds',\n","  'Sparkling Mineral Water',\n","  'Original Rice Krispies Treats'],\n"," ['Organic Fuji Apple', 'French Vanilla Sugar Free Liquid Coffee Creamer'],\n"," ['Hass Avocados', 'Chunk Light Tuna'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Blueberries',\n","  'Organic Strawberries',\n","  'Organic Chili Powder Blend',\n","  'Organic Baby Spinach',\n","  'Organic Red Bell Pepper',\n","  'Organic Sour Cream',\n","  'Medium Cheddar Cheese Block',\n","  'Organic Ground Cumin',\n","  'Organic Navel Orange',\n","  'Frozen Organic Wild Blueberries',\n","  'Cannellini White Kidney Beans No Salt Added',\n","  'Sliced Tamed Jalapeno Peppers',\n","  'Whole Rye Bread',\n","  'Bread, Organic, Spelt Ancient Grain'],\n"," ['Organic Cucumber',\n","  'Organic Zucchini',\n","  'Organic Strawberries',\n","  'Organic Yellow Peaches',\n","  'Limes',\n","  'Organic Roma Tomato',\n","  'Red Peppers',\n","  'Organic Banana',\n","  'Cantaloupe',\n","  'Organic Tomato Cluster',\n","  'Yellow Bell Pepper',\n","  \"Organic D'Anjou Pears\",\n","  'Organic Gala Apples',\n","  'Coconut Water Organic',\n","  'Organic Jalapeno Pepper',\n","  'Organic Mango'],\n"," ['Whipped Cream Cheese Spread',\n","  'Classic Potato Chips',\n","  'Original Apple 100% Juice',\n","  '2% Reduced Fat Milk',\n","  'Cheese Delicato Ravioli',\n","  'Heavy Duty Non-Stick Aluminum Foil 35 sq ft',\n","  'Diet Coke',\n","  'Fancy Feast Wet Classic Chicken Feast Cat Food',\n","  'Soft Frozen Variety Pk Lemonade Lemon & Raspberry Lemonade',\n","  'Small Curd Low Fat Cottage Cheese',\n","  '100% Orange Peach Mango Juice',\n","  'Cookie Baking Sheets, Pre-Cut Parchment Paper'],\n"," ['Banana',\n","  'Organic Baby Carrots',\n","  'Apple Honeycrisp Organic',\n","  'Sea Salt Pita Chips',\n","  'Sparkling Natural Spring Water',\n","  '100% Premium Arabica Ground Coffee'],\n"," ['Organic Cucumber',\n","  'Organic Raspberries',\n","  'Banana',\n","  'Large Lemon',\n","  'Organic Shredded Carrots',\n","  'Limes',\n","  'Organic Mint',\n","  'Original Instant Oatmeal',\n","  'Sparkling Water Grapefruit',\n","  'Organic Grade A Large Brown Eggs',\n","  'Corn Tortillas',\n","  'Organic Romaine Hearts',\n","  'Organic Fuji Apple',\n","  'Frozen Organic Wild Blueberries',\n","  'Mango Chunks',\n","  'Organic Lactose Free 1% Lowfat Milk'],\n"," ['Organic Baby Arugula',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Whipping Cream',\n","  'Organic Red Potatoes',\n","  'Organic Red On the Vine Tomato',\n","  'Organic Broccoli Crowns',\n","  'Bok Choy',\n","  'Organic Pasture Raised Local Eggs'],\n"," ['Cucumber Kirby',\n","  'Organic Baby Arugula',\n","  'Organic Garlic',\n","  'Banana',\n","  'Organic Baby Spinach',\n","  'Organic Red Bell Pepper',\n","  'Limes',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Baby Broccoli',\n","  'Lemon Yogurt',\n","  'Organic Avocado',\n","  'Fresh Mozzarella Ball',\n","  'Macaroni And Cheese',\n","  'Unsweetened Almondmilk',\n","  'Organic Jalapeno Pepper',\n","  'Crushed Tomatoes',\n","  'Organic Tomato Paste',\n","  'Stringless Sugar Snap Peas',\n","  'Peanut Butter Bar',\n","  'Organic Mung-Bean Sprouts',\n","  'Brown Fertile Large Grade AA Eggs',\n","  'Authentic Red Curry Paste',\n","  'Salted Peanut Butter Filled Pretzels',\n","  'Unsweetened Coconut Water',\n","  'Blend Blueboon Coffee'],\n"," ['Organic Blueberries', 'Blackberries', 'Raspberries', 'Half And Half Cream'],\n"," ['Organic Raspberries',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Yellow Onion',\n","  'Organic Lemon',\n","  'Organic Strawberries',\n","  'Limes',\n","  'Organic English Cucumber',\n","  'Organic Plain Whole Milk Yogurt',\n","  'Ice Bag',\n","  '100% Natural Sponge Cloths'],\n"," ['Organic Half & Half',\n","  'Large Alfresco Eggs',\n","  'Large Lemon',\n","  'Basil Pesto',\n","  'Broccoli Crown',\n","  'Organic Granny Smith Apple',\n","  'Pure Sparkling Water',\n","  'Whole Milk',\n","  'Organic Ice Cream Vanilla Bean',\n","  'Organic Linguine'],\n"," ['Mountain Spring Water',\n","  'Classic Mix Variety',\n","  'Chewy Granola Bars Variety Pack'],\n"," ['Light Brown Sugar',\n","  'Pineapple Chunks, Organic, in Their Own Organic Juice',\n","  'Low Fat Strawberry Yogurt Bars',\n","  \"Multivitamin, Kid's One, Tablets, Fruit Punch MultiStars\"],\n"," ['Banana',\n","  'Organic Milk',\n","  'Steamfresh Premium Selects Broccoli Florets',\n","  'Total 2% All Natural Greek Strained Yogurt with Honey',\n","  'Deli Fresh Rotisserie Seasoned Chicken Breast',\n","  'Unsweetened Ice Tea',\n","  'Tissue with Lotion Aloe & E',\n","  'Non Alcoholic The Original Irish Cream Coffee Creamer',\n","  'DanActive Vanilla Probiotic Dairy Drink',\n","  'Mint Waxed Floss Interdental',\n","  'Cheddar Squares Cheddar Squares'],\n"," ['Organic Black Currant Probiotic Elixir', 'Organic Raspberry Ginger'],\n"," ['Organic Zucchini',\n","  'Organic Strawberries',\n","  'Banana',\n","  'Vanilla Almond Milk Yogurt',\n","  'Almond Milk Peach Yogurt',\n","  'Red Raspberries',\n","  'Toasted Coconut Almondmilk Blend',\n","  'Jalapeno Hummus',\n","  'Gin Gins Original Chewy Ginger Candy',\n","  'Original Pure Creamy Almond Milk',\n","  'Lentil Chips, Spicy Sriracha',\n","  'Coconut Almond Creamer Blend',\n","  'Almond Milk Strawberry Yogurt',\n","  'Lentil Chips, Himalayan Pink Salt'],\n"," ['Super Greens Salad',\n","  'Red Peppers',\n","  'Organic Whole Grain Wheat English Muffins',\n","  \"Crispy Chick'n Sliders\",\n","  'Shoestring Fries',\n","  'Reduced Fat Vegenaise',\n","  'Bread, Organic, Spelt Ancient Grain',\n","  'Vegan Molasses Cookies'],\n"," ['Organic Baby Spinach',\n","  'Beyond Beef Fiesty Crumble',\n","  'Bean & Rice Chips Nacho',\n","  'Orange Marmalade',\n","  'Long Grain Brown Rice',\n","  'Feisty Buffalo Poppers',\n","  'Beyond Chicken Homestyle Tenders'],\n"," ['Organic Grape Tomatoes',\n","  'Mild Salsa',\n","  'Organic Baby Spinach',\n","  'Organic Red Bell Pepper',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Organic Whole Milk',\n","  'Organic Fuji Apple',\n","  'Organic Unsalted Butter',\n","  'Organic Shredded Mild Cheddar',\n","  'Uncured Hickory Smoked Bacon',\n","  'Low Fat Vanilla Yogurt',\n","  'Uncured Slow Cooked Ham'],\n"," ['Organic Homestyle Mini Waffles',\n","  'Total Greek Strained Yogurt',\n","  'Artisan Sausage Pineapple Uncured Bacon Hardwood Smoked with Vermont Maple Syrup',\n","  'Chopped Tomatoes'],\n"," ['Organic Hass Avocado',\n","  'Organic Raspberries',\n","  'Original Whole Fat Lactose Free Milk',\n","  'Distilled Water',\n","  'Organic Greek Lowfat Yogurt With Cherries',\n","  'Organic Raw Sharp Cheddar Cheese',\n","  'Organic Gluten Free Summer Berries Granola',\n","  'Fruit and Nut Granola',\n","  'Organic Greek Lowfat Yogurt With Blueberries',\n","  'Organic Gluten Free Buckwheat Wildberry Waffles',\n","  'Gluten Free Whole Grain Bread'],\n"," ['Harvest Cheddar Multigrain Chips',\n","  'Tiny Twists Pretzels',\n","  'Hint of Lime Flavored Tortilla Chips'],\n"," ['Organic Baby Arugula',\n","  'Organic Grape Tomatoes',\n","  'Guacamole',\n","  'Corn Maize Tortillas',\n","  'Strawberries',\n","  'Organic Red Radish, Bunch',\n","  'Red Peppers',\n","  'Organic Fat Free Milk',\n","  '90% Lean Ground Beef',\n","  'English Seedless Cucumber',\n","  'Organic Tomato Sauce',\n","  'Total 0% Greek Yogurt',\n","  'Orange Bell Pepper',\n","  'Organic Blackberries',\n","  'Organic Tomato Paste',\n","  'Canola Oil',\n","  'Organic Snipped Green Beans',\n","  'Healthy Grains Fiber Cinnamon Oat Clusters',\n","  'Gluten Free Classic Hamburger Buns',\n","  'Fajita Seasoning',\n","  'Organic White Corn & Wheat Tortillas',\n","  'Hazelnut Chocolate Chip Gelato'],\n"," ['Grapefruit Sparkling Water',\n","  'Peach-Pear Sparkling Water',\n","  'Multi Surface Glade® Rainshower Scent Everyday Cleaner',\n","  'Classic Clean'],\n"," ['Clementines',\n","  'Organic Tomato Cluster',\n","  'Organic Black Beans',\n","  'Organic Green Leaf Lettuce',\n","  'Soy Free Buttery Spread',\n","  'Grated Parmesan Cheese',\n","  'Organic Vegetable Broth',\n","  'Organic Gala Apples, Bag',\n","  'Fresh Wrap Organic Cucumber',\n","  'Gluten Free Cinnamon Heaven Cereal',\n","  'Green Lima Beans'],\n"," ['French Vanilla Creamer',\n","  'Swirl Bread Cinnamon',\n","  'Presliced Everything Bagels',\n","  'Oreo  Ice Cream Sandwiches',\n","  'Great Grains'],\n"," ['Banana',\n","  'Strawberries',\n","  'Grapefruit Sparkling Water',\n","  'Green Bell Pepper',\n","  'Red Raspberries',\n","  'Organic Broccoli',\n","  'White Onion',\n","  'Unsalted Pure Irish Butter',\n","  'Shiitake Mushroom',\n","  'Authentic French Brioche Hamburger Buns',\n","  'Whole White Mushrooms',\n","  'Almond Milk Hazelnut Creamer',\n","  'Apricot Satin Shower Body Wash',\n","  'Sesame Deli Style Pretzel Crisps'],\n"," ['Granny Smith Apples',\n","  'Creamy Peanut Butter',\n","  'Mandarins',\n","  'Extra Crunchy Peanut Butter',\n","  'Plain Pre-Sliced Bagels',\n","  'Gala Apples',\n","  'Presliced Everything Bagels',\n","  'Garden Vegetable Cream Cheese Spread',\n","  'Philadelphia Cream Cheese Spread',\n","  'The Original Liquid Coffee Creamer'],\n"," ['Organic Raspberries',\n","  'Vitamin D Whole Milk',\n","  'Original Nooks & Crannies English Muffins',\n","  'Dha Omega 3 Reduced Fat 2% Milk',\n","  'Organic Bread with 21 Whole Grains',\n","  'Special K Red Berries Crunchy Rice & Wheat Flakes with Strawberries'],\n"," ['Meat & Cheese Tray', 'Veggie Dip', 'Ranch Dip'],\n"," ['Bag of Organic Bananas',\n","  '100% Whole Wheat Bread',\n","  'Organic Reduced Fat 2% Milk',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Shredded Parmesan',\n","  'Organic Mayonnaise',\n","  'Asparation/Broccolini/Baby Broccoli',\n","  'Organic Baby Rainbow Carrots',\n","  'Original Enriched Rice Drink',\n","  'Organic 85% Ground Beef',\n","  'Organic Strawberry Yogurt & Fruit Snack',\n","  'Chomperz Original Crunchy Seaweed Chips'],\n"," ['Almond Breeze Chocolate Almond Milk', 'Quinoa Burgers - 4 CT'],\n"," ['Vegetable Fried Rice',\n","  'Unsweetened Almondmilk',\n","  'Organic Light in Sodium Lentil Vegetable Soup',\n","  'Tulsi Holy Basil Sweet Rose Infusion Bags 18 Count',\n","  'Dairy Free Coconut Milk Vanilla Yogurt Alternative',\n","  'Fruit & Nut Bar Blueberry Vanilla & Cashew',\n","  'Gluten Free Garden Vegetable Lasagna',\n","  'Toasted Caramel Coconut Chips',\n","  'Vegan Oatmeal Chocolate Chip Cookies',\n","  \"Qi'a Gluten Free Oatmeal Superseeds and Grains packets\",\n","  'Miso Soup Bowl',\n","  'Veggie Loaf Mashed Potatoes and Vegetables',\n","  'Vegan Nutritional Shake Sweet Vanilla Bean',\n","  \"Organic Qi'a Superfood Oatmeal, Cinnamon Pumpkin Seed\"],\n"," ['Extra Virgin Olive Oil',\n","  'Organic Avocado',\n","  'Original Cereal',\n","  'Homemade Hot Arrabbiata Fra Diavolo Sauce',\n","  'Cherry Garcia Ice Cream',\n","  'Original Hot Sauce',\n","  'Thin Spaghetti No 11',\n","  'Tonic Water',\n","  'Half Baked® Ice Cream',\n","  'Apple Pie Fruit & Nut Food Bar',\n","  'Blueberry Muffin Bar',\n","  'Low Fat No Chicken Noodle Soup',\n","  'Vegan Hot & Sour Noodle Soup',\n","  'The Tonight Dough™ Ice Cream',\n","  'Green Machine',\n","  'Organic Soups Alphabet Fat Free',\n","  'Cherry Vanilla Cherry On The Bottom Cream Top',\n","  'Annie Peely Fruit 4.5 Z',\n","  'Key Lime Pie Fruit & Nut Food Bar',\n","  'Extra Fine Flour'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Grape Tomatoes',\n","  'Organic Raspberries',\n","  'Organic Strawberries',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Boneless Skinless Chicken Breast',\n","  'Organic Whole Milk',\n","  'Organic Greek Whole Milk Blended Vanilla Bean Yogurt',\n","  'Organic Plain Greek Whole Milk Yogurt',\n","  'Organic Turkey Bacon',\n","  'Original Hummus',\n","  'Chocolate Peanut Butter',\n","  'Unsweetened Almondmilk',\n","  \"Major Dickason's Blend Ground Coffee Dark Roast\",\n","  'Organic Old Fashioned Rolled Oats',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Organic California Style Sprouted Bread',\n","  'Organic Orange Juice',\n","  'Coconut Chia Bar',\n","  'Dark Chocolate Almonds',\n","  'Whole Grain Lavash',\n","  'Pomegranate',\n","  'Organic Forbidden Rice',\n","  'Organic Whole Wheat Pita',\n","  'Mocca-Java Decaffeinated Ground Coffee',\n","  'Whole Wheat Spanakopita',\n","  'Salted Almond Butter Filled Dark Chocolate Bar'],\n"," ['Lactose Free Half & Half',\n","  'Organic Ginger Root',\n","  'Seedless Red Grapes',\n","  'Organic Baby Rainbow Carrots',\n","  'Unsalted Pure Irish Butter',\n","  'Vegan Chocolate Chip Mini Muffins',\n","  'Reduced Fat Irish Butter',\n","  'Organic Freeze Dried Strawberries',\n","  'Organic Mini Cheddar Cheese Crackers',\n","  'Mustard, Spicy Brown'],\n"," ['Black Seedless Grapes', 'Wild Alaskan Sockeye Salmon'],\n"," ['Fridge Pack Cola', 'Original Cream Cheese', 'Mixed Fruit'],\n"," ['Cucumber Kirby',\n","  'Organic Zucchini',\n","  'Organic Baby Spinach',\n","  'Organic Ginger Root',\n","  'European Cucumber',\n","  'Organic Green Leaf Lettuce',\n","  'Calrose Rice',\n","  'Organic Mung-Bean Sprouts',\n","  '100% Lactose Free Reduced Fat Calcium Enriched Milk',\n","  'Extra Ginger Brew Jamaican Style Ginger Beer',\n","  'Loose White Button Mushrooms',\n","  'Sticky Toffee Pudding'],\n"," ['Infusions Ultra Downy® Infusions™ Lavender Serenity™ Fabric Softener Sheets 90 count Fabric Enhancers',\n","  'Pull-Ups Training Pants Learning Designs 3T-4T 32-40 Lbs'],\n"," ['Cheerios Cereal',\n","  'Blueberry Almond Breakfast Bars',\n","  'Organic Sparkling Cider'],\n"," ['Organic Red Radish, Bunch',\n","  'Organic Avocado',\n","  'Cucumber & Garlic  Tzatziki',\n","  'Carrot And Celery Sticks',\n","  'Organic Rainbow Carrots',\n","  'Organic Peeled & Cooked Beets',\n","  'Organic Baby Rainbow Carrots',\n","  'Yellow Grape Tomatoes',\n","  'Stuffed Grape Leaves',\n","  'Stringless Sugar Snap Peas',\n","  'Roasted Salted Cashews',\n","  'Organic Sunchoke',\n","  'Hand Picked Pomegranate Seeds/Arils',\n","  'Orange Slices',\n","  'Chicken Potstickers',\n","  'Cauliflower Orange',\n","  'Honey + Ginger Beets',\n","  'Hommus Roasted Eggplant',\n","  'Caramel Pecan Brownies'],\n"," ['Organic Yellow Onion',\n","  'Banana',\n","  'Strawberries',\n","  'Honeycrisp Apple',\n","  'Organic Baby Spinach',\n","  'Limes',\n","  'Boneless Skinless Chicken Breast',\n","  'Red Peppers',\n","  'Organic Spring Mix Salad',\n","  'Organic Avocado',\n","  'Fresh Mozzarella Ball',\n","  'Garnet Sweet Potato (Yam)',\n","  'Penne Rigate',\n","  'Cage Free Large White Eggs',\n","  'Organic Diced Tomatoes',\n","  'Fire Roasted Medium Salsa',\n","  'Organic Medjool Dates',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Vanilla Pure Almond Milk',\n","  'Nine Grain Sourdough Dough',\n","  'Milk, Low Fat, 1% Milkfat'],\n"," ['Aluminum Foil',\n","  'Orange Soda',\n","  'Soft Baked Oatmeal Raisin Cookies',\n","  'Tropical Rainbow Grand Sherbet',\n","  'French Bread Pizza Deluxe',\n","  'Original Fruit Chews',\n","  'Spaghetti With Meat Sauce',\n","  'Boneless Fried Chicken',\n","  'Grilled Chicken & Mozzarella Ravioli',\n","  'Pineapple Soda Fridge Pack',\n","  'Chicken Parmigiana Complete Meals'],\n"," ['Plain Non-Fat Greek Yogurt',\n","  'Large Lemon',\n","  'Small Hass Avocado',\n","  'Orange Sparkling Water',\n","  'Kale Greens',\n","  'Smoked Gouda',\n","  'Creamy Deluxe Gluten Free Rice Pasta & Extra Cheesy Cheddar Sauce',\n","  'Garlic & Herb Butter Stick',\n","  'Potato Chips, Kettle Cooked, Sea Salt & Cracked Pepper',\n","  'Organic Cranberry Juice'],\n"," ['Spring Water',\n","  'Natural Spring Water',\n","  'Vanilla Unsweetened Almond Milk',\n","  '100% Recycled Paper Towels',\n","  'Organic Ezekiel 49 Bread Cinnamon Raisin',\n","  'Essential Greens with Lime Vegetable and Fruit Juice Blend',\n","  'Whole Wheat Cookies Dark Chocolate',\n","  'Organic Salted Caramel Ice Cream',\n","  'Electrolyte Water',\n","  'Organic Gluten Free Maple Buckwheat Flakes',\n","  'Bac-Out Stain & Odor Remover',\n","  'White Unscented Facial Tissue',\n","  'Organic Ice Cream Chocolate Chocolate Chip'],\n"," ['Unsweetened Vanilla Almond Milk',\n","  'Dark Chocolate Chips',\n","  'Almond Dark Chocolate',\n","  'Vanilla Bean Light Ice Cream',\n","  'Organic Acai Berry Smoothie Packs',\n","  'Fancy Eggplant',\n","  'Ccnut Raw Cocoaminos',\n","  'Cookie Dough Chip Fit Frozen Desserts'],\n"," ['Banana',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Blueberries',\n","  'Classic Hummus',\n","  'Green Bell Pepper',\n","  'Extra Crunchy Peanut Butter',\n","  'Original Wheat Thins',\n","  'Pizza Dough',\n","  'Whole Strawberries',\n","  'Vanilla Light & Fit Greek Yogurt',\n","  'Hazelnut Spread With Skim Milk & Cocoa',\n","  'Goat Cheese Log',\n","  'Lightly Salted Rice Cakes',\n","  '100% Whole Grain Bread'],\n"," ['Bag of Organic Bananas',\n","  'Organic Whole String Cheese',\n","  'Uncured Genoa Salami',\n","  'Organic Yellow Peaches',\n","  'Grape White/Green Seedless',\n","  'Organic Homestyle Mini Waffles',\n","  'Raspberries',\n","  'Honey Graham Sticks',\n","  'Coconut Milk Vanilla Frozen Dessert',\n","  'Organic Edamame',\n","  'Boomchickapop Sea Salt Popcorn',\n","  'Trilogy Kombucha',\n","  'Minneola Tangelo',\n","  'Classic Round Crackers',\n","  '3 Day Cleanse Total Body Reset Advanced Herbal Formula Capsules'],\n"," ['Bag of Organic Bananas',\n","  'Citrus Mandarins Organic',\n","  'Organic Small Bunch Celery',\n","  'Organic Vanilla Soymilk',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Toasted Sesame Seed Oil'],\n"," ['Nutri Grain Bars Multi Pack'],\n"," ['Organic Raspberries',\n","  'Roasted Turkey Breast',\n","  'Raspberry Yoghurt',\n","  'Reduced Fat Milk',\n","  'Grape White/Green Seedless',\n","  'Cool Mint Chocolate',\n","  'Baked Caesar Snapea Crisps',\n","  'Blueberry Yoghurt',\n","  'Chocolate Milk Frozen Pops',\n","  'Dark Chocolate Pretzels with Sea Salt',\n","  'Sage Citrus Dish It Out Dish Liquid'],\n"," ['Organic Grape Tomatoes',\n","  'Creamy Peanut Butter',\n","  'Asparation/Broccolini/Baby Broccoli',\n","  'Cauliflower Florets',\n","  'Bread',\n","  '2% Reduced Fat Milk',\n","  'Red Delicious Apple',\n","  'Baby Spinach Salad',\n","  'Disinfecting Wipes Fresh Scent',\n","  'All Whites 100% Egg Whites',\n","  'Pumpernickel Dark Pump Bread',\n","  'Spring Water Antibacterial Liquid Hand Soap with Moisturizer',\n","  'High Protein Vanilla Shake',\n","  'Fruit Tray',\n","  'Fit Kitchen Teriyaki Chicken'],\n"," ['Organic Garlic',\n","  'Organic Italian Parsley Bunch',\n","  'Large Lemon',\n","  'Organic Cilantro',\n","  'Organic Red Radish, Bunch',\n","  'Organic Carrot Bunch',\n","  'Organic Basil',\n","  'Small Hass Avocado',\n","  'Michigan Organic Kale',\n","  'Organic Mint',\n","  'Organic Rosemary',\n","  'Perrier Lime',\n","  'Mocha Almond Fudge Minis Almond Milk Frozen Dessert',\n","  'Pretzel Crisps Original Deli Style Pretzel Crackers',\n","  'Pizza Poppers Uncured Pepperoni',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Cilantro Lime Chicken Burrito',\n","  'Beef Skirt Steak',\n","  'Garlic Hummus',\n","  'Dairy Free Coconut Milk Frozen Dessert Minis',\n","  'Shredded Beef Burrito',\n","  'Multigrain Sandwich Bread'],\n"," ['Organic Half & Half', 'Reduced Fat 2% Milk'],\n"," ['Broccoli Crown',\n","  'Organic Shredded Carrots',\n","  \"Women's One Food-Based Multivitamin\",\n","  'Oyster Sauce'],\n"," ['Vanilla Unsweetened Almond Milk',\n","  'Provolone Slices',\n","  'Good Seed Organic Thin Sliced Bread',\n","  'Caramel Cone Ice Cream',\n","  'Sparkling Mineral Water',\n","  'Mexican Style Four Cheese Shredded Cheese',\n","  'Garden Spinach Herb 6 Ct Wraps',\n","  'Cabernet Sauvignon',\n","  'Lager Beer',\n","  'Hot Enchilada Sauce'],\n"," ['Extra Virgin Olive Oil',\n","  'Green Bell Pepper',\n","  'Parmesan Cheese',\n","  'Celery',\n","  'Sweet Potatoes',\n","  'Light Sour Cream',\n","  'Low Fat Cottage Cheese',\n","  'Vanilla, Chocolate, Strawberry Ice Cream',\n","  'Cherry Vanilla Ice Cream',\n","  'Crumbled Feta Cheese',\n","  'Plain Soy Milk',\n","  'Coffee Frozen Dairy Dessert'],\n"," ['Flat Parsley, Bunch',\n","  'Organic Yellow Onion',\n","  'Mild Diced Green Chiles',\n","  'Garlic',\n","  'Organic Shredded Carrots',\n","  'Limes',\n","  'Michigan Organic Kale',\n","  'Organic Avocado',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Organic Pinto Beans',\n","  'Yellow Bell Pepper',\n","  'Birthday Cake Light Ice Cream',\n","  'Organic Brown Rice',\n","  'Grilled Chicken Breast Strips',\n","  'Organic Soups Hearty Spanish Rice & Red Bean',\n","  'Organic Sesame Ginger Vinaigrette Dressing'],\n"," ['Kosher Dill Pickle Spears', 'Pure Peanut Oil'],\n"," ['Organic Asian Chopped Salad Kit',\n","  'Vanilla Almond Milk',\n","  'Tomato Paste',\n","  'Cookie Dough Ice Cream Chocolate Chip',\n","  'Baby Cut Carrots',\n","  'Mint Chip',\n","  'Pistachio Ice Cream',\n","  'Chocolate Almond Crunch Ice Cream',\n","  'Culinary Coconut Milk',\n","  'Pasta Zero Spaghetti Shirataki Noodles'],\n"," ['100% Whole Wheat Bread',\n","  'Organic 2% Reduced Fat Milk',\n","  'Original Nooks & Crannies English Muffins',\n","  'Creamy Peanut Butter',\n","  'Honey Nut Cheerios',\n","  'Whole Grain Cheddar Baked Goldfish Crackers',\n","  'Super Soft Taco Flour Tortillas',\n","  'Original Syrup',\n","  'Pretzel Crisps Original Deli Style Pretzel Crackers',\n","  'Original Whipped Cream Cheese',\n","  'Original Apple 100% Juice',\n","  'Chocolate Chip Cookie Dough Ice Cream',\n","  'Diet Coke Caffeine Free Soda',\n","  'Fridge Pack Cola',\n","  'Organic Mexican Blend Finely Shredded Cheese',\n","  'Original Hot Sauce',\n","  'Squeeze Tomato Ketchup',\n","  'Original Orange Juice',\n","  'Crispix Rice & Corn Cereal',\n","  'Vanilla Almond Breeze',\n","  'Coffee Mate Natural Bliss Sweet Creme Coffee Creamer',\n","  'Golden Grahams Cereal',\n","  'Eggo Nutri-Grain Low Fat Waffles',\n","  'Danimals Strawberry Explosion Flavored Smoothie',\n","  'Vanilla Ice Cream',\n","  'Honey Bunches of Oats Honey Roasted Cereal',\n","  'Original Restaurant Style Tortilla Chips',\n","  'Organic Apple Raisin & Quinoa Stage 2 Baby Food',\n","  'Peach,  Apricot & Banana Stage 2 Baby Food',\n","  'Grade A Large White Eggs',\n","  'Butter with Canola Oil Spread',\n","  'Chicken Bouillon Cubes',\n","  'Wheat Thins Reduced Fat Crackers',\n","  'Honey Maid Graham Crackers',\n","  \"Gillette Fusion ProGlide Manual Men's Razor Blade Refills\",\n","  'Sweet & Salty Nut Almond Granola Bars',\n","  'Fresh Cut Green Beans',\n","  'Classic Yellow Mustard',\n","  'Snack Size Vanilla Yogurt Raisins',\n","  'Apple Jacks Cereal',\n","  'Diet Cherry Coke',\n","  'Genuine Chocolate Flavor Syrup',\n","  'Spinach Peas & Pear Stage 2 Baby Food',\n","  'Caffeine Free Coke Zero',\n","  '13 Gallon Tall Drawstring Kitchen Bags',\n","  'Deluxe Everything Bagels',\n","  'Deluxe Cinnamon Raisin Bagels',\n","  'Flavor Variety Instant Oatmeal',\n","  'Natural Bliss Salted Caramel Flavor All-Natural Coffee Creamer',\n","  'Fully Cooked Turkey Sausage Patties',\n","  'Lightly Salted Cashews Halves & Pieces',\n","  'Light & Fit Greek Vanilla Yogurt',\n","  'Dino Buddies Chicken Breast Nuggets',\n","  'Mini-Snacks Organic Raisins',\n","  'Original Pancake & Waffle Mix',\n","  'Original Cooking Spray',\n","  'Fully Cooked Original Bacon',\n","  'Mixed Nuts Lightly Salted',\n","  'Normal to Dry Skin Fragrance Free Daily Moisture Fragrance Free',\n","  \"Original Berry Flavor  Children's\",\n","  'Baby Naturals Head-to-Toe Baby Wash'],\n"," ['Organic Cucumber',\n","  'Organic Strawberries',\n","  'Sinfully Sweet Campari Tomatoes',\n","  'Mini Chocolate Chunk Cookies',\n","  'Organic Whipping Cream',\n","  'Mint',\n","  'Organic Unsalted Butter',\n","  'Blood Oranges',\n","  'Organic Russian Banana Fingerling Potato',\n","  'Whipped Cream Cheese',\n","  'Organic Powdered Sugar',\n","  'Ancient Grain Granola Cranberry Pecan',\n","  'Organic Cultured Sour Cream',\n","  'Freshly Squeezed Orange Juice',\n","  'Mascarpone',\n","  'Organic Refined Sunflower Oil',\n","  'Shelled & Dry Roasted Organic Pistachios',\n","  \"Sheep's Milk Halloumi Cheese\"],\n"," ['Indian Dal Golden Lentil Soups',\n","  'Salt & Pepper Krinkle Chips',\n","  'Organic Chunky Vegetable Soup',\n","  'Almond Breeze Almond & Coconut Milk Blend',\n","  'Organic Vegetable Broth',\n","  \"Naturе's Calorie-Free Sweetener\",\n","  'Refresh Herbal Tea',\n","  'Real Vegetable Chips Spiced Sweets',\n","  'Dandelion Greens Juice',\n","  'Cucumber Jalapeno Juice',\n","  'Organic Turmeric Tonic Juice',\n","  'High pH 9+ Alkaline Ionized Water',\n","  'Cinnamon Cashew Vanilla Organic Cold-Pressed Coffee',\n","  'Organic Creamy Sweet Pea Soup',\n","  'Gluten Free All Natural Chocolate Chip Cookies'],\n"," ['Cucumber Kirby',\n","  'Organic Shredded Carrots',\n","  'Organic Red Bell Pepper',\n","  'Feta Cheese Crumbles',\n","  'Fat Free Milk',\n","  'Sliced Black Olives',\n","  'Organic Italian Salad',\n","  'Sliced White Mushrooms',\n","  'Ruby Red Grapefruit'],\n"," ['Strawberries',\n","  'Unsweetened Almondmilk',\n","  'Tilapia Filet',\n","  'Traditional Plain Greek Yogurt',\n","  'Organic Fuji Apples',\n","  'Original Pure Creamy Almond Milk',\n","  'Cherimoya',\n","  'Daily Energy Packet'],\n"," ['Bag of Organic Bananas',\n","  'Organic Unsweetened Almond Milk',\n","  'Large Alfresco Eggs',\n","  'Organic Roma Tomato',\n","  'Organic Avocado',\n","  'Almond Milk Peach Yogurt',\n","  'Almond Milk Blueberry Yogurt',\n","  'Yogurt, Lowfat, Strawberry',\n","  'Lowfat Blueberry Yogurt',\n","  'Almond Milk Strawberry Yogurt',\n","  'Organic Promise Strawberry Fields Cereal',\n","  'Organic Original Plain Soymilk',\n","  'Organic Peach Lowfat Yogurt'],\n"," ['Carrots',\n","  'Granny Smith Apples',\n","  'Organic Baby Spinach',\n","  'Small Hass Avocado',\n","  'Natural Premium Coconut Water',\n","  'Pure Sparkling Water',\n","  'Red Raspberries',\n","  'Organic Italian Salad',\n","  'Whole White Mushrooms',\n","  'Cacao Hemp Walnut Bar'],\n"," ['Organic Strawberries',\n","  'Unsweetened Original Almond Breeze Almond Milk',\n","  'Birthday Cake Light Ice Cream',\n","  'Veggie Chips',\n","  '100% Natural Spring Water',\n","  'Premium Baking Chips Milk Chocolate',\n","  'Mint Chocolate Chip Frozen Greek Yogurt Bars',\n","  'Dark Chocolate Pretzel Snack'],\n"," ['Natural Creamy Peanut Butter Spread',\n","  'Orange Sports Drink',\n","  'Unscented 1000 Sheets Per Roll Bathroom Tissue',\n","  'Ultra Soft Facial Tissues',\n","  'Wheat Thins Reduced Fat Crackers',\n","  'Dry Roasted Unsalted Peanuts',\n","  'Colagate Total Whitening Toothpaste',\n","  'Gain Original Tall Ktchen Bags',\n","  \"Mach3 Smooth Men's Disposable Razor\"],\n"," ['Organic Strawberries',\n","  'Banana',\n","  'Organic Avocado',\n","  'Sparkling Natural Mineral Water',\n","  'Dairy Free Unsweetened Coconut Milk',\n","  'Gluten Free Whole Grain Bread',\n","  'Organic Yellow Squash',\n","  'Organic Baby Spinach Salad',\n","  'Dairy Free Coconut Milk Blueberry Yogurt Alternative',\n","  'Vanilla Ice Cream',\n","  'Baby Food Stage 2 Blueberry Pear & Purple Carrot',\n","  'Non Fat Acai & Mixed Berries Yogurt',\n","  'Organic Apple Raisin & Quinoa Stage 2 Baby Food'],\n"," ['Flexible Straws'],\n"," ['Alpine Spring Water',\n","  'Gluten Free Blueberry Waffles',\n","  \"Major Dickason's Blend Whole Bean Coffee\",\n","  'Garlic Lovers Hommus',\n","  'Butternut Squash Pear Stage 2 Baby Food',\n","  'Dha Omega 3 Vitamin D Milk',\n","  'Organic YoKids Squeeze! Straw-Nana-Rama Yogurt',\n","  'Gluten Free Vegetable Crackers',\n","  'Organic Breakfast Blend Whole Bean Coffee'],\n"," ['Tamari Gluten Free Soy Sauce',\n","  \"Slow Roasted Lightly Seasoned Chick'n\",\n","  'Organic Soy Tempeh',\n","  'Sea Salt Macadamias'],\n"," ['Diet Dr.Pepper Soda Pack',\n","  'Sparkling Natural Mineral Water',\n","  'Root Beer',\n","  'Original Orange Juice',\n","  'Pure Water',\n","  'Ibuprofen Liqui-Gels Capsules'],\n"," ['Sesame Seaweed Salad', 'Sashimi Combo'],\n"," ['Organic Extra Virgin Olive Oil'],\n"," ['Fat Free Skim Milk',\n","  'Strawberries',\n","  'Shredded Parmigiano Reggiano',\n","  'Semi-Sweet Chocolate Morsels'],\n"," ['Banana',\n","  'Michigan Organic Kale',\n","  'Red Delicious Apple',\n","  'Mussels',\n","  'Kidney Bean, White',\n","  'Pure Organic  Wildflower Honey'],\n"," ['Mocha Frappucino Chilled Coffee Drink'],\n"," ['Bunched Cilantro', 'Honey Wheat Bread', 'Eggo Pancakes Minis'],\n"," ['Organic Hass Avocado',\n","  'Organic Blueberries',\n","  'Organic Garlic',\n","  'Organic Yellow Onion',\n","  'Organic Grade A Large Brown Eggs',\n","  'Corn Tortilla Chips',\n","  'Uncooked Corn Tortillas',\n","  'Fire Roasted Salsa',\n","  'Organic Crushed Tomatoes'],\n"," ['Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Fresh Cauliflower',\n","  'Clementines, Bag',\n","  'Apple Honeycrisp Organic',\n","  'Michigan Organic Kale',\n","  'Cheese Puffs Original',\n","  'Toasted Coconut Almondmilk Blend',\n","  'All Natural No Stir Creamy Almond Butter',\n","  'Healthy Grains Oats & Honey Clusters with Toasted Coconut Gluten Free',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Kiwi Sandia Sparkling Water',\n","  'Coconut Flavored Sparkling Water',\n","  'Salted Caramel Yoghurt',\n","  'Plain Soymilk Creamer',\n","  'Plain Noodles With Morohetya',\n","  'Laksa Noodles'],\n"," ['Chocolate Chip Cookies',\n","  'Mixed Fruit Fruit Snacks',\n","  'Original Rice Krispies Treats'],\n"," ['Bag of Organic Bananas',\n","  'Hass Avocados',\n","  'Pineapple Chunks',\n","  'Frozen Whole Strawberries',\n","  'Frozen Organic Blueberries',\n","  'Organic Fuji Apples',\n","  'Fresh Goat Cheese'],\n"," ['Cookie Dough Ice Cream Chocolate Chip',\n","  'Sparkling Natural Mineral Water',\n","  'Arancita Rossa',\n","  'Enlightened Organic Raw Kombucha',\n","  'Vanilla Bean Light Ice Cream'],\n"," ['Cucumber Kirby',\n","  'Extra Virgin Olive Oil',\n","  'Broccoli Crown',\n","  'Organic Red Radish, Bunch',\n","  'Organic Baby Spinach',\n","  'Blueberries',\n","  'Organic Avocado',\n","  'Roasted Red Pepper Hummus',\n","  'Yellow Bell Pepper',\n","  'Organic Turmeric Ginger Tonic',\n","  'Pink Lady (Cripps) Apple',\n","  'Chocolate Ice Cream',\n","  'Whole Wheat Tandoori Naan',\n","  'Organic Gluten Free Chia Plus with Quinoa & Amaranth Waffles',\n","  'Curate Pomme Baya-Apple Berry Sparkling Water',\n","  'Super Greens Veggie Burgers',\n","  'Yellow Zucchini',\n","  'Baby Portabella Mushrooms',\n","  'Praline Crunch Frozen Dessert',\n","  'Tonics Cleansing Probiotic Tonic With Apple Cider Vinegar Cinnamon',\n","  'Juice, Raw & Cold-Pressed, Purity',\n","  'Anti Bug Shake & Spray',\n","  'Organic Crunchy Street Taco Slaw Blend',\n","  'Cleansing Kale Lemon Probiotic Tonic'],\n"," ['Organic Pasture Raised Brown Eggs',\n","  'Unsalted Pure Irish Butter',\n","  'El Ciprés Whole Bean Coffee'],\n"," ['Organic Hass Avocado',\n","  'Banana',\n","  'Organic 2% Reduced Fat Milk',\n","  'Celery Hearts',\n","  'Limes',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic YoBaby Vanilla Yogurt',\n","  'Blue Chips Corn Tortilla Chips',\n","  'Unsweetened Almondmilk',\n","  'Organic Bunch Beets',\n","  'Sugarfree Spearmint Chewing Gum'],\n"," ['Fruit Punch Sports Drink',\n","  'Diet Cherry Coke',\n","  'Homestyle Some Pulp Orange Juice',\n","  '24/7 Performance Light Weight Cat Litter',\n","  'Classic Recipe Milk Chocolate Bar',\n","  'California Champagne Extra Dry'],\n"," ['Unsweetened Almondmilk',\n","  'Unscented 1000 Sheets Per Roll Bathroom Tissue',\n","  'Peach on the Bottom Nonfat Greek Yogurt',\n","  'Boneless Skinless Chicken Breast Fillets',\n","  'Brioche Slider Buns',\n","  'Organic Bread with 21 Whole Grains',\n","  'Non Fat Black Cherry on the Bottom Greek Yogurt',\n","  'Jasmine Rice',\n","  'Fresh Frozen Chopped Spinach',\n","  'Fresh European Style Baby Spinach',\n","  'Spicy Hummus',\n","  'Chicken & Vegetable Snack Sticks for Dogs',\n","  'Organic Cashew Nondairy Blueberry Yogurt',\n","  'Sumatra Dark Roast K-Cups',\n","  'smart Blend Chicken & Rice Formula Dry Dog Food'],\n"," ['Philadelphia Cream Cheese',\n","  'Lemon Verbena Dish Soap',\n","  'Total Greek Strained Yogurt',\n","  'Lavender Dish Soap',\n","  'Pomegranate 100% Juice'],\n"," ['Organic Banana',\n","  'Petite Brussels Sprouts',\n","  'Yellow Straightneck Squash',\n","  'Organic Extra Large Brown Eggs',\n","  'Original Coconut Milk Beverage',\n","  'Dairy Free Lite Culinary Coconut Milk',\n","  'Dairy Free Unsweetened Vanilla Coconut Milk'],\n"," ['Bag of Organic Bananas',\n","  'Organic Strawberries',\n","  'Natural Chicken & Sage Breakfast Sausage',\n","  'Hass Avocados',\n","  'Michigan Organic Kale',\n","  'Organic Cinnamon Crunch Cereal',\n","  'Organic Blue Corn Tortilla Chips',\n","  'Organic Cheddar Bunnies',\n","  'Hearty Nine Grain Bread'],\n"," ['Banana',\n","  'Kids Organic Chocolate Chip ZBars',\n","  'Reduced Fat Milk 100% Lactose Free',\n","  'Organic Apple Banana GoGo Squeez',\n","  'Cultured Soy Vanilla Yogurt',\n","  'Just Mangos Organic Baby Food',\n","  'Super Duper Chicken Nuggets'],\n"," ['Bag of Organic Bananas',\n","  'Asparagus',\n","  'Large Lemon',\n","  'Honeycrisp Apple',\n","  'Organic Baby Spinach',\n","  'Organic Baby Broccoli',\n","  'Red Raspberries',\n","  'Organic Riced Cauliflower',\n","  'Organic Mung-Bean Sprouts',\n","  'Organic Tahini',\n","  'Organic Medjool Dates',\n","  'Fiesta Lime Rice Chips',\n","  'Coffee Cold-Brew Espresso',\n","  'Coconut Milk Yogurt Alternative Natural Flavor'],\n"," ['Pure Irish Butter',\n","  'Organic Cilantro',\n","  'Organic Baby Spinach',\n","  'Boneless And Skinless Chicken Breast',\n","  'Dressing, Jersey Sweet Onion, Calorie Free',\n","  'Febreze Fresh Clean Garbage Bags'],\n"," ['Organic Garlic',\n","  'Blueberries',\n","  'Unsalted Pure Irish Butter',\n","  'Pecorino Romano',\n","  'Spaghetti  No 12',\n","  'Organic Vegetable Broth',\n","  'Caramel Cookie Crunch Gelato'],\n"," ['Bag of Organic Bananas',\n","  'Organic Baby Carrots',\n","  'Honeycrisp Apple',\n","  'Small Hass Avocado',\n","  'Organic Bartlett Pear',\n","  'Organic Spring Mix Salad',\n","  'Organic Granny Smith Apple',\n","  'Organic Navel Orange',\n","  'Distilled Water',\n","  'Organic Kiwi',\n","  'Vanilla Whey Protein Powder',\n","  'Classic Chicken Salad',\n","  'Robust Golden Unsweetened Oolong Tea',\n","  'Natural Chocolate Flavor Whey Protein Powder',\n","  'Organic Rice Probiotic Drink Blueberry',\n","  'Ginger Peach Decaf Longevity Tea Bags'],\n"," ['Bag of Organic Bananas',\n","  'Extra Virgin Olive Oil',\n","  'Tortillas, Corn, Organic',\n","  'Organic Fuji Apple',\n","  'White Onion',\n","  'Sweet Potato Yam',\n","  'Organic Blackberries',\n","  'Grass Fed Ground Beef',\n","  'Pineapple',\n","  'Chicken & Apple Smoked Chicken Sausage',\n","  'Extralean Ground Turkey Breast',\n","  'Organic Apples Pommes',\n","  'California Heirloom Monviso Peeled Garlic',\n","  'Quick 1 Minute Whole Grain Oats',\n","  'Pale Ale & Honey Spice Mustard',\n","  'Barbecue Sauce Original'],\n"," ['Large Lemon',\n","  'Organic Avocado',\n","  'Half & Half',\n","  'Seedless Red Grapes',\n","  'Vanilla Almond Breeze',\n","  'Pita Chips Simply Naked',\n","  'Extra Sharp White Cheddar',\n","  'Herb Turkey Breast',\n","  'Chopped Garlic In Water',\n","  'Bay Blue Cheese',\n","  'Slow Cured Pepper + Garlic Salame Molisana'],\n"," ['Organic Red Bell Pepper',\n","  'Total 0% Nonfat Greek Yogurt',\n","  'Strawberry Ice Cream',\n","  'Organic Red Onion',\n","  'Birthday Cake Light Ice Cream',\n","  'Organic Diced Tomatoes',\n","  'Original Popcorn',\n","  'Organic & Raw Strawberry Serenity Kombucha',\n","  'Pesto Tortellini  Bowls'],\n"," ['Mild Diced Green Chiles',\n","  'Banana',\n","  'Organic Cilantro',\n","  'Garlic',\n","  'Electrolyte Enhanced Water',\n","  'Small Hass Avocado',\n","  'Natural Premium Coconut Water',\n","  'Active Dry Yeast',\n","  'Fresh Ginger Root',\n","  'Organic Garbanzo Beans',\n","  'Organic Red Onion',\n","  'Semi-Sweet Chocolate Premium Baking Chips',\n","  'Pure Dark Brown Cane Sugar',\n","  'Organic Parsley',\n","  'Dressing, Jersey Sweet Onion, Calorie Free',\n","  'Whole Wheat Sourdough',\n","  'Oregano',\n","  'Tomatoes, Whole Peeled',\n","  'Non-Fat Vanilla Yogurt',\n","  \"Organic Lori's Lemon Tea\",\n","  'Nacho Sliced Jalapenos',\n","  'Tomato Purée',\n","  'Oh Berries Pacific Blackberry Jam',\n","  'Four Pepper Goat Cheese'],\n"," ['Fresh Cauliflower',\n","  'Marinara Pasta Sauce',\n","  'Honey Graham Snacks',\n","  'Scoops! Tortilla Chips',\n","  'Orange Bell Pepper',\n","  '100% Pineapple Juice',\n","  'Everyday Paper Plates',\n","  'Presliced Everything Bagels',\n","  'Egg Challah Rolls',\n","  'Chia Squeeze Vitality Snack Blackberry Bliss',\n","  \"M&M's Vanilla Lowfat Yogurt\",\n","  'Cuties Non Dairy Vanilla Frozen Dessert Sandwiches',\n","  'Honey Maid Teddy Grahams Go Pak',\n","  'Apple Cinnamon Chia Squeeze Vitality Snack'],\n"," ['Banana',\n","  'Russet Potato',\n","  'Green Bell Pepper',\n","  'Lemon',\n","  'Fresh Garlic',\n","  'Cranberry Juice Cocktail',\n","  'Supremely Spicy Hummus',\n","  'Turnip',\n","  'Hand Towels',\n","  'Low Fat Cultured Buttermilk',\n","  'Organic Green Pears',\n","  'Colombia Ground Coffee',\n","  'Sopressata',\n","  'Sweet & Simple Lemon Cookies'],\n"," ['Organic Zucchini',\n","  'Banana',\n","  'Michigan Organic Kale',\n","  'Alpine Spring Water',\n","  'Organic Cut Green Beans',\n","  'Organic Edamame'],\n"," ['Soda',\n","  'Organic Milk',\n","  'Cereal',\n","  'No Pulp Calcium & Vitamin D Pure Orange Juice',\n","  'Eggo Homestyle Waffles',\n","  'Solid White Albacore Tuna In Water',\n","  'Energy Drink',\n","  'Cola',\n","  'Original Orange Juice',\n","  'Fresh Cut Golden Sweet Whole Kernel Corn',\n","  'Original Club Crackers',\n","  'Apple Juice',\n","  'Country Potato Bread',\n","  'Raisin, Date & Walnut Instant Oatmeal',\n","  'Beef Franks',\n","  'Luau BBQ Potato Chips',\n","  'Original Low Fat Orange Cream Yogurt',\n","  'Cranberry Juice Cocktail',\n","  '97% Fat Free Beef Franks',\n","  'Original Key Lime Pie Yogurt',\n","  'French Onion Chips',\n","  'French Style Fresh Cut Green Beans',\n","  'Original Potato Salad',\n","  'Raisin Snail Pastries',\n","  'Light Lemon Cream Pie Yogurt',\n","  'All Natural Lemon Tea Bottles'],\n"," ['Hass Avocados',\n","  'Organic Fuji Apples',\n","  'Makeup Remover Cleansing Towelettes',\n","  'Low Fat Fudge Bars'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Garlic',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Yellow Onion',\n","  'Organic Baby Spinach',\n","  'Russet Potato',\n","  'Red Vine Tomato',\n","  'Organic Baby Broccoli',\n","  'Half & Half',\n","  'Organic Wheat-Free & Gluten-Free Original Crackers',\n","  '100% Recycled Bathroom Tissue',\n","  'Tesora Medium Roast',\n","  'Light and Lean Quinoa Black Beans with Butternut Squash and Chard',\n","  'Brown Rice Black-Eyed Peas and Veggies Bowl'],\n"," ['Extra Virgin Olive Oil',\n","  'Boneless Skinless Chicken Breasts',\n","  'Grape White/Green Seedless',\n","  'Salted Butter',\n","  'Fat Free Plain Yogurt',\n","  'Bag of Organic Lemons',\n","  'Smoked Turkey Breast',\n","  'Organic Lime',\n","  'Half And Half',\n","  'Paprika',\n","  'Pineapple Strawberry Sparkling Water',\n","  'Organic  Jade Pearl Rice',\n","  'Tandoor Baked Naan',\n","  'Red Plum'],\n"," ['Organic Hass Avocado',\n","  'Organic Strawberries',\n","  'Banana',\n","  'Whole Jersey Milk Low Pasteurized',\n","  'Red Plums',\n","  'Purple Cauliflower',\n","  'Semolina Flour'],\n"," ['Pure Irish Butter',\n","  'Organic Extra Virgin Olive Oil',\n","  'Mineral Water',\n","  '2% Lactose Free Milk',\n","  'Mixed Fruit Fruit Snacks',\n","  'Beef Franks',\n","  'Cheez-It Baked Snack Crackers',\n","  'De Mexico Bottle',\n","  'Orange Juice with Calcium',\n","  '8 Hot Dog Buns'],\n"," ['Unsalted Cultured Butter',\n","  'Organic Strawberries',\n","  'Large Lemon',\n","  'Organic Cilantro',\n","  'Garlic',\n","  'Organic Baby Spinach',\n","  'Organic Basil',\n","  'Limes',\n","  'Apple Honeycrisp Organic',\n","  'Organic Lacinato (Dinosaur) Kale',\n","  'Organic Avocado',\n","  'Organic Broccoli Florets',\n","  'Spaghetti',\n","  'Organic Heavy Whipping Cream',\n","  'Cultured Low Fat Buttermilk',\n","  'Sweet Onion',\n","  'Organic Broccoli',\n","  'Air Chilled Organic Boneless Skinless Chicken Breasts',\n","  'Sliced Baby Bella Mushrooms',\n","  'Unbleached All-Purpose Flour',\n","  'Classic Macaroni & Mild Cheddar Cheese',\n","  'Sage',\n","  'Fresh Ricotta'],\n"," ['Organic Blueberries',\n","  'Large Lemon',\n","  'Limes',\n","  'Pineapple Chunks',\n","  'Organic Dark Chocolate Peanut Butter Cups',\n","  'Italian Sparkling Mineral Water',\n","  'Mild Cheddar Cheese Sticks',\n","  'Organic Red Delicious Apple',\n","  'Thin Crust Margherita Pizza with Fresh Mozzarella & Basil'],\n"," ['Baby Dry Diapers Jumbo Pack Size 4',\n","  '1st Foods Peaches',\n","  \"Taster's Choice French Roast Instant Coffee\",\n","  '1st Foods Baby Food- Pears',\n","  'Infant Formula Powder',\n","  'Organic Baby Brown Rice Cereal',\n","  'Sweet Potato Apple & Pumpkin Purees-Veg/Fruit Blend-WIC'],\n"," ['Organic Whole String Cheese',\n","  'Organic Raspberries',\n","  'Banana',\n","  'Organic Baby Spinach',\n","  'Organic Roma Tomato',\n","  'Small Hass Avocado',\n","  'Organic Whole Milk',\n","  'Organic Greek Whole Milk Blended Vanilla Bean Yogurt',\n","  'Organic Green Cabbage',\n","  'Organic Red Onion',\n","  'Red Potatoes',\n","  'Wheat English Muffins',\n","  'Organic Lactose Free 1% Lowfat Milk',\n","  'Organic Greek Whole Milk Blended Strawberry Yogurt',\n","  'Pastry Kitchens Classic Puff Pastry',\n","  'Organic Large Grade AA Omega-3 Eggs',\n","  'Organic Whole Wheat Pita'],\n"," ['Asparagus',\n","  'Organic Baby Arugula',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Zucchini',\n","  'Banana',\n","  'Large Lemon',\n","  'Honeycrisp Apple',\n","  'Limes',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Dolmas',\n","  'Bartlett Pears',\n","  'Red Peppers',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Jalapeno Pepper',\n","  '100% Recycled Paper Towels',\n","  'Yellow Onions',\n","  'Organic Orzo',\n","  'Fennel',\n","  'Organic Tomato Puree',\n","  'California Cauliflower',\n","  'Organic Whole Wheat Penne Rigate',\n","  'Vegetable Broth Low Sodium',\n","  'Herb Organic Oregano',\n","  'French Snacking Brie'],\n"," ['Organic Avocado',\n","  'Sonoma Traditional Flour Tortillas 10 Count',\n","  'Lemon Hummus',\n","  'Whole Strawberries',\n","  'Chipotle Lime Meat-Free Crispy Fingers',\n","  'Spots Stew Chicken Dry Dog Food'],\n"," ['Cucumber Kirby',\n","  'Organic Baby Arugula',\n","  'Fresh Dill',\n","  'Organic Cinnamon Apple Sauce',\n","  'Banana',\n","  'Strawberries',\n","  'Large Lemon',\n","  'Broccoli Crown',\n","  'Limes',\n","  'Taco Seasoning',\n","  'Organic Avocado',\n","  'Ground Turkey Breast',\n","  'Boneless Skinless Chicken Breasts',\n","  'Organic Mayonnaise',\n","  'Organic Cinnamon Crunch Cereal',\n","  'Organic Tomato Cluster',\n","  'Organic Mango',\n","  'Dressing, Jersey Sweet Onion, Calorie Free',\n","  'Total 2% Greek Strained Yogurt with Cherry 5.3 oz',\n","  'Lemon Verbena Hand Soap',\n","  'Bok Choy',\n","  'Total 2% Lowfat Greek Strained Yogurt with Peach'],\n"," ['Electrolyte Enhanced Water',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Organic Spring Mix Salad',\n","  'Roasted Turkey Breast',\n","  'Organic Edamame',\n","  'Organic Vanilla Almond Milk',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Ginger Ale',\n","  'Lavender Floral & Mint Natural Dish Liquid',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Super Antioxidant Green Tea',\n","  'Exposed Pulp and Juice Original Aloe Vera + Honey',\n","  'Allure Mangosteen & Mango Aloe Juice',\n","  'All Natural Gardenia Hand And Body Lotion'],\n"," ['Banana',\n","  'Small Hass Avocado',\n","  'Original Style Yoghurt Plain',\n","  'All Purpose Flour',\n","  'Graham Crackers',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Nonfat Probiotic Drinks',\n","  'Mandarins Bag',\n","  'Clover Blossom Honey'],\n"," ['100% Whole Wheat Bread',\n","  'Organic Cut Green Beans',\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Organic Greek Plain Nonfat Yogurt',\n","  'Whole Grain Loaf'],\n"," ['Pizza Roasted Vegetable No Cheese',\n","  'Organic Cheese Frozen Pizza',\n","  'Margherita Pizza',\n","  'Iceberg Lettuce',\n","  'Gluten and Dairy Free Rice Macaroni and Cheeze',\n","  'Eggs, Organic, Pasture-Raised, Large',\n","  'The Original Caesar Dressing',\n","  'Organic Protein Almond Milk Lightly Sweetened Vanilla'],\n"," ['Whole Milk With Vitamin D',\n","  'Mandarins Bag',\n","  'Natural Uncured Beef Hot Dog',\n","  'Regular Pork Sausage Tube',\n","  'Free & Clear Bleach',\n","  'Small Compostable Waste Bag',\n","  'Strawberry Mochi Ice Cream',\n","  'Cleaner',\n","  'Handle-Tie Kitchen Bags Tall - 26 CT',\n","  'Beef Meatballs'],\n"," ['Super Greens Salad',\n","  'Organic Garlic',\n","  'Carrots',\n","  'Large Lemon',\n","  'Organic Red Radish, Bunch',\n","  'Organic Small Bunch Celery',\n","  'Yellow Onions',\n","  'Organic Kiwi',\n","  'Coconut Flavored Sparkling Water',\n","  'Organic Gold Beet Bunch',\n","  'Ginger Snap Cookies'],\n"," ['Summer Strawberry Fruit Strip',\n","  'All-Natural Orchard Cherry Fruit Strip',\n","  'Black Forest Berry Caffeine-Free Tea'],\n"," ['Organic Bread with 21 Whole Grains',\n","  'Organic Stoneground Wheat Crackers',\n","  'Dairy Free Coconut Milk Vanilla Yogurt Alternative',\n","  'Phish Food® Ice Cream',\n","  'Blueberry Soy Yogurt',\n","  'Low fat Chocolate Milk',\n","  'Organic Garlic Hummus',\n","  'Organic Hemp Plus Granola Cereal',\n","  'No Sugar Added Applesauce',\n","  'Unsweetened 100% Cocoa'],\n"," ['Trail Mix', 'Popcorn'],\n"," ['Organic Baby Spinach',\n","  '100% Raw Coconut Water',\n","  'Italian Sparkling Mineral Water',\n","  'Jalapeno Almond Jack Cheese Alternative',\n","  'Grassmilk 2% Reduced Fat Milk',\n","  'All American Classic Made with Non-GMO Soy Veggie Burgers',\n","  'Organic Creamy Tomato Soup',\n","  'Almond Cheddar Style Cheese Alternative Block'],\n"," ['Organic Low Fat Milk', \"Crunchy Oats 'n Honey Granola Bars\"],\n"," ['Strawberries',\n","  'Sparkling Water Grapefruit',\n","  'Super Soft Taco Flour Tortillas',\n","  'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale',\n","  'Organic Broccoli',\n","  'Whole Milk',\n","  'Passionfruit Sparkling Water',\n","  'Organic White English Muffins',\n","  '15 Grain Whole Grain Bread',\n","  'Hazelnut Dairy Free Almond Milk Creamer',\n","  'Apple Veg Drink'],\n"," ['Organic Garlic',\n","  'Okra',\n","  'Banana',\n","  'Large Alfresco Eggs',\n","  'Michigan Organic Kale',\n","  'Feta Cheese Crumbles',\n","  'Seedless Red Grapes',\n","  'Coconut Milk Vanilla Mini Sandwiches',\n","  'Yellow Onions',\n","  'Pecorino Romano',\n","  'Dairy Free Coconut Milk Blueberry Yogurt Alternative',\n","  'Organic Crushed Tomatoes with Basil',\n","  'Fresh Fettuccini',\n","  'Gluten Free Cinnamon French Toast Sticks',\n","  'Organic Vanilla Lightly Sweetened Almond Milk'],\n"," ['Organic YoKids Smoothie Strawberry Banana Lowfat Yogurt',\n","  'YoKids Blueberry & Strawberry/Vanilla Yogurt'],\n"," ['Banana',\n","  'Small Hass Avocado',\n","  'Sparkling Water Grapefruit',\n","  'Organic Red Onion',\n","  'Reduced Fat Milk 100% Lactose Free',\n","  'Sliced Baby Bella Mushrooms',\n","  'Organic Beefsteak Tomato',\n","  'Clean Day Basil Hand Soap'],\n"," ['Organic Cucumber',\n","  'Organic Italian Parsley Bunch',\n","  'Organic Yellow Onion',\n","  'Organic Lemon',\n","  'Carrots',\n","  'Organic Cilantro',\n","  'Organic Red Radish, Bunch',\n","  'Organic Baby Spinach',\n","  'Small Hass Avocado',\n","  'Organic Ginger Root',\n","  'Organic Broccoli Florets',\n","  'Organic Cayenne Pepper',\n","  'Jalapeno Peppers',\n","  'Firm Tofu',\n","  'Organic Tahini',\n","  'Potato Yukon Gold Organic',\n","  'Home Style Beefless Tips',\n","  'Whole Wheat Pita Bread',\n","  'Dill Weed',\n","  'Fries, Broccoli',\n","  'The Complete Cookie Double Chocolate'],\n"," ['Broccoli Crown',\n","  'Macaroni & Cheese Dinner Original Flavor',\n","  'Honey Wheat Bread',\n","  'Diced Peaches Fruit Bowl',\n","  'Ultra This Colby Jack',\n","  'Pure Life Water',\n","  'Graduates Fruit Pick-Ups Diced Apples',\n","  'Veggie Pick Ups Diced Carrots'],\n"," ['Distilled Water'],\n"," ['Cola',\n","  'Chicken Broccoli Supreme',\n","  'Pieces Peanut Butter Candy',\n","  '2% Milk American Cheese Singles',\n","  'Bathroom Tissue Softness & Strength, Double Rolls',\n","  'Light Style Soft Wheat Bread'],\n"," ['Extra Lean Ground Turkey Breast',\n","  'Golden Sweet Potato',\n","  'Salted Caramel Lean Protein & Fiber Bar',\n","  'Plain Unsalted Rice Cakes',\n","  'Long Grain Wild Rice',\n","  'Quick 1 Minute Oatmeal'],\n"," ['Strawberries', 'Blueberries'],\n"," ['Broccoli Crown',\n","  'Organic Wheat-Free & Gluten-Free Original Crackers',\n","  'Original Coconut Milk Creamer',\n","  'Simply White Natural Clean Mint Fluoride Toothpaste',\n","  'Organic California Style Sprouted Bread',\n","  'Chocolate Sea Salt',\n","  'Extra Dark Chocolate Baking Chips',\n","  'Almond Coconut Bar, Organic'],\n"," ['Organic Grape Tomatoes',\n","  'Blueberries',\n","  'Organic Avocado',\n","  'Organic Creamy Deluxe Macaroni Dinner Rotini & White Cheddar Sauce',\n","  'Feta Cheese Crumbles',\n","  'Unsweetened Vanilla Almond Milk',\n","  'Reduced Fat Irish Butter',\n","  'Sweet Potatoes',\n","  'Roasted Garlic Pasta Sauce',\n","  'Organic Blueberry Waffles',\n","  'Spinach Artichoke Dip',\n","  'Rosemary Mini Croccantini',\n","  'Les Petites Fromage Garlic & Herb'],\n"," ['Sinfully Sweet Campari Tomatoes'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Dark Sweet Cherries',\n","  'Organic Sour Cream',\n","  'Mandarin Oranges',\n","  'Organic Reduced Fat Milk',\n","  '100% Raw Coconut Water',\n","  'Organic Broccoli',\n","  'Wheat Gluten Free Waffles',\n","  'Raisins Red Seedless Organic Jumbo Size',\n","  'Unrefined Virgin Coconut Oil',\n","  'Uncured Pepperoni',\n","  'Swedish Style Non-Fat Drinkable Yogurt Plain',\n","  'Whipped Cream Cheese',\n","  'Peanut & Gluten Free Smooth Almond Butter',\n","  'Organic Chicken Noodle Soup',\n","  'Uncured Slow Cooked Ham',\n","  'Chocolate Delight Granola',\n","  'Gluten-Free Pancake Mix',\n","  'Thin Sliced American Cheese'],\n"," ['Organic Blueberries',\n","  'Organic Hothouse Cucumbers',\n","  'Small Hass Avocado',\n","  'Boneless Skinless Chicken Breasts',\n","  'No Salt Added Black Beans',\n","  'Organic Fuji Apple',\n","  'Gluten Free Sliced Mountain White Bread',\n","  'Unsweetened Coconut Milk Beverage',\n","  'Healthy Grains Oats & Honey Clusters with Toasted Coconut Gluten Free',\n","  'Dairy Free Coconut Milk Vanilla Yogurt Alternative',\n","  'Natural Uncured Beef Hot Dog',\n","  'Organic Quick Oats',\n","  'Cinnamon Raisin Bread',\n","  'Blueberry Almond Breakfast Bars',\n","  'Gala Apple',\n","  'Aged Artisanal Treenut Cracked Pepper Cheese'],\n"," ['Bag of Organic Bananas',\n","  'Organic Garlic',\n","  'Organic Shredded Carrots',\n","  'Organic Grade A Large Brown Eggs',\n","  'Smartwater',\n","  'Organic Iceberg Lettuce',\n","  'Organic Rice Vinegar',\n","  'Stir-fry Rice Noodles',\n","  'Gluten Free Omega Flax & Fiber Bread',\n","  'Hibiscus Mint Frozen Pops',\n","  'Organic Pure Lime Juice'],\n"," ['Organic Baby Spinach'],\n"," ['Celery Sticks',\n","  'Red Onion',\n","  'Super Soft Taco Flour Tortillas',\n","  'Philadelphia Cream Cheese',\n","  'Romaine Hearts',\n","  'Iceberg Lettuce',\n","  'Eggo Homestyle Waffles',\n","  'Green Onions',\n","  'Fat Free Beef Broth',\n","  'Sweet Gherkin Pickles',\n","  'Extra Crisp English Muffins',\n","  'Original Whipped Cream',\n","  'Variety Minis with Dark Chocolate Ice Cream Bars',\n","  'Tapioca Pudding Cups',\n","  'Apple Puff Pastry Turnovers'],\n"," ['Small Hass Avocado',\n","  'Herb Crackers',\n","  'Chick Peas',\n","  'Butterhead Lettuce',\n","  'Blackberry Preserves',\n","  'Cut Hearts Of Palm',\n","  'Soft French-Style Herb-Garlic Nut Cheese',\n","  'Entertainment Cracker Collection'],\n"," ['Natural Spring Water', 'White Multifold Towels'],\n"," ['Water',\n","  'Organic Broccoli Florets',\n","  'Sparkling Natural Mineral Water',\n","  'Frozen Broccoli Florets',\n","  'Unsweetened Almondmilk',\n","  'Citrus Dish Soap',\n","  'Unsweetened Almond Milk'],\n"," ['Bag of Organic Bananas',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Whole Organic Omega 3 Milk'],\n"," ['Natural Spring Water',\n","  'Banana',\n","  'Strawberries',\n","  'Large Lemon',\n","  'Granny Smith Apples',\n","  'Shallot',\n","  'Large Grapefruit',\n","  'Vine Ripe Tomatoes',\n","  'Fresh Ginger Root',\n","  'Orange Juice',\n","  'Total 2% All Natural Plain Greek Yogurt',\n","  'Toilet Bowl Cleaner Clinging Bleach Gel',\n","  'Sweet Potato Yam',\n","  'Vanilla Ice Cream',\n","  'Spring Mix',\n","  'Original Soy Milk',\n","  'Glacier Freeze Frost',\n","  'Squeezed Lemonade',\n","  'Rocky Road Ice Cream',\n","  'Vanilla Swiss Almond Ice Cream',\n","  'Deli Fresh Shaved Smoked Turkey Breast',\n","  'Mache Blend',\n","  'Thin Pizza Crust',\n","  'Banana Dippers Banana Slices',\n","  'Reduced Fat Crescent Rolls',\n","  'Lemon Pre-Moistened Wipes',\n","  'Handy Size Sponges',\n","  'Scrubbing Bubbles Heavy Duty All Purpose Cleaner',\n","  'Whole Chipotle Chili',\n","  'Gourmet Organic Thyme',\n","  'Zucchini Squash, Baby Courgette'],\n"," ['Sausage, Egg, & Cheese Biscuit',\n","  'Original Pancakes & Sausage On a Stick',\n","  'Variety Pack Hard Cider',\n","  'Regular Cream Cheese Spread',\n","  'Sausage, Egg, & Cheese Croissant'],\n"," ['Fine Hazelnut Chocolates',\n","  'Pepperidge Farm Colors Cheddar Baked Snack Crackers',\n","  'Beef Franks',\n","  'Simply Heinz Tomato Ketchup',\n","  'Whiskas® Temptations® SUPER Mega Bag Chicken'],\n"," ['Avocado',\n","  'Original Hot Sauce',\n","  'Sweet Chipotle Beef Jerky',\n","  'Sea Salt Original Beef Jerky',\n","  'DeTox Caffeine Free Organic Herbal Tea Bags',\n","  'Dark Chocolate With Almonds',\n","  'Ginger Tea',\n","  'Plantation Mint Herbal Tea',\n","  'Gluten Free Crunchy Vanilla Cereal'],\n"," ['Organic Bunny Fruit Tropical Treat Fruit Snacks',\n","  'Light Multi-Grain English Muffins',\n","  'Homestyle Turkey Meatballs',\n","  'Honey Mustard Yogurt Dressing',\n","  'Dijon Mustard Squeeze Bottle'],\n"," ['Black Beans',\n","  'Mandarin Oranges',\n","  'Honey Nut Cheerios',\n","  'Plain Mini Bagels',\n","  'Original Life Cereal',\n","  'Cola',\n","  'Fruit Roll Ups Variety Fruit Flavored Snacks',\n","  '1/3 Less Fat Cream Cheese',\n","  'Hickory Ham & Cheddar Sandwiches',\n","  'Brown Sugar Cinnamon Roll Wafflers',\n","  'Tropical Flavored Fruit Snacks',\n","  'Mini Farfalle Pasta',\n","  '100% Juice No Sugar Added Apple',\n","  \"GoGurt Burstin' Melon Berry and Cool Cotton Candy Variety Pack Portable Low Fat Yogurt\"],\n"," ['California Clementines',\n","  'Banana',\n","  'Large Lemon',\n","  'Gluten Free Pretzel Twists',\n","  'Wild Berries Sore Throat Lozenges',\n","  'Organic Roasted Red Pepper & Tomato Soup',\n","  'Seeded Rye Bread'],\n"," ['Bag of Organic Bananas',\n","  'Organic Half & Half',\n","  'Large Lemon',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Seedless Red Grapes',\n","  'Organic Extra Firm Tofu',\n","  'Tzatziki',\n","  'Organic Chicken & Vegetable Potstickers'],\n"," ['Garlic Couscous',\n","  'Lemon Sparkling Mountain Spring Water',\n","  'Vantage Choose-A-Sheet Paper Towels',\n","  'G2 Grape Sports Drink',\n","  'Zesty Lemon Sorbet',\n","  'Watermelon Lime Sparkling Mountain Spring Water',\n","  '4% Milkfat Min. Small Curd Cottage Cheese'],\n"," ['Broccoli Crown',\n","  'Cauliflower',\n","  'Smoked Chicken & Apple Mini Sausages',\n","  'Extralean Ground Turkey Breast',\n","  'Original Barbecue Sauce',\n","  'Chopped Garlic'],\n"," ['Multi-Grain Sea Salt Crackers',\n","  'Japanese Style Noodles & Chicken Flavored Sauce'],\n"," ['Original No Pulp 100% Florida Orange Juice',\n","  'Crimini Delight Mushrooms',\n","  'Yellow Onions',\n","  'Genuine Chocolate Flavor Syrup',\n","  'Oral Electrolyte Maintenance Solution Grape',\n","  'Natural Extra Sharp Cheddar Cheese',\n","  'Premium Apple Juice',\n","  'Delights Turkey Sausage Egg Whites & Cheese English Muffin',\n","  'Salt Mill Refill Sea Salt',\n","  'Sweet & Creamy Regular Medium Roast Iced K-Cups Arabica Coffee',\n","  'Sterile Multi Purpose Solution For Contact Lenses'],\n"," ['Sparkling Water Berry',\n","  'Ice Bag',\n","  'Vegan Chao Creamy Original Cheese Slices'],\n"," ['Large Lemon',\n","  'Organic Baby Spinach',\n","  'Organic Avocado',\n","  'All Natural Marinara Sauce',\n","  'Steamfresh Premium Selects Broccoli Florets',\n","  'Organic Dill',\n","  'Sour Cream',\n","  'Tomato Yellow Cherry',\n","  \"Jack's Special Salsa Medium Hot\",\n","  'Traditional Feta Cheese Chunk',\n","  'Chocolate Chip Cookie Dough Nutrition Bars',\n","  'Zesty Italian Dressing'],\n"," ['Organic Medium Brown Eggs',\n","  'Organic Dark Sweet Cherries',\n","  '70% Dark Chocolate Salted Almond Bar',\n","  'Organic Turkey Bacon',\n","  'Organic Broccoli',\n","  'Organic Riced Cauliflower',\n","  'Natural Artesian Water',\n","  'Dark Blackout Organic Chocolate',\n","  'All Natural Coconut Water',\n","  'Cookies & Cream Ice Cream',\n","  'Almond Milk Ricotta',\n","  'Organic Beef Bone Broth',\n","  'Rosewater',\n","  'Laundry Detergent Free & Clear'],\n"," ['Blackberry Cucumber Sparkling Water',\n","  'Nacho Cheese & Bean Snacks',\n","  'Vine Ripe Tomatoes',\n","  'Crunchy Organic Dark Roasted Peanut Butter',\n","  'Margherita Pizza',\n","  'Almond Breeze Original Almond Milk',\n","  'Country Cheddar Bowl',\n","  'Coconut Almond Creamer Blend',\n","  'Jewish Rye Bread'],\n"," ['Vanilla Almond Breeze Almond Milk',\n","  'ZBar Organic Chocolate Brownie Energy Snack',\n","  'Blue Chips Corn Tortilla Chips',\n","  'Original Tofurky Deli Slices',\n","  'Organic Spaghetti Squash',\n","  'Enchilada with Spanish Rice & Beans Meal',\n","  'Big Sur Breakfast Burrito',\n","  'Iced Oatmeal Cookie Kid Z Bar',\n","  'Gluten Free Peanut Butter Dark Chocolate Chewy With a Crunch Granola Bars',\n","  'Almond Milk Strawberry Yogurt',\n","  'Mini Crispy Crabless Cakes',\n","  'Golden Fishless Filet',\n","  'Almond Milk Ricotta',\n","  'Soy Whip Whipped Topping',\n","  'Organic Chocolate Syrup',\n","  'Milk Free Better Than Sour Cream',\n","  'Cheese Alternative, American Style, Slices',\n","  \"Lightly Breaded Turk'y Cutlets\",\n","  'Vegan Sour Cream & Onion Kettle Chips',\n","  'Almond Mozzarella Style Cheese Alternative'],\n"," ['Broccoli Crown',\n","  'Organic Peeled Whole Baby Carrots',\n","  'Sustainably Soft Bath Tissue',\n","  'Organic Fuji Apple',\n","  '100% Recycled Paper Towels',\n","  'Organic Blackberries',\n","  'Garlic Lovers Hommus',\n","  'Mini Original Babybel Cheese',\n","  'Firm Tofu',\n","  'Total 0% Nonfat Plain Greek Yogurt',\n","  'Baby Portabella Mushrooms'],\n"," ['Bag of Organic Bananas',\n","  'Spring Water',\n","  'Hass Avocados',\n","  'Strawberries',\n","  'Honeydew Melon',\n","  'Creamy Almond Butter',\n","  'Organic Extra Virgin Olive Oil',\n","  'Raspberries',\n","  'Coconut Water',\n","  'Reduced Fat 2% Lactose-Free Milk',\n","  'Shredded Mozzarella Cheese',\n","  'Variety Diet Tea',\n","  'Popcorn',\n","  'Old Tyme 100% Whole Grain White Wheat Sliced Bread'],\n"," ['100% Lemon Juice',\n","  'Blueberry',\n","  \"Children's Allergy Relief Oral Suspension Berry Liquid\",\n","  \"Children's Allergy 24hr Multi-Symptom Nasal Spray\"],\n"," ['Organic Rosemary',\n","  'Organic Lowfat 1% Milk',\n","  'Wild Caught Frozen Sockeye Salmon Fillet'],\n"," ['Organic Yellow Peaches',\n","  'Banana',\n","  'Large Lemon',\n","  'Organic Romaine Lettuce',\n","  'Organic Baby Spinach',\n","  'Organic Fuji Apple',\n","  'Pure Sparkling Water',\n","  'Total 0% Greek Yogurt',\n","  'Organic Short Grain Brown Rice',\n","  'Lowfat Vanilla Yogurt',\n","  'Organic Vanilla Soymilk',\n","  'Bing Cherries',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Dried Mango',\n","  'Artisan Sausage Pineapple Uncured Bacon Hardwood Smoked with Vermont Maple Syrup',\n","  'Cut Okra',\n","  'Miso, Organic, Mellow, White',\n","  'Organic Tart Cherry Juice'],\n"," ['Flat Parsley, Bunch',\n","  'Flaky Biscuits',\n","  'Organic Spring Mix Salad',\n","  'Blood Oranges',\n","  'Original Pure Creamy Almond Milk',\n","  'Original Roasted Seaweed Snacks'],\n"," ['Banana',\n","  'Light Mozzarella String Cheese',\n","  'Grapefruit Sparkling Water',\n","  'Organic Half Spring Mix',\n","  'Organic Green Onions',\n","  'Organic Quinoa & Brown Rice With Garlic',\n","  'Original Popcorn',\n","  'Organic Soy Tempeh',\n","  'Shredded Carrots',\n","  'Lightly Salted Almonds',\n","  'Crispy Thin Crust White Pizza'],\n"," ['Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Microwaveable 100% Beef Cheeseburgers',\n","  'Four Cheese Rising Crust Pizza',\n","  'Original Restaurant Style Party Size Tortilla Chips',\n","  \"Snack'mms Kosher Dill Pickles\",\n","  'Carb Control Strawberry Cream Bottle Shakes',\n","  'AdvantEdge Carb Control Creamy Vanilla Shake'],\n"," ['Organic Half & Half',\n","  'Strawberries',\n","  'French Vanilla Coconut Milk Creamer',\n","  'Honeycrisp Apple',\n","  'Vine Ripe Tomatoes',\n","  'Original Gluten Free Crackers',\n","  'Seedless Red Grapes',\n","  'Fresh Mozzarella Ball',\n","  'Avocado Roll',\n","  'Squeezed Orange Juice',\n","  'Organic White Cheddar Popcorn',\n","  'Gluten Free 7 Grain Bread',\n","  'Chicken and Vegetable Egg Rolls',\n","  'Raspberry Preserves',\n","  'Ginger Ale Soda',\n","  'Vanilla 0% Milkfat Yogurt'],\n"," ['Bartlett Pears',\n","  'Original Instant Grits',\n","  'Original Whipped Cream Cheese',\n","  'Baked Snack Crackers Original',\n","  'Fruit & Cream Variety Pack',\n","  'Natural Sharp Cheddar Sliced Cheese',\n","  'Pepperoni Pizza Frozen Sandwiches',\n","  'Cookie Dough Nutrition Bar',\n","  'Whole Wheat Pre-Sliced Mini Bagels',\n","  'Original Rich Chocolate Complete Nutritional Drink',\n","  'Chocolate Energy Bar'],\n"," ['Organic Hass Avocado',\n","  'Organic Lemon',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Cayenne Pepper',\n","  'Organic Whole Grain Wheat English Muffins',\n","  'Organic Unsalted Butter',\n","  'Chocolate Ice Cream',\n","  'Original Orange Juice',\n","  'Organic Distilled White Vinegar',\n","  'Sliced Soppressata Salame',\n","  'Jamon Serrano Dry Cured Ham'],\n"," ['Farmer Cheese',\n","  '2% Milkfat Low Fat Large Curd Pot Style Cottage Cheese',\n","  'Impressions 10.25 Inch Plates'],\n"," ['Organic Garnet Sweet Potato (Yam)',\n","  'Red Vine Tomato',\n","  'Organic Sweet Onion',\n","  'Fresh Whole Chicken',\n","  'Organic Whole Grain Wheat English Muffins',\n","  'Unsweetened Almondmilk',\n","  'Light Brown Sugar',\n","  'Soy Free Buttery Spread',\n","  'Naturals Sweet & Spicy BBQ Sauce',\n","  'Organic Cotton Balls',\n","  'Minced Garlic',\n","  'Banana Mango Yogurt',\n","  'White Sliced Mushrooms',\n","  'Organic Smoky Maple Barbeque Sauce',\n","  'Vitamin Code Raw Prenatal Probiotic Immune Support System for Two'],\n"," ['Banana',\n","  'Organic Mountain Forest Amber Honey',\n","  'Original No Pulp 100% Florida Orange Juice',\n","  'Unsweetened Almondmilk',\n","  'Green Cabbage',\n","  'Part Skim Mozzarella Cheese'],\n"," ['Green Onions', 'Diced Butternut Squash', 'Organic Delicata Squash'],\n"," ['Cucumber Kirby',\n","  'Roma Tomato',\n","  'Spaghetti Pasta',\n","  'Extra Crunchy Peanut Butter',\n","  'Ginger Beer',\n","  'Sliced Almonds',\n","  'Dried Cranberries',\n","  'Caesar Croutons',\n","  'Caesar Dressing',\n","  'Breakfast Blend Medium Roast Ground Coffee',\n","  'Turkey Meatballs, Dinner Size, Flame Broiled'],\n"," ['Old Fashioned Oatmeal', 'French Roast Single Serve Coffee K-Cups'],\n"," ['Fat Free Milk',\n","  'Original Animal Crackers',\n","  'Vanilla with Oreo/M&Ms Variety Pack Lowfat Yogurt'],\n"," ['Blackberry Cucumber Sparkling Water',\n","  'Water',\n","  'Vitamin D Organic Whole Milk',\n","  'Coconut Sparkling Water',\n","  'NiCola Sparkling Water'],\n"," ['Organic Strawberries',\n","  'with Crispy Almonds Cereal',\n","  'Roasted Pine Nut Hummus',\n","  'Mozzarella Ciliegine',\n","  'Extra Virgin Olive Oil, Robust'],\n"," ['Cucumber Kirby',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Diet Cola',\n","  'Original Nooks & Crannies English Muffins',\n","  'Oven Roasted Turkey Breast',\n","  'Red Seedless Grapes Bunch',\n","  'Provolone Slices',\n","  'Large Pitted California Ripe Olives',\n","  'Size 5 Cruisers Diapers Super Pack',\n","  'Strawberry on the Bottom Nonfat Greek Yogurt',\n","  'Salted Butter Half Sticks',\n","  'Cola',\n","  'Non Fat Black Cherry on the Bottom Greek Yogurt',\n","  'Donettes Powdered Mini Donuts',\n","  'Milk Chocolate Candies, Bonus Bag',\n","  'Ultra Soft & Strong® Toilet Paper Double Rolls',\n","  'Chocolate Chip Cookie Dough Tube',\n","  'Dishwasher Detergent',\n","  'Caesar Salad Kit',\n","  'Rapid Relief Creamy Diaper Rash Ointment',\n","  'Banana Bread Mix',\n","  'Graduates Toddlers Cereal Bars Strawberry Banana 8 Count',\n","  'Instant Oatmeal Weight Control Variety',\n","  'Star Wars Macaroni and Cheese',\n","  'Little Movers Diapers Size 5',\n","  'Grade A Large Eggs',\n","  'Graduates For Toddlers Apple Cinnamon Cereal Bars',\n","  'Premium Deli Honey Ham',\n","  'Party Cups Plastic 18 oz',\n","  '7in1 Aussie Total Miracle Collection 7N1 Dry Shampoo 4.9 fl oz Female Hair Care'],\n"," ['Organic Milk Reduced Fat, 2% Milkfat', 'Pyramid Black Tea Bags'],\n"," ['Curate Melon Pomelo Sparking Water', 'Real French Vinaigrette Dressing'],\n"," ['Banana',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Yukon Gold Potatoes 5lb Bag',\n","  'Seedless Red Grapes',\n","  'Grated Parmesan Cheese',\n","  'Enriched Poppyseed Hot Dog Buns',\n","  'Quick Cooking Rolled Oats Irish Oatmeal',\n","  'Lemonade',\n","  'White Sandwich Bread',\n","  'Beef Franks',\n","  'Lemonade Fruit Bars',\n","  'Outshine Lime Fruit Bars'],\n"," ['Peeled Garlic'],\n"," ['Banana', 'Size 5 Cruisers Diapers Super Pack'],\n"," ['Strawberries', 'Organic Extra Virgin Olive Oil', 'Raspberries'],\n"," ['Granny Smith Apples',\n","  'Original Nooks & Crannies English Muffins',\n","  'Whole Milk',\n","  'Peanut Butter Creamy'],\n"," ['Bunched Cilantro',\n","  'Yellow Onions',\n","  'Natural Hickory Smoked Canadian Bacon Center Cut From Pork Loin',\n","  'Ginger Snaps',\n","  'Beef Chuck Roast Boneless',\n","  'Non Alcoholic Amber Beer',\n","  '100% Pressed Apple  Fruit Juice'],\n"," ['Clementines',\n","  'Sparkling Water',\n","  'Pure Vanilla Extract',\n","  'Key Limes',\n","  'Frozen Organic Blueberries',\n","  'Margarine',\n","  'Imported Sardines in Pure Olive Oil Skinless & Boneless Salt Added'],\n"," ['Unsweetened Original Almond Breeze Almond Milk',\n","  'Organic Bartlett Pear',\n","  'Cinnamon Multigrain Cereal',\n","  'Classic Hummus',\n","  'Glide Pro-Health Comfort Plus Mint Floss',\n","  'Cheerios Cereal',\n","  'Organic Fuji Apple',\n","  'Original Fresh Stack Crackers',\n","  'Semi-Sweet Chocolate Premium Baking Chips',\n","  'All-Bran Original Cereals',\n","  'Farfalle No. 93',\n","  'Cafe Cuisine Sesame Chicken',\n","  \"Chewy S'mores Granola Bars\",\n","  'Chicken Pad Thai With Rice Noodles',\n","  'Pesto Tortellini  Bowls',\n","  'Belgian Waffles',\n","  \"Crunchy Oats N' Honey Granola Bars\",\n","  'Krinkle Cut Sea Salt Potato Chips',\n","  'Original Snack Crackers',\n","  'Original Puffins Cereal',\n","  'Four Cheese Crispy Thin Crust Pizza',\n","  'Complete™ ActionPacs™ Fresh Scent Dishwasher Detergent',\n","  'Bowls Tortilla Casserole & Black Beans',\n","  'Plain Tortilla Strips',\n","  'Caramel Bits',\n","  'EnviroKidz Gluten Free & Wheat Free Gorilla Munch Corn Puff Cereal',\n","  'Dark & Sea Salt Caramel Chocolate Squares',\n","  \"Cracklin' Oat Bran Cereal\",\n","  'Signature Pepperoni Crispy Thin Crust Pizza'],\n"," ['Organic Whole String Cheese',\n","  'Green Peas',\n","  'Large Lemon',\n","  'Organic Cilantro',\n","  'Garlic',\n","  'Limes',\n","  'Small Hass Avocado',\n","  'Diced Tomatoes',\n","  'Organic Thompson Seedless Raisins',\n","  'Organic Chicken & Apple Sausage',\n","  'Organic Cauliflower',\n","  'Multigrain Tortilla Chips',\n","  'Organic Baby Spinach Salad',\n","  'Dairy Pure Whole Milk',\n","  'Organic Fuji Red Apple Chips',\n","  'Apples, Kale & Avocados Organic Baby Food',\n","  'Organic Stage 2 Broccoli Pears & Peas Baby Food',\n","  'Apples, Guavas & Beets Organic Baby Food',\n","  'Organic Air Chilled Whole Chicken',\n","  'Apples, Pumpkin & Carrots Organic Baby Food',\n","  'Organic Apples, Carrots and Parsnips Puree',\n","  'Sage',\n","  'Giraffes Diapers Size 3 M'],\n"," ['Bunched Cilantro',\n","  'Organic Zucchini',\n","  '100% Whole Wheat Bread',\n","  'Cherubs Heavenly Salad Tomatoes',\n","  'Banana',\n","  'Strawberries',\n","  'Extra Virgin Olive Oil',\n","  'Garlic',\n","  'Granny Smith Apples',\n","  'Original Nooks & Crannies English Muffins',\n","  'Honey Graham Snacks',\n","  'Organic Avocado',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Whole Chicken',\n","  'Raspberries',\n","  'Original Syrup',\n","  'Organic YoBaby Vanilla Yogurt',\n","  'Original Fresh Stack Crackers',\n","  'Jalapeno Peppers',\n","  'Gala Apples',\n","  'Sea Salt Garden Veggie Straws',\n","  'Beef Broth',\n","  'Dressing, Jersey Sweet Onion, Calorie Free',\n","  'Original Orange Juice',\n","  'Pure Baking Soda',\n","  'Brown Sugar Cinnamon Pre-Sliced Mini Bagels',\n","  'Mighty 4 Sweet Potato, Blueberry, Millet & Greek Yogurt Tots Snack',\n","  'Bits Cheese Cracker Sandwiches',\n","  'Frosted Mini-Wheats Original Cereal',\n","  'Disinfecting Wipes Lemon & Lime Blossom Scent',\n","  'Chewy Granola Bars Variety Pack',\n","  'Baby Food Stage 2 Pumpkin Banana',\n","  'White Sliced Mushrooms',\n","  'Sea Salt Kettle Cooked Potato Chips',\n","  'Balsamic Vinegar',\n","  'Mighty 4 Kale, Strawberry, Amaranth & Greek Yogurt Tots Snack',\n","  'Yellow Zucchini',\n","  'Original Kettlecorn',\n","  \"Cracklin' Oat Bran Cereal\",\n","  'Berry Valley Blueberries',\n","  'Pain Reliever Fever Reducer Extra Strength For Adults Acetaminophen',\n","  'Long Grain White Rice',\n","  'Flip Sides Pretzel Crackers',\n","  '2X Concentrated Clean Burst Laundry Detergent',\n","  'Stage 2 Cherry, Sweet Corn, and Greek Yogurt Baby Food',\n","  'Pistachio Blend',\n","  'Flour Soft Taco Tortillas',\n","  'Pain Reliever & Fever Reducer Tablets'],\n"," ['Bag of Organic Bananas',\n","  'Strawberries',\n","  'Large Lemon',\n","  'Organic English Cucumber',\n","  'Organic Red On the Vine Tomato',\n","  'Honeydew Chunks',\n","  'Organic Peeled & Cooked Beets',\n","  'Gluten Free Whole Grain Bread',\n","  'Organic Dill',\n","  'Lowfat Small Curd Cottage Cheese',\n","  'Organic Mango Chunks',\n","  'Organic Coconut Yogurt',\n","  'Organic Mango Yogurt',\n","  'Freshly Squeezed Orange Juice',\n","  'Honeysuckle Hand Soap',\n","  'Black Bean Salad',\n","  'Organic Lowfat Sour Cream'],\n"," ['Organic Baby Arugula', 'Natural Spring Water', 'Grilled Chicken Breast'],\n"," ['Organic Apple Slices',\n","  'Drinking Water',\n","  'Hamburger Buns',\n","  'Classic Yellow Mustard'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Spring Water',\n","  'Organic Yellow Onion',\n","  'Organic Zucchini',\n","  'Whole Almonds',\n","  'Organic Broccoli Florets',\n","  'Just Mayo',\n","  'Unsweetened Almondmilk',\n","  'Organic Roasted Sliced Chicken Breast',\n","  'Organic Sunflower Seed Spread',\n","  'Baking Powder',\n","  'Organic Turmeric',\n","  \"Jacob's Wonderbar Dark Roast\",\n","  'Organic Extra Large Grade AA Brown Eggs',\n","  'Dairy-Free Chive Cream Cheese',\n","  'Unsweetened Organic Coconut Milk',\n","  'Gluten Free Paleo Fettuccine',\n","  'Gluten Free Cinnamon Raisin Bagels',\n","  'Sriracha Arare Rice Cracker',\n","  'Cashew Mix, Raspberry Crumble',\n","  'Raw Sauerkraut',\n","  'Calcium-Magnesium With Vitamin D Complex',\n","  'Balanced B Complex Tablets'],\n"," ['Bag of Organic Bananas',\n","  'Organic Cilantro',\n","  'Apple Honeycrisp Organic',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Unsalted Pure Irish Butter',\n","  'Organic Rainbow Chard Vegetable',\n","  'Sonoma Handmade Style Corn Tortillas',\n","  'L-Lysine 500 mg Capsules'],\n"," ['Banana',\n","  'Organic Cilantro',\n","  'Limes',\n","  'Red Peppers',\n","  'Organic Avocado',\n","  'Green Bell Pepper',\n","  'Sparkling Water Grapefruit',\n","  'Raisin Bran Cereal',\n","  'Corn Tortillas',\n","  'Yellow Bell Pepper',\n","  'Organic Jalapeno Pepper',\n","  'Yellow Onions',\n","  'Red Plums',\n","  'Organic Lowfat Milk',\n","  'Baked Aged White Cheddar Rice and Corn Puffs',\n","  'Fresh Basil',\n","  'Total 0% Cherry Nonfat Yogurt'],\n"," ['Strawberry Ice Cream',\n","  'Mint Chip',\n","  'Cookies & Cream Ice Cream',\n","  'Black Cherry Ice Cream'],\n"," ['Shredded Mild Cheddar Cheese', 'Baby Tummy Gripe Water Dietary Supplement'],\n"," ['Fruit Punch',\n","  'Tropical Punch',\n","  'Cheddar & Sour Cream Potato Chips',\n","  'Snack Size Milk Chocolate Peanut Butter Cups',\n","  'Maple Bacon',\n","  '2X Concentrated Clean Burst Laundry Detergent'],\n"," ['Organic Hass Avocado',\n","  'Trusted Care 2-Ply Tissues',\n","  '1000 Sheets Unscented Bathroom Tissue',\n","  'Nighty Absorbent',\n","  'Almond and Shea Butter Conditioner'],\n"," ['Kids Organic Chocolate Chip ZBars'],\n"," ['Sriracha Chili Sauce', 'Hot Sauce', 'Pitcher Replacement Filters'],\n"," ['TruMoo 1% Lowfat Milk Chocolate'],\n"," ['Bag of Organic Bananas',\n","  'Organic Hass Avocado',\n","  'Organic Whole String Cheese',\n","  'Organic Raspberries',\n","  'Original Instant Oatmeal',\n","  'Whole Wheat Bread',\n","  'Organic Mini Sandwich Crackers Peanut Butter',\n","  'Shredded Parmesan',\n","  'Organic Mini Sandwich Crackers Cheddar Cheese',\n","  'Organic Pasture Raised Brown Eggs',\n","  'Organic Frozen Peas',\n","  'Organic Gala Apples',\n","  'Organic Unsalted Butter',\n","  'Organic Large Green Asparagus',\n","  'Instant Coffee',\n","  'Lightly Salted Baked Snap Pea Crisps',\n","  'Mini Original Babybel Cheese',\n","  'Low Fat Plain Yogurt',\n","  'Milk, Organic, Vitamin D',\n","  'Organic Chopped Spinach',\n","  'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry',\n","  'Original Pure Creamy Almond Milk',\n","  'Organic Vanilla Bean Ice Cream',\n","  'Roasted Salted Cashews',\n","  'Nine Grain Sourdough Dough',\n","  'Medium Salsa Roja',\n","  'Creamy Peanut Butter Dark Roasted',\n","  'Peach'],\n"," ['Banana',\n","  'Blueberries',\n","  'Boneless Skinless Chicken Breast',\n","  'Red Onion',\n","  'Total 0% Greek Yogurt',\n","  'Unsweetened Cashew Milk',\n","  'Dark Chocolate Bar Original',\n","  'Extra Lean Ground Turkey Breast',\n","  'Dill Pickle Spears',\n","  'Premium Chocolate Coconut Water',\n","  'Original Popcorn',\n","  'Spring Mix',\n","  'Multi Grain Crispbread',\n","  'Grape Tomatoes',\n","  'Pure Life Purified Water',\n","  'Spaghetti Squash',\n","  'Yellow Corn Tortillas',\n","  'All Whites 100% Egg Whites',\n","  'Lemon Zest Nutrition Bars',\n","  'Fat Free Whipped Topping',\n","  'Popcorn, Naturally Sweet',\n","  'Chicken Rosemary Ravioli',\n","  'All Natural Unsalted Donkey Authentic Tortilla Chips',\n","  'Sweet Mesquite Barbecue Kettle Cooked Potato Chips'],\n"," ['XL Emerald White Seedless Grapes',\n","  'Banana',\n","  'Strawberries',\n","  'French Vanilla Creamer',\n","  'Super Soft Taco Flour Tortillas',\n","  'Organic Fuji Apple',\n","  'Organic YoBaby Vanilla Yogurt',\n","  'Plain Mini Bagels',\n","  'Strawberry Squeeze Fruit Spread',\n","  '100% Apple Juice',\n","  'Gemelli Pasta',\n","  'Marinara Italian Sauce',\n","  'Honey Turkey',\n","  'Pretzel Sticks',\n","  'Brownberry Country Buttermilk Sandwich Bread',\n","  'Singles 2% Milk American Cheese Slices',\n","  'Antibacterial Kitchen All Purpose Spray Cleaner, Lemon Fresh',\n","  'V-Fusion Energy Pomegranate Blueberry',\n","  'Macaroni & Mild Cheddar Cheese',\n","  'No Sugar Added Mandarin Oranges in Artificially Sweetened Water',\n","  'Light Butter with Canola Oil',\n","  'Medium Roast Breakfast Blend Coffee'],\n"," ['Hass Avocados',\n","  'Non Fat Greek Yogurt',\n","  'Frozen Blueberries',\n","  'Alaskan Salmon Burgers',\n","  'Organic Cooked Beets'],\n"," ['Banana',\n","  'Select-A-Size White Paper Towels',\n","  'Big Chewy Chocolate Chip Granola',\n","  'Light Red Raspberry Yogurt',\n","  'Oatmeal Crème Pies',\n","  'Vitamin Water Zero Rise Orange',\n","  'Purina Mixed Grill Classic Pate Cat Food',\n","  'Purina Classic Pate Turkey & Giblets Dinner Cat Food',\n","  \"Classic Pate Mariner's Catch Cat Food\",\n","  'Classic Pate Poultry Platter Cat Food',\n","  'Delights Chicken Sausage, Egg Whites, & Cheese English Muffin',\n","  'Proactive Health Indoor Weight & Hairball Care with Chicken Cat Food',\n","  'Classic Pate Ocean Whitefish & Tuna Dinner Cat Food',\n","  'Mandarin',\n","  'Mangoes',\n","  'Spring Water Body Wash',\n","  'Chocolate Fudge Stripe Layer Cake',\n","  'Chicken & Salmon Dinner in Gravy Savory Shreds Cat Food',\n","  'Body Wash',\n","  'Savory Shreds Turkey & Cheese Dinner in Gravy Cat Food',\n","  'Tasty Treasures Chicken, Tuna & Cheese In Gravy Cat Food',\n","  'Indoor Saucy Seafood Bake in Sauce Cat Food'],\n"," ['Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Chives',\n","  'Red Bell Pepper',\n","  'Real Mayonnaise',\n","  'Original Whipped Cream Cheese',\n","  'Vanilla Coffee Concentrate',\n","  'Pad Thai',\n","  'Celery',\n","  'Kale Salad',\n","  'Sour Cream',\n","  'Sweet Cream Salted Butter',\n","  'Nestle Toll House Premier White Chocolate Morsels',\n","  'Honey Maid Graham Crackers',\n","  'Finely Shredded Mild Cheddar Cheese',\n","  'Thai Coconut Soup',\n","  'Salted Caramel Core Ice Cream',\n","  'Garden Salsa Multigrain Chips',\n","  'Dill Weed',\n","  'Frozen Lemonade Concentrate',\n","  'Egg',\n","  'Coffee Toffee Bar Crunch Ice Cream',\n","  'Teriyaki  Beef Jerky',\n","  'Frozen Concentrated Raspberry Lemonade',\n","  'Strawberry Guava',\n","  'Green Tea 6pk'],\n"," ['Bag of Organic Bananas',\n","  'Strawberries',\n","  'Organic Blueberries Clamshell',\n","  'Distilled Water',\n","  'Organic Fuji Apples',\n","  'Organic Avocados Hass Variety',\n","  'Small Curd Lowfat 2% Milkfat Cottage Cheese'],\n"," ['Uncured Genoa Salami',\n","  'Grated Parmesan',\n","  'Organic Romaine',\n","  'Pizza Poppers, Three Cheese',\n","  'Mint',\n","  'Organic Cauliflower',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Organic Baby Rainbow Carrots',\n","  'Kumato Tomatoes',\n","  'Coconut Almond Creamer Blend',\n","  'Soft Pretzel Mini Buns',\n","  'Organic Plain Nonfat Greek Yogurt',\n","  'Organic Gravenstein Apple Juice'],\n"," ['Banana',\n","  'Strawberries',\n","  'Multi Grain Waffles',\n","  'Blueberries',\n","  'Medium Scarlet Raspberries',\n","  'Pure Coconut Water',\n","  'Natural Jif Creamy Peanut Butter Spread',\n","  'Steamfresh Premium Selects Broccoli Florets',\n","  'Steamfresh Super Sweet Corn',\n","  '2% Reduced Fat Milk',\n","  'Boneless Skinless Chicken Breast Fillets',\n","  'Mild Cheddar Cheese Sticks',\n","  'Basmati Ready Rice',\n","  'Baby Spinach Salad',\n","  'Shells & Real Aged Cheddar Macaroni & Cheese',\n","  'Greek Plain Whole Milk Yogurt',\n","  '100% Oatnut Bread',\n","  'Sweet Potato Fries with Salt',\n","  'Deli Fresh Honey Smoked Turkey Breast, 98% Fat Free, Gluten Free',\n","  'Cottage Cheese 22 Oz',\n","  'Jasmine Ready Rice',\n","  '0% Greek Yogurt Black Cherry on the Bottom',\n","  'Grilled Chicken Pesto with Vegetables Cafe Steamers',\n","  'Nutri-Grain Soft Baked Mixed Berry Cereal Breakfast Bars',\n","  'Cafe Steamers Chicken Margherita',\n","  'Tiny Twists Pretzels, Cheddar',\n","  'Cafe Steamers Honey Balsamic Chicken Grilled White Meat',\n","  'Ultra Comfort Care Toilet Paper'],\n"," ['Hass Avocados', 'Soda'],\n"," ['Raw Shrimp',\n","  'Broccoli Florettes',\n","  'Premium Solid White Albacore Tuna in Water'],\n"," ['Organic Hass Avocado',\n","  'Red Vine Tomato',\n","  'Organic Red Onion',\n","  'All Natural Seasoned Waffle Cut Fries'],\n"," ['Organic Whole String Cheese',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Zucchini',\n","  'Banana',\n","  'Honeycrisp Apple',\n","  'Organic Whole Milk',\n","  'Organic Mixed Vegetables',\n","  'Fresh Mozzarella Ball',\n","  'Blueberry Whole Milk Yogurt Pouch',\n","  'Organic Skim Milk',\n","  'Organic Whole Milk Strawberry Beet Berry Yogurt Pouch',\n","  'Organic Apple Chicken Sausage'],\n"," ['Organic Blueberries',\n","  'Banana',\n","  'Sparkling Natural Mineral Water',\n","  'Raspberries',\n","  'Cold Brew Coffee',\n","  'Sprouted Whole Wheat Bread',\n","  'Bread, Double Fiber'],\n"," ['Bag of Organic Bananas',\n","  'Organic Grape Tomatoes',\n","  'Baby Swiss Slices Cheese',\n","  'Organic Garlic',\n","  'Citrus Mandarins Organic',\n","  'Organic Whole Milk with DHA Omega-3',\n","  'Water, Unsweet, Blood Orange',\n","  'Apple Honeycrisp Organic',\n","  'Taco Seasoning',\n","  'Grated Parmesan',\n","  'Seedless Red Grapes',\n","  'Organic Red Onion',\n","  'English Seedless Cucumber',\n","  'Crackers Cheddar Bunnies Snack Packs',\n","  'Organic Cinnamon Raisin Granola',\n","  'Panda Puffs Peanut Butter Cereal',\n","  'Cookies, Chocolate Chip Walnut',\n","  'YoKids Strawberry Banana/Strawberry Yogurt',\n","  'Hommus Classic Original',\n","  'Organic Green Seedless Grapes',\n","  'Organic Fresh Carrot Chips',\n","  'Casera Medium Salsa',\n","  'Multigrain Oat Bread',\n","  'Thin Sliced Colby Jack Cheese',\n","  'Organic Cello Lettuce',\n","  'Variety Snack Pack',\n","  'Annie Peely Fruit 4.5 Z',\n","  'Unsweetened Coconut Water',\n","  'Appley Ever After Organic Juice Drink',\n","  'Organic Yellow Corn Taco Shells 12 Count',\n","  'Unsweet Peach Water',\n","  'Unsweetened Pomegranate Essence Water',\n","  'Chocolate Chip Brownie Thins',\n","  'Organic White Peach'],\n"," ['Organic Hass Avocado',\n","  'Organic Strawberries',\n","  'Organic Whole Milk with DHA Omega-3',\n","  'Organic Baby Spinach',\n","  'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese',\n","  'Aged White Cheddar Baked Rice & Corn Puffs Gluten Free Lunch Packs',\n","  'Multigrain Pita Chips',\n","  '100% Natural Spring Water Minis'],\n"," ['Organic Hass Avocado',\n","  'Organic Garnet Sweet Potato (Yam)',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Organic Russet Potato',\n","  'Organic Frozen Peas',\n","  'Organic Large Grade AA Brown Eggs',\n","  'Chopped Organic Garlic',\n","  'Organic Cinnamon Harvest Cereal',\n","  'Thai Red Curry Simmer Sauce'],\n"," ['Swiss Rolls'],\n"," ['Organic Cucumber',\n","  'Organic Grape Tomatoes',\n","  'Organic Raspberries',\n","  '100% Whole Wheat Bread',\n","  'Banana',\n","  'Organic Whole Milk',\n","  'Marinara Sauce',\n","  'Reduced Fat Milk',\n","  'Fat Free Milk',\n","  'Chewy Granola Bar Chocolate Chip Granola',\n","  'Organic Whole Grain Wheat English Muffins',\n","  'Organic Gala Apples',\n","  'Medium Navel Orange',\n","  'Organic Whole Wheat Fusilli',\n","  'Organic 90% Ground Beef',\n","  'Mixed Fruit Salad',\n","  'Appley Ever After Organic Juice Drink',\n","  'Chocolate Covered Strawberries Ice Cream',\n","  'Organic Chewy Peanut Butter Banana Bites',\n","  'Ice Cream, Mint Chip'],\n"," ['Carrots',\n","  'Large Lemon',\n","  'Limes',\n","  'Creamy Peanut Butter',\n","  'Original Applesauce',\n","  'European Cucumber',\n","  'Chick Peas',\n","  'Poblano Pepper',\n","  'Light, Very Vanilla',\n","  'Light Fat Free Blueberry Patch Yogurt',\n","  'Original Sour Cream',\n","  'Singles American Cheese Slices',\n","  'Bread Fampak Tortilla',\n","  'Vanilla Light & Fit Nonfat Yogurt',\n","  '100% Juice, Apple',\n","  'Tonic Water Contains Quinine',\n","  \"Snack'mms Kosher Dill Pickles\",\n","  'Mandarin Oranges in Light Syrup',\n","  'Light Strawberry Yogurt',\n","  'Light Harvest Peach Yogurt',\n","  'Boston / Butter Lettuce',\n","  'Original Wheat Thins Crackers',\n","  'Organic Premium Quinoa',\n","  'All Purpose Baking Mix'],\n"," ['Organic Half & Half',\n","  'Organic Coconut Milk',\n","  'Granny Smith Apples',\n","  'Organic Minestrone Soup',\n","  'Veggie Burgers'],\n"," ['Bag of Organic Bananas',\n","  'Uncured Genoa Salami',\n","  'Organic Crushed Tomatoes with Basil',\n","  'No Boil Lasagna'],\n"," ['Large Lemon',\n","  'Broccoli Crown',\n","  'Granny Smith Apples',\n","  'Pineapple Chunks',\n","  'Chopped Spinach',\n","  'Cage Free Grade A Large Brown Eggs',\n","  'Organic Gala Apples',\n","  'Organic Brown Rice',\n","  'Mango Chunks',\n","  'Sun Dried Tomato Basil Chicken Sausage'],\n"," ['Bag of Organic Bananas',\n","  'Organic Cucumber',\n","  'Organic Grape Tomatoes',\n","  'Organic Baby Spinach',\n","  'Organic Grade A Free Range Large Brown Eggs',\n","  'Red Peppers',\n","  'Organic Spring Mix Salad',\n","  'Whole Milk Plain Yogurt',\n","  'Corn Tortillas',\n","  'Orange Calcium & Vitamin D Pulp Free',\n","  'Total 0% Greek Yogurt',\n","  'Organic Apple Slices',\n","  'YoKids Strawberry Banana/Strawberry Yogurt'],\n"," ['Strawberries',\n","  'American Cheese Slices 12 Count',\n","  'Natural Shredded Mexican Style Four Cheese',\n","  'Cereal',\n","  'Orange Chicken',\n","  'Crispix Rice & Corn Cereal',\n","  'Honey Bunches of Oats Honey Roasted with Almonds Cereal',\n","  'Milk Chocolate Mini Eggs',\n","  'Bathroom Tissue Softness & Strength, Double Rolls',\n","  'Seedless Strawberry Jam',\n","  'Fancy Feast Wet Classic Chicken Feast Cat Food',\n","  'Classic Tender Liver & Chicken Feast Cat Food',\n","  'Cheerios Family Size Cereal',\n","  'Simply Favorites Chicken Friced Rice Entree',\n","  'Classic Tender Beef Feast Cat Food',\n","  'Tender Beef & Liver Feast Classic Wet Cat Food',\n","  'Fancy Feast Wet Classic Turkey & Giblets Feast Cat Food',\n","  'Classic Tender Beef & Chicken Feast Cat Food',\n","  'Classic Meal For 2 Chicken Alla Vodka & Farfalle',\n","  'Classic Chopped Grill Feast Cat Food',\n","  'Classic Salmon & Shrimp Feast Cat Food',\n","  'Fancy Feast Trout Feast Flaked Wet Cat Food',\n","  'Flaked Tuna Feast Cat Food',\n","  'Classic Seafood Feast Cat Food',\n","  'Classic Cod Sole & Shrimp Feast Cat Food',\n","  'Chicken & Tuna Feast Flaked Wet Cat Food',\n","  'Special K Chocolate Peanut Butter Bar',\n","  'Savory Salmon',\n","  'Cat Chow Naturals Indoor with Real Chicken & Turkey',\n","  'Marketplace Sweet and Spicy Korean Style Beef'],\n"," ['Water',\n","  'Organic Plain Greek Whole Milk Yogurt',\n","  'Premium Indian Tonic Water'],\n"," ['Almonds',\n","  'Cup Noodles Chicken Flavor',\n","  'Cherrios Honey Nut',\n","  'Cereal',\n","  'Trail Mix',\n","  'Milk Chocolate Almonds',\n","  'Nutri Grain Bars Multi Pack',\n","  'Wheat Thins Original',\n","  'Diet',\n","  'Extra Fancy Unsalted Mixed Nuts',\n","  \"Crunchy Oats 'n Honey Granola Bars\",\n","  'Original Rice Krispies Treats',\n","  'Coppertop AA Alkaline Batteries',\n","  'Coppertop AAA Alkaline Batteries',\n","  'Double Shot Espresso And Cream'],\n"," ['Light Mozzarella String Cheese',\n","  'Roasted Pine Nut Hummus',\n","  'Premium Original Saltine Crackers',\n","  'Smoked Turkey Breast',\n","  'Cotton Swabs',\n","  'Carb Balance Flour Tortillas',\n","  'Large Eggs',\n","  'Light Original Almond Milk'],\n"," ['Organic Half & Half',\n","  'Organic Baby Arugula',\n","  'Carrots',\n","  'Green Bell Pepper',\n","  'Raisin Bran Cereal',\n","  'Sharp Cheddar Cheese',\n","  'Sparkling Mineral Water',\n","  'Tesora Medium Roast',\n","  'Maple Bacon Potato Chips'],\n"," ['Organic Lemonade',\n","  'Clementines',\n","  'Sugar Snap Peas',\n","  'Chocolate Chip Cookies',\n","  'Old Fashioned Oatmeal',\n","  'Organic Kettle Corn',\n","  'Dry Roasted Macadamias with Sea Salt',\n","  'Trail Mix',\n","  'Milk Chocolate Almonds',\n","  'Nutri Grain Bars Multi Pack',\n","  'Pub Mix',\n","  'Chocolate Sandwich Cookies',\n","  'Organic Creamy Almond Butter',\n","  'Frosted Flakes',\n","  'Dried Mangos',\n","  'Mozzarella String Cheese',\n","  'Vanilla Milk Chocolate Almond Ice Cream Bars Multi-Pack',\n","  'Organic Classic Hummus',\n","  'Chunky Guacamole',\n","  'Wheat Thins Original'],\n"," ['Organic Strawberries',\n","  'Blackberries',\n","  'Baby Cucumbers',\n","  'Rainbow Bell Peppers'],\n"," ['Hass Avocados'],\n"," ['Organic Baby Broccoli',\n","  'Organic Original Hommus',\n","  'Non Dairy Choc Fudge Brownie',\n","  'Almond Flour Fine Ground Sea Salt Crackers',\n","  'Organic Lightly Salted Sea Salt Thin & Crispy Restaurant Style Tortilla Chips',\n","  'Vegan Shanghai Dumplings'],\n"," ['Organic Hass Avocado',\n","  'Queso Fresco',\n","  'Banana',\n","  'Organic Cilantro',\n","  'Limes',\n","  'Organic Tomato Cluster',\n","  'Yellow Corn Organic Tortillas',\n","  'Tilapia Filet',\n","  'Organic Bagged Kale Salad Mix',\n","  'Real Guacamole',\n","  'Medium Salsa Roja'],\n"," ['Bag of Organic Bananas',\n","  'Raw Cashew Butter',\n","  'Hemp Baby Unscented Pure Castile Soap'],\n"," ['Zero Calorie Cola',\n","  'Soda',\n","  'Chocolate Chip Cookies',\n","  'Milk Chocolate Almonds',\n","  'Pub Mix',\n","  'Extra Fancy Unsalted Mixed Nuts',\n","  'Mixed Fruit Fruit Snacks',\n","  'Variety Diet Tea',\n","  \"Crunchy Oats 'n Honey Granola Bars\",\n","  'Green Tea',\n","  'Orange & Lemon Flavor Variety Pack Sparkling Fruit Beverage',\n","  'Variety Pack Hawaiian Potato Chips'],\n"," ['Organic Whole Strawberries',\n","  'Raisin Bran Cereal',\n","  'Unsweetened Vanilla Almond Milk',\n","  'Soy Free Buttery Spread',\n","  'Organic Mango Chunks',\n","  'Dairy Free Mozarella Style Shreds',\n","  'Creamy Vanilla Soy Milk Frozen Dessert',\n","  'Puffins Peanut Butter & Chocolate Cereal'],\n"," ['Baby Spinach',\n","  'Classic Hummus',\n","  'Vanilla Almond Breeze Almond Milk',\n","  'Baby Cut Carrots',\n","  'Organic Apple Juice',\n","  'Total 0% Greek Yogurt',\n","  'Fresh Whole Garlic',\n","  'Dark Red Kidney Beans',\n","  'All Natural No Stir Creamy Almond Butter',\n","  'Grade AA Large White Eggs',\n","  'Organic Balsamic Vinegar Of Modena',\n","  'Extralean Ground Turkey Breast',\n","  'Sliced Ripe Black Olives',\n","  'Pineapple Juice',\n","  'Original Salt-Free Seasoning Blend',\n","  'Tilapia Fillets',\n","  'Unsweetened Vanilla Coconut Milk Beverage',\n","  'Gluten Free Quinoa Pasta Shells',\n","  'Red Onions',\n","  'Coconut Oil',\n","  'Herb Cilantro Clamshell'],\n"," ['Bag of Organic Bananas',\n","  'Organic Raspberries',\n","  'Clementines, Bag',\n","  'Organic Large Extra Fancy Fuji Apple',\n","  'Wheat English Muffins',\n","  'Organic Broccoli Crowns',\n","  'Milk, Organic, Vitamin D',\n","  'Brown Extra Large Grade AA Eggs',\n","  'Organic Blueberry & Purple Carrot Happy Yogis',\n","  'Yogurt Peanut Clusters'],\n"," ['Organic Cinnamon Apple Sauce',\n","  'Organic Lemon',\n","  'Banana',\n","  'Milk, Vitamin D',\n","  'Yellow Bell Pepper',\n","  'Organic Italian Salad',\n","  'Organic Whole White Mushrooms',\n","  'Cage Free Large White Eggs',\n","  'Organic Whole Wheat Fusilli',\n","  'Salted Tub of Butter',\n","  'Total 2% Lowfat Plain Greek Yogurt',\n","  'Sprouted Multi-Grain Bread',\n","  'Potato Yukon Gold Organic',\n","  'New Mexico Taco Skillet Sauce For Chicken'],\n"," ['Organic Grape Tomatoes',\n","  'Crackers, Oyster',\n","  'Organic Yellow Onion',\n","  'Organic Red Bell Pepper',\n","  '2% Reduced Fat Organic Milk',\n","  'Taco Seasoning',\n","  'Organic Butterhead (Boston, Butter, Bibb) Lettuce',\n","  'Organic Sour Cream',\n","  'Roasted Turkey Breast',\n","  'Organic Avocado',\n","  'Reduced Fat Milk',\n","  '90% Lean Ground Beef',\n","  'Organic No Salt Added Diced Tomatoes',\n","  \"Organic D'Anjou Pears\",\n","  'Organic Broccoli',\n","  'Organic Tomato Basil Pasta Sauce',\n","  'Organic Old Fashioned Rolled Oats',\n","  'Organic Lentil Beans',\n","  'Organic Dijon Mustard',\n","  'Dark Red Kidney Beans No Salt Added'],\n"," ['Sparkling Water',\n","  'Organic Extra Virgin Olive Oil',\n","  'Distilled Water',\n","  'Trail Mix',\n","  'Variety',\n","  'Organic Marinara Sauce'],\n"," ['Organic Cilantro',\n","  'Organic Chicken Broth',\n","  'Organic Lime',\n","  'Organic Miso Broth',\n","  'Lavender Hand Sanitizer',\n","  'Chocolate Pudding',\n","  'Organic Kosher Free Range Chicken Broth',\n","  'Dark Chocolate Pot De Creme',\n","  'Miso Ramen Broth'],\n"," ['Organic Baby Spinach',\n","  'Baby Arugula',\n","  'Roasted Turkey Breast',\n","  'Hass Avocado',\n","  'Raw Cashew Nut Butter',\n","  'Cayenne Pepper',\n","  'Sweet Potato (Yam)',\n","  'Organic Unrefined Coconut Oil',\n","  'Organic Baby Kale Mix',\n","  'Organic Riced Cauliflower',\n","  'Pacific Cod Fillet',\n","  'Apple Pie Fruit & Nut Food Bar',\n","  'Organic Distilled White Vinegar',\n","  'Organic Roast Beef',\n","  'Beef Loin New York Strip Steak',\n","  'Minced Onion',\n","  'Ancient Grain Original Granola',\n","  'Lime Italian Sparkling Mineral Water',\n","  'Pumpkin Fig Ancient Grain Granola',\n","  'Black Peppercorn',\n","  'Gluten Free Steel Cut Oats Hot Cereal'],\n"," ['Pizza Dough', 'Coho Salmon', 'Organic Boneless Skinless Chicken Breast'],\n"," ['Total 0% Nonfat Greek Yogurt',\n","  'Sparkling Water Grapefruit',\n","  'Raspberry Yoghurt',\n","  'Pure Sparkling Water',\n","  'Sparkling Lemon Water',\n","  'Pretzel Crisps Original Deli Style Pretzel Crackers',\n","  'Peach Pear Flavored Sparkling Water',\n","  'Blueberry Muffin Bar',\n","  'Lemon Fruit & Nut Food Bar',\n","  'Coconut Cream Pie',\n","  'Coconut Flavored Sparkling Water',\n","  'Avocado Oil Canyon Cut Kettle Cooked Potato Chips Sea Salt',\n","  'Chocolate Fudge High Protein Bars'],\n"," ...]"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["#pasandole esta lista a apriori para encontrar las reglas de asociación\n","resultados = list(apriori(transacciones, min_support = 0.001, min_confidence = 0.1, lift = 1.0))\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-bi2LWuLbWXP","executionInfo":{"status":"ok","timestamp":1699760132846,"user_tz":360,"elapsed":44281,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"c4a8d694-0cd4-485f-8651-5b9cef631124"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[RelationRecord(items=frozenset({'Bag of Organic Bananas'}), support=0.1179797117575776, ordered_statistics=[OrderedStatistic(items_base=frozenset(), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1179797117575776, lift=1.0)]),\n"," RelationRecord(items=frozenset({'Banana'}), support=0.14271886837030998, ordered_statistics=[OrderedStatistic(items_base=frozenset(), items_add=frozenset({'Banana'}), confidence=0.14271886837030998, lift=1.0)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', '100% Raw Coconut Water'}), support=0.0027665785121447463, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2796610169491526, lift=2.3704161739587444)]),\n"," RelationRecord(items=frozenset({'Banana', '100% Raw Coconut Water'}), support=0.0011889428316655107, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Banana'}), confidence=0.12018489984591678, lift=0.8421093946322169)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', '100% Raw Coconut Water'}), support=0.0014023428270926537, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14175654853620956, lift=1.901035872535519)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', '100% Raw Coconut Water'}), support=0.001691957106600919, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.17103235747303544, lift=3.0770580819524898)]),\n"," RelationRecord(items=frozenset({'Organic Raspberries', '100% Raw Coconut Water'}), support=0.0012956428293790822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.13097072419106318, lift=3.098546294696215)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', '100% Raw Coconut Water'}), support=0.001653849964560358, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Raw Coconut Water'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.16718027734976887, lift=2.013544796290235)]),\n"," RelationRecord(items=frozenset({'100% Recycled Paper Towels', 'Bag of Organic Bananas'}), support=0.0020958928122308683, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Recycled Paper Towels'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23245984784446322, lift=1.9703374790584094)]),\n"," RelationRecord(items=frozenset({'100% Recycled Paper Towels', 'Banana'}), support=0.0015014213963981129, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Recycled Paper Towels'}), items_add=frozenset({'Banana'}), confidence=0.16652578191039727, lift=1.1668098536089562)]),\n"," RelationRecord(items=frozenset({'100% Recycled Paper Towels', 'Organic Baby Spinach'}), support=0.0010974856907681638, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Recycled Paper Towels'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.12172442941673711, lift=1.6323937713962242)]),\n"," RelationRecord(items=frozenset({'100% Recycled Paper Towels', 'Organic Hass Avocado'}), support=0.0010288928350951536, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Recycled Paper Towels'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.11411665257819105, lift=2.053082663942393)]),\n"," RelationRecord(items=frozenset({'100% Recycled Paper Towels', 'Organic Strawberries'}), support=0.0011813214032573985, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Recycled Paper Towels'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13102282333051563, lift=1.5780588972254106)]),\n"," RelationRecord(items=frozenset({'100% Whole Wheat Bread', 'Bag of Organic Bananas'}), support=0.0027132285132879606, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Whole Wheat Bread'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15491731940818104, lift=1.3130844032447047)]),\n"," RelationRecord(items=frozenset({'100% Whole Wheat Bread', 'Banana'}), support=0.004786257040294492, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Whole Wheat Bread'}), items_add=frozenset({'Banana'}), confidence=0.2732811140121845, lift=1.9148211945116265)]),\n"," RelationRecord(items=frozenset({'100% Whole Wheat Bread', 'Organic Strawberries'}), support=0.002415992805371583, ordered_statistics=[OrderedStatistic(items_base=frozenset({'100% Whole Wheat Bread'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1379460400348129, lift=1.6614431766961413)]),\n"," RelationRecord(items=frozenset({'Banana', '2% Reduced Fat DHA Omega-3 Reduced Fat Milk'}), support=0.001105107119176276, ordered_statistics=[OrderedStatistic(items_base=frozenset({'2% Reduced Fat DHA Omega-3 Reduced Fat Milk'}), items_add=frozenset({'Banana'}), confidence=0.25217391304347825, lift=1.766927638391634)]),\n"," RelationRecord(items=frozenset({'2% Reduced Fat Milk', 'Banana'}), support=0.0028046856541853074, ordered_statistics=[OrderedStatistic(items_base=frozenset({'2% Reduced Fat Milk'}), items_add=frozenset({'Banana'}), confidence=0.23896103896103896, lift=1.6743479099134335)]),\n"," RelationRecord(items=frozenset({'Banana', '2% Reduced Fat Organic Milk'}), support=0.001409964255500766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'2% Reduced Fat Organic Milk'}), items_add=frozenset({'Banana'}), confidence=0.2696793002915452, lift=1.8895840709149498)]),\n"," RelationRecord(items=frozenset({'Banana', '85% Lean Ground Beef'}), support=0.0011508356896249496, ordered_statistics=[OrderedStatistic(items_base=frozenset({'85% Lean Ground Beef'}), items_add=frozenset({'Banana'}), confidence=0.23520249221183803, lift=1.648012592151183)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Air Chilled Organic Boneless Skinless Chicken Breasts'}), support=0.0011279714044006128, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Air Chilled Organic Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22910216718266257, lift=1.9418776649786806)]),\n"," RelationRecord(items=frozenset({'Air Chilled Organic Boneless Skinless Chicken Breasts', 'Organic Strawberries'}), support=0.0010669999771357147, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Air Chilled Organic Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.21671826625386997, lift=2.6101879013130187)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Apple Honeycrisp Organic'}), support=0.0052359213163731145, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3050621669626998, lift=2.5857171747421757)]),\n"," RelationRecord(items=frozenset({'Banana', 'Apple Honeycrisp Organic'}), support=0.003101921362101685, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Banana'}), confidence=0.18072824156305506, lift=1.2663233924621857)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Apple Honeycrisp Organic'}), support=0.0018291428179469395, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Large Lemon'}), confidence=0.10657193605683836, lift=1.7188933199854584)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Apple Honeycrisp Organic'}), support=0.002423614233779695, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14120781527531082, lift=1.8936770476756188)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Apple Honeycrisp Organic'}), support=0.0030561927916530115, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.1780639431616341, lift=3.2035639542430894)]),\n"," RelationRecord(items=frozenset({'Organic Raspberries', 'Apple Honeycrisp Organic'}), support=0.0024769642326364807, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.14431616341030196, lift=3.414276863487614)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Apple Honeycrisp Organic'}), support=0.003681149921118216, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Apple Honeycrisp Organic'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.2144760213143872, lift=2.583181960771014)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Asparagus'}), support=0.005548399881105717, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18821096173733196, lift=1.5952824340176737)]),\n"," RelationRecord(items=frozenset({'Banana', 'Asparagus'}), support=0.006043792727633013, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Banana'}), confidence=0.20501551189245087, lift=1.4364990013829213)]),\n"," RelationRecord(items=frozenset({'Broccoli Crown', 'Asparagus'}), support=0.0023778856633310213, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Asparagus'}), confidence=0.10641200545702591, lift=3.609672395039016)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Asparagus'}), support=0.005350242742494798, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Large Lemon'}), confidence=0.18148914167528438, lift=2.9272291075688246)]),\n"," RelationRecord(items=frozenset({'Limes', 'Asparagus'}), support=0.0031781356461828077, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Limes'}), confidence=0.1078076525336091, lift=2.3446600830900577)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Asparagus'}), support=0.0038183356324642363, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12952430196483972, lift=2.2937986417201586)]),\n"," RelationRecord(items=frozenset({'Organic Baby Broccoli', 'Asparagus'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Asparagus'}), confidence=0.11102886750555144, lift=3.7662840425377198)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Asparagus'}), support=0.005327378457270462, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18071354705274045, lift=2.423471360920178)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Asparagus'}), support=0.0032162427882233688, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.10910031023784902, lift=1.9628332107497508)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Asparagus'}), support=0.004831985610743166, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.16390899689762153, lift=1.9741449948540502)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Asparagus'}), support=0.003589692780220869, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparagus'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.12176835573940022, lift=3.48160910616931), OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Asparagus'}), confidence=0.10263674003050774, lift=3.48160910616931)]),\n"," RelationRecord(items=frozenset({'Asparation/Broccolini/Baby Broccoli', 'Banana'}), support=0.0016462285361522457, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Asparation/Broccolini/Baby Broccoli'}), items_add=frozenset({'Banana'}), confidence=0.34123222748815163, lift=2.390939834267483)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Baby Cucumbers'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Cucumbers'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23734177215189875, lift=2.011716833480522)]),\n"," RelationRecord(items=frozenset({'Hass Avocados', 'Baby Cucumbers'}), support=0.001044135691911378, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Cucumbers'}), items_add=frozenset({'Hass Avocados'}), confidence=0.21677215189873422, lift=12.496685974728038)]),\n"," RelationRecord(items=frozenset({'Baby Cucumbers', 'Packaged Grape Tomatoes'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Cucumbers'}), items_add=frozenset({'Packaged Grape Tomatoes'}), confidence=0.20886075949367092, lift=44.92526457771323), OrderedStatistic(items_base=frozenset({'Packaged Grape Tomatoes'}), items_add=frozenset({'Baby Cucumbers'}), confidence=0.21639344262295085, lift=44.92526457771323)]),\n"," RelationRecord(items=frozenset({'Baby Cucumbers', 'Raspberries'}), support=0.0010517571203194902, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Cucumbers'}), items_add=frozenset({'Raspberries'}), confidence=0.21835443037974683, lift=8.737440212167186)]),\n"," RelationRecord(items=frozenset({'Baby Cucumbers', 'Strawberries'}), support=0.0010517571203194902, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Cucumbers'}), items_add=frozenset({'Strawberries'}), confidence=0.21835443037974683, lift=4.4117749392818295)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Baby Spinach'}), support=0.0016309856793360212, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Spinach'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1865736704446382, lift=1.5814046980213525)]),\n"," RelationRecord(items=frozenset({'Banana', 'Baby Spinach'}), support=0.0018672499599875008, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Spinach'}), items_add=frozenset({'Banana'}), confidence=0.2136006974716652, lift=1.4966535252888882)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Baby Spinach'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Spinach'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.1159546643417611, lift=2.0861504941201336)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Baby Spinach'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baby Spinach'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13687881429816914, lift=1.6485893469110036)]),\n"," RelationRecord(items=frozenset({'Bartlett Pears', 'Bag of Organic Bananas'}), support=0.0013642356850520924, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1483015741507871, lift=1.2570091242086967)]),\n"," RelationRecord(items=frozenset({'Blackberries', 'Bag of Organic Bananas'}), support=0.0010517571203194902, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.12813370473537605, lift=1.0860655855700232)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Blood Oranges'}), support=0.0010974856907681638, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blood Oranges'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23606557377049184, lift=2.0008997331300042)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Blueberries'}), support=0.001928221387252399, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blueberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.10891089108910891, lift=0.9231323713766726)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breasts', 'Bag of Organic Bananas'}), support=0.0016767142497846946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1053639846743295, lift=0.8930686734582752)]),\n"," RelationRecord(items=frozenset({'Broccoli Crown', 'Bag of Organic Bananas'}), support=0.002637014229206838, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1180081855388813, lift=1.0002413447268137)]),\n"," RelationRecord(items=frozenset({'Brussels Sprouts', 'Bag of Organic Bananas'}), support=0.0012346714021141843, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Brussels Sprouts'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1409921671018277, lift=1.1950543445260795)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Cantaloupe'}), support=0.002370264234922909, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2559670781893004, lift=2.169585553109814)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Bag of Organic Bananas'}), support=0.003383914213201838, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1778133760512615, lift=1.5071521484696364)]),\n"," RelationRecord(items=frozenset({'Celery Hearts', 'Bag of Organic Bananas'}), support=0.0012194285452979598, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Celery Hearts'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23323615160349856, lift=1.97691745579738)]),\n"," RelationRecord(items=frozenset({'Clementines', 'Bag of Organic Bananas'}), support=0.0025989070871662765, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.25240562546262024, lift=2.13939856016311)]),\n"," RelationRecord(items=frozenset({'Clementines, Bag', 'Bag of Organic Bananas'}), support=0.0019434642440686234, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines, Bag'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1725304465493911, lift=1.4623738605490346)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Crackers Cheddar Bunnies Snack Packs'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Crackers Cheddar Bunnies Snack Packs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3043478260869565, lift=2.5796623974834287)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Creamy Almond Butter'}), support=0.0012422928305222964, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Creamy Almond Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19176470588235292, lift=1.6254040887672898)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Electrolyte Enhanced Water'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Electrolyte Enhanced Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1770956316410862, lift=1.501068522738713)]),\n"," RelationRecord(items=frozenset({'Extra Virgin Olive Oil', 'Bag of Organic Bananas'}), support=0.0022788070940255624, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Extra Virgin Olive Oil'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14458413926499034, lift=1.2255000212416096)]),\n"," RelationRecord(items=frozenset({'Ezekiel 4:9 Bread Organic Sprouted Whole Grain', 'Bag of Organic Bananas'}), support=0.0012956428293790822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ezekiel 4:9 Bread Organic Sprouted Whole Grain'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24355300859598852, lift=2.064363482226813)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Bag of Organic Bananas'}), support=0.0017071999634171435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15458937198067632, lift=1.3103047098328529)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Bag of Organic Bananas'}), support=0.0044661570471537775, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2210486608826858, lift=1.873615875048858)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Bag of Organic Bananas'}), support=0.0012118071168898475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.12383177570093458, lift=1.0496022905648532)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Bag of Organic Bananas'}), support=0.0025912856587581644, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.31924882629107976, lift=2.705963775763972)]),\n"," RelationRecord(items=frozenset({'Garlic', 'Bag of Organic Bananas'}), support=0.0017148213918252559, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1171875, lift=0.9932851865310078)]),\n"," RelationRecord(items=frozenset({'Globe Eggplant', 'Bag of Organic Bananas'}), support=0.0012041856884817351, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Globe Eggplant'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23831070889894415, lift=2.019929573896742)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Grape White/Green Seedless'}), support=0.002697985656471736, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2318271119842829, lift=1.964974388652828)]),\n"," RelationRecord(items=frozenset({'Grated Parmesan', 'Bag of Organic Bananas'}), support=0.0027132285132879606, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2101534828807556, lift=1.7812679803166063)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Green Beans'}), support=0.0010212714066870413, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.11551724137931035, lift=0.9791280183551636)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Bag of Organic Bananas'}), support=0.00294949279393944, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15351051170170565, lift=1.3011602538675129)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Ground Turkey Breast'}), support=0.0012422928305222964, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.17014613778705637, lift=1.4421643793864263)]),\n"," RelationRecord(items=frozenset({'Half & Half', 'Bag of Organic Bananas'}), support=0.002972357079163777, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Half & Half'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1608910891089109, lift=1.3637182758973574)]),\n"," RelationRecord(items=frozenset({'Hass Avocado', 'Bag of Organic Bananas'}), support=0.001958707100884848, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocado'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15737905695039806, lift=1.333950173346562)]),\n"," RelationRecord(items=frozenset({'Hass Avocados', 'Bag of Organic Bananas'}), support=0.004222271338094186, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24340949033391915, lift=2.063147016616486)]),\n"," RelationRecord(items=frozenset({'Honey Nut Cheerios', 'Bag of Organic Bananas'}), support=0.0014175856839088782, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honey Nut Cheerios'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15270935960591134, lift=1.2943696617914742)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Honeycrisp Apple'}), support=0.004519507046010563, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.16699521261616446, lift=1.415457031792915)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Italian Sparkling Mineral Water'}), support=0.0016462285361522457, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Italian Sparkling Mineral Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19081272084805656, lift=1.6173350316377684)]),\n"," RelationRecord(items=frozenset({'Jalapeno Peppers', 'Bag of Organic Bananas'}), support=0.0017910356759063785, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.12374934175882044, lift=1.0489035777023947)]),\n"," RelationRecord(items=frozenset({'Large Alfresco Eggs', 'Bag of Organic Bananas'}), support=0.003338185642753165, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23076923076923078, lift=1.9560077519379848)]),\n"," RelationRecord(items=frozenset({'Large Grapefruit', 'Bag of Organic Bananas'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Grapefruit'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1775147928994083, lift=1.5046213476446038)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Bag of Organic Bananas'}), support=0.008055849827374647, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.12993239090350336, lift=1.1013113099520526)]),\n"," RelationRecord(items=frozenset({'Lemon Hummus', 'Bag of Organic Bananas'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lemon Hummus'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2234726688102894, lift=1.8941618476698492)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Lightly Salted Baked Snap Pea Crisps'}), support=0.00159287853729546, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lightly Salted Baked Snap Pea Crisps'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21089808274470231, lift=1.787579233775817)]),\n"," RelationRecord(items=frozenset({'Lime Sparkling Water', 'Bag of Organic Bananas'}), support=0.001996814242925409, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lime Sparkling Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.13326551373346895, lift=1.1295629710242072)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Limes'}), support=0.007103171276360615, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15448367313111222, lift=1.3094088028333402)]),\n"," RelationRecord(items=frozenset({'Marinara Sauce', 'Bag of Organic Bananas'}), support=0.0012651571157466332, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Marinara Sauce'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22015915119363394, lift=1.866076361044284)]),\n"," RelationRecord(items=frozenset({'Medium Navel Orange', 'Bag of Organic Bananas'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Medium Navel Orange'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1884422110552764, lift=1.5972425110046358)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Bag of Organic Bananas'}), support=0.004077464198340053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20365435858393607, lift=1.726181184459927)]),\n"," RelationRecord(items=frozenset({'Milk, Organic, Vitamin D', 'Bag of Organic Bananas'}), support=0.0013718571134602048, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Milk, Organic, Vitamin D'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3146853146853147, lift=2.6672832980972516)]),\n"," RelationRecord(items=frozenset({'No Salt Added Black Beans', 'Bag of Organic Bananas'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1256, lift=1.064589819121447)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Bag of Organic Bananas'}), support=0.0019510856724767355, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.13733905579399142, lift=1.164090450366526)]),\n"," RelationRecord(items=frozenset({'Organic American Cheese Singles', 'Bag of Organic Bananas'}), support=0.0013261285430115311, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic American Cheese Singles'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.25, lift=2.1190083979328165)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic AppleApple'}), support=0.0013261285430115311, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic AppleApple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2672811059907834, lift=2.2654836328129653)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Avocado'}), support=0.008154928396680106, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14441894992576598, lift=1.2240998708533481)]),\n"," RelationRecord(items=frozenset({'Organic Baby Arugula', 'Bag of Organic Bananas'}), support=0.004382321334664543, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19671570304481698, lift=1.6673689070289013)]),\n"," RelationRecord(items=frozenset({'Organic Baby Broccoli', 'Bag of Organic Bananas'}), support=0.0026827427996555116, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.26054774241302736, lift=2.2084114169425653)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Bag of Organic Bananas'}), support=0.006287678436692605, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22935779816513766, lift=1.9440444017732266)]),\n"," RelationRecord(items=frozenset({'Organic Baby Kale Mix', 'Bag of Organic Bananas'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Kale Mix'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3071593533487298, lift=2.6034929969982876)]),\n"," RelationRecord(items=frozenset({'Organic Baby Rainbow Carrots', 'Bag of Organic Bananas'}), support=0.001448071397541327, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Rainbow Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20787746170678337, lift=1.761976348390526)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Bag of Organic Bananas'}), support=0.017041513920538987, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bag of Organic Bananas'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14444444444444443, lift=1.9370820841282816), OrderedStatistic(items_base=frozenset({'Organic Baby Spinach'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22853638593622239, lift=1.9370820841282819)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach Salad', 'Bag of Organic Bananas'}), support=0.0012727785441547456, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Spinach Salad'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23521126760563385, lift=1.9936586053790448)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Bartlett Pear'}), support=0.002515071374677042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bartlett Pear'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.336734693877551, lift=2.854174576807467)]),\n"," RelationRecord(items=frozenset({'Organic Basil', 'Bag of Organic Bananas'}), support=0.001470935682765664, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Basil'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15793780687397707, lift=1.338686156468195)]),\n"," RelationRecord(items=frozenset({'Organic Bell Pepper', 'Bag of Organic Bananas'}), support=0.0018748713883956132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bell Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2608695652173913, lift=2.211139197842939)]),\n"," RelationRecord(items=frozenset({'Organic Black Beans', 'Bag of Organic Bananas'}), support=0.003140028504142246, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Black Beans'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2614213197969543, lift=2.2158158881937067)]),\n"," RelationRecord(items=frozenset({'Organic Blackberries', 'Bag of Organic Bananas'}), support=0.0037497427767912263, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blackberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.17305663032008442, lift=1.4668338118648552)]),\n"," RelationRecord(items=frozenset({'Organic Blueberries', 'Bag of Organic Bananas'}), support=0.008665564100023627, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blueberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22895690696737822, lift=1.9406464345143883)]),\n"," RelationRecord(items=frozenset({'Organic Bosc Pear', 'Bag of Organic Bananas'}), support=0.0016690928213765825, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bosc Pear'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3101983002832861, lift=2.6292512132990753)]),\n"," RelationRecord(items=frozenset({'Organic Bread with 21 Whole Grains', 'Bag of Organic Bananas'}), support=0.0017453071054577048, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bread with 21 Whole Grains'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.244136460554371, lift=2.069308840625224)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli', 'Bag of Organic Bananas'}), support=0.004001249914258931, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.31760435571687845, lift=2.6920251879364283)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli Crowns', 'Bag of Organic Bananas'}), support=0.0018520071031712763, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli Crowns'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.30223880597014924, lift=2.5617862721277334)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli Florets', 'Bag of Organic Bananas'}), support=0.002370264234922909, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli Florets'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22850844966936076, lift=1.9368452953919353)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Brown Rice'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Brown Rice'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23076923076923078, lift=1.9560077519379848)]),\n"," RelationRecord(items=frozenset({'Organic Bunch Beets', 'Bag of Organic Bananas'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bunch Beets'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23400936037441497, lift=1.983471199313089)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Butternut Squash'}), support=0.0012956428293790822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Butternut Squash'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23776223776223776, lift=2.0152807141179236)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Carrot Bunch'}), support=0.0035439642097721954, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Carrot Bunch'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2669345579793341, lift=2.262546280226773)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Celery Hearts'}), support=0.0017834142474982661, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Celery Hearts'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22033898305084748, lift=1.8676006219068895)]),\n"," RelationRecord(items=frozenset({'Organic Cheese Frozen Pizza', 'Bag of Organic Bananas'}), support=0.0011127285475843883, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cheese Frozen Pizza'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2713754646840149, lift=2.3001875546333923)]),\n"," RelationRecord(items=frozenset({'Organic Chicken & Apple Sausage', 'Bag of Organic Bananas'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Chicken & Apple Sausage'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3099173553719008, lift=2.6268699147927475)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Bag of Organic Bananas'}), support=0.005441699883392145, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20249574588769145, lift=1.7163607443267512)]),\n"," RelationRecord(items=frozenset({'Organic Coconut Milk', 'Bag of Organic Bananas'}), support=0.0016004999657035722, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20095693779904308, lift=1.7033177552761398)]),\n"," RelationRecord(items=frozenset({'Organic Creamy Peanut Butter', 'Bag of Organic Bananas'}), support=0.0016614713929684701, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Creamy Peanut Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2868421052631579, lift=2.4312833197334425)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Cripps Pink Apples'}), support=0.0018291428179469395, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cripps Pink Apples'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3287671232876712, lift=2.786641180843156)]),\n"," RelationRecord(items=frozenset({'Organic Cucumber', 'Bag of Organic Bananas'}), support=0.009663971221486331, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2748753522653371, lift=2.3298527193399625)]),\n"," RelationRecord(items=frozenset({\"Organic D'Anjou Pears\", 'Bag of Organic Bananas'}), support=0.004603342758499798, ordered_statistics=[OrderedStatistic(items_base=frozenset({\"Organic D'Anjou Pears\"}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3190702588483888, lift=2.7044502321213337)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Diced Tomatoes'}), support=0.001318507114603419, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Diced Tomatoes'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2066905615292712, lift=1.751916142615901)]),\n"," RelationRecord(items=frozenset({'Organic Dill', 'Bag of Organic Bananas'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Dill'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2250396196513471, lift=1.9074433756352458)]),\n"," RelationRecord(items=frozenset({'Organic Egg Whites', 'Bag of Organic Bananas'}), support=0.0014023428270926537, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Egg Whites'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22062350119904076, lift=1.8700122072884329)]),\n"," RelationRecord(items=frozenset({'Organic English Cucumber', 'Bag of Organic Bananas'}), support=0.0010365142635032657, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic English Cucumber'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2625482625482625, lift=2.225367892809753)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Extra Firm Tofu'}), support=0.0017529285338658172, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19392917369308602, lift=1.6437501906392846)]),\n"," RelationRecord(items=frozenset({'Organic Fat Free Milk', 'Bag of Organic Bananas'}), support=0.0012803999725628577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fat Free Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20715166461159062, lift=1.7558244678308912)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Frozen Peas'}), support=0.0017757928190901538, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Frozen Peas'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3094289508632138, lift=2.622730181770764)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Fuji Apple'}), support=0.0035210999245478586, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14184832668099479, lift=1.2023111818789822)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Fuji Apples'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apples'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.33729216152019004, lift=2.8588996912727787)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Gala Apples'}), support=0.006173357010570921, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Gala Apples'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2883588465646137, lift=2.444139269954548)]),\n"," RelationRecord(items=frozenset({'Organic Garbanzo Beans', 'Bag of Organic Bananas'}), support=0.00196632852929296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garbanzo Beans'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2261174408413672, lift=1.9165790242477359)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Bag of Organic Bananas'}), support=0.006950742708198371, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21933621933621936, lift=1.8591011629771323)]),\n"," RelationRecord(items=frozenset({'Organic Garnet Sweet Potato (Yam)', 'Bag of Organic Bananas'}), support=0.004816742753926941, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24610591900311524, lift=2.086002036594299)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Bag of Organic Bananas'}), support=0.003711635634750665, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24265072247135028, lift=2.0567156747250257)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Grade A Free Range Large Brown Eggs'}), support=0.0033915356416099507, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Free Range Large Brown Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.25183927560837577, lift=2.1345981597738617)]),\n"," RelationRecord(items=frozenset({'Organic Grade A Large Brown Eggs', 'Bag of Organic Bananas'}), support=0.0013032642577871945, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Large Brown Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1956521739130435, lift=1.6583543983822044)]),\n"," RelationRecord(items=frozenset({'Organic Granny Smith Apple', 'Bag of Organic Bananas'}), support=0.0049539284652729615, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2781343602909713, lift=2.3574761808409597)]),\n"," RelationRecord(items=frozenset({'Organic Grape Tomatoes', 'Bag of Organic Bananas'}), support=0.006249571294652044, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grape Tomatoes'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21449123724823438, lift=1.8180349320480353)]),\n"," RelationRecord(items=frozenset({'Organic Green Cabbage', 'Bag of Organic Bananas'}), support=0.0010365142635032657, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Green Cabbage'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1732484076433121, lift=1.468459322898665)]),\n"," RelationRecord(items=frozenset({'Organic Green Seedless Grapes', 'Bag of Organic Bananas'}), support=0.0012422928305222964, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Green Seedless Grapes'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.27627118644067794, lift=2.341683856698638)]),\n"," RelationRecord(items=frozenset({'Organic Half & Half', 'Bag of Organic Bananas'}), support=0.0037344999199750016, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Half & Half'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18518518518518517, lift=1.569635850320605)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Bag of Organic Bananas'}), support=0.018443856747631642, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bag of Organic Bananas'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.15633074935400518, lift=2.8125601661853374), OrderedStatistic(items_base=frozenset({'Organic Hass Avocado'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3318250377073907, lift=2.812560166185338)]),\n"," RelationRecord(items=frozenset({'Organic Heavy Whipping Cream', 'Bag of Organic Bananas'}), support=0.001105107119176276, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Heavy Whipping Cream'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1674364896073903, lift=1.4191973103938034)]),\n"," RelationRecord(items=frozenset({'Organic Honey Sweet Whole Wheat Bread', 'Bag of Organic Bananas'}), support=0.0010365142635032657, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Honey Sweet Whole Wheat Bread'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.35509138381201044, lift=3.0097664973249407)]),\n"," RelationRecord(items=frozenset({'Organic Hothouse Cucumbers', 'Bag of Organic Bananas'}), support=0.0020196785281497457, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Hothouse Cucumbers'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.28617710583153344, lift=2.4256467622125113)]),\n"," RelationRecord(items=frozenset({'Organic Italian Parsley Bunch', 'Bag of Organic Bananas'}), support=0.003612557065445206, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Italian Parsley Bunch'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1975, lift=1.6740166343669252)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Jalapeno Pepper'}), support=0.0012194285452979598, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Jalapeno Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18823529411764708, lift=1.5954886760905915)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Ketchup'}), support=0.0012346714021141843, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ketchup'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2655737704918033, lift=2.2510121997712544)]),\n"," RelationRecord(items=frozenset({'Organic Kiwi', 'Bag of Organic Bananas'}), support=0.004984414178905411, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Kiwi'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.34787234042553195, lift=2.9485776430809834)]),\n"," RelationRecord(items=frozenset({'Organic Lacinato (Dinosaur) Kale', 'Bag of Organic Bananas'}), support=0.0034601284972829607, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2578080636002271, lift=2.185189807294716)]),\n"," RelationRecord(items=frozenset({'Organic Large Brown Grade AA Cage Free Eggs', 'Bag of Organic Bananas'}), support=0.0021339999542714294, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Brown Grade AA Cage Free Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24626209322779238, lift=2.087325774568825)]),\n"," RelationRecord(items=frozenset({'Organic Large Extra Fancy Fuji Apple', 'Bag of Organic Bananas'}), support=0.0074156498410932175, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Extra Fancy Fuji Apple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3365617433414043, lift=2.85270864225338)]),\n"," RelationRecord(items=frozenset({'Organic Large Grade A Brown Eggs', 'Bag of Organic Bananas'}), support=0.0011203499759925004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Grade A Brown Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19115734720416122, lift=1.6202560962087074)]),\n"," RelationRecord(items=frozenset({'Organic Large Grade AA Brown Eggs', 'Bag of Organic Bananas'}), support=0.0016386071077441333, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Grade AA Brown Eggs'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20437262357414446, lift=1.7322692226446978)]),\n"," RelationRecord(items=frozenset({'Organic Large Green Asparagus', 'Bag of Organic Bananas'}), support=0.0020044356713335215, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Green Asparagus'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.36027397260273974, lift=3.053694294007292)]),\n"," RelationRecord(items=frozenset({'Organic Leek', 'Bag of Organic Bananas'}), support=0.0012727785441547456, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Leek'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.218586387434555, lift=1.8527455625904734)]),\n"," RelationRecord(items=frozenset({'Organic Lemon', 'Bag of Organic Bananas'}), support=0.00813206411145577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lemon'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.30442225392296723, lift=2.5802932503216156)]),\n"," RelationRecord(items=frozenset({'Organic Mexican Blend Finely Shredded Cheese', 'Bag of Organic Bananas'}), support=0.001409964255500766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Mexican Blend Finely Shredded Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2786144578313253, lift=2.3615455037203077)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Milk'}), support=0.0017681713906820416, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2703962703962704, lift=2.2918878709576385)]),\n"," RelationRecord(items=frozenset({'Organic Mint', 'Bag of Organic Bananas'}), support=0.0012499142589304088, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Mint'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2210242587601078, lift=1.8734090418381775)]),\n"," RelationRecord(items=frozenset({'Organic Navel Orange', 'Bag of Organic Bananas'}), support=0.0055255355958813805, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3661616161616162, lift=3.103598158588469)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Old Fashioned Rolled Oats'}), support=0.001409964255500766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Old Fashioned Rolled Oats'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24765729585006693, lift=2.099151558862496)]),\n"," RelationRecord(items=frozenset({'Organic Orange Bell Pepper', 'Bag of Organic Bananas'}), support=0.0011584571180330617, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Orange Bell Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.31211498973305957, lift=2.6454971374602723)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Peeled Whole Baby Carrots'}), support=0.004389942763072655, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Peeled Whole Baby Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23414634146341465, lift=1.984632255624882)]),\n"," RelationRecord(items=frozenset({'Organic Plain Greek Whole Milk Yogurt', 'Bag of Organic Bananas'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Plain Greek Whole Milk Yogurt'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2548262548262548, lift=2.1599158959624076)]),\n"," RelationRecord(items=frozenset({'Organic Rainbow Carrots', 'Bag of Organic Bananas'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Rainbow Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21746293245469522, lift=1.8432231204423841)]),\n"," RelationRecord(items=frozenset({'Organic Raspberries', 'Bag of Organic Bananas'}), support=0.013566142566439803, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bag of Organic Bananas'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.11498708010335919, lift=2.720400251222801), OrderedStatistic(items_base=frozenset({'Organic Raspberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.32095203750450774, lift=2.720400251222801)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Raw Kombucha Gingerade'}), support=0.0014937999679900007, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Raw Kombucha Gingerade'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22923976608187135, lift=1.9430439578705594)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Bag of Organic Bananas'}), support=0.004793878468702604, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.26284997910572505, lift=2.227925252485987)]),\n"," RelationRecord(items=frozenset({'Organic Red Cabbage', 'Bag of Organic Bananas'}), support=0.0010212714066870413, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Cabbage'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22711864406779658, lift=1.925065256427101)]),\n"," RelationRecord(items=frozenset({'Organic Red Delicious Apple', 'Bag of Organic Bananas'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Delicious Apple'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.29940119760479045, lift=2.5377346083027748)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Bag of Organic Bananas'}), support=0.00613524986853036, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21084337349397592, lift=1.7871155163288817)]),\n"," RelationRecord(items=frozenset({'Organic Red Radish, Bunch', 'Bag of Organic Bananas'}), support=0.0016386071077441333, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Radish, Bunch'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20653218059558115, lift=1.7505737005016544)]),\n"," RelationRecord(items=frozenset({'Organic Reduced Fat 2% Milk', 'Bag of Organic Bananas'}), support=0.0026217713723906133, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat 2% Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2241042345276873, lift=1.8995150199058994)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Reduced Fat Milk'}), support=0.0020120570997416336, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21890547263681595, lift=1.8554501394834617)]),\n"," RelationRecord(items=frozenset({'Organic Riced Cauliflower', 'Bag of Organic Bananas'}), support=0.0012803999725628577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Riced Cauliflower'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20413122721749696, lift=1.7302231390168321)]),\n"," RelationRecord(items=frozenset({'Organic Roasted Turkey Breast', 'Bag of Organic Bananas'}), support=0.002393128520147246, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roasted Turkey Breast'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.27960819234194123, lift=2.369968430813551)]),\n"," RelationRecord(items=frozenset({'Organic Roma Tomato', 'Bag of Organic Bananas'}), support=0.0020730285270065315, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roma Tomato'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22276822276822278, lift=1.8881909393537302)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Romaine'}), support=0.0018748713883956132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21354166666666666, lift=1.8099863399009475)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Romaine Lettuce'}), support=0.001905357102028062, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine Lettuce'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21663778162911612, lift=1.836229114326531)]),\n"," RelationRecord(items=frozenset({'Organic Russet Potato', 'Bag of Organic Bananas'}), support=0.002156864239495766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Russet Potato'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24105621805792163, lift=2.043200601754641)]),\n"," RelationRecord(items=frozenset({'Organic Salted Butter', 'Bag of Organic Bananas'}), support=0.001044135691911378, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Salted Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.23378839590443687, lift=1.9815982970429753)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Shredded Carrots'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Shredded Carrots'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1891566265060241, lift=1.6032979203636253)]),\n"," RelationRecord(items=frozenset({'Organic Shredded Mozzarella', 'Bag of Organic Bananas'}), support=0.001318507114603419, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Shredded Mozzarella'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2922297297297297, lift=2.476949005691738)]),\n"," RelationRecord(items=frozenset({'Organic Small Bunch Celery', 'Bag of Organic Bananas'}), support=0.004816742753926941, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Small Bunch Celery'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24094548227220738, lift=2.04226200151512)]),\n"," RelationRecord(items=frozenset({'Organic Snipped Green Beans', 'Bag of Organic Bananas'}), support=0.001562392823663011, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Snipped Green Beans'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2655440414507772, lift=2.2507602154208675)]),\n"," RelationRecord(items=frozenset({'Organic Sour Cream', 'Bag of Organic Bananas'}), support=0.0016233642509279088, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sour Cream'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2034383954154728, lift=1.7243506733894554)]),\n"," RelationRecord(items=frozenset({'Organic Spring Mix', 'Bag of Organic Bananas'}), support=0.0022940499508417866, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Spring Mix'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2209985315712188, lift=1.8731909773209334)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Spring Mix Salad'}), support=0.0010898642623600515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Spring Mix Salad'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18404118404118402, lift=1.5599392581950722)]),\n"," RelationRecord(items=frozenset({'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese', 'Bag of Organic Bananas'}), support=0.0026827427996555116, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.26229508196721313, lift=2.2232219257000043)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Strawberries'}), support=0.023428270926537053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bag of Organic Bananas'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.19857881136950906, lift=2.3917135359814496), OrderedStatistic(items_base=frozenset({'Organic Strawberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.28217367358178813, lift=2.3917135359814496)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Sunday Bacon'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sunday Bacon'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2667946257197697, lift=2.2613602096941383)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Thompson Seedless Raisins'}), support=0.001318507114603419, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Thompson Seedless Raisins'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.33723196881091616, lift=2.858389495846996)]),\n"," RelationRecord(items=frozenset({'Organic Tomato Basil Pasta Sauce', 'Bag of Organic Bananas'}), support=0.0013337499714196435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Basil Pasta Sauce'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2266839378238342, lift=1.9213806717007405)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Tomato Cluster'}), support=0.004839607039151278, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Cluster'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2501970055161544, lift=2.120678223305498)]),\n"," RelationRecord(items=frozenset({'Organic Tortilla Chips', 'Bag of Organic Bananas'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tortilla Chips'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20722135007849293, lift=1.7564151241892105)]),\n"," RelationRecord(items=frozenset({'Organic Turkey Bacon', 'Bag of Organic Bananas'}), support=0.0011203499759925004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Turkey Bacon'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24378109452736318, lift=2.0662967462429456)]),\n"," RelationRecord(items=frozenset({'Organic Uncured Sliced Black Forest Ham', 'Bag of Organic Bananas'}), support=0.0011127285475843883, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Uncured Sliced Black Forest Ham'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.29494949494949496, lift=2.500001827056091)]),\n"," RelationRecord(items=frozenset({'Organic Unsalted Butter', 'Bag of Organic Bananas'}), support=0.0014785571111737763, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Unsalted Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2611036339165545, lift=2.2131231719998192)]),\n"," RelationRecord(items=frozenset({'Organic Unsweetened Almond Milk', 'Bag of Organic Bananas'}), support=0.004664314185764696, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Unsweetened Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.28125, lift=2.3838844476744185)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Unsweetened Vanilla Almond Milk'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Unsweetened Vanilla Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2886029411764706, lift=2.4462082240842076)]),\n"," RelationRecord(items=frozenset({'Organic White Onions', 'Bag of Organic Bananas'}), support=0.0013032642577871945, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic White Onions'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2011764705882353, lift=1.7051785225718195)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Whole Cashews'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Cashews'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2773109243697479, lift=2.350496710312032)]),\n"," RelationRecord(items=frozenset({'Organic Whole Grassmilk Milk', 'Bag of Organic Bananas'}), support=0.0012956428293790822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Grassmilk Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3541666666666667, lift=3.001928563738157)]),\n"," RelationRecord(items=frozenset({'Organic Whole Milk', 'Bag of Organic Bananas'}), support=0.008520756960269493, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.22779136104319478, lift=1.930767228108304)]),\n"," RelationRecord(items=frozenset({'Organic Whole Strawberries', 'Bag of Organic Bananas'}), support=0.002941871365531328, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Strawberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.3182192910140148, lift=2.697237400171697)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Organic Whole String Cheese'}), support=0.00447377847556189, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole String Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2945308580030105, lift=2.496453446234949)]),\n"," RelationRecord(items=frozenset({'Organic Yams', 'Bag of Organic Bananas'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yams'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1875, lift=1.5892562984496126)]),\n"," RelationRecord(items=frozenset({'Organic Yellow Onion', 'Bag of Organic Bananas'}), support=0.007621428408112248, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Onion'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2331002331002331, lift=1.9757654059979641)]),\n"," RelationRecord(items=frozenset({'Organic Yellow Peaches', 'Bag of Organic Bananas'}), support=0.0016614713929684701, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Peaches'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.315028901734104, lift=2.670195553464474)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Bag of Organic Bananas'}), support=0.00793390697284485, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2268468075833515, lift=1.9227611612534863)]),\n"," RelationRecord(items=frozenset({'Original Hummus', 'Bag of Organic Bananas'}), support=0.004275621336950972, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Hummus'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19629111266620017, lift=1.6637700647170193)]),\n"," RelationRecord(items=frozenset({'Original Orange Juice', 'Bag of Organic Bananas'}), support=0.0011203499759925004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Orange Juice'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.13946869070208728, lift=1.18214130738567)]),\n"," RelationRecord(items=frozenset({'Original Pure Creamy Almond Milk', 'Bag of Organic Bananas'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Pure Creamy Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2358156028368794, lift=1.9987809710997488)]),\n"," RelationRecord(items=frozenset({'Original Veggie Straws', 'Bag of Organic Bananas'}), support=0.0012727785441547456, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Veggie Straws'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24415204678362573, lift=2.0694409500279556)]),\n"," RelationRecord(items=frozenset({'Oven Roasted Turkey Breast', 'Bag of Organic Bananas'}), support=0.0010669999771357147, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Oven Roasted Turkey Breast'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.15607580824972128, lift=1.3229037935812455)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Pineapple Chunks'}), support=0.0017300642486414804, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pineapple Chunks'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21077065923862584, lift=1.7864991878579366)]),\n"," RelationRecord(items=frozenset({'Pretzel Crisps Original Deli Style Pretzel Crackers', 'Bag of Organic Bananas'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pretzel Crisps Original Deli Style Pretzel Crackers'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.17662682602921645, lift=1.497094910624513)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Pure Irish Butter'}), support=0.0020730285270065315, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Irish Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1842818428184282, lift=1.5619790900751387)]),\n"," RelationRecord(items=frozenset({'Pure Sparkling Water', 'Bag of Organic Bananas'}), support=0.0012422928305222964, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Sparkling Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14488888888888887, lift=1.2280830892908412)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Raspberries'}), support=0.00423751419491041, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Raspberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.16956389143031414, lift=1.4372292397080162)]),\n"," RelationRecord(items=frozenset({'Red Peppers', 'Bag of Organic Bananas'}), support=0.0027360927985122974, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.12358003442340793, lift=1.0474685230401117)]),\n"," RelationRecord(items=frozenset({'Red Raspberries', 'Bag of Organic Bananas'}), support=0.001996814242925409, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Raspberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1754855994641661, lift=1.4874218359233702)]),\n"," RelationRecord(items=frozenset({'Red Vine Tomato', 'Bag of Organic Bananas'}), support=0.002385507091739134, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Vine Tomato'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14010743061772607, lift=1.187555288367004)]),\n"," RelationRecord(items=frozenset({'Roasted Turkey Breast', 'Bag of Organic Bananas'}), support=0.0013413713998277558, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roasted Turkey Breast'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18965517241379312, lift=1.6075236122248955)]),\n"," RelationRecord(items=frozenset({'Romaine Hearts', 'Bag of Organic Bananas'}), support=0.001105107119176276, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Romaine Hearts'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14676113360323886, lift=1.243952298381613)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Russet Potato'}), support=0.0012041856884817351, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Russet Potato'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.11142454160789844, lift=0.9444381576118054)]),\n"," RelationRecord(items=frozenset({'Sea Salt Pita Chips', 'Bag of Organic Bananas'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sea Salt Pita Chips'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21216407355021216, lift=1.7983098143701415)]),\n"," RelationRecord(items=frozenset({'Seedless Red Grapes', 'Bag of Organic Bananas'}), support=0.005929471301511329, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Seedless Red Grapes'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19167282581916728, lift=1.6246253102653179)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Sharp Cheddar Cheese'}), support=0.0015852571088873476, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sharp Cheddar Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1648177496038035, lift=1.3970007821553911)]),\n"," RelationRecord(items=frozenset({'Shredded Mild Cheddar Cheese', 'Bag of Organic Bananas'}), support=0.001448071397541327, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Mild Cheddar Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18339768339768336, lift=1.55448492512446)]),\n"," RelationRecord(items=frozenset({'Shredded Mozzarella', 'Bag of Organic Bananas'}), support=0.0011813214032573985, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Mozzarella'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1641949152542373, lift=1.3917216172863838)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Shredded Parmesan'}), support=0.0018824928168037253, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Parmesan'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18655589123867067, lift=1.5812540008743372)]),\n"," RelationRecord(items=frozenset({'Small Hass Avocado', 'Bag of Organic Bananas'}), support=0.003978385629034594, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Small Hass Avocado'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.16822429906542055, lift=1.4258748098239513)]),\n"," RelationRecord(items=frozenset({'Sourdough Bread', 'Bag of Organic Bananas'}), support=0.0010669999771357147, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sourdough Bread'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1897018970189702, lift=1.6079196515479368)]),\n"," RelationRecord(items=frozenset({'Sparkling Lemon Water', 'Bag of Organic Bananas'}), support=0.0014633142543575518, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Lemon Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.134926212227688, lift=1.1436391072469454)]),\n"," RelationRecord(items=frozenset({'Sparkling Natural Mineral Water', 'Bag of Organic Bananas'}), support=0.002332157092882348, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Natural Mineral Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1697171381031614, lift=1.4385281636548906)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Sparkling Water Grapefruit'}), support=0.003711635634750665, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Water Grapefruit'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14498362607919024, lift=1.2288860848982217)]),\n"," RelationRecord(items=frozenset({'Spring Water', 'Bag of Organic Bananas'}), support=0.0032543499302639303, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Spring Water'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19191011235955058, lift=1.6266365589524725)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Strawberries'}), support=0.005921849873103217, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Strawberries'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1196489066830921, lift=1.0141481522598081)]),\n"," RelationRecord(items=frozenset({'Sugar Snap Peas', 'Bag of Organic Bananas'}), support=0.001105107119176276, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sugar Snap Peas'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2207001522070015, lift=1.8706619038067482)]),\n"," RelationRecord(items=frozenset({'Super Greens Salad', 'Bag of Organic Bananas'}), support=0.0012956428293790822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Super Greens Salad'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2639751552795031, lift=2.2374622835315456)]),\n"," RelationRecord(items=frozenset({'Sustainably Soft Bath Tissue', 'Bag of Organic Bananas'}), support=0.001135592832808725, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sustainably Soft Bath Tissue'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1814859926918392, lift=1.5382813704847242)]),\n"," RelationRecord(items=frozenset({'Sweet Onion', 'Bag of Organic Bananas'}), support=0.0013642356850520924, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sweet Onion'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19541484716157206, lift=1.6563428088645162)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Total 0% Greek Yogurt'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Greek Yogurt'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14340344168260039, lift=1.2154923888715965)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Total 0% Nonfat Greek Yogurt'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Nonfat Greek Yogurt'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1581067472306143, lift=1.3401181006060512)]),\n"," RelationRecord(items=frozenset({'Bag of Organic Bananas', 'Total 2% with Strawberry Lowfat Greek Strained Yogurt'}), support=0.0014328285407251026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% with Strawberry Lowfat Greek Strained Yogurt'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.19321685508735867, lift=1.6377125542091244)]),\n"," RelationRecord(items=frozenset({'Total Greek Strained Yogurt', 'Bag of Organic Bananas'}), support=0.0012956428293790822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total Greek Strained Yogurt'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.17875920084121977, lift=1.515168991161215)]),\n"," RelationRecord(items=frozenset({'Trilogy Kombucha Drink', 'Bag of Organic Bananas'}), support=0.0010669999771357147, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Trilogy Kombucha Drink'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.21739130434782608, lift=1.8426159982024493)]),\n"," RelationRecord(items=frozenset({'Uncured Genoa Salami', 'Bag of Organic Bananas'}), support=0.0027589570837366338, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Uncured Genoa Salami'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.20246085011185683, lift=1.7160649665585674)]),\n"," RelationRecord(items=frozenset({'Uncured Hickory Smoked Sunday Bacon', 'Bag of Organic Bananas'}), support=0.0011508356896249496, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Uncured Hickory Smoked Sunday Bacon'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18083832335329342, lift=1.5327917034148757)]),\n"," RelationRecord(items=frozenset({'Unsalted Butter', 'Bag of Organic Bananas'}), support=0.0012499142589304088, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsalted Butter'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.1142857142857143, lift=0.9686895533407163)]),\n"," RelationRecord(items=frozenset({'Unsweetened Almondmilk', 'Bag of Organic Bananas'}), support=0.0034448856404667365, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Almondmilk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2083909635776856, lift=1.7663288074977102)]),\n"," RelationRecord(items=frozenset({'Unsweetened Original Almond Breeze Almond Milk', 'Bag of Organic Bananas'}), support=0.0016462285361522457, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Original Almond Breeze Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.14744027303754265, lift=1.2497087070402413)]),\n"," RelationRecord(items=frozenset({'Unsweetened Vanilla Almond Milk', 'Bag of Organic Bananas'}), support=0.0017300642486414804, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Vanilla Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.18189102564102566, lift=1.5417144433677867)]),\n"," RelationRecord(items=frozenset({'Vanilla Almond Breeze Almond Milk', 'Bag of Organic Bananas'}), support=0.0012194285452979598, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Vanilla Almond Breeze Almond Milk'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.12529365700861395, lift=1.0619932456358674)]),\n"," RelationRecord(items=frozenset({'Watermelon Chunks', 'Bag of Organic Bananas'}), support=0.001570014252071123, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Watermelon Chunks'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24121779859484774, lift=2.0445701638133964)]),\n"," RelationRecord(items=frozenset({'Whipped Cream Cheese', 'Bag of Organic Bananas'}), support=0.0020349213849659704, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Whipped Cream Cheese'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24768089053803344, lift=2.0993515482302865)]),\n"," RelationRecord(items=frozenset({'Whole Milk Plain Yogurt', 'Bag of Organic Bananas'}), support=0.001044135691911378, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Whole Milk Plain Yogurt'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.24729241877256317, lift=2.096058848496721)]),\n"," RelationRecord(items=frozenset({'Yellow Bell Pepper', 'Bag of Organic Bananas'}), support=0.0010288928350951536, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.11578044596912522, lift=0.9813589492999323)]),\n"," RelationRecord(items=frozenset({'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry', 'Bag of Organic Bananas'}), support=0.0014252071123169905, ordered_statistics=[OrderedStatistic(items_base=frozenset({'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry'}), items_add=frozenset({'Bag of Organic Bananas'}), confidence=0.2551159618008185, lift=2.1623714620105683)]),\n"," RelationRecord(items=frozenset({'Baked Aged White Cheddar Rice and Corn Puffs', 'Banana'}), support=0.0011508356896249496, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baked Aged White Cheddar Rice and Corn Puffs'}), items_add=frozenset({'Banana'}), confidence=0.27655677655677663, lift=1.9377730479140287)]),\n"," RelationRecord(items=frozenset({'Baked Aged White Cheddar Rice and Corn Puffs', 'Organic Strawberries'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Baked Aged White Cheddar Rice and Corn Puffs'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.24358974358974358, lift=2.9338320788201453)]),\n"," RelationRecord(items=frozenset({'Banana', 'Bartlett Pears'}), support=0.0035515856381803075, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Banana'}), confidence=0.3860811930405965, lift=2.7051867594608363)]),\n"," RelationRecord(items=frozenset({'Banana', 'Basil Pesto'}), support=0.001166078546441174, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Basil Pesto'}), items_add=frozenset({'Banana'}), confidence=0.21888412017167383, lift=1.5336733164373144)]),\n"," RelationRecord(items=frozenset({'Banana', 'Berry Medley'}), support=0.001562392823663011, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Berry Medley'}), items_add=frozenset({'Banana'}), confidence=0.30734632683658175, lift=2.1535087150433116)]),\n"," RelationRecord(items=frozenset({'Banana', 'Black Beans'}), support=0.0013032642577871945, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Black Beans'}), items_add=frozenset({'Banana'}), confidence=0.2329700272479564, lift=1.6323701967946764)]),\n"," RelationRecord(items=frozenset({'Banana', 'Blackberries'}), support=0.0013642356850520924, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Banana'}), confidence=0.16620241411327763, lift=1.1645440859440908)]),\n"," RelationRecord(items=frozenset({'Banana', 'Blueberries'}), support=0.00545694274020837, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blueberries'}), items_add=frozenset({'Banana'}), confidence=0.3082221265604821, lift=2.1596452527968757)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breast', 'Banana'}), support=0.0017529285338658172, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breast'}), items_add=frozenset({'Banana'}), confidence=0.24390243902439024, lift=1.7089712230028418)]),\n"," RelationRecord(items=frozenset({'Banana', 'Boneless Skinless Chicken Breasts'}), support=0.0044661570471537775, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Banana'}), confidence=0.28065134099616856, lift=1.9664627683844003)]),\n"," RelationRecord(items=frozenset({'Banana', 'Broccoli Crown'}), support=0.00704982127750383, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Banana'}), confidence=0.3154843110504775, lift=2.210529796465988)]),\n"," RelationRecord(items=frozenset({'Banana', 'Brussels Sprouts'}), support=0.0016386071077441333, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Brussels Sprouts'}), items_add=frozenset({'Banana'}), confidence=0.18711923411662315, lift=1.3111036841401262)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Banana'}), support=0.003589692780220869, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Banana'}), confidence=0.24531250000000002, lift=1.718851212885827)]),\n"," RelationRecord(items=frozenset({'Banana', 'Cage Free Brown Eggs-Large, Grade A'}), support=0.001470935682765664, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cage Free Brown Eggs-Large, Grade A'}), items_add=frozenset({'Banana'}), confidence=0.2797101449275362, lift=1.9598680126987662)]),\n"," RelationRecord(items=frozenset({'Banana', 'Cantaloupe'}), support=0.0025226928030851544, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Banana'}), confidence=0.27242798353909464, lift=1.908843495256919)]),\n"," RelationRecord(items=frozenset({'Banana', 'Carrots'}), support=0.004016492771075155, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Banana'}), confidence=0.21105326391670004, lift=1.4788042136733042)]),\n"," RelationRecord(items=frozenset({'Banana', 'Cauliflower'}), support=0.0010212714066870413, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cauliflower'}), items_add=frozenset({'Banana'}), confidence=0.23183391003460208, lift=1.6244096711379954)]),\n"," RelationRecord(items=frozenset({'Banana', 'Cherubs Heavenly Salad Tomatoes'}), support=0.0018977356736199498, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cherubs Heavenly Salad Tomatoes'}), items_add=frozenset({'Banana'}), confidence=0.2431640625, lift=1.7037975796519544)]),\n"," RelationRecord(items=frozenset({'Citrus Mandarins Organic', 'Banana'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Citrus Mandarins Organic'}), items_add=frozenset({'Banana'}), confidence=0.23440134907251264, lift=1.6423991568116687)]),\n"," RelationRecord(items=frozenset({'Classic Hummus', 'Banana'}), support=0.0014175856839088782, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Classic Hummus'}), items_add=frozenset({'Banana'}), confidence=0.2680115273775216, lift=1.8778983496570132)]),\n"," RelationRecord(items=frozenset({'Banana', 'Clementines, Bag'}), support=0.0035515856381803075, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines, Bag'}), items_add=frozenset({'Banana'}), confidence=0.3152909336941813, lift=2.2091748434839173)]),\n"," RelationRecord(items=frozenset({'Banana', 'Creamy Almond Butter'}), support=0.0012651571157466332, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Creamy Almond Butter'}), items_add=frozenset({'Banana'}), confidence=0.1952941176470588, lift=1.3683833110302754)]),\n"," RelationRecord(items=frozenset({'Banana', 'Creamy Peanut Butter'}), support=0.0014328285407251026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Creamy Peanut Butter'}), items_add=frozenset({'Banana'}), confidence=0.18970736629667, lift=1.3292381621499398)]),\n"," RelationRecord(items=frozenset({'Cucumber Kirby', 'Banana'}), support=0.0056627213072274005, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cucumber Kirby'}), items_add=frozenset({'Banana'}), confidence=0.307915457936179, lift=2.157496492595755)]),\n"," RelationRecord(items=frozenset({'Diced Tomatoes', 'Banana'}), support=0.001135592832808725, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Diced Tomatoes'}), items_add=frozenset({'Banana'}), confidence=0.23726114649681526, lift=1.662437133968847)]),\n"," RelationRecord(items=frozenset({'Banana', 'Dressing, Jersey Sweet Onion, Calorie Free'}), support=0.0013032642577871945, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Dressing, Jersey Sweet Onion, Calorie Free'}), items_add=frozenset({'Banana'}), confidence=0.2618683001531394, lift=1.8348540956313821)]),\n"," RelationRecord(items=frozenset({'Banana', 'Eggo Homestyle Waffles'}), support=0.0010212714066870413, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Eggo Homestyle Waffles'}), items_add=frozenset({'Banana'}), confidence=0.28510638297872337, lift=1.9976782764207686)]),\n"," RelationRecord(items=frozenset({'Banana', 'Electrolyte Enhanced Water'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Electrolyte Enhanced Water'}), items_add=frozenset({'Banana'}), confidence=0.15702479338842973, lift=1.1002384981150526)]),\n"," RelationRecord(items=frozenset({'Banana', 'English Seedless Cucumber'}), support=0.0013947213986845414, ordered_statistics=[OrderedStatistic(items_base=frozenset({'English Seedless Cucumber'}), items_add=frozenset({'Banana'}), confidence=0.23673997412677877, lift=1.6587853927801193)]),\n"," RelationRecord(items=frozenset({'Banana', 'European Cucumber'}), support=0.0015090428248062252, ordered_statistics=[OrderedStatistic(items_base=frozenset({'European Cucumber'}), items_add=frozenset({'Banana'}), confidence=0.31679999999999997, lift=2.219748542133931)]),\n"," RelationRecord(items=frozenset({'Extra Virgin Olive Oil', 'Banana'}), support=0.0026217713723906133, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Extra Virgin Olive Oil'}), items_add=frozenset({'Banana'}), confidence=0.16634429400386846, lift=1.1655382074096752)]),\n"," RelationRecord(items=frozenset({'Banana', 'Ezekiel 4:9 Bread Organic Sprouted Whole Grain'}), support=0.0010365142635032657, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ezekiel 4:9 Bread Organic Sprouted Whole Grain'}), items_add=frozenset({'Banana'}), confidence=0.1948424068767908, lift=1.3652182721294908)]),\n"," RelationRecord(items=frozenset({'Banana', 'Fat Free Milk'}), support=0.0019739499577010725, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fat Free Milk'}), items_add=frozenset({'Banana'}), confidence=0.21229508196721314, lift=1.487505362054687)]),\n"," RelationRecord(items=frozenset({'Banana', 'Feta Cheese Crumbles'}), support=0.0027360927985122974, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Banana'}), confidence=0.2477570738440304, lift=1.7359798089288359)]),\n"," RelationRecord(items=frozenset({'Banana', 'Fresh Cauliflower'}), support=0.003902171344953471, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Banana'}), confidence=0.1931346661637118, lift=1.353252505215981)]),\n"," RelationRecord(items=frozenset({'Banana', 'Fresh Ginger Root'}), support=0.0020654070985984194, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Banana'}), confidence=0.21105919003115264, lift=1.4788457366654655)]),\n"," RelationRecord(items=frozenset({'Banana', 'Frozen Broccoli Florets'}), support=0.0013032642577871945, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Broccoli Florets'}), items_add=frozenset({'Banana'}), confidence=0.24890829694323147, lift=1.744046178234778)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Banana'}), support=0.0015242856816224497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Banana'}), confidence=0.18779342723004694, lift=1.3158276083214369)]),\n"," RelationRecord(items=frozenset({'Banana', 'Gala Apples'}), support=0.0028046856541853074, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Gala Apples'}), items_add=frozenset({'Banana'}), confidence=0.383733055265902, lift=2.6887338699339813)]),\n"," RelationRecord(items=frozenset({'Garlic', 'Banana'}), support=0.0032162427882233688, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Banana'}), confidence=0.21979166666666666, lift=1.5400322968955817)]),\n"," RelationRecord(items=frozenset({'Banana', 'Grade A Large Eggs Cage Free Omega 3'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grade A Large Eggs Cage Free Omega 3'}), items_add=frozenset({'Banana'}), confidence=0.29074074074074074, lift=2.037156993049869)]),\n"," RelationRecord(items=frozenset({'Grade A Large White Eggs', 'Banana'}), support=0.001440449969133215, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grade A Large White Eggs'}), items_add=frozenset({'Banana'}), confidence=0.29211746522411125, lift=2.0468034013986123)]),\n"," RelationRecord(items=frozenset({'Banana', 'Granny Smith Apples'}), support=0.003307699929120716, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Granny Smith Apples'}), items_add=frozenset({'Banana'}), confidence=0.3147208121827411, lift=2.205180126331586)]),\n"," RelationRecord(items=frozenset({'Banana', 'Grape White/Green Seedless'}), support=0.003063814220061124, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Banana'}), confidence=0.2632612966601179, lift=1.844614518502478)]),\n"," RelationRecord(items=frozenset({'Banana', 'Grated Parmesan'}), support=0.0025836642303500522, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Banana'}), confidence=0.2001180637544274, lift=1.4021836498533944)]),\n"," RelationRecord(items=frozenset({'Banana', 'Green Beans'}), support=0.0025226928030851544, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Banana'}), confidence=0.28534482758620694, lift=1.999349005807894)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Banana'}), support=0.004664314185764696, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Banana'}), confidence=0.24276080920269735, lift=1.7009720717012022)]),\n"," RelationRecord(items=frozenset({'Banana', 'Green Onions'}), support=0.0025379356599013786, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Onions'}), items_add=frozenset({'Banana'}), confidence=0.23044982698961938, lift=1.614711702952097)]),\n"," RelationRecord(items=frozenset({'Green Peas', 'Banana'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Peas'}), items_add=frozenset({'Banana'}), confidence=0.28571428571428575, lift=2.0019377183747578)]),\n"," RelationRecord(items=frozenset({'Banana', 'Ground Turkey Breast'}), support=0.0016157428225197967, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Banana'}), confidence=0.22129436325678498, lift=1.5505613643361902)]),\n"," RelationRecord(items=frozenset({'Banana', 'Half & Half'}), support=0.00393265705858592, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Half & Half'}), items_add=frozenset({'Banana'}), confidence=0.21287128712871287, lift=1.4915427060168367)]),\n"," RelationRecord(items=frozenset({'Hass Avocado', 'Banana'}), support=0.002873278509858318, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocado'}), items_add=frozenset({'Banana'}), confidence=0.2308634415186773, lift=1.617609809795158)]),\n"," RelationRecord(items=frozenset({'Banana', 'Hass Avocados'}), support=0.0017910356759063785, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Banana'}), confidence=0.10325131810193322, lift=0.7234594786305968)]),\n"," RelationRecord(items=frozenset({'Banana', 'Hint Of Sea Salt Almond Nut Thins'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hint Of Sea Salt Almond Nut Thins'}), items_add=frozenset({'Banana'}), confidence=0.2692307692307692, lift=1.8864413115454446)]),\n"," RelationRecord(items=frozenset({'Banana', 'Honey Nut Cheerios'}), support=0.0025226928030851544, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honey Nut Cheerios'}), items_add=frozenset({'Banana'}), confidence=0.2717569786535304, lift=1.9041419102932322)]),\n"," RelationRecord(items=frozenset({'Banana', 'Honeycrisp Apple'}), support=0.009381978370386177, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Banana'}), confidence=0.34666291185581527, lift=2.4289914558202317)]),\n"," RelationRecord(items=frozenset({'Banana', 'Iceberg Lettuce'}), support=0.0013413713998277558, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Iceberg Lettuce'}), items_add=frozenset({'Banana'}), confidence=0.24175824175824176, lift=1.6939473001632563)]),\n"," RelationRecord(items=frozenset({'Banana', 'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), support=0.0014633142543575518, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.2723404255319149, lift=1.908229995387003)]),\n"," RelationRecord(items=frozenset({'Banana', 'Italian Sparkling Mineral Water'}), support=0.001318507114603419, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Italian Sparkling Mineral Water'}), items_add=frozenset({'Banana'}), confidence=0.15282685512367492, lift=1.070824459784378)]),\n"," RelationRecord(items=frozenset({'Banana', 'Jalapeno Peppers'}), support=0.0030104642212043383, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Banana'}), confidence=0.20800421274354924, lift=1.4574401767525553)]),\n"," RelationRecord(items=frozenset({'Banana', 'Kale Greens'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Kale Greens'}), items_add=frozenset({'Banana'}), confidence=0.25487012987012986, lift=1.7858194419593008)]),\n"," RelationRecord(items=frozenset({'Banana', 'Large Alfresco Eggs'}), support=0.0021644856679038788, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Banana'}), confidence=0.14963119072708114, lift=1.0484331359665486)]),\n"," RelationRecord(items=frozenset({'Banana', 'Large Grapefruit'}), support=0.0015166642532143373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Grapefruit'}), items_add=frozenset({'Banana'}), confidence=0.23550295857988165, lift=1.6501178944946966)]),\n"," RelationRecord(items=frozenset({'Banana', 'Large Lemon'}), support=0.016447042504706234, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Banana'}), items_add=frozenset({'Large Lemon'}), confidence=0.11524084161059489, lift=1.8587136554252666), OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Banana'}), confidence=0.26527350952673634, lift=1.8587136554252668)]),\n"," RelationRecord(items=frozenset({'Banana', 'Lemonade'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lemonade'}), items_add=frozenset({'Banana'}), confidence=0.19848293299620734, lift=1.3907266450656504)]),\n"," RelationRecord(items=frozenset({'Banana', 'Lightly Salted Baked Snap Pea Crisps'}), support=0.0016233642509279088, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lightly Salted Baked Snap Pea Crisps'}), items_add=frozenset({'Banana'}), confidence=0.21493440968718464, lift=1.5059985560528573)]),\n"," RelationRecord(items=frozenset({'Banana', 'Lime Sparkling Water'}), support=0.0029875999359800015, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lime Sparkling Water'}), items_add=frozenset({'Banana'}), confidence=0.19938962360122076, lift=1.3970796284894036)]),\n"," RelationRecord(items=frozenset({'Banana', 'Limes'}), support=0.010144121211197402, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Banana'}), confidence=0.22061992375269351, lift=1.545835713749181)]),\n"," RelationRecord(items=frozenset({'Banana', 'Macaroni & Cheese'}), support=0.001105107119176276, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Macaroni & Cheese'}), items_add=frozenset({'Banana'}), confidence=0.2036516853932584, lift=1.4269429663977378)]),\n"," RelationRecord(items=frozenset({'Banana', 'Mandarin Oranges'}), support=0.0012118071168898475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Mandarin Oranges'}), items_add=frozenset({'Banana'}), confidence=0.32515337423312884, lift=2.278278814469433)]),\n"," RelationRecord(items=frozenset({'Mango Chunks', 'Banana'}), support=0.0019510856724767355, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Mango Chunks'}), items_add=frozenset({'Banana'}), confidence=0.34316353887399464, lift=2.404472112149843)]),\n"," RelationRecord(items=frozenset({'Marinara Pasta Sauce', 'Banana'}), support=0.001044135691911378, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Marinara Pasta Sauce'}), items_add=frozenset({'Banana'}), confidence=0.2681017612524462, lift=1.8785305987489167)]),\n"," RelationRecord(items=frozenset({'Marinara Sauce', 'Banana'}), support=0.0010288928350951536, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Marinara Sauce'}), items_add=frozenset({'Banana'}), confidence=0.17904509283819628, lift=1.2545299362494335)]),\n"," RelationRecord(items=frozenset({'Banana', 'Medium Navel Orange'}), support=0.0019815713861091847, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Medium Navel Orange'}), items_add=frozenset({'Banana'}), confidence=0.32663316582914576, lift=2.2886473916093335)]),\n"," RelationRecord(items=frozenset({'Banana', 'Michigan Organic Kale'}), support=0.004862471324375614, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Banana'}), confidence=0.2428625808907499, lift=1.701685163734615)]),\n"," RelationRecord(items=frozenset({'Mini Original Babybel Cheese', 'Banana'}), support=0.0010898642623600515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Mini Original Babybel Cheese'}), items_add=frozenset({'Banana'}), confidence=0.25354609929078015, lift=1.7765422483095146)]),\n"," RelationRecord(items=frozenset({'Banana', 'No Salt Added Black Beans'}), support=0.002606528515574389, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Banana'}), confidence=0.2736, lift=1.917055559115668)]),\n"," RelationRecord(items=frozenset({'Banana', 'Non Fat Raspberry Yogurt'}), support=0.001227049973706072, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Non Fat Raspberry Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.27951388888888884, lift=1.9584928894169717)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Banana'}), support=0.003711635634750665, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Banana'}), confidence=0.26126609442060084, lift=1.8306345713357157)]),\n"," RelationRecord(items=frozenset({'Banana', 'Orange Juice'}), support=0.00128802140097097, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Juice'}), items_add=frozenset({'Banana'}), confidence=0.2908777969018933, lift=2.0381173156947834)]),\n"," RelationRecord(items=frozenset({'Banana', 'Orange Sparkling Water'}), support=0.0010669999771357147, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Sparkling Water'}), items_add=frozenset({'Banana'}), confidence=0.2150537634408602, lift=1.5068348417874518)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic 2% Reduced Fat Milk'}), support=0.001562392823663011, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic 2% Reduced Fat Milk'}), items_add=frozenset({'Banana'}), confidence=0.2201933404940924, lift=1.542846737845208)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic American Cheese Singles'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic American Cheese Singles'}), items_add=frozenset({'Banana'}), confidence=0.20402298850574715, lift=1.429544606368182)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic AppleApple'}), support=0.0011279714044006128, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic AppleApple'}), items_add=frozenset({'Banana'}), confidence=0.2273425499231951, lift=1.5929396898895922)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Avocado'}), support=0.016889085352376744, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Banana'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11833813948520773, lift=2.095698332260038), OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Banana'}), confidence=0.2990956944256985, lift=2.0956983322600378)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Baby Arugula'}), support=0.004527128474418675, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Banana'}), confidence=0.20321587410195005, lift=1.4238893316801646)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Baby Broccoli'}), support=0.0016157428225197967, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Banana'}), confidence=0.15692079940784603, lift=1.099509834962302)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Banana'}), support=0.005632235593594951, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Banana'}), confidence=0.205448985265499, lift=1.439536254816878)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Baby Kale'}), support=0.001044135691911378, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Kale'}), items_add=frozenset({'Banana'}), confidence=0.22132471728594508, lift=1.5507740484017711)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Baby Rainbow Carrots'}), support=0.0012499142589304088, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Rainbow Carrots'}), items_add=frozenset({'Banana'}), confidence=0.17943107221006566, lift=1.2572344095701433)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Baby Spinach'}), support=0.015242856816224497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Banana'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.10680337498664957, lift=1.4322939522305094), OrderedStatistic(items_base=frozenset({'Organic Baby Spinach'}), items_add=frozenset({'Banana'}), confidence=0.2044153720359771, lift=1.4322939522305091)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach Salad', 'Banana'}), support=0.001074621405543827, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Spinach Salad'}), items_add=frozenset({'Banana'}), confidence=0.19859154929577466, lift=1.3914876957999196)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Bartlett Pear'}), support=0.0016309856793360212, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bartlett Pear'}), items_add=frozenset({'Banana'}), confidence=0.21836734693877552, lift=1.5300523990435648)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Basil'}), support=0.0017071999634171435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Basil'}), items_add=frozenset({'Banana'}), confidence=0.18330605564648114, lift=1.2843855738181749)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Bell Pepper'}), support=0.0012727785441547456, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bell Pepper'}), items_add=frozenset({'Banana'}), confidence=0.17709437963944857, lift=1.2408617140933678)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Black Beans'}), support=0.002027299956557858, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Black Beans'}), items_add=frozenset({'Banana'}), confidence=0.16878172588832485, lift=1.182616761298794)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Blackberries'}), support=0.005258785601597452, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blackberries'}), items_add=frozenset({'Banana'}), confidence=0.2427013717903623, lift=1.7005556067094758)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Blueberries'}), support=0.00704982127750383, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blueberries'}), items_add=frozenset({'Banana'}), confidence=0.18626661296818367, lift=1.3051295536122187)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Bosc Pear'}), support=0.001074621405543827, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bosc Pear'}), items_add=frozenset({'Banana'}), confidence=0.19971671388101983, lift=1.399371478778956)]),\n"," RelationRecord(items=frozenset({'Organic Bread with 21 Whole Grains', 'Banana'}), support=0.0016004999657035722, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bread with 21 Whole Grains'}), items_add=frozenset({'Banana'}), confidence=0.22388059701492538, lift=1.568682540517534)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Broccoli'}), support=0.0017300642486414804, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli'}), items_add=frozenset({'Banana'}), confidence=0.13732607380520265, lift=0.9622138640343283)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli Florets', 'Banana'}), support=0.0015090428248062252, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli Florets'}), items_add=frozenset({'Banana'}), confidence=0.14548126377663484, lift=1.0193555024494543)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Butternut Squash'}), support=0.001044135691911378, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Butternut Squash'}), items_add=frozenset({'Banana'}), confidence=0.19160839160839163, lift=1.3425582321128622)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Carrot Bunch'}), support=0.001928221387252399, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Carrot Bunch'}), items_add=frozenset({'Banana'}), confidence=0.1452353616532721, lift=1.0176325198741951)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Celery Hearts'}), support=0.0013261285430115311, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Celery Hearts'}), items_add=frozenset({'Banana'}), confidence=0.1638418079096045, lift=1.1480038328533213)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Banana'}), support=0.004511885617602451, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Banana'}), confidence=0.16789563244469655, lift=1.1764080976949796)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Coconut Milk'}), support=0.0014023428270926537, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Banana'}), confidence=0.17607655502392344, lift=1.2337300388835826)]),\n"," RelationRecord(items=frozenset({'Organic Creamy Peanut Butter', 'Banana'}), support=0.0011813214032573985, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Creamy Peanut Butter'}), items_add=frozenset({'Banana'}), confidence=0.20394736842105265, lift=1.429014752918824)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Cucumber'}), support=0.006333407007141278, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Banana'}), confidence=0.18014307392152612, lift=1.2622232503561635)]),\n"," RelationRecord(items=frozenset({\"Organic D'Anjou Pears\", 'Banana'}), support=0.0031095427905097972, ordered_statistics=[OrderedStatistic(items_base=frozenset({\"Organic D'Anjou Pears\"}), items_add=frozenset({'Banana'}), confidence=0.2155309033280507, lift=1.5101780569673289)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Egg Whites'}), support=0.0011736999748492862, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Egg Whites'}), items_add=frozenset({'Banana'}), confidence=0.18465227817745802, lift=1.2938182616354847)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Extra Firm Tofu'}), support=0.0022330785235768888, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Banana'}), confidence=0.24704890387858347, lift=1.7310178163518668)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Fat Free Milk'}), support=0.0014252071123169905, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fat Free Milk'}), items_add=frozenset({'Banana'}), confidence=0.23057953144266338, lift=1.6156205137808617)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Fuji Apple'}), support=0.009221928373815821, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apple'}), items_add=frozenset({'Banana'}), confidence=0.37150752225974826, lift=2.60307222515109)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Gala Apples'}), support=0.005075871319802757, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Gala Apples'}), items_add=frozenset({'Banana'}), confidence=0.2370950516197935, lift=1.6612733433718616)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Garbanzo Beans'}), support=0.001570014252071123, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garbanzo Beans'}), items_add=frozenset({'Banana'}), confidence=0.18054338299737072, lift=1.265028128788957)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Banana'}), support=0.005441699883392145, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Banana'}), confidence=0.17171717171717174, lift=1.2031847903363444)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Garnet Sweet Potato (Yam)'}), support=0.0041841641960536245, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Banana'}), confidence=0.21378504672897197, lift=1.4979452203493369)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Banana'}), support=0.002240699951985001, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Banana'}), confidence=0.14648729446935724, lift=1.026404540213067)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Grade A Free Range Large Brown Eggs'}), support=0.00264463565761495, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Free Range Large Brown Eggs'}), items_add=frozenset({'Banana'}), confidence=0.19637804187889077, lift=1.3759781318427522)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Grade A Large Brown Eggs'}), support=0.0013718571134602048, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Large Brown Eggs'}), items_add=frozenset({'Banana'}), confidence=0.20594965675057209, lift=1.4430443507735666)]),\n"," RelationRecord(items=frozenset({'Organic Granny Smith Apple', 'Banana'}), support=0.0035058570677316343, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Banana'}), confidence=0.19683354728284128, lift=1.3791697589145744)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Grape Tomatoes'}), support=0.006623021286649544, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grape Tomatoes'}), items_add=frozenset({'Banana'}), confidence=0.22730839654721424, lift=1.5927003846290415)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Green Leaf Lettuce'}), support=0.0010212714066870413, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Green Leaf Lettuce'}), items_add=frozenset({'Banana'}), confidence=0.22408026755852842, lift=1.5700815884912396)]),\n"," RelationRecord(items=frozenset({'Organic Half & Half', 'Banana'}), support=0.003810714204056124, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Half & Half'}), items_add=frozenset({'Banana'}), confidence=0.18896447467876037, lift=1.3240328825229877)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Hass Avocado'}), support=0.0072174927024823, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Hass Avocado'}), items_add=frozenset({'Banana'}), confidence=0.1298505416152475, lift=0.9098344395383429)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Hothouse Cucumbers'}), support=0.0011203499759925004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Hothouse Cucumbers'}), items_add=frozenset({'Banana'}), confidence=0.1587473002159827, lift=1.1123077279738798)]),\n"," RelationRecord(items=frozenset({'Organic Italian Parsley Bunch', 'Banana'}), support=0.0028123070825934195, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Italian Parsley Bunch'}), items_add=frozenset({'Banana'}), confidence=0.15375, lift=1.0772927347004164)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Kiwi'}), support=0.00294949279393944, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Kiwi'}), items_add=frozenset({'Banana'}), confidence=0.2058510638297872, lift=1.4423535316694729)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Lacinato (Dinosaur) Kale'}), support=0.002355021378106685, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Banana'}), confidence=0.17546848381601365, lift=1.2294694164805795)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Large Brown Eggs'}), support=0.001105107119176276, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Brown Eggs'}), items_add=frozenset({'Banana'}), confidence=0.23424878836833601, lift=1.6413301972135532)]),\n"," RelationRecord(items=frozenset({'Organic Large Brown Grade AA Cage Free Eggs', 'Banana'}), support=0.0015395285384386741, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Brown Grade AA Cage Free Eggs'}), items_add=frozenset({'Banana'}), confidence=0.17766051011433595, lift=1.2448284669225624)]),\n"," RelationRecord(items=frozenset({'Organic Large Extra Fancy Fuji Apple', 'Banana'}), support=0.0036354213506695427, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Extra Fancy Fuji Apple'}), items_add=frozenset({'Banana'}), confidence=0.1649948114839156, lift=1.1560826775602413)]),\n"," RelationRecord(items=frozenset({'Organic Large Grade A Brown Eggs', 'Banana'}), support=0.0013032642577871945, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Grade A Brown Eggs'}), items_add=frozenset({'Banana'}), confidence=0.2223667100130039, lift=1.5580750643007704)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Large Grade AA Brown Eggs'}), support=0.0014633142543575518, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Grade AA Brown Eggs'}), items_add=frozenset({'Banana'}), confidence=0.18250950570342206, lift=1.2788043220036476)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Lemon'}), support=0.0029266285087151036, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lemon'}), items_add=frozenset({'Banana'}), confidence=0.10955777460770329, lift=0.7676474446492652)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Navel Orange'}), support=0.0023778856633310213, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Banana'}), confidence=0.15757575757575756, lift=1.104098984073351)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Old Fashioned Rolled Oats'}), support=0.0013337499714196435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Old Fashioned Rolled Oats'}), items_add=frozenset({'Banana'}), confidence=0.23427041499330656, lift=1.641481730260427)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Peeled Whole Baby Carrots'}), support=0.004923442751640512, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Peeled Whole Baby Carrots'}), items_add=frozenset({'Banana'}), confidence=0.26260162601626014, lift=1.8399923500997262)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Raspberries'}), support=0.006851664138892911, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Raspberries'}), items_add=frozenset({'Banana'}), confidence=0.16209880995311934, lift=1.1357910261208393)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Banana'}), support=0.0034906142109154097, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Banana'}), confidence=0.19139155871291266, lift=1.341038931280709)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Red Onion'}), support=0.0050225213209459715, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Banana'}), confidence=0.17260345730749083, lift=1.2093948002701358)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Red Radish, Bunch'}), support=0.0013794785418683169, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Radish, Bunch'}), items_add=frozenset({'Banana'}), confidence=0.1738712776176753, lift=1.2182781408169152)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Reduced Fat 2% Milk'}), support=0.002210214238352552, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat 2% Milk'}), items_add=frozenset({'Banana'}), confidence=0.18892508143322476, lift=1.3237568626386833)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Reduced Fat Milk'}), support=0.0027132285132879606, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat Milk'}), items_add=frozenset({'Banana'}), confidence=0.2951907131011609, lift=2.068336979349045)]),\n"," RelationRecord(items=frozenset({'Organic Riced Cauliflower', 'Banana'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Riced Cauliflower'}), items_add=frozenset({'Banana'}), confidence=0.16889428918590524, lift=1.1834054677877517)]),\n"," RelationRecord(items=frozenset({'Organic Roasted Turkey Breast', 'Banana'}), support=0.0016386071077441333, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roasted Turkey Breast'}), items_add=frozenset({'Banana'}), confidence=0.1914514692787177, lift=1.3414587115556589)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Roma Tomato'}), support=0.0015090428248062252, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roma Tomato'}), items_add=frozenset({'Banana'}), confidence=0.16216216216216217, lift=1.1362349212397274)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Romaine'}), support=0.001691957106600919, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine'}), items_add=frozenset({'Banana'}), confidence=0.19270833333333331, lift=1.3502652840079743)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Romaine Lettuce'}), support=0.0016081213941116844, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine Lettuce'}), items_add=frozenset({'Banana'}), confidence=0.182842287694974, lift=1.2811360528767404)]),\n"," RelationRecord(items=frozenset({'Organic Russet Potato', 'Banana'}), support=0.0013108856861953067, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Russet Potato'}), items_add=frozenset({'Banana'}), confidence=0.1465076660988075, lift=1.0265472797799013)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Shredded Carrots'}), support=0.0014175856839088782, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Shredded Carrots'}), items_add=frozenset({'Banana'}), confidence=0.22409638554216868, lift=1.570194523689117)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Small Bunch Celery'}), support=0.0032543499302639303, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Small Bunch Celery'}), items_add=frozenset({'Banana'}), confidence=0.16279069767441862, lift=1.140638932562362)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Snipped Green Beans'}), support=0.0010669999771357147, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Snipped Green Beans'}), items_add=frozenset({'Banana'}), confidence=0.18134715025906734, lift=1.2706599507819056)]),\n"," RelationRecord(items=frozenset({'Organic Sour Cream', 'Banana'}), support=0.0012041856884817351, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sour Cream'}), items_add=frozenset({'Banana'}), confidence=0.15090735434574976, lift=1.0573749362571547)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Spring Mix'}), support=0.001691957106600919, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Spring Mix'}), items_add=frozenset({'Banana'}), confidence=0.16299559471365638, lift=1.142074601451679)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Spring Mix Salad'}), support=0.0012118071168898475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Spring Mix Salad'}), items_add=frozenset({'Banana'}), confidence=0.2046332046332046, lift=1.4338202577548937)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese'}), support=0.0020654070985984194, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sticks Low Moisture Part Skim Mozzarella String Cheese'}), items_add=frozenset({'Banana'}), confidence=0.20193740685543965, lift=1.414931390371429)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Strawberries'}), support=0.016568985359236028, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Banana'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.11609526861048808, lift=1.3982691480735754), OrderedStatistic(items_base=frozenset({'Organic Strawberries'}), items_add=frozenset({'Banana'}), confidence=0.19955939049017807, lift=1.3982691480735754)]),\n"," RelationRecord(items=frozenset({'Organic Tomato Basil Pasta Sauce', 'Banana'}), support=0.0013642356850520924, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Basil Pasta Sauce'}), items_add=frozenset({'Banana'}), confidence=0.23186528497409326, lift=1.6246295084997222)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Tomato Cluster'}), support=0.003132407075734134, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Cluster'}), items_add=frozenset({'Banana'}), confidence=0.1619385342789598, lift=1.1346680094098063)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Tomato Paste'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Paste'}), items_add=frozenset({'Banana'}), confidence=0.19660537482319662, lift=1.3775710042281748)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Unsweetened Almond Milk'}), support=0.002446478519004032, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Unsweetened Almond Milk'}), items_add=frozenset({'Banana'}), confidence=0.14751838235294118, lift=1.0336291482509377)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic White Onions'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic White Onions'}), items_add=frozenset({'Banana'}), confidence=0.15529411764705883, lift=1.0881120304578096)]),\n"," RelationRecord(items=frozenset({'Organic Whole Milk', 'Banana'}), support=0.007956771258069187, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Milk'}), items_add=frozenset({'Banana'}), confidence=0.21271393643031783, lift=1.490440183973383)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Whole Milk with DHA Omega-3'}), support=0.0010365142635032657, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Milk with DHA Omega-3'}), items_add=frozenset({'Banana'}), confidence=0.26003824091778205, lift=1.8220312694959555)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Whole Strawberries'}), support=0.0018367642463550519, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Strawberries'}), items_add=frozenset({'Banana'}), confidence=0.19868095630667765, lift=1.3921141512358681)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Whole String Cheese'}), support=0.003620178493853318, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole String Cheese'}), items_add=frozenset({'Banana'}), confidence=0.2383341695935775, lift=1.6699555729041817)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Yams'}), support=0.0012803999725628577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yams'}), items_add=frozenset({'Banana'}), confidence=0.23863636363636362, lift=1.6720729806880077)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Yellow Onion'}), support=0.005174949889108217, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Onion'}), items_add=frozenset({'Banana'}), confidence=0.15827505827505825, lift=1.1089988316358066)]),\n"," RelationRecord(items=frozenset({'Organic Yellow Peaches', 'Banana'}), support=0.0010212714066870413, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Peaches'}), items_add=frozenset({'Banana'}), confidence=0.1936416184971098, lift=1.3568046097077475)]),\n"," RelationRecord(items=frozenset({'Banana', 'Organic Zucchini'}), support=0.007156521275217401, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Banana'}), confidence=0.20461974286336893, lift=1.4337259340681283)]),\n"," RelationRecord(items=frozenset({'Banana', 'Original Hummus'}), support=0.004961549893681074, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Hummus'}), items_add=frozenset({'Banana'}), confidence=0.2277816655003499, lift=1.5960164770178045)]),\n"," RelationRecord(items=frozenset({'Original No Pulp 100% Florida Orange Juice', 'Banana'}), support=0.0017300642486414804, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original No Pulp 100% Florida Orange Juice'}), items_add=frozenset({'Banana'}), confidence=0.2771672771672771, lift=1.9420506926114098)]),\n"," RelationRecord(items=frozenset({'Original Nooks & Crannies English Muffins', 'Banana'}), support=0.0012727785441547456, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Nooks & Crannies English Muffins'}), items_add=frozenset({'Banana'}), confidence=0.24962630792227206, lift=1.749077124648798)]),\n"," RelationRecord(items=frozenset({'Original Orange Juice', 'Banana'}), support=0.0017986571043144906, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Orange Juice'}), items_add=frozenset({'Banana'}), confidence=0.2239089184060721, lift=1.5688809823316412)]),\n"," RelationRecord(items=frozenset({'Original Veggie Straws', 'Banana'}), support=0.0012651571157466332, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Veggie Straws'}), items_add=frozenset({'Banana'}), confidence=0.24269005847953215, lift=1.700476336806629)]),\n"," RelationRecord(items=frozenset({'Oven Roasted Turkey Breast', 'Banana'}), support=0.0015166642532143373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Oven Roasted Turkey Breast'}), items_add=frozenset({'Banana'}), confidence=0.22185061315496096, lift=1.5544588861181923)]),\n"," RelationRecord(items=frozenset({'Banana', 'Peach Pear Flavored Sparkling Water'}), support=0.0013794785418683169, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Peach Pear Flavored Sparkling Water'}), items_add=frozenset({'Banana'}), confidence=0.20133481646273635, lift=1.4107091708458386)]),\n"," RelationRecord(items=frozenset({'Banana', 'Pineapple Chunks'}), support=0.0018520071031712763, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pineapple Chunks'}), items_add=frozenset({'Banana'}), confidence=0.22562674094707522, lift=1.580917390415721)]),\n"," RelationRecord(items=frozenset({'Banana', 'Pretzel Crisps Original Deli Style Pretzel Crackers'}), support=0.0014785571111737763, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pretzel Crisps Original Deli Style Pretzel Crackers'}), items_add=frozenset({'Banana'}), confidence=0.2576361221779549, lift=1.8052001471134935)]),\n"," RelationRecord(items=frozenset({'Pure Coconut Water', 'Banana'}), support=0.0013108856861953067, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Coconut Water'}), items_add=frozenset({'Banana'}), confidence=0.23593964334705075, lift=1.653177649467221)]),\n"," RelationRecord(items=frozenset({'Banana', 'Pure Irish Butter'}), support=0.0015547713952548986, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Irish Butter'}), items_add=frozenset({'Banana'}), confidence=0.13821138211382114, lift=0.9684170263682771)]),\n"," RelationRecord(items=frozenset({'Banana', 'Pure Sparkling Water'}), support=0.0016004999657035722, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Sparkling Water'}), items_add=frozenset({'Banana'}), confidence=0.18666666666666668, lift=1.3079326426715083)]),\n"," RelationRecord(items=frozenset({'Banana', 'Raisin Bran Cereal'}), support=0.0012651571157466332, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Raisin Bran Cereal'}), items_add=frozenset({'Banana'}), confidence=0.27666666666666667, lift=1.938543023959557)]),\n"," RelationRecord(items=frozenset({'Banana', 'Raspberries'}), support=0.0047481498982539306, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Raspberries'}), items_add=frozenset({'Banana'}), confidence=0.18999695028972247, lift=1.3312672140640924)]),\n"," RelationRecord(items=frozenset({'Banana', 'Red Onion'}), support=0.0027437142269204095, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Onion'}), items_add=frozenset({'Banana'}), confidence=0.24523160762942778, lift=1.7182844176786065)]),\n"," RelationRecord(items=frozenset({'Banana', 'Red Peppers'}), support=0.006386757005998064, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Banana'}), confidence=0.2884681583476764, lift=2.0212335036121045)]),\n"," RelationRecord(items=frozenset({'Banana', 'Red Potatoes'}), support=0.0011203499759925004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Potatoes'}), items_add=frozenset({'Banana'}), confidence=0.27999999999999997, lift=1.9618989640072622)]),\n"," RelationRecord(items=frozenset({'Banana', 'Red Raspberries'}), support=0.003345807071161277, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Raspberries'}), items_add=frozenset({'Banana'}), confidence=0.29403884795713325, lift=2.0602661113749594)]),\n"," RelationRecord(items=frozenset({'Banana', 'Red Vine Tomato'}), support=0.004527128474418675, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Vine Tomato'}), items_add=frozenset({'Banana'}), confidence=0.26589077887197854, lift=1.8630387271714957)]),\n"," RelationRecord(items=frozenset({'Banana', 'Roasted Red Pepper Hummus'}), support=0.001348992828235868, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roasted Red Pepper Hummus'}), items_add=frozenset({'Banana'}), confidence=0.22376738305941846, lift=1.567889275010319)]),\n"," RelationRecord(items=frozenset({'Banana', 'Roasted Turkey Breast'}), support=0.001684335678192807, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roasted Turkey Breast'}), items_add=frozenset({'Banana'}), confidence=0.23814655172413793, lift=1.6686409753910292)]),\n"," RelationRecord(items=frozenset({'Banana', 'Roma Tomato'}), support=0.004359457049440206, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roma Tomato'}), items_add=frozenset({'Banana'}), confidence=0.2928827444956477, lift=2.052165546434339)]),\n"," RelationRecord(items=frozenset({'Banana', 'Romaine Hearts'}), support=0.0010974856907681638, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Romaine Hearts'}), items_add=frozenset({'Banana'}), confidence=0.14574898785425103, lift=1.0212313867012934)]),\n"," RelationRecord(items=frozenset({'Banana', 'Romaine Lettuce'}), support=0.0013413713998277558, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Romaine Lettuce'}), items_add=frozenset({'Banana'}), confidence=0.2861788617886179, lift=2.005192901656668)]),\n"," RelationRecord(items=frozenset({'Banana', 'Russet Potato'}), support=0.002979978507571889, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Russet Potato'}), items_add=frozenset({'Banana'}), confidence=0.2757404795486601, lift=1.9320534327192214)]),\n"," RelationRecord(items=frozenset({'Banana', 'Salted Butter'}), support=0.0016004999657035722, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Salted Butter'}), items_add=frozenset({'Banana'}), confidence=0.2599009900990099, lift=1.8210695829275332)]),\n"," RelationRecord(items=frozenset({'Banana', 'Sea Salt Pita Chips'}), support=0.001105107119176276, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sea Salt Pita Chips'}), items_add=frozenset({'Banana'}), confidence=0.2050919377652051, lift=1.4370345008135637)]),\n"," RelationRecord(items=frozenset({'Seedless Red Grapes', 'Banana'}), support=0.008856099810226432, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Seedless Red Grapes'}), items_add=frozenset({'Banana'}), confidence=0.2862774082286277, lift=2.0058833950801027)]),\n"," RelationRecord(items=frozenset({'Banana', 'Shallot'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shallot'}), items_add=frozenset({'Banana'}), confidence=0.17866323907455015, lift=1.2518543701662206)]),\n"," RelationRecord(items=frozenset({'Banana', 'Sharp Cheddar Cheese'}), support=0.0021339999542714294, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sharp Cheddar Cheese'}), items_add=frozenset({'Banana'}), confidence=0.2218700475435816, lift=1.5545950586428388)]),\n"," RelationRecord(items=frozenset({'Banana', 'Shredded Mild Cheddar Cheese'}), support=0.0017148213918252559, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Mild Cheddar Cheese'}), items_add=frozenset({'Banana'}), confidence=0.21718146718146716, lift=1.5217431980889204)]),\n"," RelationRecord(items=frozenset({'Banana', 'Shredded Mozzarella'}), support=0.0017453071054577048, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Mozzarella'}), items_add=frozenset({'Banana'}), confidence=0.24258474576271186, lift=1.699738433556534)]),\n"," RelationRecord(items=frozenset({'Banana', 'Shredded Parmesan'}), support=0.0020349213849659704, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Parmesan'}), items_add=frozenset({'Banana'}), confidence=0.20166163141993956, lift=1.412999092009978)]),\n"," RelationRecord(items=frozenset({'Small Hass Avocado', 'Banana'}), support=0.006592535573017095, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Small Hass Avocado'}), items_add=frozenset({'Banana'}), confidence=0.27876248791492103, lift=1.953227986587038)]),\n"," RelationRecord(items=frozenset({'Banana', 'Sour Cream'}), support=0.001570014252071123, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sour Cream'}), items_add=frozenset({'Banana'}), confidence=0.20156555772994128, lift=1.4123259246068494)]),\n"," RelationRecord(items=frozenset({'Banana', 'Sourdough Bread'}), support=0.0013337499714196435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sourdough Bread'}), items_add=frozenset({'Banana'}), confidence=0.23712737127371275, lift=1.6614998001416519)]),\n"," RelationRecord(items=frozenset({'Banana', 'Spaghetti'}), support=0.001318507114603419, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Spaghetti'}), items_add=frozenset({'Banana'}), confidence=0.2703125, lift=1.8940207632436183)]),\n"," RelationRecord(items=frozenset({'Banana', 'Sparkling Lemon Water'}), support=0.002118757097455205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Lemon Water'}), items_add=frozenset({'Banana'}), confidence=0.19536191145467321, lift=1.3688583274621497)]),\n"," RelationRecord(items=frozenset({'Banana', 'Sparkling Natural Mineral Water'}), support=0.0022483213803931134, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Natural Mineral Water'}), items_add=frozenset({'Banana'}), confidence=0.16361619523017196, lift=1.1464230139888727)]),\n"," RelationRecord(items=frozenset({'Sparkling Water Berry', 'Banana'}), support=0.001044135691911378, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Water Berry'}), items_add=frozenset({'Banana'}), confidence=0.19187675070028012, lift=1.3444385657712834)]),\n"," RelationRecord(items=frozenset({'Banana', 'Sparkling Water Grapefruit'}), support=0.005068249891394645, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Water Grapefruit'}), items_add=frozenset({'Banana'}), confidence=0.1979755879726109, lift=1.387171789079264)]),\n"," RelationRecord(items=frozenset({'Banana', 'Spinach'}), support=0.0017605499622739293, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Spinach'}), items_add=frozenset({'Banana'}), confidence=0.26309794988610474, lift=1.843469983264227)]),\n"," RelationRecord(items=frozenset({'Banana', 'Strawberries'}), support=0.01484654253900266, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Banana'}), items_add=frozenset({'Strawberries'}), confidence=0.10402648723699667, lift=2.1018188118076835), OrderedStatistic(items_base=frozenset({'Strawberries'}), items_add=frozenset({'Banana'}), confidence=0.29996920234062213, lift=2.101818811807684)]),\n"," RelationRecord(items=frozenset({'Banana', 'Strawberry Preserves'}), support=0.0011889428316655107, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Strawberry Preserves'}), items_add=frozenset({'Banana'}), confidence=0.2508038585209003, lift=1.7573279650042084)]),\n"," RelationRecord(items=frozenset({'Banana', 'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale'}), support=0.0014252071123169905, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale'}), items_add=frozenset({'Banana'}), confidence=0.2480106100795756, lift=1.7377562820640302)]),\n"," RelationRecord(items=frozenset({'Banana', 'Sweet Potato Yam'}), support=0.0011736999748492862, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sweet Potato Yam'}), items_add=frozenset({'Banana'}), confidence=0.37837837837837834, lift=2.6512148162260303)]),\n"," RelationRecord(items=frozenset({'Banana', 'Total 0% Greek Yogurt'}), support=0.00220259280994444, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Greek Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.27629063097514345, lift=1.9359082238394527)]),\n"," RelationRecord(items=frozenset({'Banana', 'Total 0% Nonfat Greek Yogurt'}), support=0.00196632852929296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Nonfat Greek Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.2598187311178248, lift=1.8204932121776496)]),\n"," RelationRecord(items=frozenset({'Total 0% Nonfat Plain Greek Yogurt', 'Banana'}), support=0.001440449969133215, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Nonfat Plain Greek Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.2863636363636364, lift=2.0064875768256094)]),\n"," RelationRecord(items=frozenset({'Total 2% All Natural Greek Strained Yogurt with Honey', 'Banana'}), support=0.0017148213918252559, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% All Natural Greek Strained Yogurt with Honey'}), items_add=frozenset({'Banana'}), confidence=0.2777777777777778, lift=1.9463283373087923)]),\n"," RelationRecord(items=frozenset({'Banana', 'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt'}), support=0.0011127285475843883, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% All Natural Low Fat 2% Milkfat Greek Strained Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.27495291902071567, lift=1.9265351677768385)]),\n"," RelationRecord(items=frozenset({'Total 2% All Natural Plain Greek Yogurt', 'Banana'}), support=0.0011584571180330617, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% All Natural Plain Greek Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.2382445141065831, lift=1.669327376450425)]),\n"," RelationRecord(items=frozenset({'Banana', 'Total 2% Greek Strained Yogurt with Cherry 5.3 oz'}), support=0.0015014213963981129, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% Greek Strained Yogurt with Cherry 5.3 oz'}), items_add=frozenset({'Banana'}), confidence=0.3040123456790123, lift=2.1301482358324)]),\n"," RelationRecord(items=frozenset({'Banana', 'Total 2% Lowfat Greek Strained Yogurt With Blueberry'}), support=0.001470935682765664, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% Lowfat Greek Strained Yogurt With Blueberry'}), items_add=frozenset({'Banana'}), confidence=0.29829984544049454, lift=2.0901219919044025)]),\n"," RelationRecord(items=frozenset({'Banana', 'Total 2% Lowfat Greek Strained Yogurt with Peach'}), support=0.0014328285407251026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% Lowfat Greek Strained Yogurt with Peach'}), items_add=frozenset({'Banana'}), confidence=0.2919254658385093, lift=2.0454581035568173)]),\n"," RelationRecord(items=frozenset({'Banana', 'Total 2% Lowfat Plain Greek Yogurt'}), support=0.0013642356850520924, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% Lowfat Plain Greek Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.28503184713375795, lift=1.9971560200028433)]),\n"," RelationRecord(items=frozenset({'Banana', 'Total 2% with Strawberry Lowfat Greek Strained Yogurt'}), support=0.0022254570951687766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 2% with Strawberry Lowfat Greek Strained Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.3001027749229188, lift=2.1027547257749255)]),\n"," RelationRecord(items=frozenset({'Total Greek Strained Yogurt', 'Banana'}), support=0.0016081213941116844, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total Greek Strained Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.22187171398527866, lift=1.5546067350365496)]),\n"," RelationRecord(items=frozenset({'Uncured Genoa Salami', 'Banana'}), support=0.0028046856541853074, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Uncured Genoa Salami'}), items_add=frozenset({'Banana'}), confidence=0.2058165548098434, lift=1.442111734489199)]),\n"," RelationRecord(items=frozenset({'Banana', 'Uncured Hickory Smoked Sunday Bacon'}), support=0.001257535687338521, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Uncured Hickory Smoked Sunday Bacon'}), items_add=frozenset({'Banana'}), confidence=0.19760479041916165, lift=1.3845736914508053)]),\n"," RelationRecord(items=frozenset({'Banana', 'Unsalted Butter'}), support=0.0025303142314932665, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsalted Butter'}), items_add=frozenset({'Banana'}), confidence=0.23135888501742163, lift=1.6210812743912673)]),\n"," RelationRecord(items=frozenset({'Banana', 'Unsweetened Almondmilk'}), support=0.0033000785007126034, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Almondmilk'}), items_add=frozenset({'Banana'}), confidence=0.1996311664361457, lift=1.3987720664808416)]),\n"," RelationRecord(items=frozenset({'Banana', 'Unsweetened Original Almond Breeze Almond Milk'}), support=0.0033305642143450524, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Original Almond Breeze Almond Milk'}), items_add=frozenset({'Banana'}), confidence=0.29829351535836174, lift=2.0900776383987654)]),\n"," RelationRecord(items=frozenset({'Banana', 'Unsweetened Vanilla Almond Milk'}), support=0.0019739499577010725, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Vanilla Almond Milk'}), items_add=frozenset({'Banana'}), confidence=0.20753205128205132, lift=1.4541318443162805)]),\n"," RelationRecord(items=frozenset({'Vanilla Almond Breeze Almond Milk', 'Banana'}), support=0.00288089993826643, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Vanilla Almond Breeze Almond Milk'}), items_add=frozenset({'Banana'}), confidence=0.29600626468285046, lift=2.074051371503371)]),\n"," RelationRecord(items=frozenset({'Banana', 'Vanilla Skyr Nonfat Yogurt'}), support=0.0014633142543575518, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Vanilla Skyr Nonfat Yogurt'}), items_add=frozenset({'Banana'}), confidence=0.25363276089828274, lift=1.777149467302295)]),\n"," RelationRecord(items=frozenset({'Vine Ripe Tomatoes', 'Banana'}), support=0.0016614713929684701, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Vine Ripe Tomatoes'}), items_add=frozenset({'Banana'}), confidence=0.307909604519774, lift=2.1574554789829663)]),\n"," RelationRecord(items=frozenset({'Banana', 'Watermelon Chunks'}), support=0.0014023428270926537, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Watermelon Chunks'}), items_add=frozenset({'Banana'}), confidence=0.2154566744730679, lift=1.5096579515612925)]),\n"," RelationRecord(items=frozenset({'Banana', 'Whipped Cream Cheese'}), support=0.001935842815660511, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Whipped Cream Cheese'}), items_add=frozenset({'Banana'}), confidence=0.23562152133580708, lift=1.650948637880482)]),\n"," RelationRecord(items=frozenset({'Banana', 'White Onion'}), support=0.0014633142543575518, ordered_statistics=[OrderedStatistic(items_base=frozenset({'White Onion'}), items_add=frozenset({'Banana'}), confidence=0.21993127147766325, lift=1.541010477374384)]),\n"," RelationRecord(items=frozenset({'Banana', 'Whole Milk'}), support=0.0024998285178608175, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Whole Milk'}), items_add=frozenset({'Banana'}), confidence=0.2456928838951311, lift=1.7215164799207654)]),\n"," RelationRecord(items=frozenset({'Banana', 'Whole Wheat Bread'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Whole Wheat Bread'}), items_add=frozenset({'Banana'}), confidence=0.31526104417670686, lift=2.2089654141504607)]),\n"," RelationRecord(items=frozenset({'Banana', 'XL Emerald White Seedless Grapes'}), support=0.0015471499668467865, ordered_statistics=[OrderedStatistic(items_base=frozenset({'XL Emerald White Seedless Grapes'}), items_add=frozenset({'Banana'}), confidence=0.31968503937007875, lift=2.23996338410278)]),\n"," RelationRecord(items=frozenset({'Banana', 'Yellow Bell Pepper'}), support=0.0025989070871662765, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Banana'}), confidence=0.2924528301886792, lift=2.049153230600577)]),\n"," RelationRecord(items=frozenset({'Banana', 'Yellow Onions'}), support=0.008162549825088218, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Onions'}), items_add=frozenset({'Banana'}), confidence=0.284688995215311, lift=1.9947537313470969)]),\n"," RelationRecord(items=frozenset({'Banana', 'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry'}), support=0.0015014213963981129, ordered_statistics=[OrderedStatistic(items_base=frozenset({'YoKids Squeezers Organic Low-Fat Yogurt, Strawberry'}), items_add=frozenset({'Banana'}), confidence=0.2687585266030013, lift=1.883132410394809)]),\n"," RelationRecord(items=frozenset({'Bartlett Pears', 'Honeycrisp Apple'}), support=0.0011127285475843883, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Honeycrisp Apple'}), confidence=0.12096106048053026, lift=4.469495855981384)]),\n"," RelationRecord(items=frozenset({'Bartlett Pears', 'Large Lemon'}), support=0.0013261285430115311, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Large Lemon'}), confidence=0.14415907207953604, lift=2.3251343194202634)]),\n"," RelationRecord(items=frozenset({'Bartlett Pears', 'Organic Avocado'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13007456503728254, lift=2.3035434746898105)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Bartlett Pears'}), support=0.0010288928350951536, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.11184755592377799, lift=1.499939285077983)]),\n"," RelationRecord(items=frozenset({'Bartlett Pears', 'Organic Strawberries'}), support=0.0010212714066870413, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.11101905550952776, lift=1.337130462121317)]),\n"," RelationRecord(items=frozenset({'Bartlett Pears', 'Strawberries'}), support=0.001257535687338521, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bartlett Pears'}), items_add=frozenset({'Strawberries'}), confidence=0.1367025683512842, lift=2.762027608685502)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Berry Medley'}), support=0.0012499142589304088, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Berry Medley'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.24587706146926538, lift=3.2973511200246155)]),\n"," RelationRecord(items=frozenset({'Organic Blueberries', 'Blackberries'}), support=0.0013566142566439803, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Organic Blueberries'}), confidence=0.16527390900649955, lift=4.366778962310471)]),\n"," RelationRecord(items=frozenset({'Blackberries', 'Organic Strawberries'}), support=0.0011203499759925004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13649025069637882, lift=1.6439094275400374)]),\n"," RelationRecord(items=frozenset({'Blackberries', 'Raspberries'}), support=0.0022483213803931134, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Raspberries'}), confidence=0.2739090064995358, lift=10.96045344123135)]),\n"," RelationRecord(items=frozenset({'Blackberries', 'Strawberries'}), support=0.0021949713815363277, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberries'}), items_add=frozenset({'Strawberries'}), confidence=0.26740947075208915, lift=5.402914882647192)]),\n"," RelationRecord(items=frozenset({'Kiwi Sandia Sparkling Water', 'Blackberry Cucumber Sparkling Water'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blackberry Cucumber Sparkling Water'}), items_add=frozenset({'Kiwi Sandia Sparkling Water'}), confidence=0.2567567567567567, lift=72.44902644580063), OrderedStatistic(items_base=frozenset({'Kiwi Sandia Sparkling Water'}), items_add=frozenset({'Blackberry Cucumber Sparkling Water'}), confidence=0.2860215053763441, lift=72.44902644580063)]),\n"," RelationRecord(items=frozenset({'Blueberries', 'Raspberries'}), support=0.0020730285270065315, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blueberries'}), items_add=frozenset({'Raspberries'}), confidence=0.11708996986655186, lift=4.685348538036109)]),\n"," RelationRecord(items=frozenset({'Blueberries', 'Strawberries'}), support=0.0030333285064286747, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blueberries'}), items_add=frozenset({'Strawberries'}), confidence=0.17133017649591045, lift=3.461666327048339)]),\n"," RelationRecord(items=frozenset({'Strawberry Rhubarb Yoghurt', 'Blueberry Yoghurt'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Blueberry Yoghurt'}), items_add=frozenset({'Strawberry Rhubarb Yoghurt'}), confidence=0.3102766798418972, lift=80.29801358062227), OrderedStatistic(items_base=frozenset({'Strawberry Rhubarb Yoghurt'}), items_add=frozenset({'Blueberry Yoghurt'}), confidence=0.3096646942800789, lift=80.29801358062228)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Boneless Skinless Chicken Breasts'}), support=0.0024922070894527054, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Large Lemon'}), confidence=0.15660919540229887, lift=2.5259417233608152)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breasts', 'Limes'}), support=0.0018443856747631642, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Limes'}), confidence=0.11590038314176246, lift=2.5206652364739783)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breasts', 'Organic Avocado'}), support=0.002675121371247399, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Organic Avocado'}), confidence=0.16810344827586207, lift=2.9770124638719917)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Boneless Skinless Chicken Breasts'}), support=0.0028656570814502053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18007662835249041, lift=2.4149299192050195)]),\n"," RelationRecord(items=frozenset({'Boneless Skinless Chicken Breasts', 'Organic Strawberries'}), support=0.0020425428133740826, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Boneless Skinless Chicken Breasts'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.12835249042145594, lift=1.5458969997896834)]),\n"," RelationRecord(items=frozenset({'Broccoli Crown', 'Large Lemon'}), support=0.004008871342667043, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Large Lemon'}), confidence=0.17939972714870395, lift=2.8935290472592863)]),\n"," RelationRecord(items=frozenset({'Broccoli Crown', 'Limes'}), support=0.0023245356644742356, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Limes'}), confidence=0.10402455661664392, lift=2.2623832337333387)]),\n"," RelationRecord(items=frozenset({'Broccoli Crown', 'Organic Avocado'}), support=0.003620178493853318, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Organic Avocado'}), confidence=0.16200545702592087, lift=2.86902065203321)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Broccoli Crown'}), support=0.003947899915402145, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1766712141882674, lift=2.36926138005196)]),\n"," RelationRecord(items=frozenset({'Broccoli Crown', 'Organic Strawberries'}), support=0.0030561927916530115, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13676671214188266, lift=1.6472391714176868)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Broccoli Crown'}), support=0.0025989070871662765, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.11630286493860845, lift=3.325339421601629)]),\n"," RelationRecord(items=frozenset({'Broccoli Crown', 'Strawberries'}), support=0.00227118566561745, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Broccoli Crown'}), items_add=frozenset({'Strawberries'}), confidence=0.10163710777626192, lift=2.0535422350193335)]),\n"," RelationRecord(items=frozenset({'Brussels Sprouts', 'Large Lemon'}), support=0.0011279714044006128, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Brussels Sprouts'}), items_add=frozenset({'Large Lemon'}), confidence=0.12880765883376852, lift=2.0775321583183692)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Brussels Sprouts'}), support=0.0011279714044006128, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Brussels Sprouts'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.12880765883376852, lift=1.7273839030989302)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Green Onions'}), support=0.0014252071123169905, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Onions'}), items_add=frozenset({'Bunched Cilantro'}), confidence=0.12941176470588237, lift=8.843743872549021)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Jalapeno Peppers'}), support=0.0021035142406389804, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Jalapeno Peppers'}), confidence=0.14375, lift=9.93222419694576), OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Bunched Cilantro'}), confidence=0.14533965244865718, lift=9.93222419694576)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Large Lemon'}), support=0.003132407075734134, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Large Lemon'}), confidence=0.21406250000000002, lift=3.4526031422864167)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Limes'}), support=0.0042527570517266345, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Limes'}), confidence=0.290625, lift=6.320672240179016)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Organic Avocado'}), support=0.0023245356644742356, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Organic Avocado'}), confidence=0.15885416666666666, lift=2.813213166981599)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Organic Baby Spinach'}), support=0.0016614713929684701, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.11354166666666667, lift=1.5226582728604523)]),\n"," RelationRecord(items=frozenset({'Bunched Cilantro', 'Yellow Onions'}), support=0.0017910356759063785, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Bunched Cilantro'}), items_add=frozenset({'Yellow Onions'}), confidence=0.12239583333333334, lift=4.268855634192805)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Cantaloupe'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Large Lemon'}), confidence=0.1234567901234568, lift=1.991228269859698)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Cantaloupe'}), support=0.001318507114603419, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14238683127572016, lift=2.521586414476443)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Cantaloupe'}), support=0.0012803999725628577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1382716049382716, lift=1.8543007984817739)]),\n"," RelationRecord(items=frozenset({'Organic Cucumber', 'Cantaloupe'}), support=0.0011584571180330617, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Organic Cucumber'}), confidence=0.12510288065843622, lift=3.5583403139633125)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Cantaloupe'}), support=0.0010669999771357147, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.11522633744855966, lift=2.0730471013695415)]),\n"," RelationRecord(items=frozenset({'Organic Raspberries', 'Cantaloupe'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.1234567901234568, lift=2.92077929594458)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Cantaloupe'}), support=0.002515071374677042, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.2716049382716049, lift=3.271251362739031)]),\n"," RelationRecord(items=frozenset({'Seedless Red Grapes', 'Cantaloupe'}), support=0.0010365142635032657, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Seedless Red Grapes'}), confidence=0.11193415637860082, lift=3.6183219325646303)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Cantaloupe'}), support=0.0011203499759925004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cantaloupe'}), items_add=frozenset({'Strawberries'}), confidence=0.12098765432098765, lift=2.4445132639055234)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Large Lemon'}), support=0.0028656570814502053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Large Lemon'}), confidence=0.15058069683620343, lift=2.42870837752691)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Limes'}), support=0.002362642806514797, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Limes'}), confidence=0.12414897877452943, lift=2.7000602280834136)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Avocado'}), support=0.001958707100884848, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10292350820985183, lift=1.822714345891004)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Baby Spinach'}), support=0.003338185642753165, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.17541049259110933, lift=2.3523543869978396)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Carrots'}), support=0.002454099947412144, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Garlic'}), confidence=0.12895474569483378, lift=4.06926965557322)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Hass Avocado'}), support=0.0020806499554146436, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.1093311974369243, lift=1.9669871225149322)]),\n"," RelationRecord(items=frozenset({'Organic Small Bunch Celery', 'Carrots'}), support=0.002111135669047093, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Small Bunch Celery'}), confidence=0.11093311974369244, lift=5.549151242260824), OrderedStatistic(items_base=frozenset({'Organic Small Bunch Celery'}), items_add=frozenset({'Carrots'}), confidence=0.10560426991993901, lift=5.549151242260824)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Strawberries'}), support=0.002545557088309491, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13376051261513816, lift=1.6110320451367415)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Organic Yellow Onion'}), support=0.0024922070894527054, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Yellow Onion'}), confidence=0.13095714857829396, lift=4.005304547274911)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Carrots'}), support=0.002355021378106685, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.12374849819783741, lift=3.5382254739681955)]),\n"," RelationRecord(items=frozenset({'Carrots', 'Yellow Onions'}), support=0.002118757097455205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Carrots'}), items_add=frozenset({'Yellow Onions'}), confidence=0.11133360032038446, lift=3.883033058064148)]),\n"," RelationRecord(items=frozenset({'Clementines', 'Hass Avocados'}), support=0.001166078546441174, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines'}), items_add=frozenset({'Hass Avocados'}), confidence=0.11324944485566248, lift=6.528711076479182)]),\n"," RelationRecord(items=frozenset({'Clementines', 'Raspberries'}), support=0.0012041856884817351, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines'}), items_add=frozenset({'Raspberries'}), confidence=0.1169504071058475, lift=4.679763942040606)]),\n"," RelationRecord(items=frozenset({'Clementines', 'Strawberries'}), support=0.0014556928259494395, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines'}), items_add=frozenset({'Strawberries'}), confidence=0.14137675795706883, lift=2.856467975791353)]),\n"," RelationRecord(items=frozenset({'Clementines, Bag', 'Organic Strawberries'}), support=0.0016386071077441333, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines, Bag'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14546684709066307, lift=1.7520249256396925)]),\n"," RelationRecord(items=frozenset({'Clementines, Bag', 'Strawberries'}), support=0.001257535687338521, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Clementines, Bag'}), items_add=frozenset({'Strawberries'}), confidence=0.11163734776725305, lift=2.25559358841908)]),\n"," RelationRecord(items=frozenset({'Corn Tortillas', 'Limes'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Corn Tortillas'}), items_add=frozenset({'Limes'}), confidence=0.21674876847290642, lift=4.7139713513279595)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Crackers Cheddar Bunnies Snack Packs'}), support=0.0010212714066870413, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Crackers Cheddar Bunnies Snack Packs'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.30663615560640733, lift=3.6931726951497246)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Creamy Almond Butter'}), support=0.0012803999725628577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Creamy Almond Butter'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1976470588235294, lift=2.650559376653359)]),\n"," RelationRecord(items=frozenset({'Cucumber Kirby', 'Large Lemon'}), support=0.0032314856450395934, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cucumber Kirby'}), items_add=frozenset({'Large Lemon'}), confidence=0.17571487774554498, lift=2.8340962992151457)]),\n"," RelationRecord(items=frozenset({'Cucumber Kirby', 'Limes'}), support=0.002172107096311991, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cucumber Kirby'}), items_add=frozenset({'Limes'}), confidence=0.11811023622047244, lift=2.568726335861424)]),\n"," RelationRecord(items=frozenset({'Cucumber Kirby', 'Organic Avocado'}), support=0.003071435648469236, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cucumber Kirby'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1670120182345628, lift=2.957683884537556)]),\n"," RelationRecord(items=frozenset({'Cucumber Kirby', 'Organic Baby Spinach'}), support=0.0027818213689609706, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Cucumber Kirby'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15126398673849978, lift=2.0285360216651487)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'English Seedless Cucumber'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'English Seedless Cucumber'}), items_add=frozenset({'Large Lemon'}), confidence=0.18369987063389395, lift=2.9628858421638093)]),\n"," RelationRecord(items=frozenset({'Extra Virgin Olive Oil', 'Large Lemon'}), support=0.0019510856724767355, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Extra Virgin Olive Oil'}), items_add=frozenset({'Large Lemon'}), confidence=0.12379110251450677, lift=1.9966203773602849)]),\n"," RelationRecord(items=frozenset({'Extra Virgin Olive Oil', 'Organic Baby Spinach'}), support=0.001806278532722603, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Extra Virgin Olive Oil'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.11460348162475824, lift=1.5368978148510735)]),\n"," RelationRecord(items=frozenset({'Extra Virgin Olive Oil', 'Organic Strawberries'}), support=0.0016767142497846946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Extra Virgin Olive Oil'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.10638297872340426, lift=1.2812928451734118)]),\n"," RelationRecord(items=frozenset({'Ezekiel 4:9 Bread Organic Sprouted Whole Grain', 'Organic Baby Spinach'}), support=0.0010669999771357147, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ezekiel 4:9 Bread Organic Sprouted Whole Grain'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20057306590257878, lift=2.689798794359307)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Large Lemon'}), support=0.0020425428133740826, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Large Lemon'}), confidence=0.1849551414768806, lift=2.9831320415537834)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Limes'}), support=0.0013413713998277558, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Limes'}), confidence=0.12146307798481713, lift=2.6416457814204994)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Organic Avocado'}), support=0.001958707100884848, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Avocado'}), confidence=0.17736369910282956, lift=3.1410060191096187)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Feta Cheese Crumbles'}), support=0.0023169142360661235, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20979986197377504, lift=2.813535373029134)]),\n"," RelationRecord(items=frozenset({'Organic Cucumber', 'Feta Cheese Crumbles'}), support=0.0013032642577871945, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Cucumber'}), confidence=0.11801242236024846, lift=3.356664193684336)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Feta Cheese Crumbles'}), support=0.0011279714044006128, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Garlic'}), confidence=0.10213940648723259, lift=3.2230902803711645)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Organic Grape Tomatoes'}), support=0.0013870999702764292, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Grape Tomatoes'}), confidence=0.12560386473429952, lift=4.310844229119201)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Feta Cheese Crumbles'}), support=0.0013032642577871945, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.11801242236024846, lift=2.1231717983636145)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Feta Cheese Crumbles'}), support=0.0018901142452118376, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.17115251897860595, lift=5.881810074034549)]),\n"," RelationRecord(items=frozenset({'Feta Cheese Crumbles', 'Organic Strawberries'}), support=0.0016309856793360212, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Feta Cheese Crumbles'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.147688060731539, lift=1.7787775620088582)]),\n"," RelationRecord(items=frozenset({'Flat Parsley, Bunch', 'Large Lemon'}), support=0.0013261285430115311, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Flat Parsley, Bunch'}), items_add=frozenset({'Large Lemon'}), confidence=0.26443768996960487, lift=4.2651020114593585)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Fresh Cauliflower'}), support=0.00264463565761495, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Large Lemon'}), confidence=0.13089400226329687, lift=2.1111826850602236)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Limes'}), support=0.0022483213803931134, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Limes'}), confidence=0.11127876273104491, lift=2.420151695537489)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Organic Avocado'}), support=0.0025379356599013786, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12561297623538287, lift=2.2245313806003986)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Fresh Cauliflower'}), support=0.0037268784915668895, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18445869483213884, lift=2.473695920914769)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Fresh Cauliflower'}), support=0.0020806499554146436, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Cilantro'}), confidence=0.10298000754432289, lift=3.8320770873179417)]),\n"," RelationRecord(items=frozenset({'Organic Cucumber', 'Fresh Cauliflower'}), support=0.002027299956557858, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Cucumber'}), confidence=0.10033949453036589, lift=2.8539875867840405)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Fresh Cauliflower'}), support=0.002370264234922909, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Garlic'}), confidence=0.11731422104866089, lift=3.70194363385612)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Fresh Cauliflower'}), support=0.0028351713678177563, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.14032440588457187, lift=2.5245886427682422)]),\n"," RelationRecord(items=frozenset({'Organic Raspberries', 'Fresh Cauliflower'}), support=0.00227118566561745, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.11241041116559788, lift=2.6594406128068755)]),\n"," RelationRecord(items=frozenset({'Fresh Cauliflower', 'Organic Strawberries'}), support=0.0037878499188317874, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.18747642399094683, lift=2.2579946865639933)]),\n"," RelationRecord(items=frozenset({'Organic Yellow Onion', 'Fresh Cauliflower'}), support=0.002156864239495766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Yellow Onion'}), confidence=0.1067521689928329, lift=3.2649989140747344)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Fresh Cauliflower'}), support=0.002675121371247399, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Cauliflower'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.13240286684270086, lift=3.7856717706611325)]),\n"," RelationRecord(items=frozenset({'Garlic', 'Fresh Ginger Root'}), support=0.0011508356896249496, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Garlic'}), confidence=0.11760124610591902, lift=8.036636406412255)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Large Lemon'}), support=0.002156864239495766, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Large Lemon'}), confidence=0.220404984423676, lift=3.554900749999521)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Limes'}), support=0.0016004999657035722, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Limes'}), confidence=0.1635514018691589, lift=3.5570057828361463)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Organic Avocado'}), support=0.0011813214032573985, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12071651090342679, lift=2.137817880837863)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Organic Baby Spinach'}), support=0.0012651571157466332, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1292834890965732, lift=1.733765057325457)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Fresh Ginger Root'}), support=0.0010517571203194902, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Organic Cilantro'}), confidence=0.10747663551401869, lift=3.999404954384254)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Organic Strawberries'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.102803738317757, lift=1.2381839270180446)]),\n"," RelationRecord(items=frozenset({'Fresh Ginger Root', 'Yellow Onions'}), support=0.0011584571180330617, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Fresh Ginger Root'}), items_add=frozenset({'Yellow Onions'}), confidence=0.11838006230529595, lift=4.128795745618175)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Organic Baby Spinach'}), support=0.0018748713883956132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.23098591549295774, lift=3.0976523902203077)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Organic Hass Avocado'}), support=0.001440449969133215, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.17746478873239435, lift=3.1927845145740754)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Organic Raspberries'}), support=0.0016157428225197967, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.19906103286384974, lift=4.709448081686415)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Organic Strawberries'}), support=0.0013413713998277558, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1652582159624413, lift=1.9903951953567065)]),\n"," RelationRecord(items=frozenset({'Frozen Organic Wild Blueberries', 'Organic Whole Strawberries'}), support=0.0019205999588442866, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Frozen Organic Wild Blueberries'}), items_add=frozenset({'Organic Whole Strawberries'}), confidence=0.23661971830985912, lift=25.594918895068677), OrderedStatistic(items_base=frozenset({'Organic Whole Strawberries'}), items_add=frozenset({'Frozen Organic Wild Blueberries'}), confidence=0.20774938169826876, lift=25.59491889506868)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Gala Apples'}), support=0.0010212714066870413, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Gala Apples'}), items_add=frozenset({'Strawberries'}), confidence=0.1397288842544317, lift=2.823173263649481)]),\n"," RelationRecord(items=frozenset({'Garlic', 'Large Lemon'}), support=0.003376292784793726, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Large Lemon'}), confidence=0.23072916666666668, lift=3.721418958717476)]),\n"," RelationRecord(items=frozenset({'Garlic', 'Limes'}), support=0.0023778856633310213, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Limes'}), confidence=0.1625, lift=3.534139317089342)]),\n"," RelationRecord(items=frozenset({'Garlic', 'Organic Baby Spinach'}), support=0.0017224428202333682, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.11770833333333335, lift=1.5785356406718452)]),\n"," RelationRecord(items=frozenset({'Garlic', 'Organic Red Onion'}), support=0.001653849964560358, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.11302083333333335, lift=3.884062472716955)]),\n"," RelationRecord(items=frozenset({'Garlic', 'Organic Strawberries'}), support=0.0015852571088873476, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.10833333333333334, lift=1.3047832140015911)]),\n"," RelationRecord(items=frozenset({'Garlic', 'Yellow Onions'}), support=0.002179728524720103, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Garlic'}), items_add=frozenset({'Yellow Onions'}), confidence=0.14895833333333333, lift=5.195288133528265)]),\n"," RelationRecord(items=frozenset({'Globe Eggplant', 'Organic Baby Spinach'}), support=0.0011279714044006128, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Globe Eggplant'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.22322775263951736, lift=2.9936110175877384)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Globe Eggplant'}), support=0.0015776356804792354, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Globe Eggplant'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.31221719457013575, lift=8.92693525438068)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Goat Cheese Crumbles'}), support=0.0011203499759925004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Goat Cheese Crumbles'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2588028169014084, lift=3.4706928457498867)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Granny Smith Apples'}), support=0.0014556928259494395, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Granny Smith Apples'}), items_add=frozenset({'Large Lemon'}), confidence=0.13850616388687453, lift=2.233958851559056)]),\n"," RelationRecord(items=frozenset({'Granny Smith Apples', 'Strawberries'}), support=0.0011127285475843883, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Granny Smith Apples'}), items_add=frozenset({'Strawberries'}), confidence=0.10587382160986221, lift=2.139143557069358)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Grape White/Green Seedless'}), support=0.0013870999702764292, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Large Lemon'}), confidence=0.1191879502292076, lift=1.9223763689765334)]),\n"," RelationRecord(items=frozenset({'Grape White/Green Seedless', 'Organic Avocado'}), support=0.0015242856816224497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13097576948264572, lift=2.3195032714331845)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Grape White/Green Seedless'}), support=0.0016767142497846946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14407334643091027, lift=1.9321054488811635)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Grape White/Green Seedless'}), support=0.0012727785441547456, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.10936476751800918, lift=1.9675910847758764)]),\n"," RelationRecord(items=frozenset({'Organic Raspberries', 'Grape White/Green Seedless'}), support=0.0012041856884817351, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.1034708578912901, lift=2.4479458696462824)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Grape White/Green Seedless'}), support=0.0024922070894527054, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.21414538310412576, lift=2.5791997036634142)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Grape White/Green Seedless'}), support=0.0012422928305222964, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grape White/Green Seedless'}), items_add=frozenset({'Strawberries'}), confidence=0.10674525212835624, lift=2.1567505060839998)]),\n"," RelationRecord(items=frozenset({'Grapefruit Sparkling Water', 'Lemon Sparkling Water'}), support=0.0010974856907681638, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grapefruit Sparkling Water'}), items_add=frozenset({'Lemon Sparkling Water'}), confidence=0.2285714285714286, lift=65.19701863354038), OrderedStatistic(items_base=frozenset({'Lemon Sparkling Water'}), items_add=frozenset({'Grapefruit Sparkling Water'}), confidence=0.3130434782608696, lift=65.19701863354038)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Grated Parmesan'}), support=0.0018367642463550519, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Large Lemon'}), confidence=0.1422668240850059, lift=2.2946143480478844)]),\n"," RelationRecord(items=frozenset({'Grated Parmesan', 'Organic Avocado'}), support=0.0014861785395818884, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Avocado'}), confidence=0.115112160566706, lift=2.0385681570788137)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Grated Parmesan'}), support=0.00227118566561745, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.17591499409681224, lift=2.359120038884775)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Grated Parmesan'}), support=0.001348992828235868, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Garlic'}), confidence=0.10448642266824085, lift=3.2971522443187142)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Grated Parmesan'}), support=0.0015014213963981129, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.11629279811097992, lift=2.0922338882961147)]),\n"," RelationRecord(items=frozenset({'Grated Parmesan', 'Organic Strawberries'}), support=0.002431235662187807, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1883116883116883, lift=2.268054737625143)]),\n"," RelationRecord(items=frozenset({'Organic Whole Milk', 'Grated Parmesan'}), support=0.0012956428293790822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Whole Milk'}), confidence=0.10035419126328217, lift=2.682838851154032)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Grated Parmesan'}), support=0.0013337499714196435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Grated Parmesan'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.10330578512396693, lift=2.953726031887247)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Green Beans'}), support=0.0017986571043144906, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Large Lemon'}), confidence=0.20344827586206896, lift=3.281406862641205)]),\n"," RelationRecord(items=frozenset({'Limes', 'Green Beans'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Limes'}), confidence=0.11982758620689656, lift=2.6060762072966503)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Green Beans'}), support=0.001440449969133215, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Organic Avocado'}), confidence=0.16293103448275864, lift=2.8854120803682384)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Green Beans'}), support=0.0012041856884817351, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.13620689655172413, lift=1.8266118856965627)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Green Beans'}), support=0.0011203499759925004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Beans'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1267241379310345, lift=1.5262848736729486)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Large Lemon'}), support=0.0025074499462689297, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Large Lemon'}), confidence=0.13050376834589447, lift=2.1048886221138865)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Limes'}), support=0.002629392800798726, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Limes'}), confidence=0.13685045616818722, lift=2.9762989397267825)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Orange Bell Pepper'}), support=0.001928221387252399, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Orange Bell Pepper'}), confidence=0.10035700119000397, lift=7.0642391465339225), OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Green Bell Pepper'}), confidence=0.1357296137339056, lift=7.0642391465339225)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Avocado'}), support=0.0024693428042283686, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Avocado'}), confidence=0.128520428401428, lift=2.2760206357299184)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Baby Spinach'}), support=0.0029571142223475525, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15390717969059897, lift=2.0639827412125715)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Garlic'}), support=0.0019434642440686234, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Garlic'}), confidence=0.10115033716779055, lift=3.1918794106418065)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Hass Avocado'}), support=0.002111135669047093, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.10987703292344309, lift=1.976807296428362)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Red Bell Pepper'}), support=0.00196632852929296, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Red Bell Pepper'}), confidence=0.10234034113447044, lift=5.611355545304109), OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Green Bell Pepper'}), confidence=0.10781445883827831, lift=5.611355545304109)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Red Onion'}), support=0.002179728524720103, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.11344704482348274, lift=3.8987096134741606)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Strawberries'}), support=0.00227118566561745, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.11820706069020229, lift=1.4237038944465532)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Organic Yellow Onion'}), support=0.0024693428042283686, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Organic Yellow Onion'}), confidence=0.128520428401428, lift=3.9307778298654927)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Red Peppers'}), support=0.003681149921118216, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Red Peppers'}), confidence=0.1915906386354621, lift=8.653499519697194), OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Green Bell Pepper'}), confidence=0.16626506024096385, lift=8.653499519697194)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Yellow Bell Pepper'}), support=0.0012422928305222964, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Green Bell Pepper'}), confidence=0.13979416809605488, lift=7.275784609962422)]),\n"," RelationRecord(items=frozenset({'Green Bell Pepper', 'Yellow Onions'}), support=0.002111135669047093, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Bell Pepper'}), items_add=frozenset({'Yellow Onions'}), confidence=0.10987703292344309, lift=3.83223168869007)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Green Onions'}), support=0.0017453071054577048, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Onions'}), items_add=frozenset({'Large Lemon'}), confidence=0.15847750865051902, lift=2.556075652430971)]),\n"," RelationRecord(items=frozenset({'Green Onions', 'Limes'}), support=0.001570014252071123, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Green Onions'}), items_add=frozenset({'Limes'}), confidence=0.14256055363321798, lift=3.100485277914951)]),\n"," RelationRecord(items=frozenset({'Ground Turkey Breast', 'Organic Avocado'}), support=0.0012956428293790822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Organic Avocado'}), confidence=0.17745302713987474, lift=3.142587965716807)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Ground Turkey Breast'}), support=0.0014785571111737763, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2025052192066806, lift=2.7157100681612176)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Ground Turkey Breast'}), support=0.0011508356896249496, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Ground Turkey Breast'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.15762004175365346, lift=1.8983998584959716)]),\n"," RelationRecord(items=frozenset({'Half & Half', 'Organic Strawberries'}), support=0.0023778856633310213, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Half & Half'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1287128712871287, lift=1.550237481982088)]),\n"," RelationRecord(items=frozenset({'Hass Avocado', 'Large Lemon'}), support=0.0017148213918252559, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocado'}), items_add=frozenset({'Large Lemon'}), confidence=0.13778322106552357, lift=2.22229854367379)]),\n"," RelationRecord(items=frozenset({'Hass Avocado', 'Organic Baby Spinach'}), support=0.0013261285430115311, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocado'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.10655235762400489, lift=1.428927666750619)]),\n"," RelationRecord(items=frozenset({'Hass Avocado', 'Organic Strawberries'}), support=0.0015166642532143373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocado'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.12186160440906307, lift=1.467719777208441)]),\n"," RelationRecord(items=frozenset({'Hass Avocados', 'Organic Baby Spinach'}), support=0.0024693428042283686, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14235500878734622, lift=1.909061564593102)]),\n"," RelationRecord(items=frozenset({'Organic Blueberries', 'Hass Avocados'}), support=0.0017986571043144906, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Organic Blueberries'}), confidence=0.10369068541300526, lift=2.7396599158991157)]),\n"," RelationRecord(items=frozenset({'Hass Avocados', 'Organic Strawberries'}), support=0.002461721375820256, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14191564147627414, lift=1.7092536627924042)]),\n"," RelationRecord(items=frozenset({'Hass Avocados', 'Packaged Grape Tomatoes'}), support=0.0011889428316655107, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Packaged Grape Tomatoes'}), items_add=frozenset({'Hass Avocados'}), confidence=0.25573770491803277, lift=14.74300901783399)]),\n"," RelationRecord(items=frozenset({'Hass Avocados', 'Raspberries'}), support=0.0017681713906820416, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Raspberries'}), confidence=0.10193321616871705, lift=4.0788518939558385)]),\n"," RelationRecord(items=frozenset({'Hass Avocados', 'Strawberries'}), support=0.002118757097455205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Hass Avocados'}), items_add=frozenset({'Strawberries'}), confidence=0.12214411247803163, lift=2.467879096724677)]),\n"," RelationRecord(items=frozenset({'Honey Nut Cheerios', 'Organic Strawberries'}), support=0.0012118071168898475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honey Nut Cheerios'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13054187192118227, lift=1.5722662449886546)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Honeycrisp Apple'}), support=0.004130814197196839, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Large Lemon'}), confidence=0.1526330611095466, lift=2.4618108561920713)]),\n"," RelationRecord(items=frozenset({'Organic Avocado', 'Honeycrisp Apple'}), support=0.004290864193767196, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1585468882005069, lift=2.807771447415348)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Honeycrisp Apple'}), support=0.0037802284904236753, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.139678963672205, lift=1.8731742788702315)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Honeycrisp Apple'}), support=0.0028123070825934195, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.10391439031258799, lift=1.8695328724152418)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Honeycrisp Apple'}), support=0.004359457049440206, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.16108138552520415, lift=1.9400888115822021)]),\n"," RelationRecord(items=frozenset({'Strawberries', 'Honeycrisp Apple'}), support=0.002896142795082654, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Honeycrisp Apple'}), items_add=frozenset({'Strawberries'}), confidence=0.10701210926499577, lift=2.162142261248973)]),\n"," RelationRecord(items=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt', 'Non Fat Acai & Mixed Berries Yogurt'}), support=0.00128802140097097, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), items_add=frozenset({'Non Fat Acai & Mixed Berries Yogurt'}), confidence=0.2397163120567376, lift=74.88794663964877), OrderedStatistic(items_base=frozenset({'Non Fat Acai & Mixed Berries Yogurt'}), items_add=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), confidence=0.4023809523809524, lift=74.88794663964876)]),\n"," RelationRecord(items=frozenset({'Non Fat Raspberry Yogurt', 'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), support=0.0016767142497846946, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), items_add=frozenset({'Non Fat Raspberry Yogurt'}), confidence=0.31205673758865243, lift=71.0844661150512), OrderedStatistic(items_base=frozenset({'Non Fat Raspberry Yogurt'}), items_add=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), confidence=0.3819444444444444, lift=71.08446611505121)]),\n"," RelationRecord(items=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt', 'Nonfat Icelandic Style Strawberry Yogurt'}), support=0.001166078546441174, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), items_add=frozenset({'Nonfat Icelandic Style Strawberry Yogurt'}), confidence=0.2170212765957447, lift=78.66062066533443), OrderedStatistic(items_base=frozenset({'Nonfat Icelandic Style Strawberry Yogurt'}), items_add=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), confidence=0.4226519337016575, lift=78.66062066533443)]),\n"," RelationRecord(items=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt', 'Vanilla Skyr Nonfat Yogurt'}), support=0.0014556928259494395, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), items_add=frozenset({'Vanilla Skyr Nonfat Yogurt'}), confidence=0.27092198581560284, lift=46.9582600222978), OrderedStatistic(items_base=frozenset({'Vanilla Skyr Nonfat Yogurt'}), items_add=frozenset({'Icelandic Style Skyr Blueberry Non-fat Yogurt'}), confidence=0.2523117569352708, lift=46.95826002229779)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Italian Sparkling Mineral Water'}), support=0.0010898642623600515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Italian Sparkling Mineral Water'}), items_add=frozenset({'Large Lemon'}), confidence=0.12632508833922262, lift=2.037490905458028)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Italian Sparkling Mineral Water'}), support=0.0011584571180330617, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Italian Sparkling Mineral Water'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.13427561837455831, lift=1.8007123478441762)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Italian Sparkling Mineral Water'}), support=0.0011813214032573985, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Italian Sparkling Mineral Water'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13692579505300354, lift=1.649155190298287)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Jalapeno Peppers'}), support=0.002941871365531328, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Large Lemon'}), confidence=0.20326487625065823, lift=3.2784488196647343)]),\n"," RelationRecord(items=frozenset({'Jalapeno Peppers', 'Limes'}), support=0.0041689213392374, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Limes'}), confidence=0.2880463401790416, lift=6.264590129048877)]),\n"," RelationRecord(items=frozenset({'Jalapeno Peppers', 'Organic Avocado'}), support=0.0022559428088012256, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Avocado'}), confidence=0.15587151132174829, lift=2.7603921081138174)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Jalapeno Peppers'}), support=0.001958707100884848, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.13533438651922064, lift=1.814911030335284)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Jalapeno Peppers'}), support=0.002423614233779695, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Cilantro'}), confidence=0.1674565560821485, lift=6.231369049059166)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Jalapeno Peppers'}), support=0.00159287853729546, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Garlic'}), confidence=0.110057925223802, lift=3.4729654426863488)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Jalapeno Peppers'}), support=0.00159287853729546, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.110057925223802, lift=1.9800617456039817)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Jalapeno Peppers'}), support=0.001928221387252399, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.1332280147446024, lift=4.57850041556431)]),\n"," RelationRecord(items=frozenset({'Jalapeno Peppers', 'Organic Strawberries'}), support=0.0014937999679900007, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.10321221695629279, lift=1.2431037061334882)]),\n"," RelationRecord(items=frozenset({'Yellow Onions', 'Jalapeno Peppers'}), support=0.001684335678192807, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Jalapeno Peppers'}), items_add=frozenset({'Yellow Onions'}), confidence=0.11637704054765666, lift=4.058935436793589)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Large Alfresco Eggs'}), support=0.0017453071054577048, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Large Lemon'}), confidence=0.12065331928345627, lift=1.9460112316979732)]),\n"," RelationRecord(items=frozenset({'Large Alfresco Eggs', 'Organic Avocado'}), support=0.0017148213918252559, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11854583772391991, lift=2.0993765450017285)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Large Alfresco Eggs'}), support=0.0022330785235768888, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15437302423603794, lift=2.070229981294593)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Large Alfresco Eggs'}), support=0.001935842815660511, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.13382507903055849, lift=2.4076586856602975)]),\n"," RelationRecord(items=frozenset({'Large Alfresco Eggs', 'Organic Strawberries'}), support=0.002606528515574389, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Alfresco Eggs'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.18018967334035826, lift=2.170231948716272)]),\n"," RelationRecord(items=frozenset({'Large Grapefruit', 'Organic Strawberries'}), support=0.0010212714066870413, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Grapefruit'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.15857988165680473, lift=1.9099603168999164)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Limes'}), support=0.012156178310939037, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Limes'}), confidence=0.19606637984019668, lift=4.264159395400691), OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Large Lemon'}), confidence=0.26437924747223607, lift=4.264159395400691)]),\n"," RelationRecord(items=frozenset({'Medium Navel Orange', 'Large Lemon'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Medium Navel Orange'}), items_add=frozenset({'Large Lemon'}), confidence=0.178391959798995, lift=2.877274819086212)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Large Lemon'}), support=0.003658285635893879, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Large Lemon'}), confidence=0.18271792919680244, lift=2.947048158817855)]),\n"," RelationRecord(items=frozenset({'No Salt Added Black Beans', 'Large Lemon'}), support=0.0015166642532143373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Large Lemon'}), confidence=0.15919999999999998, lift=2.5677286785494773)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Large Lemon'}), support=0.002240699951985001, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Large Lemon'}), confidence=0.157725321888412, lift=2.543943670517105)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Avocado'}), support=0.010281306922543422, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Organic Avocado'}), confidence=0.16582667486170866, lift=2.936692155747055), OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Large Lemon'}), confidence=0.18207585369145635, lift=2.936692155747055)]),\n"," RelationRecord(items=frozenset({'Organic Baby Arugula', 'Large Lemon'}), support=0.003810714204056124, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Large Lemon'}), confidence=0.17105713308244952, lift=2.758971773154901)]),\n"," RelationRecord(items=frozenset({'Organic Baby Broccoli', 'Large Lemon'}), support=0.0012118071168898475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Large Lemon'}), confidence=0.11769059955588453, lift=1.8982256763525571)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Large Lemon'}), support=0.0031781356461828077, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Large Lemon'}), confidence=0.11592994161801502, lift=1.8698281142911042)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Large Lemon'}), support=0.009435328369242964, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1521819299323909, lift=2.0408461615391533), OrderedStatistic(items_base=frozenset({'Organic Baby Spinach'}), items_add=frozenset({'Large Lemon'}), confidence=0.12653311529026984, lift=2.0408461615391538)]),\n"," RelationRecord(items=frozenset({'Organic Basil', 'Large Lemon'}), support=0.0015166642532143373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Basil'}), items_add=frozenset({'Large Lemon'}), confidence=0.16284779050736495, lift=2.626563705553884)]),\n"," RelationRecord(items=frozenset({'Organic Black Beans', 'Large Lemon'}), support=0.0012956428293790822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Black Beans'}), items_add=frozenset({'Large Lemon'}), confidence=0.10786802030456853, lift=1.7397977966984797)]),\n"," RelationRecord(items=frozenset({'Organic Blackberries', 'Large Lemon'}), support=0.0023169142360661235, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blackberries'}), items_add=frozenset({'Large Lemon'}), confidence=0.1069293000351741, lift=1.7246572253614207)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli', 'Large Lemon'}), support=0.0012803999725628577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli'}), items_add=frozenset({'Large Lemon'}), confidence=0.10163339382940108, lift=1.6392398243345896)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Carrot Bunch'}), support=0.0016386071077441333, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Carrot Bunch'}), items_add=frozenset({'Large Lemon'}), confidence=0.12342135476463834, lift=1.990656734765019)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Celery Hearts'}), support=0.001044135691911378, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Celery Hearts'}), items_add=frozenset({'Large Lemon'}), confidence=0.1290018832391714, lift=2.080664793844922)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Large Lemon'}), support=0.00386406420291291, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Large Lemon'}), confidence=0.1437889960294952, lift=2.3191653816882645)]),\n"," RelationRecord(items=frozenset({'Organic Coconut Milk', 'Large Lemon'}), support=0.0010288928350951536, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Large Lemon'}), confidence=0.1291866028708134, lift=2.083644127360363)]),\n"," RelationRecord(items=frozenset({'Organic Cucumber', 'Large Lemon'}), support=0.005106357033435207, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Large Lemon'}), confidence=0.14524170821591156, lift=2.3425961024341166)]),\n"," RelationRecord(items=frozenset({\"Organic D'Anjou Pears\", 'Large Lemon'}), support=0.0015395285384386741, ordered_statistics=[OrderedStatistic(items_base=frozenset({\"Organic D'Anjou Pears\"}), items_add=frozenset({'Large Lemon'}), confidence=0.10670892762810354, lift=1.7211028500498877)]),\n"," RelationRecord(items=frozenset({'Organic Dill', 'Large Lemon'}), support=0.0010365142635032657, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Dill'}), items_add=frozenset({'Large Lemon'}), confidence=0.21553090332805072, lift=3.476286944655219)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Extra Firm Tofu'}), support=0.0012956428293790822, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Large Lemon'}), confidence=0.14333895446880268, lift=2.3119066843143368)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Fuji Apple'}), support=0.002819928511001532, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apple'}), items_add=frozenset({'Large Lemon'}), confidence=0.11360147374884864, lift=1.8322723748140972)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Gala Apples'}), support=0.002423614233779695, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Gala Apples'}), items_add=frozenset({'Large Lemon'}), confidence=0.11320754716981132, lift=1.8259187531166285)]),\n"," RelationRecord(items=frozenset({'Organic Garbanzo Beans', 'Large Lemon'}), support=0.001440449969133215, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garbanzo Beans'}), items_add=frozenset({'Large Lemon'}), confidence=0.1656441717791411, lift=2.6716663964313856)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Large Lemon'}), support=0.005944714158327554, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Large Lemon'}), confidence=0.18759018759018758, lift=3.0256325658907093)]),\n"," RelationRecord(items=frozenset({'Organic Garnet Sweet Potato (Yam)', 'Large Lemon'}), support=0.0029571142223475525, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Large Lemon'}), confidence=0.15109034267912774, lift=2.436928429328294)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Large Lemon'}), support=0.0024693428042283686, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Large Lemon'}), confidence=0.16143497757847536, lift=2.603776517897255)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Grade A Free Range Large Brown Eggs'}), support=0.0017071999634171435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Free Range Large Brown Eggs'}), items_add=frozenset({'Large Lemon'}), confidence=0.12676853423882284, lift=2.0446432217506705)]),\n"," RelationRecord(items=frozenset({'Organic Granny Smith Apple', 'Large Lemon'}), support=0.0022940499508417866, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Large Lemon'}), confidence=0.12879760376551133, lift=2.0773699806353996)]),\n"," RelationRecord(items=frozenset({'Organic Grape Tomatoes', 'Large Lemon'}), support=0.0043975641914807675, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grape Tomatoes'}), items_add=frozenset({'Large Lemon'}), confidence=0.1509285901124771, lift=2.4343195304324534)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Large Lemon'}), support=0.005586507023146278, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Hass Avocado'}), items_add=frozenset({'Large Lemon'}), confidence=0.10050733580145346, lift=1.6210776918467003)]),\n"," RelationRecord(items=frozenset({'Organic Italian Parsley Bunch', 'Large Lemon'}), support=0.0035668284949965322, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Italian Parsley Bunch'}), items_add=frozenset({'Large Lemon'}), confidence=0.195, lift=3.1451450522433926)]),\n"," RelationRecord(items=frozenset({'Organic Kiwi', 'Large Lemon'}), support=0.0016157428225197967, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Kiwi'}), items_add=frozenset({'Large Lemon'}), confidence=0.1127659574468085, lift=1.8187963750016345)]),\n"," RelationRecord(items=frozenset({'Organic Lacinato (Dinosaur) Kale', 'Large Lemon'}), support=0.002179728524720103, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Large Lemon'}), confidence=0.1624077228847246, lift=2.6194658773179875)]),\n"," RelationRecord(items=frozenset({'Organic Navel Orange', 'Large Lemon'}), support=0.0018977356736199498, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Large Lemon'}), confidence=0.12575757575757573, lift=2.02833752397981)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Peeled Whole Baby Carrots'}), support=0.0020120570997416336, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Peeled Whole Baby Carrots'}), items_add=frozenset({'Large Lemon'}), confidence=0.1073170731707317, lift=1.7309115984829178)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Large Lemon'}), support=0.002301671379249899, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Large Lemon'}), confidence=0.12620142081069788, lift=2.0354962781992447)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Large Lemon'}), support=0.005068249891394645, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Large Lemon'}), confidence=0.17417496071241487, lift=2.809259055945328)]),\n"," RelationRecord(items=frozenset({'Organic Red Radish, Bunch', 'Large Lemon'}), support=0.001135592832808725, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Radish, Bunch'}), items_add=frozenset({'Large Lemon'}), confidence=0.14313160422670507, lift=2.308562342837338)]),\n"," RelationRecord(items=frozenset({'Organic Roma Tomato', 'Large Lemon'}), support=0.0011813214032573985, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roma Tomato'}), items_add=frozenset({'Large Lemon'}), confidence=0.12694512694512697, lift=2.0474914765019254)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Romaine'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine'}), items_add=frozenset({'Large Lemon'}), confidence=0.1232638888888889, lift=1.9881169756880421)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Romaine Lettuce'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine Lettuce'}), items_add=frozenset({'Large Lemon'}), confidence=0.12045060658578856, lift=1.942741688938504)]),\n"," RelationRecord(items=frozenset({'Organic Small Bunch Celery', 'Large Lemon'}), support=0.0029266285087151036, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Small Bunch Celery'}), items_add=frozenset({'Large Lemon'}), confidence=0.1463972550514678, lift=2.3612338583955794)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Strawberries'}), support=0.007750992691050156, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Large Lemon'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.12501536570374921, lift=1.5057041599617431)]),\n"," RelationRecord(items=frozenset({'Organic Thyme', 'Large Lemon'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Thyme'}), items_add=frozenset({'Large Lemon'}), confidence=0.19999999999999998, lift=3.2257897971727103)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Organic Tomato Cluster'}), support=0.002217835666760664, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Cluster'}), items_add=frozenset({'Large Lemon'}), confidence=0.11465721040189124, lift=1.8493002974335275)]),\n"," RelationRecord(items=frozenset({'Organic Whole Milk', 'Large Lemon'}), support=0.0037954713472398995, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Milk'}), items_add=frozenset({'Large Lemon'}), confidence=0.10146699266503667, lift=1.6365559484433676)]),\n"," RelationRecord(items=frozenset({'Organic Whole Strawberries', 'Large Lemon'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Strawberries'}), items_add=frozenset({'Large Lemon'}), confidence=0.10882110469909316, lift=1.75517004627699)]),\n"," RelationRecord(items=frozenset({'Organic Yellow Onion', 'Large Lemon'}), support=0.0041079499119725015, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Onion'}), items_add=frozenset({'Large Lemon'}), confidence=0.1256410256410256, lift=2.0264576930956766)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Large Lemon'}), support=0.005609371308370615, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Large Lemon'}), confidence=0.1603835258226193, lift=2.5868177061659563)]),\n"," RelationRecord(items=frozenset({'Original Hummus', 'Large Lemon'}), support=0.0025607999451257154, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Hummus'}), items_add=frozenset({'Large Lemon'}), confidence=0.11756473058082575, lift=1.8961955420749312)]),\n"," RelationRecord(items=frozenset({'Pure Sparkling Water', 'Large Lemon'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Sparkling Water'}), items_add=frozenset({'Large Lemon'}), confidence=0.11733333333333333, lift=1.8924633476746566)]),\n"," RelationRecord(items=frozenset({'Red Onion', 'Large Lemon'}), support=0.001935842815660511, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Onion'}), items_add=frozenset({'Large Lemon'}), confidence=0.17302452316076294, lift=2.790703707363312)]),\n"," RelationRecord(items=frozenset({'Red Peppers', 'Large Lemon'}), support=0.0033915356416099507, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Large Lemon'}), confidence=0.153184165232358, lift=2.4706995864747956)]),\n"," RelationRecord(items=frozenset({'Red Raspberries', 'Large Lemon'}), support=0.0011813214032573985, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Raspberries'}), items_add=frozenset({'Large Lemon'}), confidence=0.10381781647689216, lift=1.6744722657795381)]),\n"," RelationRecord(items=frozenset({'Red Vine Tomato', 'Large Lemon'}), support=0.0026217713723906133, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Vine Tomato'}), items_add=frozenset({'Large Lemon'}), confidence=0.1539838854073411, lift=2.4835982323800634)]),\n"," RelationRecord(items=frozenset({'Roma Tomato', 'Large Lemon'}), support=0.0020120570997416336, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roma Tomato'}), items_add=frozenset({'Large Lemon'}), confidence=0.13517665130568357, lift=2.180257312989236)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Russet Potato'}), support=0.0014556928259494395, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Russet Potato'}), items_add=frozenset({'Large Lemon'}), confidence=0.13469675599435826, lift=2.172517105994315)]),\n"," RelationRecord(items=frozenset({'Seedless Red Grapes', 'Large Lemon'}), support=0.003612557065445206, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Seedless Red Grapes'}), items_add=frozenset({'Large Lemon'}), confidence=0.11677753141167775, lift=1.883498846834029)]),\n"," RelationRecord(items=frozenset({'Shallot', 'Large Lemon'}), support=0.001684335678192807, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shallot'}), items_add=frozenset({'Large Lemon'}), confidence=0.2840616966580977, lift=4.581616614236305)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Sharp Cheddar Cheese'}), support=0.001196564260073623, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sharp Cheddar Cheese'}), items_add=frozenset({'Large Lemon'}), confidence=0.12440570522979398, lift=2.006533273201726)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Shredded Parmesan'}), support=0.0014175856839088782, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Parmesan'}), items_add=frozenset({'Large Lemon'}), confidence=0.1404833836858006, lift=2.265849328829774)]),\n"," RelationRecord(items=frozenset({'Small Hass Avocado', 'Large Lemon'}), support=0.0032086213598152566, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Small Hass Avocado'}), items_add=frozenset({'Large Lemon'}), confidence=0.13567515307766678, lift=2.188297622638916)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Strawberries'}), support=0.005113978461843319, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Strawberries'}), items_add=frozenset({'Large Lemon'}), confidence=0.10332614721281183, lift=1.6665421573012695)]),\n"," RelationRecord(items=frozenset({'Large Lemon', 'Total 0% Greek Yogurt'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Greek Yogurt'}), items_add=frozenset({'Large Lemon'}), confidence=0.127151051625239, lift=2.0508128251623825)]),\n"," RelationRecord(items=frozenset({'Total Greek Strained Yogurt', 'Large Lemon'}), support=0.0010517571203194902, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total Greek Strained Yogurt'}), items_add=frozenset({'Large Lemon'}), confidence=0.1451104100946372, lift=2.340478401734143)]),\n"," RelationRecord(items=frozenset({'Unsalted Butter', 'Large Lemon'}), support=0.0017148213918252559, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsalted Butter'}), items_add=frozenset({'Large Lemon'}), confidence=0.15679442508710803, lift=2.52892928349777)]),\n"," RelationRecord(items=frozenset({'Unsweetened Almondmilk', 'Large Lemon'}), support=0.001691957106600919, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Almondmilk'}), items_add=frozenset({'Large Lemon'}), confidence=0.10235131396957124, lift=1.6508191216513182)]),\n"," RelationRecord(items=frozenset({'Unsweetened Original Almond Breeze Almond Milk', 'Large Lemon'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Original Almond Breeze Almond Milk'}), items_add=frozenset({'Large Lemon'}), confidence=0.10238907849829351, lift=1.6514282238085547)]),\n"," RelationRecord(items=frozenset({'Yellow Bell Pepper', 'Large Lemon'}), support=0.0015242856816224497, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Large Lemon'}), confidence=0.17152658662092624, lift=2.766543565328225)]),\n"," RelationRecord(items=frozenset({'Yellow Onions', 'Large Lemon'}), support=0.00569320702085985, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Onions'}), items_add=frozenset({'Large Lemon'}), confidence=0.19856459330143542, lift=3.2026381957575953)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Lightly Salted Baked Snap Pea Crisps'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lightly Salted Baked Snap Pea Crisps'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1432896064581231, lift=1.7258019068995663)]),\n"," RelationRecord(items=frozenset({'Lime Sparkling Water', 'Organic Strawberries'}), support=0.0015090428248062252, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lime Sparkling Water'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.10071210579857579, lift=1.2129919854713906)]),\n"," RelationRecord(items=frozenset({'Lime Sparkling Water', 'Pure Sparkling Water'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Pure Sparkling Water'}), items_add=frozenset({'Lime Sparkling Water'}), confidence=0.1182222222222222, lift=7.890040465694584)]),\n"," RelationRecord(items=frozenset({'Sparkling Lemon Water', 'Lime Sparkling Water'}), support=0.0024998285178608175, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lime Sparkling Water'}), items_add=frozenset({'Sparkling Lemon Water'}), confidence=0.16683621566632756, lift=15.383283922251), OrderedStatistic(items_base=frozenset({'Sparkling Lemon Water'}), items_add=frozenset({'Lime Sparkling Water'}), confidence=0.23049894588896697, lift=15.383283922251)]),\n"," RelationRecord(items=frozenset({'Sparkling Water Berry', 'Lime Sparkling Water'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Water Berry'}), items_add=frozenset({'Lime Sparkling Water'}), confidence=0.18627450980392155, lift=12.43178644804819)]),\n"," RelationRecord(items=frozenset({'Lime Sparkling Water', 'Sparkling Water Grapefruit'}), support=0.0038488213460966853, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Lime Sparkling Water'}), items_add=frozenset({'Sparkling Water Grapefruit'}), confidence=0.2568667344862665, lift=10.033708652934964), OrderedStatistic(items_base=frozenset({'Sparkling Water Grapefruit'}), items_add=frozenset({'Lime Sparkling Water'}), confidence=0.15034236379874963, lift=10.033708652934964)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Limes'}), support=0.002179728524720103, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Limes'}), confidence=0.10886943281309479, lift=2.367752264209076)]),\n"," RelationRecord(items=frozenset({'No Salt Added Black Beans', 'Limes'}), support=0.0015776356804792354, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Limes'}), confidence=0.1656, lift=3.6015598209845847)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Limes'}), support=0.0016081213941116844, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Limes'}), confidence=0.11319742489270386, lift=2.461879814809677)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Avocado'}), support=0.007903421259212402, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Avocado'}), confidence=0.17188794961047574, lift=3.0440337401054003), OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Limes'}), confidence=0.13996490754487786, lift=3.0440337401054003)]),\n"," RelationRecord(items=frozenset({'Organic Baby Arugula', 'Limes'}), support=0.0024083713769634703, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Limes'}), confidence=0.1081081081081081, lift=2.3511945560677536)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Limes'}), support=0.007156521275217401, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15564395822973645, lift=2.087273928389768)]),\n"," RelationRecord(items=frozenset({'Organic Basil', 'Limes'}), support=0.0012651571157466332, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Basil'}), items_add=frozenset({'Limes'}), confidence=0.13584288052373159, lift=2.9543856308036296)]),\n"," RelationRecord(items=frozenset({'Organic Black Beans', 'Limes'}), support=0.0017148213918252559, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Black Beans'}), items_add=frozenset({'Limes'}), confidence=0.14276649746192893, lift=3.1049642574974694)]),\n"," RelationRecord(items=frozenset({'Organic Carrot Bunch', 'Limes'}), support=0.0014785571111737763, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Carrot Bunch'}), items_add=frozenset({'Limes'}), confidence=0.1113662456946039, lift=2.4220543231134237)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Limes'}), support=0.007674778406969034, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Cilantro'}), confidence=0.16691529918780043, lift=6.2112278761009945), OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Limes'}), confidence=0.2855927396483267, lift=6.2112278761009945)]),\n"," RelationRecord(items=frozenset({'Organic Coconut Milk', 'Limes'}), support=0.0013870999702764292, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Limes'}), confidence=0.17416267942583732, lift=3.7877856795598692)]),\n"," RelationRecord(items=frozenset({'Organic Cucumber', 'Limes'}), support=0.003894549916545359, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Limes'}), confidence=0.11077389984825495, lift=2.409171660067907)]),\n"," RelationRecord(items=frozenset({'Organic Extra Firm Tofu', 'Limes'}), support=0.001105107119176276, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Limes'}), confidence=0.12225969645868465, lift=2.658971077846437)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Limes'}), support=0.004984414178905411, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Garlic'}), confidence=0.10840377921432125, lift=3.420767548564665), OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Limes'}), confidence=0.1572871572871573, lift=3.420767548564665)]),\n"," RelationRecord(items=frozenset({'Organic Garnet Sweet Potato (Yam)', 'Limes'}), support=0.0023245356644742356, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Limes'}), confidence=0.11876947040498441, lift=2.583063723250058)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Limes'}), support=0.002423614233779695, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Limes'}), confidence=0.15844544095665172, lift=3.4459585384520666)]),\n"," RelationRecord(items=frozenset({'Organic Granny Smith Apple', 'Limes'}), support=0.0017834142474982661, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Limes'}), confidence=0.10012836970474968, lift=2.1776468192591585)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Limes'}), support=0.005990442728776227, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.1302834410740925, lift=2.3439407678445914), OrderedStatistic(items_base=frozenset({'Organic Hass Avocado'}), items_add=frozenset({'Limes'}), confidence=0.10777457836281366, lift=2.3439407678445914)]),\n"," RelationRecord(items=frozenset({'Organic Italian Parsley Bunch', 'Limes'}), support=0.0024769642326364807, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Italian Parsley Bunch'}), items_add=frozenset({'Limes'}), confidence=0.13541666666666666, lift=2.9451160975744517)]),\n"," RelationRecord(items=frozenset({'Limes', 'Organic Jalapeno Pepper'}), support=0.0017757928190901538, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Jalapeno Pepper'}), items_add=frozenset({'Limes'}), confidence=0.2741176470588235, lift=5.961661255252972)]),\n"," RelationRecord(items=frozenset({'Organic Lacinato (Dinosaur) Kale', 'Limes'}), support=0.0017300642486414804, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Limes'}), confidence=0.12890403180011356, lift=2.803475734868407)]),\n"," RelationRecord(items=frozenset({'Organic Lemon', 'Limes'}), support=0.00355920706658842, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lemon'}), items_add=frozenset({'Limes'}), confidence=0.13323823109843083, lift=2.8977382834732324)]),\n"," RelationRecord(items=frozenset({'Organic Mint', 'Limes'}), support=0.001135592832808725, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Mint'}), items_add=frozenset({'Limes'}), confidence=0.2008086253369272, lift=4.3672963570086)]),\n"," RelationRecord(items=frozenset({'Organic Navel Orange', 'Limes'}), support=0.0016462285361522457, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Limes'}), confidence=0.10909090909090909, lift=2.3725690520320057)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Limes'}), support=0.0020730285270065315, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Limes'}), confidence=0.11366485582950271, lift=2.472045759743614)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Limes'}), support=0.005030142749354084, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.10939830929885629, lift=3.759571179883089), OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Limes'}), confidence=0.17286537454164483, lift=3.759571179883089)]),\n"," RelationRecord(items=frozenset({'Organic Red Radish, Bunch', 'Limes'}), support=0.001227049973706072, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Radish, Bunch'}), items_add=frozenset({'Limes'}), confidence=0.1546589817483189, lift=3.3636085423860727)]),\n"," RelationRecord(items=frozenset({'Organic Roma Tomato', 'Limes'}), support=0.001257535687338521, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roma Tomato'}), items_add=frozenset({'Limes'}), confidence=0.13513513513513514, lift=2.9389931950846924)]),\n"," RelationRecord(items=frozenset({'Organic Small Bunch Celery', 'Limes'}), support=0.002217835666760664, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Small Bunch Celery'}), items_add=frozenset({'Limes'}), confidence=0.11094166984369043, lift=2.4128204141423466)]),\n"," RelationRecord(items=frozenset({'Organic Sour Cream', 'Limes'}), support=0.0010517571203194902, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sour Cream'}), items_add=frozenset({'Limes'}), confidence=0.13180515759312322, lift=2.8665710132000837)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Limes'}), support=0.006226707009427707, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Limes'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.13542184651085695, lift=1.63104140433661)]),\n"," RelationRecord(items=frozenset({'Organic Tomato Cluster', 'Limes'}), support=0.0020120570997416336, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Tomato Cluster'}), items_add=frozenset({'Limes'}), confidence=0.10401891252955082, lift=2.2622604830250017)]),\n"," RelationRecord(items=frozenset({'Organic White Onions', 'Limes'}), support=0.001074621405543827, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic White Onions'}), items_add=frozenset({'Limes'}), confidence=0.16588235294117648, lift=3.6077005879427855)]),\n"," RelationRecord(items=frozenset({'Organic Yellow Onion', 'Limes'}), support=0.004100328483564389, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Onion'}), items_add=frozenset({'Limes'}), confidence=0.1254079254079254, lift=2.727440491438502)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Limes'}), support=0.0037649856336074506, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Limes'}), confidence=0.10764872521246459, lift=2.3412036443564177)]),\n"," RelationRecord(items=frozenset({'Red Onion', 'Limes'}), support=0.0015471499668467865, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Onion'}), items_add=frozenset({'Limes'}), confidence=0.138283378746594, lift=3.0074629275587355)]),\n"," RelationRecord(items=frozenset({'Red Peppers', 'Limes'}), support=0.003094299933693573, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Limes'}), confidence=0.13975903614457832, lift=3.039556335735783)]),\n"," RelationRecord(items=frozenset({'Red Vine Tomato', 'Limes'}), support=0.002217835666760664, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Vine Tomato'}), items_add=frozenset({'Limes'}), confidence=0.13025962399283794, lift=2.8329578989683863)]),\n"," RelationRecord(items=frozenset({'Roma Tomato', 'Limes'}), support=0.002149242811087654, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roma Tomato'}), items_add=frozenset({'Limes'}), confidence=0.1443932411674347, lift=3.1403435737341194)]),\n"," RelationRecord(items=frozenset({'Shallot', 'Limes'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shallot'}), items_add=frozenset({'Limes'}), confidence=0.16966580976863754, lift=3.689985286579341)]),\n"," RelationRecord(items=frozenset({'Sharp Cheddar Cheese', 'Limes'}), support=0.0010212714066870413, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sharp Cheddar Cheese'}), items_add=frozenset({'Limes'}), confidence=0.10618066561014264, lift=2.3092754772155155)]),\n"," RelationRecord(items=frozenset({'Small Hass Avocado', 'Limes'}), support=0.0027132285132879606, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Small Hass Avocado'}), items_add=frozenset({'Limes'}), confidence=0.1147276828875282, lift=2.495160706777671)]),\n"," RelationRecord(items=frozenset({'Unsalted Butter', 'Limes'}), support=0.0011127285475843883, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsalted Butter'}), items_add=frozenset({'Limes'}), confidence=0.10174216027874565, lift=2.2127444236721265)]),\n"," RelationRecord(items=frozenset({'Yellow Bell Pepper', 'Limes'}), support=0.001227049973706072, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Limes'}), confidence=0.13807890222984562, lift=3.003015859883278)]),\n"," RelationRecord(items=frozenset({'Yellow Onions', 'Limes'}), support=0.0037802284904236753, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Onions'}), items_add=frozenset({'Limes'}), confidence=0.1318447634237108, lift=2.8674323825727948)]),\n"," RelationRecord(items=frozenset({'Mango Chunks', 'Organic Baby Spinach'}), support=0.0012651571157466332, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Mango Chunks'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2225201072386059, lift=2.9841210906245137)]),\n"," RelationRecord(items=frozenset({'Mango Chunks', 'Pineapple Chunks'}), support=0.0012118071168898475, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Mango Chunks'}), items_add=frozenset({'Pineapple Chunks'}), confidence=0.2131367292225201, lift=25.966069734965313), OrderedStatistic(items_base=frozenset({'Pineapple Chunks'}), items_add=frozenset({'Mango Chunks'}), confidence=0.1476323119777159, lift=25.966069734965316)]),\n"," RelationRecord(items=frozenset({'Marinara Sauce', 'Organic Strawberries'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Marinara Sauce'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1843501326259947, lift=2.2203411558402917)]),\n"," RelationRecord(items=frozenset({'Medium Navel Orange', 'Organic Strawberries'}), support=0.001166078546441174, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Medium Navel Orange'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.19221105527638194, lift=2.3150193089552777)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Organic Avocado'}), support=0.0031476499325503587, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Avocado'}), confidence=0.15721355157974878, lift=2.784158845893813)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Michigan Organic Kale'}), support=0.004054599913115716, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20251237152645604, lift=2.7158059848338887)]),\n"," RelationRecord(items=frozenset({'Organic Cucumber', 'Michigan Organic Kale'}), support=0.0023473999496985724, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Cucumber'}), confidence=0.11724400456794823, lift=3.3348078463810795)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Michigan Organic Kale'}), support=0.002118757097455205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Garlic'}), confidence=0.10582413399314809, lift=3.339364790069016)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Michigan Organic Kale'}), support=0.002637014229206838, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.1317091739626951, lift=2.3695912527726946)]),\n"," RelationRecord(items=frozenset({'Michigan Organic Kale', 'Organic Strawberries'}), support=0.0028427927962258685, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14198705748001522, lift=1.710113808049873)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Michigan Organic Kale'}), support=0.002179728524720103, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Michigan Organic Kale'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.10886943281309479, lift=3.1128022248797897)]),\n"," RelationRecord(items=frozenset({'No Salt Added Black Beans', 'Organic Avocado'}), support=0.0020425428133740826, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Organic Avocado'}), confidence=0.21439999999999998, lift=3.796896963152922)]),\n"," RelationRecord(items=frozenset({'No Salt Added Black Beans', 'Organic Baby Spinach'}), support=0.0021949713815363277, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2304, lift=3.089794930498773)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'No Salt Added Black Beans'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Organic Cilantro'}), confidence=0.1112, lift=4.137958252977879)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'No Salt Added Black Beans'}), support=0.0011279714044006128, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Organic Red Onion'}), confidence=0.11839999999999999, lift=4.068922367731797)]),\n"," RelationRecord(items=frozenset({'No Salt Added Black Beans', 'Organic Strawberries'}), support=0.0010898642623600515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.11439999999999999, lift=1.37785107398568)]),\n"," RelationRecord(items=frozenset({'No Salt Added Black Beans', 'Yellow Onions'}), support=0.0011432142612168373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'No Salt Added Black Beans'}), items_add=frozenset({'Yellow Onions'}), confidence=0.12, lift=4.1852950558213715)]),\n"," RelationRecord(items=frozenset({'Non Fat Raspberry Yogurt', 'Vanilla Skyr Nonfat Yogurt'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Non Fat Raspberry Yogurt'}), items_add=frozenset({'Vanilla Skyr Nonfat Yogurt'}), confidence=0.24131944444444445, lift=41.8273223066197), OrderedStatistic(items_base=frozenset({'Vanilla Skyr Nonfat Yogurt'}), items_add=frozenset({'Non Fat Raspberry Yogurt'}), confidence=0.18361955085865259, lift=41.8273223066197)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Organic Avocado'}), support=0.002118757097455205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14914163090128757, lift=2.641209913473754)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Organic Baby Spinach'}), support=0.0020654070985984194, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14538626609442062, lift=1.9497124476679102)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Organic Strawberries'}), support=0.0017300642486414804, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.12178111587982833, lift=1.4667503610681472)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Organic Zucchini'}), support=0.0015547713952548986, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.10944206008583691, lift=3.1291748227941985)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Red Peppers'}), support=0.0025607999451257154, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Red Peppers'}), confidence=0.18025751072961374, lift=8.141620559491184), OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Orange Bell Pepper'}), confidence=0.11566265060240964, lift=8.141620559491184)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Strawberries'}), support=0.0017071999634171435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Strawberries'}), confidence=0.12017167381974249, lift=2.428026663106651)]),\n"," RelationRecord(items=frozenset({'Orange Bell Pepper', 'Yellow Bell Pepper'}), support=0.0030180856496124504, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Orange Bell Pepper'}), items_add=frozenset({'Yellow Bell Pepper'}), confidence=0.2124463519313305, lift=23.906409425864442), OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Orange Bell Pepper'}), confidence=0.33962264150943394, lift=23.906409425864442)]),\n"," RelationRecord(items=frozenset({'Organic American Cheese Singles', 'Organic Strawberries'}), support=0.0011889428316655107, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic American Cheese Singles'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.22413793103448276, lift=2.699551477244671)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Organic AppleApple'}), support=0.0014023428270926537, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic AppleApple'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.282642089093702, lift=3.4041844931058876)]),\n"," RelationRecord(items=frozenset({'Organic Baby Arugula', 'Organic Avocado'}), support=0.0032924570723044913, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1477933629832364, lift=2.61733288752429)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Organic Avocado'}), support=0.0029342499371232157, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1070336391437309, lift=1.8955023293845037)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Avocado'}), support=0.010685242628173372, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18922931569712512, lift=2.5376726577375397), OrderedStatistic(items_base=frozenset({'Organic Baby Spinach'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14329517579721993, lift=2.5376726577375397)]),\n"," RelationRecord(items=frozenset({'Organic Black Beans', 'Organic Avocado'}), support=0.0017910356759063785, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Black Beans'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14911167512690357, lift=2.6406794144588868)]),\n"," RelationRecord(items=frozenset({'Organic Blackberries', 'Organic Avocado'}), support=0.0022330785235768888, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blackberries'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10306014773126979, lift=1.8251341508533105)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli', 'Organic Avocado'}), support=0.0014785571111737763, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11736237144585603, lift=2.0784180584477423)]),\n"," RelationRecord(items=frozenset({'Organic Celery Hearts', 'Organic Avocado'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Celery Hearts'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13370998116760832, lift=2.3679245402916345)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Organic Avocado'}), support=0.004024114199483267, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14974475326148612, lift=2.6518908531092364)]),\n"," RelationRecord(items=frozenset({'Organic Coconut Milk', 'Organic Avocado'}), support=0.0011508356896249496, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1444976076555024, lift=2.558967013479662)]),\n"," RelationRecord(items=frozenset({'Organic Cucumber', 'Organic Avocado'}), support=0.004176542767645512, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11879471060047693, lift=2.1037839361827477)]),\n"," RelationRecord(items=frozenset({\"Organic D'Anjou Pears\", 'Organic Avocado'}), support=0.001562392823663011, ordered_statistics=[OrderedStatistic(items_base=frozenset({\"Organic D'Anjou Pears\"}), items_add=frozenset({'Organic Avocado'}), confidence=0.10829371368198626, lift=1.917817502834355)]),\n"," RelationRecord(items=frozenset({'Organic Extra Firm Tofu', 'Organic Avocado'}), support=0.0013261285430115311, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14671163575042157, lift=2.5981761391789804)]),\n"," RelationRecord(items=frozenset({'Organic Fuji Apple', 'Organic Avocado'}), support=0.002819928511001532, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apple'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11360147374884864, lift=2.011814788650652)]),\n"," RelationRecord(items=frozenset({'Organic Gala Apples', 'Organic Avocado'}), support=0.0025684213735338276, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Gala Apples'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11997152011391954, lift=2.1246245353795747)]),\n"," RelationRecord(items=frozenset({'Organic Garbanzo Beans', 'Organic Avocado'}), support=0.0012422928305222964, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garbanzo Beans'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14285714285714285, lift=2.529915353913194)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Organic Avocado'}), support=0.0043289713358077575, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13660413660413662, lift=2.4191783182200246)]),\n"," RelationRecord(items=frozenset({'Organic Garnet Sweet Potato (Yam)', 'Organic Avocado'}), support=0.0030485713632448994, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1557632398753894, lift=2.758474684952081)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Organic Avocado'}), support=0.0016386071077441333, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10712506228201296, lift=1.8971213789932029)]),\n"," RelationRecord(items=frozenset({'Organic Grade A Free Range Large Brown Eggs', 'Organic Avocado'}), support=0.001531907110030562, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Free Range Large Brown Eggs'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11375212224108659, lift=2.0144826841855488)]),\n"," RelationRecord(items=frozenset({'Organic Granny Smith Apple', 'Organic Avocado'}), support=0.0019205999588442866, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10783055198973043, lift=1.909615183698278)]),\n"," RelationRecord(items=frozenset({'Organic Grape Tomatoes', 'Organic Avocado'}), support=0.005213057031148778, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grape Tomatoes'}), items_add=frozenset({'Organic Avocado'}), confidence=0.178917080826576, lift=3.168515489023379)]),\n"," RelationRecord(items=frozenset({'Organic Kiwi', 'Organic Avocado'}), support=0.0017757928190901538, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Kiwi'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12393617021276594, lift=2.1948361394853295)]),\n"," RelationRecord(items=frozenset({'Organic Lacinato (Dinosaur) Kale', 'Organic Avocado'}), support=0.0017071999634171435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12720045428733673, lift=2.2526446762838663)]),\n"," RelationRecord(items=frozenset({'Organic Large Brown Eggs', 'Organic Avocado'}), support=0.0010898642623600515, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Brown Eggs'}), items_add=frozenset({'Organic Avocado'}), confidence=0.23101777059773826, lift=4.091187834034099)]),\n"," RelationRecord(items=frozenset({'Organic Navel Orange', 'Organic Avocado'}), support=0.001562392823663011, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10353535353535354, lift=1.8335497640734515)]),\n"," RelationRecord(items=frozenset({'Organic Peeled Whole Baby Carrots', 'Organic Avocado'}), support=0.0026827427996555116, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Peeled Whole Baby Carrots'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14308943089430895, lift=2.5340290374154923)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Organic Avocado'}), support=0.0023245356644742356, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1274550773088174, lift=2.257153899124392)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Organic Avocado'}), support=0.004046978484707604, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13907805133577789, lift=2.462989882266984)]),\n"," RelationRecord(items=frozenset({'Organic Reduced Fat Milk', 'Organic Avocado'}), support=0.0013566142566439803, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat Milk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14759535655058045, lift=2.613826310925241)]),\n"," RelationRecord(items=frozenset({'Organic Roma Tomato', 'Organic Avocado'}), support=0.0011584571180330617, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Roma Tomato'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12448812448812449, lift=2.204610922656543)]),\n"," RelationRecord(items=frozenset({'Organic Romaine', 'Organic Avocado'}), support=0.001470935682765664, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1675347222222222, lift=2.966940662445074)]),\n"," RelationRecord(items=frozenset({'Organic Romaine Lettuce', 'Organic Avocado'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Romaine Lettuce'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1143847487001733, lift=2.025686123930495)]),\n"," RelationRecord(items=frozenset({'Organic Sour Cream', 'Organic Avocado'}), support=0.0010517571203194902, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Sour Cream'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13180515759312322, lift=2.334191243438535)]),\n"," RelationRecord(items=frozenset({'Organic Spring Mix', 'Organic Avocado'}), support=0.0011279714044006128, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Spring Mix'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10866372980910427, lift=1.9243702692026945)]),\n"," RelationRecord(items=frozenset({'Organic Strawberries', 'Organic Avocado'}), support=0.008292114108026126, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Avocado'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14684842758806857, lift=1.7686648921794463)]),\n"," RelationRecord(items=frozenset({'Organic Unsweetened Almond Milk', 'Organic Avocado'}), support=0.0016614713929684701, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Unsweetened Almond Milk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10018382352941177, lift=1.7741961535255215)]),\n"," RelationRecord(items=frozenset({'Organic Whole Milk', 'Organic Avocado'}), support=0.0038183356324642363, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Milk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10207823960880195, lift=1.8077451398071664)]),\n"," RelationRecord(items=frozenset({'Organic Whole Strawberries', 'Organic Avocado'}), support=0.001074621405543827, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole Strawberries'}), items_add=frozenset({'Organic Avocado'}), confidence=0.11624072547403133, lift=2.0585543728873232)]),\n"," RelationRecord(items=frozenset({'Organic Whole String Cheese', 'Organic Avocado'}), support=0.0018367642463550519, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Whole String Cheese'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12092323130958353, lift=2.1414787767443846)]),\n"," RelationRecord(items=frozenset({'Organic Yellow Onion', 'Organic Avocado'}), support=0.0034525070688748486, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Yellow Onion'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10559440559440558, lift=1.870014356004368)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Organic Avocado'}), support=0.004549992759643013, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Zucchini'}), items_add=frozenset({'Organic Avocado'}), confidence=0.13009370233166268, lift=2.303882384834003)]),\n"," RelationRecord(items=frozenset({'Original Hummus', 'Organic Avocado'}), support=0.0026522570860230622, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Hummus'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12176347095871237, lift=2.1563589230694684)]),\n"," RelationRecord(items=frozenset({'Red Onion', 'Organic Avocado'}), support=0.0014175856839088782, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Onion'}), items_add=frozenset({'Organic Avocado'}), confidence=0.12670299727520434, lift=2.243835007353528)]),\n"," RelationRecord(items=frozenset({'Red Peppers', 'Organic Avocado'}), support=0.003582071351812757, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Peppers'}), items_add=frozenset({'Organic Avocado'}), confidence=0.16179001721170397, lift=2.8652053405763893)]),\n"," RelationRecord(items=frozenset({'Red Vine Tomato', 'Organic Avocado'}), support=0.002850414224633981, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Red Vine Tomato'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1674127126230976, lift=2.964779944738023)]),\n"," RelationRecord(items=frozenset({'Roma Tomato', 'Organic Avocado'}), support=0.001935842815660511, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Roma Tomato'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1300563236047107, lift=2.3032204297274244)]),\n"," RelationRecord(items=frozenset({'Seedless Red Grapes', 'Organic Avocado'}), support=0.0034982356393235222, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Seedless Red Grapes'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1130820399113082, lift=2.002615923164103)]),\n"," RelationRecord(items=frozenset({'Sharp Cheddar Cheese', 'Organic Avocado'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sharp Cheddar Cheese'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10538827258320127, lift=1.866363862514409)]),\n"," RelationRecord(items=frozenset({'Shredded Mozzarella', 'Organic Avocado'}), support=0.001013649978278929, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Mozzarella'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14088983050847456, lift=2.495075417895322)]),\n"," RelationRecord(items=frozenset({'Shredded Parmesan', 'Organic Avocado'}), support=0.0012803999725628577, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Shredded Parmesan'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1268882175226586, lift=2.247115148188759)]),\n"," RelationRecord(items=frozenset({'Sparkling Water Grapefruit', 'Organic Avocado'}), support=0.0025989070871662765, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Sparkling Water Grapefruit'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10151830902054182, lift=1.7978291008606118)]),\n"," RelationRecord(items=frozenset({'Total 0% Nonfat Greek Yogurt', 'Organic Avocado'}), support=0.001044135691911378, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Total 0% Nonfat Greek Yogurt'}), items_add=frozenset({'Organic Avocado'}), confidence=0.1379657603222558, lift=2.443291867475079)]),\n"," RelationRecord(items=frozenset({'Unsalted Butter', 'Organic Avocado'}), support=0.001135592832808725, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsalted Butter'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10383275261324042, lift=1.8388165255271511)]),\n"," RelationRecord(items=frozenset({'Unsweetened Almondmilk', 'Organic Avocado'}), support=0.001691957106600919, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Almondmilk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10235131396957124, lift=1.8125811249336583)]),\n"," RelationRecord(items=frozenset({'Unsweetened Original Almond Breeze Almond Milk', 'Organic Avocado'}), support=0.0011508356896249496, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Unsweetened Original Almond Breeze Almond Milk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10307167235494881, lift=1.825338245110066)]),\n"," RelationRecord(items=frozenset({'Vanilla Almond Breeze Almond Milk', 'Organic Avocado'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Vanilla Almond Breeze Almond Milk'}), items_add=frozenset({'Organic Avocado'}), confidence=0.10336726703210651, lift=1.830573051696)]),\n"," RelationRecord(items=frozenset({'Yellow Bell Pepper', 'Organic Avocado'}), support=0.001570014252071123, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Bell Pepper'}), items_add=frozenset({'Organic Avocado'}), confidence=0.176672384219554, lift=3.1287632421465057)]),\n"," RelationRecord(items=frozenset({'Yellow Onions', 'Organic Avocado'}), support=0.004077464198340053, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Yellow Onions'}), items_add=frozenset({'Organic Avocado'}), confidence=0.14221158958001062, lift=2.518482987880094)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Baby Arugula'}), support=0.0043213499073996445, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.19397878891549775, lift=2.6013657926015474)]),\n"," RelationRecord(items=frozenset({'Organic Baby Arugula', 'Organic Grape Tomatoes'}), support=0.002454099947412144, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Organic Grape Tomatoes'}), confidence=0.1101607937050975, lift=3.780823327557452)]),\n"," RelationRecord(items=frozenset({'Organic Hass Avocado', 'Organic Baby Arugula'}), support=0.0027665785121447463, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.12418747861785837, lift=2.2342677748485644)]),\n"," RelationRecord(items=frozenset({'Organic Baby Arugula', 'Organic Strawberries'}), support=0.0032009999314071445, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Arugula'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.14368799178925762, lift=1.7306001206789703)]),\n"," RelationRecord(items=frozenset({'Organic Baby Broccoli', 'Organic Baby Spinach'}), support=0.0018748713883956132, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18208734270910437, lift=2.4418947413653798)]),\n"," RelationRecord(items=frozenset({'Organic Baby Broccoli', 'Organic Cucumber'}), support=0.0010593785487276026, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Cucumber'}), confidence=0.10288675055514433, lift=2.9264399856037144)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Organic Baby Broccoli'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Garlic'}), confidence=0.10510732790525537, lift=3.3167454033479205)]),\n"," RelationRecord(items=frozenset({'Organic Baby Broccoli', 'Organic Hass Avocado'}), support=0.001935842815660511, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.18800888230940044, lift=3.382484223081602)]),\n"," RelationRecord(items=frozenset({'Organic Baby Broccoli', 'Organic Raspberries'}), support=0.001135592832808725, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Raspberries'}), confidence=0.11028867505551442, lift=2.6092439173023783)]),\n"," RelationRecord(items=frozenset({'Organic Baby Broccoli', 'Organic Strawberries'}), support=0.0018215213895388274, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.17690599555884529, lift=2.1306828319515816)]),\n"," RelationRecord(items=frozenset({'Organic Baby Broccoli', 'Organic Yellow Onion'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Yellow Onion'}), confidence=0.10510732790525537, lift=3.2146916986295224)]),\n"," RelationRecord(items=frozenset({'Organic Zucchini', 'Organic Baby Broccoli'}), support=0.0011813214032573985, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Broccoli'}), items_add=frozenset({'Organic Zucchini'}), confidence=0.11472982975573649, lift=3.2803630927043863)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Organic Baby Spinach'}), support=0.004763392755070156, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.17375590770086186, lift=2.330165463360832)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Organic Hass Avocado'}), support=0.0032695927870801545, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.11926605504587157, lift=2.1457260135079887)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Organic Strawberries'}), support=0.005281649886821788, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Carrots'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.1926605504587156, lift=2.3204330975892797)]),\n"," RelationRecord(items=frozenset({'Organic Baby Carrots', 'Original Hummus'}), support=0.00257604280194194, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Original Hummus'}), items_add=frozenset({'Organic Baby Carrots'}), confidence=0.11826452064380687, lift=4.313975393147972)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Baby Kale'}), support=0.001227049973706072, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Kale'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2600969305331179, lift=3.488047644963191)]),\n"," RelationRecord(items=frozenset({'Organic Baby Rainbow Carrots', 'Organic Baby Spinach'}), support=0.0011279714044006128, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Rainbow Carrots'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.16192560175054704, lift=2.1715143377031403)]),\n"," RelationRecord(items=frozenset({'Organic Baby Rainbow Carrots', 'Organic Strawberries'}), support=0.0011127285475843883, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Rainbow Carrots'}), items_add=frozenset({'Organic Strawberries'}), confidence=0.15973741794310722, lift=1.9239018607395957)]),\n"," RelationRecord(items=frozenset({'Organic Banana', 'Organic Baby Spinach'}), support=0.002659878514431175, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Banana'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.14965694682675815, lift=2.0069847032085146)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Bartlett Pear'}), support=0.0011203499759925004, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bartlett Pear'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15, lift=2.0115852412101387)]),\n"," RelationRecord(items=frozenset({'Organic Basil', 'Organic Baby Spinach'}), support=0.0016233642509279088, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Basil'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.17430441898527002, lift=2.33752131138985)]),\n"," RelationRecord(items=frozenset({'Organic Bell Pepper', 'Organic Baby Spinach'}), support=0.0011508356896249496, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bell Pepper'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.16012725344644752, lift=2.147397464989261)]),\n"," RelationRecord(items=frozenset({'Organic Black Beans', 'Organic Baby Spinach'}), support=0.002187349953128215, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Black Beans'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18210659898477158, lift=2.442152978964932)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Blackberries'}), support=0.0027665785121447463, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blackberries'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.12768202602884277, lift=1.7122885275161928)]),\n"," RelationRecord(items=frozenset({'Organic Blueberries', 'Organic Baby Spinach'}), support=0.005228299887965002, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Blueberries'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.13813934756343135, lift=1.8525271519266417)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli', 'Organic Baby Spinach'}), support=0.002629392800798726, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20871143375680581, lift=2.798938932113321)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli Crowns', 'Organic Baby Spinach'}), support=0.0013032642577871945, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli Crowns'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2126865671641791, lift=2.8522477300740774)]),\n"," RelationRecord(items=frozenset({'Organic Broccoli Florets', 'Organic Baby Spinach'}), support=0.0016309856793360212, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Broccoli Florets'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15723732549595887, lift=2.1086418889001703)]),\n"," RelationRecord(items=frozenset({'Organic Bunch Beets', 'Organic Baby Spinach'}), support=0.001135592832808725, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Bunch Beets'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.23244929797191885, lift=3.1172771808664654)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Butternut Squash'}), support=0.0011584571180330617, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Butternut Squash'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.2125874125874126, lift=2.850918010852598)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Carrot Bunch'}), support=0.002118757097455205, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Carrot Bunch'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15958668197474168, lift=2.1401480943605766)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Celery Hearts'}), support=0.0017148213918252559, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Celery Hearts'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.21186440677966104, lift=2.841222092104716)]),\n"," RelationRecord(items=frozenset({'Organic Cilantro', 'Organic Baby Spinach'}), support=0.004976792750497298, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cilantro'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18519568916619397, lift=2.483579433749708)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Coconut Milk'}), support=0.0017071999634171435, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Coconut Milk'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.21435406698564594, lift=2.874609850277966)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Cucumber'}), support=0.007110792704768728, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Cucumber'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20225449815738133, lift=2.7123477564116767)]),\n"," RelationRecord(items=frozenset({\"Organic D'Anjou Pears\", 'Organic Baby Spinach'}), support=0.0024388570905959197, ordered_statistics=[OrderedStatistic(items_base=frozenset({\"Organic D'Anjou Pears\"}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.16904384574749076, lift=2.2669740348203713)]),\n"," RelationRecord(items=frozenset({'Organic Egg Whites', 'Organic Baby Spinach'}), support=0.0015166642532143373, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Egg Whites'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.23860911270983212, lift=3.1998837969689657)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Extra Firm Tofu'}), support=0.0018215213895388274, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Extra Firm Tofu'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20151770657672852, lift=2.702466962615083)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Frozen Peas'}), support=0.0011889428316655107, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Frozen Peas'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20717131474103587, lift=2.7782850609011214)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Fuji Apple'}), support=0.002827549939409644, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Fuji Apple'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.11390850475898066, lift=1.5275777801432024)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Gala Apples'}), support=0.0035134784961397465, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Gala Apples'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.16411534353862584, lift=2.2008800194562097)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Garbanzo Beans'}), support=0.0017757928190901538, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garbanzo Beans'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.20420683610867657, lift=2.7385297178028765)]),\n"," RelationRecord(items=frozenset({'Organic Garlic', 'Organic Baby Spinach'}), support=0.006264814151468268, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garlic'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1976911976911977, lift=2.6511513039517944)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Garnet Sweet Potato (Yam)'}), support=0.004702421327805257, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Garnet Sweet Potato (Yam)'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.24026479750778815, lift=3.2220874709933947)]),\n"," RelationRecord(items=frozenset({'Organic Ginger Root', 'Organic Baby Spinach'}), support=0.003582071351812757, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Ginger Root'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.23418036870951672, lift=3.1404918231814163)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Grade A Free Range Large Brown Eggs'}), support=0.0021263785258633172, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grade A Free Range Large Brown Eggs'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15789473684210525, lift=2.1174581486422515)]),\n"," RelationRecord(items=frozenset({'Organic Granny Smith Apple', 'Organic Baby Spinach'}), support=0.003155271360958471, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Granny Smith Apple'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.17715019255455713, lift=2.375684752135209)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Grape Tomatoes'}), support=0.006462971290079187, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Grape Tomatoes'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.22181532827622288, lift=2.9746696042308796)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Hass Avocado'}), support=0.009542028366956536, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Baby Spinach'}), items_add=frozenset({'Organic Hass Avocado'}), confidence=0.12796402289452166, lift=2.3022119127886045), OrderedStatistic(items_base=frozenset({'Organic Hass Avocado'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.17167146578911285, lift=2.3022119127886045)]),\n"," RelationRecord(items=frozenset({'Organic Hothouse Cucumbers', 'Organic Baby Spinach'}), support=0.0010822428339519394, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Hothouse Cucumbers'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1533477321814255, lift=2.0564802321946707)]),\n"," RelationRecord(items=frozenset({'Organic Italian Parsley Bunch', 'Organic Baby Spinach'}), support=0.003399157070018063, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Italian Parsley Bunch'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18583333333333332, lift=2.4921306043881164)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Jalapeno Pepper'}), support=0.001227049973706072, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Jalapeno Pepper'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18941176470588234, lift=2.540119402626136)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Kiwi'}), support=0.0022940499508417866, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Kiwi'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1601063829787234, lift=2.1471175801569213)]),\n"," RelationRecord(items=frozenset({'Organic Lacinato (Dinosaur) Kale', 'Organic Baby Spinach'}), support=0.002850414224633981, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lacinato (Dinosaur) Kale'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.21237932992617833, lift=2.8481275041173273)]),\n"," RelationRecord(items=frozenset({'Organic Large Brown Grade AA Cage Free Eggs', 'Organic Baby Spinach'}), support=0.001105107119176276, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Brown Grade AA Cage Free Eggs'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.12752858399296393, lift=1.7102307826178254)]),\n"," RelationRecord(items=frozenset({'Organic Large Extra Fancy Fuji Apple', 'Organic Baby Spinach'}), support=0.0035439642097721954, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Extra Fancy Fuji Apple'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1608439986163957, lift=2.157009425026437)]),\n"," RelationRecord(items=frozenset({'Organic Large Grade AA Brown Eggs', 'Organic Baby Spinach'}), support=0.0010060285498708168, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Grade AA Brown Eggs'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.12547528517110265, lift=1.6826948785788232)]),\n"," RelationRecord(items=frozenset({'Organic Large Green Asparagus', 'Organic Baby Spinach'}), support=0.0010365142635032657, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Large Green Asparagus'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1863013698630137, lift=2.498407240224465)]),\n"," RelationRecord(items=frozenset({'Organic Leek', 'Organic Baby Spinach'}), support=0.0010517571203194902, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Leek'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.1806282722513089, lift=2.4223277773734657)]),\n"," RelationRecord(items=frozenset({'Organic Lemon', 'Organic Baby Spinach'}), support=0.00471004275621337, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Lemon'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.17631954350927248, lift=2.3645452764010764)]),\n"," RelationRecord(items=frozenset({'Organic Navel Orange', 'Organic Baby Spinach'}), support=0.002385507091739134, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Navel Orange'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15808080808080807, lift=2.11995346969284)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Old Fashioned Rolled Oats'}), support=0.001044135691911378, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Old Fashioned Rolled Oats'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18340026773761714, lift=2.4595018120998575)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Peeled Whole Baby Carrots'}), support=0.00318575707459092, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Peeled Whole Baby Carrots'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.16991869918699187, lift=2.278706316601187)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Raspberries'}), support=0.005822771303797758, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Raspberries'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.13775694194013702, lift=1.8473988752068107)]),\n"," RelationRecord(items=frozenset({'Organic Red Bell Pepper', 'Organic Baby Spinach'}), support=0.003284835643896379, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Bell Pepper'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18010865022983705, lift=2.4153593507774618)]),\n"," RelationRecord(items=frozenset({'Organic Red Onion', 'Organic Baby Spinach'}), support=0.005647478450411176, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Onion'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.19408067050811945, lift=2.6027320826553395)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Red Radish, Bunch'}), support=0.0014633142543575518, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Red Radish, Bunch'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.18443804034582134, lift=2.473418932515829)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Reduced Fat 2% Milk'}), support=0.001257535687338521, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat 2% Milk'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.10749185667752444, lift=1.441526882951891)]),\n"," RelationRecord(items=frozenset({'Organic Baby Spinach', 'Organic Reduced Fat Milk'}), support=0.0014023428270926537, ordered_statistics=[OrderedStatistic(items_base=frozenset({'Organic Reduced Fat Milk'}), items_add=frozenset({'Organic Baby Spinach'}), confidence=0.15257048092868988, lift=2.046056851203237)]),\n"," ...]"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["#Creando un dataframe con columnas especificas para darle mas formato a las reglas de asociación\n","result_df = pd.DataFrame(columns=['Antecedente', 'Consecuente', 'Soporte', 'Confianza', 'Levantamiento'])\n","\n","#Pasando cada resultado de las reglas al dataframe\n","for result in resultados:\n","    antecedente = tuple(result.items)[0] if result.items else None\n","    consecuente = tuple(result.items)[1] if len(result.items) > 1 else None\n","    soporte = result.support\n","    confianza = result.ordered_statistics[0].confidence\n","    levantamiento = result.ordered_statistics[0].lift\n","\n","    result_df = result_df.append({\n","        'Antecedente': antecedente,\n","        'Consecuente': consecuente,\n","        'Soporte': soporte,\n","        'Confianza': confianza,\n","        'Levantamiento': levantamiento\n","    }, ignore_index=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ujctFTQdOK6","executionInfo":{"status":"ok","timestamp":1699760382986,"user_tz":360,"elapsed":4230,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"8dfcce51-75f6-47c1-b7c2-6816c38ae137"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n","<ipython-input-36-ae1099829637>:10: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  result_df = result_df.append({\n"]}]},{"cell_type":"code","source":["#Data frame de las reglas\n","result_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"HkFkDXO1el6C","executionInfo":{"status":"ok","timestamp":1699760783933,"user_tz":360,"elapsed":150,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"c3f6ce8a-539a-4d5f-ae47-b067bfa62d0f"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Antecedente             Consecuente   Soporte  Confianza  \\\n","0     Bag of Organic Bananas                    None  0.117980   0.117980   \n","1                     Banana                    None  0.142719   0.142719   \n","2     Bag of Organic Bananas  100% Raw Coconut Water  0.002767   0.279661   \n","3                     Banana  100% Raw Coconut Water  0.001189   0.120185   \n","4       Organic Baby Spinach  100% Raw Coconut Water  0.001402   0.141757   \n","...                      ...                     ...       ...        ...   \n","1811    Organic Strawberries    Organic Baby Spinach  0.001242   0.130192   \n","1812    Organic Hass Avocado        Organic Cucumber  0.001067   0.110410   \n","1813    Organic Hass Avocado     Organic Raspberries  0.001738   0.128090   \n","1814                  Banana             Large Lemon  0.001113   0.109692   \n","1815                  Banana    Organic Baby Spinach  0.001021   0.108239   \n","\n","      Levantamiento  \n","0          1.000000  \n","1          1.000000  \n","2          2.370416  \n","3          0.842109  \n","4          1.901036  \n","...             ...  \n","1811       5.557034  \n","1812       9.413124  \n","1813      10.920433  \n","1814      10.669068  \n","1815       6.408819  \n","\n","[1816 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-d17a6935-22f3-4cbf-817a-896cf5affd2c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Antecedente</th>\n","      <th>Consecuente</th>\n","      <th>Soporte</th>\n","      <th>Confianza</th>\n","      <th>Levantamiento</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Bag of Organic Bananas</td>\n","      <td>None</td>\n","      <td>0.117980</td>\n","      <td>0.117980</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Banana</td>\n","      <td>None</td>\n","      <td>0.142719</td>\n","      <td>0.142719</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bag of Organic Bananas</td>\n","      <td>100% Raw Coconut Water</td>\n","      <td>0.002767</td>\n","      <td>0.279661</td>\n","      <td>2.370416</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Banana</td>\n","      <td>100% Raw Coconut Water</td>\n","      <td>0.001189</td>\n","      <td>0.120185</td>\n","      <td>0.842109</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Organic Baby Spinach</td>\n","      <td>100% Raw Coconut Water</td>\n","      <td>0.001402</td>\n","      <td>0.141757</td>\n","      <td>1.901036</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1811</th>\n","      <td>Organic Strawberries</td>\n","      <td>Organic Baby Spinach</td>\n","      <td>0.001242</td>\n","      <td>0.130192</td>\n","      <td>5.557034</td>\n","    </tr>\n","    <tr>\n","      <th>1812</th>\n","      <td>Organic Hass Avocado</td>\n","      <td>Organic Cucumber</td>\n","      <td>0.001067</td>\n","      <td>0.110410</td>\n","      <td>9.413124</td>\n","    </tr>\n","    <tr>\n","      <th>1813</th>\n","      <td>Organic Hass Avocado</td>\n","      <td>Organic Raspberries</td>\n","      <td>0.001738</td>\n","      <td>0.128090</td>\n","      <td>10.920433</td>\n","    </tr>\n","    <tr>\n","      <th>1814</th>\n","      <td>Banana</td>\n","      <td>Large Lemon</td>\n","      <td>0.001113</td>\n","      <td>0.109692</td>\n","      <td>10.669068</td>\n","    </tr>\n","    <tr>\n","      <th>1815</th>\n","      <td>Banana</td>\n","      <td>Organic Baby Spinach</td>\n","      <td>0.001021</td>\n","      <td>0.108239</td>\n","      <td>6.408819</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1816 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d17a6935-22f3-4cbf-817a-896cf5affd2c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d17a6935-22f3-4cbf-817a-896cf5affd2c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d17a6935-22f3-4cbf-817a-896cf5affd2c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4d6d6ff5-262d-42c1-81ae-1719163099a9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d6d6ff5-262d-42c1-81ae-1719163099a9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4d6d6ff5-262d-42c1-81ae-1719163099a9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# Eliminar filas con \"None\" en la columna \"Consecuente\"\n","result_df = result_df.dropna(subset=['Consecuente'])"],"metadata":{"id":"CxzhZA6qfEug","executionInfo":{"status":"ok","timestamp":1699760792276,"user_tz":360,"elapsed":161,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["result_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":728},"id":"ZQg3bWBpflAy","executionInfo":{"status":"ok","timestamp":1699760796189,"user_tz":360,"elapsed":193,"user":{"displayName":"Bernardo López Ortiz","userId":"08444236256344647877"}},"outputId":"a0be1fbb-76e6-45cb-8aee-787006d9f7a1"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Antecedente             Consecuente   Soporte  Confianza  \\\n","2     Bag of Organic Bananas  100% Raw Coconut Water  0.002767   0.279661   \n","3                     Banana  100% Raw Coconut Water  0.001189   0.120185   \n","4       Organic Baby Spinach  100% Raw Coconut Water  0.001402   0.141757   \n","5       Organic Hass Avocado  100% Raw Coconut Water  0.001692   0.171032   \n","6        Organic Raspberries  100% Raw Coconut Water  0.001296   0.130971   \n","...                      ...                     ...       ...        ...   \n","1811    Organic Strawberries    Organic Baby Spinach  0.001242   0.130192   \n","1812    Organic Hass Avocado        Organic Cucumber  0.001067   0.110410   \n","1813    Organic Hass Avocado     Organic Raspberries  0.001738   0.128090   \n","1814                  Banana             Large Lemon  0.001113   0.109692   \n","1815                  Banana    Organic Baby Spinach  0.001021   0.108239   \n","\n","      Levantamiento  \n","2          2.370416  \n","3          0.842109  \n","4          1.901036  \n","5          3.077058  \n","6          3.098546  \n","...             ...  \n","1811       5.557034  \n","1812       9.413124  \n","1813      10.920433  \n","1814      10.669068  \n","1815       6.408819  \n","\n","[1814 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-8194098b-407b-413b-b8a9-0563628bb123\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Antecedente</th>\n","      <th>Consecuente</th>\n","      <th>Soporte</th>\n","      <th>Confianza</th>\n","      <th>Levantamiento</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>Bag of Organic Bananas</td>\n","      <td>100% Raw Coconut Water</td>\n","      <td>0.002767</td>\n","      <td>0.279661</td>\n","      <td>2.370416</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Banana</td>\n","      <td>100% Raw Coconut Water</td>\n","      <td>0.001189</td>\n","      <td>0.120185</td>\n","      <td>0.842109</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Organic Baby Spinach</td>\n","      <td>100% Raw Coconut Water</td>\n","      <td>0.001402</td>\n","      <td>0.141757</td>\n","      <td>1.901036</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Organic Hass Avocado</td>\n","      <td>100% Raw Coconut Water</td>\n","      <td>0.001692</td>\n","      <td>0.171032</td>\n","      <td>3.077058</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Organic Raspberries</td>\n","      <td>100% Raw Coconut Water</td>\n","      <td>0.001296</td>\n","      <td>0.130971</td>\n","      <td>3.098546</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1811</th>\n","      <td>Organic Strawberries</td>\n","      <td>Organic Baby Spinach</td>\n","      <td>0.001242</td>\n","      <td>0.130192</td>\n","      <td>5.557034</td>\n","    </tr>\n","    <tr>\n","      <th>1812</th>\n","      <td>Organic Hass Avocado</td>\n","      <td>Organic Cucumber</td>\n","      <td>0.001067</td>\n","      <td>0.110410</td>\n","      <td>9.413124</td>\n","    </tr>\n","    <tr>\n","      <th>1813</th>\n","      <td>Organic Hass Avocado</td>\n","      <td>Organic Raspberries</td>\n","      <td>0.001738</td>\n","      <td>0.128090</td>\n","      <td>10.920433</td>\n","    </tr>\n","    <tr>\n","      <th>1814</th>\n","      <td>Banana</td>\n","      <td>Large Lemon</td>\n","      <td>0.001113</td>\n","      <td>0.109692</td>\n","      <td>10.669068</td>\n","    </tr>\n","    <tr>\n","      <th>1815</th>\n","      <td>Banana</td>\n","      <td>Organic Baby Spinach</td>\n","      <td>0.001021</td>\n","      <td>0.108239</td>\n","      <td>6.408819</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1814 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8194098b-407b-413b-b8a9-0563628bb123')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8194098b-407b-413b-b8a9-0563628bb123 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8194098b-407b-413b-b8a9-0563628bb123');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0343b43a-aa72-4d08-be38-2bc2b790ff92\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0343b43a-aa72-4d08-be38-2bc2b790ff92')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0343b43a-aa72-4d08-be38-2bc2b790ff92 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":39}]}]}